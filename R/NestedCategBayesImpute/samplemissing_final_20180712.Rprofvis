<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>profvis</title>
<script src="data:application/x-javascript;base64,"></script>
<script src="data:application/x-javascript;base64,"></script>
<script src="data:application/x-javascript;base64,"></script>
<link href="data:text/css;charset=utf-8,%2Eprofvis%20%7B%0Aposition%3A%20relative%3B%0A%7D%0A%2Eprofvis%20%2A%20%7B%0A%0A%2Dwebkit%2Dbox%2Dsizing%3A%20content%2Dbox%3B%0A%2Dmoz%2Dbox%2Dsizing%3A%20content%2Dbox%3B%0Abox%2Dsizing%3A%20content%2Dbox%3B%0A%7D%0A%2Eprofvis%2Dfooter%20%2Einfo%2Dlabel%20%7B%0Acursor%3A%20default%3B%0A%7D%0A%2Eprofvis%2Dpanel1%20%7B%0Aleft%3A%200px%3B%0Atop%3A%2023px%3B%0Aposition%3A%20absolute%3B%0A%7D%0A%2Eprofvis%2Dpanel1%2Dvertical%20%7B%0Abottom%3A%200px%3B%0Awidth%3A%20500px%3B%0Amargin%2Dbottom%3A%2020px%3B%0A%7D%0A%2Eprofvis%2Dpanel1%2Dhorizontal%20%7B%0Aheight%3A%20378px%3B%0Aright%3A%200px%3B%0A%7D%0A%2Eprofvis%2Dpanel2%20%7B%0Aposition%3A%20absolute%3B%0Aright%3A%200px%3B%0Abottom%3A%200px%3B%0A%7D%0A%2Eprofvis%2Dpanel2%2Dvertical%20%7B%0Atop%3A%2023px%3B%0Aleft%3A%20508px%3B%0Amargin%2Dbottom%3A%2020px%3B%0A%7D%0A%2Eprofvis%2Dpanel2%2Dhorizontal%20%7B%0Aleft%3A%200px%3B%0Atop%3A%20408px%3B%0Amargin%2Dbottom%3A%2020px%3B%0A%7D%0A%2Eprofvis%2Dsplitbar%20%7B%0Aposition%3A%20absolute%3B%0Abackground%2Dcolor%3A%20rgb%28224%2C%20224%2C%20224%29%3B%0Aborder%2Dcolor%3A%20%23ddd%3B%0Aborder%2Dstyle%3A%20solid%3B%0Abackground%2Drepeat%3A%20no%2Drepeat%3B%0Abackground%2Dposition%3A%20center%3B%0A%7D%0A%2Eprofvis%2Dsplitbar%2Dvertical%20%7B%0Acursor%3A%20col%2Dresize%3B%0Aleft%3A%20500px%3B%0Awidth%3A%208px%3B%0Atop%3A%2023px%3B%0Abottom%3A%200px%3B%0Aborder%2Dwidth%3A%200%201px%3B%0Abackground%2Dimage%3A%20url%28%27data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAAMAAAAHCAYAAADNufepAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89%2BbN%2FrXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz%2FSMBAPh%2BPDwrIsAHvgABeNMLCADATZvAMByH%2Fw%2FqQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf%2BbTAICd%2BJl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA%2Fg88wAAKCRFRHgg%2FP9eM4Ors7ONo62Dl8t6r8G%2FyJiYuP%2B5c%2BrcEAAAOF0ftH%2BLC%2BzGoA7BoBt%2FqIl7gRoXgugdfeLZrIPQLUAoOnaV%2FNw%2BH48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl%2FAV%2F1s%2BX48%2FPf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H%2FLcL%2F%2Fwd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s%2BwM%2B3zUAsGo%2BAXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93%2F%2B8%2F%2FUegJQCAZkmScQAAXkQkLlTKsz%2FHCAAARKCBKrBBG%2FTBGCzABhzBBdzBC%2FxgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD%2FphCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8%2BQ8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8%2BxdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR%2BcQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI%2BksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG%2BQh8lsKnWJAcaT4U%2BIoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr%2Bh0uhHdlR5Ol9BX0svpR%2BiX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK%2BYTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI%2BpXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q%2FpH5Z%2FYkGWcNMw09DpFGgsV%2FjvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY%2FR27iz2qqaE5QzNKM1ezUvOUZj8H45hx%2BJx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4%2FOBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up%2B6Ynr5egJ5Mb6feeb3n%2Bhx9L%2F1U%2FW36p%2FVHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm%2Beb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw%2B6TvZN9un2N%2FT0HDYfZDqsdWh1%2Bc7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc%2BLpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26%2FuNu5p7ofcn8w0nymeWTNz0MPIQ%2BBR5dE%2FC5%2BVMGvfrH5PQ0%2BBZ7XnIy9jL5FXrdewt6V3qvdh7xc%2B9j5yn%2BM%2B4zw33jLeWV%2FMN8C3yLfLT8Nvnl%2BF30N%2FI%2F9k%2F3r%2F0QCngCUBZwOJgUGBWwL7%2BHp8Ib%2BOPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo%2Bqi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt%2F87fOH4p3iC%2BN7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi%2FRNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z%2Bpn5mZ2y6xlhbL%2BxW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a%2FzYnKOZarnivN7cyzytuQN5zvn%2F%2FtEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1%2B1dT1gvWd%2B1YfqGnRs%2BFYmKrhTbF5cVf9go3HjlG4dvyr%2BZ3JS0qavEuWTPZtJm6ebeLZ5bDpaql%2BaXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO%2FPLi8ZafJzs07P1SkVPRU%2BlQ27tLdtWHX%2BG7R7ht7vPY07NXbW7z3%2FT7JvttVAVVN1WbVZftJ%2B7P3P66Jqun4lvttXa1ObXHtxwPSA%2F0HIw6217nU1R3SPVRSj9Yr60cOxx%2B%2B%2Fp3vdy0NNg1VjZzG4iNwRHnk6fcJ3%2FceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w%2B0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb%2B%2B6EHTh0kX%2Fi%2Bc7vDvOXPK4dPKy2%2BUTV7hXmq86X23qdOo8%2FpPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb%2F1tWeOT3dvfN6b%2FfF9%2FXfFt1%2Bcif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v%2B3Njv3H9qwHeg89HcR%2FcGhYPP%2FpH1jw9DBY%2BZj8uGDYbrnjg%2BOTniP3L96fynQ89kzyaeF%2F6i%2FsuuFxYvfvjV69fO0ZjRoZfyl5O%2FbXyl%2FerA6xmv28bCxh6%2ByXgzMV70VvvtwXfcdx3vo98PT%2BR8IH8o%2F2j5sfVT0Kf7kxmTk%2F8EA5jz%2FGMzLdsAAAAgY0hSTQAAeiUAAICDAAD5%2FwAAgOkAAHUwAADqYAAAOpgAABdvkl%2FFRgAAADdJREFUeNpMi7ENADAIwwz%2FH8TEhMQz%2FJAupWqmyHGI7JoZIrscxMbBbhX%2BMMbTpG%2Bx%2FUgCgzMA%2Ba4RzyZ2yIIAAAAASUVORK5CYII%3D%27%29%3B%0A%7D%0A%2Eprofvis%2Dsplitbar%2Dhorizontal%20%7B%0Acursor%3A%20row%2Dresize%3B%0Atop%3A%20400px%3B%0Aheight%3A%208px%3B%0Aleft%3A%200px%3B%0Aright%3A%200px%3B%0Aborder%2Dwidth%3A%200px%200%3B%0Abackground%2Dimage%3A%20url%28%27data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAAcAAAADCAYAAABfwxXFAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89%2BbN%2FrXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz%2FSMBAPh%2BPDwrIsAHvgABeNMLCADATZvAMByH%2Fw%2FqQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf%2BbTAICd%2BJl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA%2Fg88wAAKCRFRHgg%2FP9eM4Ors7ONo62Dl8t6r8G%2FyJiYuP%2B5c%2BrcEAAAOF0ftH%2BLC%2BzGoA7BoBt%2FqIl7gRoXgugdfeLZrIPQLUAoOnaV%2FNw%2BH48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl%2FAV%2F1s%2BX48%2FPf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H%2FLcL%2F%2Fwd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s%2BwM%2B3zUAsGo%2BAXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93%2F%2B8%2F%2FUegJQCAZkmScQAAXkQkLlTKsz%2FHCAAARKCBKrBBG%2FTBGCzABhzBBdzBC%2FxgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD%2FphCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8%2BQ8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8%2BxdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR%2BcQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI%2BksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG%2BQh8lsKnWJAcaT4U%2BIoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr%2Bh0uhHdlR5Ol9BX0svpR%2BiX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK%2BYTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI%2BpXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q%2FpH5Z%2FYkGWcNMw09DpFGgsV%2FjvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY%2FR27iz2qqaE5QzNKM1ezUvOUZj8H45hx%2BJx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4%2FOBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up%2B6Ynr5egJ5Mb6feeb3n%2Bhx9L%2F1U%2FW36p%2FVHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm%2Beb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw%2B6TvZN9un2N%2FT0HDYfZDqsdWh1%2Bc7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc%2BLpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26%2FuNu5p7ofcn8w0nymeWTNz0MPIQ%2BBR5dE%2FC5%2BVMGvfrH5PQ0%2BBZ7XnIy9jL5FXrdewt6V3qvdh7xc%2B9j5yn%2BM%2B4zw33jLeWV%2FMN8C3yLfLT8Nvnl%2BF30N%2FI%2F9k%2F3r%2F0QCngCUBZwOJgUGBWwL7%2BHp8Ib%2BOPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo%2Bqi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt%2F87fOH4p3iC%2BN7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi%2FRNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z%2Bpn5mZ2y6xlhbL%2BxW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a%2FzYnKOZarnivN7cyzytuQN5zvn%2F%2FtEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1%2B1dT1gvWd%2B1YfqGnRs%2BFYmKrhTbF5cVf9go3HjlG4dvyr%2BZ3JS0qavEuWTPZtJm6ebeLZ5bDpaql%2BaXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO%2FPLi8ZafJzs07P1SkVPRU%2BlQ27tLdtWHX%2BG7R7ht7vPY07NXbW7z3%2FT7JvttVAVVN1WbVZftJ%2B7P3P66Jqun4lvttXa1ObXHtxwPSA%2F0HIw6217nU1R3SPVRSj9Yr60cOxx%2B%2B%2Fp3vdy0NNg1VjZzG4iNwRHnk6fcJ3%2FceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w%2B0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb%2B%2B6EHTh0kX%2Fi%2Bc7vDvOXPK4dPKy2%2BUTV7hXmq86X23qdOo8%2FpPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb%2F1tWeOT3dvfN6b%2FfF9%2FXfFt1%2Bcif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v%2B3Njv3H9qwHeg89HcR%2FcGhYPP%2FpH1jw9DBY%2BZj8uGDYbrnjg%2BOTniP3L96fynQ89kzyaeF%2F6i%2FsuuFxYvfvjV69fO0ZjRoZfyl5O%2FbXyl%2FerA6xmv28bCxh6%2ByXgzMV70VvvtwXfcdx3vo98PT%2BR8IH8o%2F2j5sfVT0Kf7kxmTk%2F8EA5jz%2FGMzLdsAAAAgY0hSTQAAeiUAAICDAAD5%2FwAAgOkAAHUwAADqYAAAOpgAABdvkl%2FFRgAAADZJREFUeNpi3LHv%2BBEGBgYGBob%2FEIqBkQEGGN%2B8ecOADfz%2F%2F5%2BB5cylW0cgqjF1AgAAAP%2F%2FAwCtfA4GqIXcdgAAAABJRU5ErkJggg%3D%3D%27%29%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%7B%0Aposition%3A%20absolute%3B%0Apadding%3A%200px%200px%3B%0Atop%3A%200%3B%0Aleft%3A%200%3B%0Aright%3A%200%3B%0Aheight%3A%2022px%3B%0Aline%2Dheight%3A%2018px%3B%0Aborder%2Dbottom%3A%201px%20solid%20rgb%28196%2C%20201%2C%20204%29%3B%0Abackground%2Dcolor%3A%20rgb%28248%2C%20249%2C%20248%29%3B%0Acolor%3A%20%23444%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0A%2Dwebkit%2Duser%2Dselect%3A%20none%3B%0A%2Dmoz%2Duser%2Dselect%3A%20none%3B%0A%2Dms%2Duser%2Dselect%3A%20none%3B%0Auser%2Dselect%3A%20none%3B%0Aoverflow%3A%20hidden%3B%0A%7D%0A%2Eprofvis%2Dfooter%20%7B%0Aposition%3A%20absolute%3B%0Apadding%3A%200px%200px%3B%0Abottom%3A%200px%3B%0Aleft%3A%200%3B%0Aright%3A%200%3B%0Aheight%3A%2019px%3B%0Aline%2Dheight%3A%2018px%3B%0Aborder%2Dtop%3A%201px%20solid%20rgb%28196%2C%20201%2C%20204%29%3B%0Abackground%2Dcolor%3A%20rgb%28248%2C%20249%2C%20248%29%3B%0Acolor%3A%20%23444%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0A%2Dwebkit%2Duser%2Dselect%3A%20none%3B%0A%2Dmoz%2Duser%2Dselect%3A%20none%3B%0A%2Dms%2Duser%2Dselect%3A%20none%3B%0Auser%2Dselect%3A%20none%3B%0Aoverflow%3A%20hidden%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Einfo%2Dblock%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Avertical%2Dalign%3A%20top%3B%0Awidth%3A%20140px%3B%0Apadding%3A%202px%2011px%202px%2011px%3B%0A%7D%0A%2Eprofvis%2Dfooter%20%2Einfo%2Dblock%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Avertical%2Dalign%3A%20top%3B%0Apadding%3A%201px%2011px%201px%2011px%3B%0A%7D%0A%2Eprofvis%2Dfooter%20%2Einfo%2Dblock%2Dright%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Avertical%2Dalign%3A%20top%3B%0Apadding%3A%201px%2011px%201px%2011px%3B%0Afloat%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Eresult%2Dblock%20%7B%0Awidth%3A%20auto%3B%0Acursor%3A%20pointer%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Eresult%2Dblock%2Dactive%20%7B%0Awidth%3A%20auto%3B%0Abackground%3A%20rgb%28227%2C%20229%2C%20230%29%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Espacing%2Dblock%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Awidth%3A%2025px%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Eseparator%2Dblock%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Awidth%3A%201px%3B%0Atext%2Dalign%3A%20center%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Eseparator%2Dblock%20%2Eseparator%2Dimage%20%7B%0Awidth%3A%202px%3B%0Aheight%3A%2026px%3B%0Amargin%2Dtop%3A%20%2D2px%3B%0A%7D%0A%2Eprofvis%2Dstatus%2Dbar%20%2Eoptions%2Dbutton%20%7B%0Afloat%3A%20right%3B%0Acolor%3A%20%23444%3B%0Atext%2Ddecoration%3A%20none%3B%0Acursor%3A%20pointer%3B%0Apadding%3A%202px%2011px%202px%2011px%3B%0A%7D%0A%2Eprofvis%2Doptions%2Dpanel%20%7B%0Afloat%3A%20left%3B%0Aposition%3A%20absolute%3B%0Aright%3A%200%3B%0Atop%3A%2021px%3B%0Apadding%3A%203px%206px%3B%0Aborder%3A%201px%20solid%20%23999%3B%0Abackground%2Dcolor%3A%20%23fff%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0Aline%2Dheight%3A%20170%25%3B%0A%2Dwebkit%2Duser%2Dselect%3A%20none%3B%0A%2Dmoz%2Duser%2Dselect%3A%20none%3B%0A%2Dms%2Duser%2Dselect%3A%20none%3B%0Auser%2Dselect%3A%20none%3B%0Acursor%3A%20pointer%3B%0A%7D%0A%2Eprofvis%2Dcode%20%7B%0Aposition%3A%20absolute%3B%0Atop%3A%200px%3B%0Aleft%3A%200%3B%0Abottom%3A%200%3B%0Aright%3A%200%3B%0Aoverflow%2Dy%3A%20auto%3B%0Aborder%3A%200px%20solid%20%23ddd%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%7B%0Aposition%3A%20absolute%3B%0Aright%3A%200%3B%0Atop%3A%200%3B%0Abottom%3A%200%3B%0Aleft%3A%200%3B%0Aoverflow%3A%20hidden%3B%0Aborder%3A%200px%20solid%20%23ddd%3B%0Abackground%3A%20rgb%28249%2C%20249%2C%20250%29%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%7B%0Aborder%2Dcollapse%3A%20collapse%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0Awidth%3A%20100%25%3B%0Atext%2Dalign%3A%20left%3B%0Acursor%3A%20default%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%20%7B%0Abackground%2Dcolor%3A%20rgb%28249%2C%20249%2C%20250%29%3B%0Awidth%3A%2014%25%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%2Espacing%20%7B%0Awidth%3A%2020px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%2Efilename%20%7B%0Afont%2Dfamily%3A%20monospace%3B%0Apadding%2Dleft%3A%2010px%3B%0Awidth%3A%20auto%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%2Epercent%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20tr%20%7B%0Aborder%2Dtop%3A%201px%20solid%20transparent%3B%0Aborder%2Dbottom%3A%201px%20solid%20transparent%3B%0Avertical%2Dalign%3A%20top%3B%0A%7D%0A%0Atable%2Eprofvis%2Dtable%20tr%2Elocked%20%3E%20td%20%7B%0Aborder%2Dtop%3A%201px%20solid%20%23444%3B%0Aborder%2Dbottom%3A%201px%20solid%20%23444%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20tr%20%3E%20td%20%7B%0Apadding%2Dtop%3A%200%3B%0Apadding%2Dbottom%3A%200%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20tr%2Eactive%20%7B%0Abackground%2Dcolor%3A%20%23fdb%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Elinenum%20%7B%0Acolor%3A%20%23aaa%3B%0Apadding%3A%200%2015px%3B%0Afont%2Dfamily%3A%20monospace%3B%0Awidth%3A%2025px%3B%0A%7D%0A%0Atable%2Eprofvis%2Dtable%20%5Bdata%2Dpseudo%2Dcontent%5D%3A%3Abefore%20%7B%0Acontent%3A%20attr%28data%2Dpseudo%2Dcontent%29%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Ecode%20%7B%0Awhite%2Dspace%3A%20pre%2Dwrap%3B%0Amargin%3A%200%3B%0Amin%2Dheight%3A%201%2E25em%3B%0Aline%2Dheight%3A%201%2E25%3B%0Awidth%3A%20auto%3B%0Afont%2Dfamily%3A%20monospace%3B%0Abackground%3A%20transparent%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Etime%2C%20table%2Eprofvis%2Dtable%20%2Epercent%20%7B%0Apadding%3A%200%205px%3B%0Atext%2Dalign%3A%20right%3B%0Amin%2Dwidth%3A%202em%3B%0Amax%2Dwidth%3A%202em%3B%0Aoverflow%3A%20hidden%3B%0Apadding%2Dright%3A%2010px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Ememory%20%7B%0Apadding%2Dright%3A%205px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%2Etime%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Ememory%20%7B%0Apadding%3A%200%205px%3B%0Atext%2Dalign%3A%20right%3B%0Amin%2Dwidth%3A%202em%3B%0Amax%2Dwidth%3A%204em%3B%0Aoverflow%3A%20hidden%3B%0Apadding%2Dright%3A%2010px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Ememory%2Dright%20%7B%0Atext%2Dalign%3A%20left%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20th%2Ememory%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Etimebar%2Dcell%20%7B%0Apadding%2Dleft%3A%200%3B%0Aborder%2Dleft%3A%201px%20solid%20%23444%3B%0Amin%2Dwidth%3A%203em%3B%0Awidth%3A%203em%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Etimebar%2Dcell%20%3E%20%2Etimebar%20%7B%0Abackground%2Dcolor%3A%20%235A5A5A%3B%0Aborder%2Dradius%3A%200px%202px%202px%200px%3B%0Aline%2Dheight%3A%2015px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Emembar%2Dleft%2Dcell%20%7B%0Apadding%2Dleft%3A%200%3B%0Apadding%2Dright%3A%200%3B%0Aborder%2Dleft%3A%200px%20solid%20black%3B%0Amin%2Dwidth%3A%200%2E5em%3B%0Awidth%3A%200%2E5em%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Emembar%2Dleft%2Dcell%20%3E%20%2Emembar%20%7B%0Abackground%2Dcolor%3A%20%23A7A7A7%3B%0Afloat%3A%20right%3B%0Aborder%2Dradius%3A%202px%200px%200px%202px%3B%0Aline%2Dheight%3A%2015px%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Emembar%2Dright%2Dcell%20%7B%0Apadding%2Dleft%3A%200%3B%0Aborder%2Dleft%3A%201px%20solid%20black%3B%0Amin%2Dwidth%3A%201em%3B%0Awidth%3A%201em%3B%0A%7D%0Atable%2Eprofvis%2Dtable%20%2Emembar%2Dright%2Dcell%20%3E%20%2Emembar%20%7B%0Abackground%2Dcolor%3A%20%235A5A5A%3B%0Aborder%2Dradius%3A%200px%202px%202px%200px%3B%0Aline%2Dheight%3A%2015px%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ebackground%20%7B%0Afill%3A%20rgb%28249%2C%20249%2C%20250%29%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%20%2Erect%20%7B%0Astroke%3A%20%23000%3B%0Astroke%2Dwidth%3A%200%2E25px%3B%0Afill%3A%20%23fff%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Eactive%20%2Erect%20%7B%0Astroke%2Dwidth%3A%200%2E75px%3B%0Afill%3A%20%23ddd%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Ehighlighted%20%2Erect%20%7B%0Afill%3A%20%23ffc%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Ehighlighted%2Eactive%20%2Erect%20%7B%0Afill%3A%20%23fdb%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Eoutput%20%2Erect%20%7B%0Afill%3A%20%23eef%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Egc%20%2Erect%20%7B%0Afill%3A%20%23ccc%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Estacktrace%20%2Erect%20%7B%0Afill%3A%20%23eee%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Estacktrace%20%2Eprofvis%2Dlabel%20%7B%0Afill%3A%20%23666%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Elocked%20%7B%0Afont%2Dweight%3A%20bold%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%2Elocked%20%2Erect%20%7B%0Astroke%2Dwidth%3A%202px%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Ecell%20%2Eprofvis%2Dlabel%20%7B%0Afont%2Dfamily%3A%20monospace%3B%0Afont%2Dsize%3A%2011px%3B%0Acursor%3A%20default%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Eaxis%20text%20%7B%0Afont%3A%2010px%20sans%2Dserif%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Eaxis%20path%2C%0A%2Eprofvis%2Dflamegraph%20%2Eaxis%20line%20%7B%0Afill%3A%20none%3B%0Astroke%3A%20%23000%3B%0Ashape%2Drendering%3A%20crispEdges%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Eprofvis%2Dtooltip%20rect%20%7B%0Afill%3A%20rgb%28249%2C%20249%2C%20250%29%3B%0Astroke%3A%20%23000%3B%0Aopacity%3A%200%2E75%3B%0Astroke%2Dopacity%3A%200%2E75%3B%0Astroke%2Dwidth%3A%200%2E5%3B%0A%7D%0A%2Eprofvis%2Dflamegraph%20%2Eprofvis%2Dtooltip%20text%20%7B%0Atext%2Danchor%3A%20middle%3B%0Afont%2Dfamily%3A%20monospace%3B%0Afont%2Dsize%3A%2011px%3B%0A%7D%0A%2Eprofvis%2Dinfobox%20%7B%0Aposition%3A%20absolute%3B%0Aleft%3A%208px%3B%0Atop%3A%208px%3B%0Aopacity%3A%200%2E8%3B%0Aborder%2Dradius%3A%203px%3B%0Acolor%3A%20%23f8f8f8%3B%0Abackground%2Dcolor%3A%20%23333%3B%0Apadding%3A%205px%2010px%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0Aline%2Dheight%3A%20100%25%3B%0Apointer%2Devents%3A%20none%3B%0Amin%2Dwidth%3A%20280px%3B%0A%7D%0A%2Eprofvis%2Dinfobox%20table%20%7B%0Aborder%2Dcollapse%3A%20separate%3B%0Aborder%2Dspacing%3A%202px%3B%0A%7D%0A%2Eprofvis%2Dinfobox%20table%20td%20%7B%0Apadding%3A%201px%3B%0A%7D%0A%2Eprofvis%2Dinfobox%20%2Einfobox%2Dtitle%20%7B%0Afont%2Dweight%3A%20bold%3B%0A%7D%0A%2Eprofvis%2Dmessage%20%7B%0Awidth%3A%20100%25%3B%0Aheight%3A%20100%25%3B%0Adisplay%3A%20%2Dms%2Dflexbox%3B%0Adisplay%3A%20%2Dwebkit%2Dflex%3B%0Adisplay%3A%20flex%3B%0A%2Dms%2Dflex%2Dpack%3A%20center%3B%0A%2Dwebkit%2Djustify%2Dcontent%3A%20center%3B%0Ajustify%2Dcontent%3A%20center%3B%0A%2Dms%2Dflex%2Dalign%3A%20center%3B%0A%2Dwebkit%2Dalign%2Ditems%3A%20center%3B%0Aalign%2Ditems%3A%20center%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0A%7D%0A%2Eprofvis%2Dmessage%20div%20%7B%0Acolor%3A%20%23444%3B%0Aheight%3A%2025%25%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%7B%0Atop%3A%200px%3B%0Abottom%3A%200px%3B%0Aleft%3A%200px%3B%0Aright%3A%200px%3B%0Aposition%3A%20absolute%3B%0Amargin%2Dtop%3A%2023px%3B%0Amargin%2Dbottom%3A%2021px%3B%0Amargin%2Dright%3A%200px%3B%0Aoverflow%3A%20hidden%3B%0Afont%3A%2010px%20sans%2Dserif%3B%0Acolor%3A%20%23161616%3B%0Afont%2Dfamily%3A%20%22Lucida%20Sans%22%2C%20%22DejaVu%20Sans%22%2C%20%22Lucida%20Grande%22%2C%20%22Segoe%20UI%22%2C%20Verdana%2C%20Helvetica%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2011px%3B%0Aoverflow%2Dy%3A%20auto%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Eresults%20%7B%0Awidth%3A%20100%25%3B%0Atable%2Dlayout%3A%20fixed%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%20%7B%0Afont%2Dweight%3A%20normal%3B%0Aheight%3A%2018px%3B%0Abackground%2Dcolor%3A%20%23F8F9F8%3B%0Aborder%2Dbottom%3A%20solid%201px%20%23E4E4E4%3B%0Aborder%2Dright%3A%20solid%201px%20%23E4E4E4%3B%0Apadding%2Dleft%3A%203px%3B%0Apadding%2Dright%3A%203px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20td%20%7B%0Aheight%3A%2018px%3B%0Aborder%2Dbottom%3A%20solid%201px%20%23E4E4E4%3B%0Aborder%2Dright%3A%20solid%201px%20%23E4E4E4%3B%0Apadding%2Dleft%3A%203px%3B%0Apadding%2Dright%3A%203px%3B%0Aoverflow%3A%20hidden%3B%0Atext%2Doverflow%3A%20ellipsis%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Eaction%20%7B%0Awidth%3A%2018px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%20%7B%0Awidth%3A%20100px%3B%0Atext%2Dalign%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%20%7B%0Acursor%3A%20default%3B%0A%2Dwebkit%2Duser%2Dselect%3A%20none%3B%0A%2Dmoz%2Duser%2Dselect%3A%20none%3B%0A%2Dms%2Duser%2Dselect%3A%20none%3B%0Auser%2Dselect%3A%20none%3B%0Aoverflow%3A%20hidden%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%2Ememory%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etime%20%7B%0Awidth%3A%20100px%3B%0Atext%2Dalign%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%2Etime%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ecount%20%7B%0Atext%2Dalign%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%2Ecount%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20th%2Ecode%2Dlabel%20%7B%0Atext%2Dalign%3A%20left%3B%0Apadding%2Dleft%3A%205px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20td%2Elabel%2Dpointer%20%7B%0Acursor%3A%20pointer%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Elabel%2Dtext%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0A%2Dwebkit%2Duser%2Dselect%3A%20none%3B%0A%2Dkhtml%2Duser%2Dselect%3A%20none%3B%0A%2Dmoz%2Duser%2Dselect%3A%20none%3B%0A%2Dms%2Duser%2Dselect%3A%20none%3B%0Auser%2Dselect%3A%20none%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Epath%20%7B%0Atext%2Dalign%3A%20left%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etreetable%2Dexpand%20%3E%20div%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Awidth%3A%2015px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etreetable%2Dexpand%20%3E%20div%20%3E%20div%7B%0Awidth%3A%200px%3B%0Aheight%3A%200px%3B%0Amargin%2Dleft%3A%203px%3B%0Amargin%2Dright%3A%206px%3B%0Aborder%2Dtop%3A%204px%20solid%20transparent%3B%0Aborder%2Dleft%3A%206px%20solid%20%23161616%3B%0Aborder%2Dbottom%3A%204px%20solid%20transparent%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etreetable%2Dcollapse%20%3E%20div%20%7B%0Adisplay%3A%20inline%2Dblock%3B%0Awidth%3A%2015px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etreetable%2Dcollapse%20%3E%20div%20%3E%20div%20%7B%0Awidth%3A%200px%3B%0Aheight%3A%200px%3B%0Amargin%2Dleft%3A%203px%3B%0Amargin%2Dright%3A%206px%3B%0Aborder%2Dright%3A%204px%20solid%20transparent%3B%0Aborder%2Dtop%3A%206px%20solid%20%23161616%3B%0Aborder%2Dleft%3A%204px%20solid%20transparent%3B%0Adisplay%3A%20inline%2Dblock%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etime%2Dinfo%20%7B%0Apadding%3A%200px%3B%0Apadding%2Dright%3A%202px%3B%0Atext%2Dalign%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etimebar%20%7B%0Awidth%3A%200px%3B%0Aheight%3A%2014px%3B%0Abackground%2Dcolor%3A%20%235A5A5A%3B%0Afloat%3A%20left%3B%0Aborder%2Dradius%3A%202px%202px%202px%202px%3B%0Apadding%2Dtop%3A%200px%3B%0Amargin%2Dtop%3A%201px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etimecell%20%7B%0Apadding%2Dtop%3A%202px%3B%0Apadding%2Dright%3A%203px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dinfo%20%7B%0Apadding%2Dleft%3A%200px%3B%0Apadding%2Dright%3A%202px%3B%0Atext%2Dalign%3A%20right%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dinfo%2Dright%20%7B%0Apadding%2Dleft%3A%202px%3B%0Apadding%2Dright%3A%200px%3B%0Atext%2Dalign%3A%20left%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dleftbar%2Dwrapper%20%7B%0Afloat%3A%20left%3B%0Aheight%3A%2014px%3B%0Awidth%3A%205px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dleftbar%20%7B%0Awidth%3A%202px%3B%0Aheight%3A%2014px%3B%0Abackground%2Dcolor%3A%20%23A7A7A7%3B%0Afloat%3A%20right%3B%0Aborder%2Dradius%3A%201px%200px%200px%201px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Drightbar%20%7B%0Awidth%3A%202px%3B%0Afloat%3A%20left%3B%0Aheight%3A%2014px%3B%0Abackground%2Dcolor%3A%20%235A5A5A%3B%0Aborder%2Dradius%3A%200px%201px%201px%200px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dcell%20%7B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Ememory%2Dbar%2Dcontainer%20%7B%0Amargin%2Dright%3A%203px%3B%0A%7D%0A%2Eprofvis%2Dtreetable%20%2Etime%2Dbar%2Dcontainer%20%7B%0Amargin%2Dright%3A%203px%3B%0A%7D%0A" rel="stylesheet" />
<script src="data:application/x-javascript;base64,Lypqc2hpbnQKICB1bmRlZjp0cnVlLAogIGJyb3dzZXI6dHJ1ZSwKICBkZXZlbDogdHJ1ZSwKICBqcXVlcnk6dHJ1ZSwKICBzdHJpY3Q6ZmFsc2UsCiAgY3VybHk6ZmFsc2UsCiAgaW5kZW50OjIKKi8KLypnbG9iYWwgcHJvZnZpczp0cnVlLCBkMywgaGxqcyAqLwoKcHJvZnZpcyA9IChmdW5jdGlvbigpIHsKICB2YXIgcHJvZnZpcyA9IHt9OwoKICBwcm9mdmlzLnJlbmRlciA9IGZ1bmN0aW9uKGVsLCBtZXNzYWdlKSB7CgogICAgZnVuY3Rpb24gZ2VuZXJhdGVTdGF0dXNCYXJCdXR0b24oaWQsIGNhcHRpb24sIGFjdGl2ZSkgewogICAgICB2YXIgc3BhY2VySW1hZ2UgPSAnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBSUFBQUFVQ0FZQUFBQ25PZXlpQUFBQVhrbEVRVlI0Mm1OZ0FJTC8vLzh6TVlTR2hqSURHWUlNSWlJTXZFQ0dNd01ETjRNNGtGRURVcUlJWkt3RE1kU0JqQXNnaGo2UThRUEVNQUF5L2xPQm9RZWt2NEFZS2tER2ZnWmVYbDRSSUNPTFFVdExpdzNJVUFKSk1RSVo3QUMydFUydFhKeE9ZZ0FBQUFCSlJVNUVya0pnZ2c9PSc7CgogICAgICB2YXIgYnV0dG9uSHRtbCA9CiAgICAgICAgJzxkaXYgaWQ9IicgKyBpZCAgKyAnIiBjbGFzcz0iaW5mby1ibG9jayAnICsKICAgICAgICAoYWN0aXZlID8gJ3Jlc3VsdC1ibG9jay1hY3RpdmUnIDogJ3Jlc3VsdC1ibG9jaycpICsKICAgICAgICAnIj48c3BhbiBjbGFzcz0iaW5mby1sYWJlbCI+JyArIGNhcHRpb24gKyAnPC9zcGFuPjwvZGl2PicgKwogICAgICAgICc8ZGl2IGNsYXNzPSJzZXBhcmF0b3ItYmxvY2siPjxpbWcgY2xhc3M9InNlcGFyYXRvci1pbWFnZSIgc3JjPSInICsgc3BhY2VySW1hZ2UgKyAnIj48L2Rpdj4nOwoKICAgICAgcmV0dXJuIGJ1dHRvbkh0bWw7CiAgICB9CgogICAgZnVuY3Rpb24gZ2VuZXJhdGVTdGF0dXNCYXIoZWwsIG9uVG9vZ2xlKSB7CiAgICAgIHZhciAkZWwgPSAkKGVsKTsKCiAgICAgIGVsLmlubmVySFRNTCA9CiAgICAgICAgZ2VuZXJhdGVTdGF0dXNCYXJCdXR0b24oJ2ZsYW1lR3JhcGhCdXR0b24nLCAnRmxhbWUgR3JhcGgnLCB0cnVlKSArCiAgICAgICAgZ2VuZXJhdGVTdGF0dXNCYXJCdXR0b24oJ3RyZWV0YWJsZUJ1dHRvbicsICdEYXRhJywgZmFsc2UpICsKICAgICAgICAnPHNwYW4gcm9sZT0iYnV0dG9uIiBjbGFzcz0ib3B0aW9ucy1idXR0b24iPk9wdGlvbnMgJiN4MjVCRTs8L3NwYW4+JzsKCiAgICAgICRlbC5maW5kKCJzcGFuLm9wdGlvbnMtYnV0dG9uIikub24oImNsaWNrIiwgZnVuY3Rpb24oZSkgewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwoKICAgICAgICB2aXMub3B0aW9uc1BhbmVsLnRvZ2dsZVZpc2liaWxpdHkoKTsKICAgICAgfSk7CgogICAgICB2YXIgc2V0U3RhdHVzQmFyQnV0dG9ucyA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAkKCIuaW5mby1ibG9jayIpLnJlbW92ZUNsYXNzKCJyZXN1bHQtYmxvY2stYWN0aXZlIik7CiAgICAgICAgJCgiLmluZm8tYmxvY2siKS5hZGRDbGFzcygicmVzdWx0LWJsb2NrIik7CiAgICAgICAgZS5hZGRDbGFzcygicmVzdWx0LWJsb2NrLWFjdGl2ZSIpOwogICAgICB9OwoKICAgICAgJGVsLmZpbmQoIiNmbGFtZUdyYXBoQnV0dG9uIikub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgc2V0U3RhdHVzQmFyQnV0dG9ucygkKHRoaXMpKTsKICAgICAgICBvblRvb2dsZSgiZmxhbWVncmFwaCIpOwogICAgICB9KTsKCiAgICAgICRlbC5maW5kKCIjdHJlZXRhYmxlQnV0dG9uIikub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgc2V0U3RhdHVzQmFyQnV0dG9ucygkKHRoaXMpKTsKICAgICAgICBvblRvb2dsZSgidHJlZXRhYmxlIik7CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIHsKICAgICAgICBlbDogZWwKICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZW5lcmF0ZUZvb3RlcihlbCwgb25Ub29nbGUpIHsKICAgICAgdmFyICRlbCA9ICQoZWwpOwoKICAgICAgZWwuaW5uZXJIVE1MID0KICAgICAgICAnPGRpdiBjbGFzcz0iaW5mby1ibG9jayI+PHNwYW4gY2xhc3M9ImluZm8tbGFiZWwiPlNhbXBsZSBJbnRlcnZhbDogJyArCiAgICAgICAgICB2aXMuaW50ZXJ2YWwgKyAnbXM8L3NwYW4+PC9kaXY+JyArCiAgICAgICAgJzxkaXYgY2xhc3M9ImluZm8tYmxvY2stcmlnaHQiPicgKwogICAgICAgIC8vICc8c3BhbiBjbGFzcz0iaW5mby1sYWJlbCIgdGl0bGU9IlBlYWsgbWVtb3J5IGFsbG9jYXRpb24iPicgKyAoTWF0aC5yb3VuZCh2aXMudG90YWxNZW0gKiAxMDApIC8gMTAwKSArICdNQjwvc3Bhbj4nICsKICAgICAgICAvLyAnIC8gJyArCiAgICAgICAgJzxzcGFuIGNsYXNzPSJpbmZvLWxhYmVsIiB0aXRsZT0iVG90YWwgdGltZSI+JyArIHZpcy50b3RhbFRpbWUgKyAnbXM8L3NwYW4+JyArCiAgICAgICAgJzwvZGl2Pic7CgogICAgICByZXR1cm4gewogICAgICAgIGVsOiBlbAogICAgICB9OwogICAgfQoKICAgIGZ1bmN0aW9uIGdlbmVyYXRlT3B0aW9uc1BhbmVsKGVsLCBvbk9wdGlvbnNDaGFuZ2UpIHsKICAgICAgdmFyICRlbCA9ICQoZWwpOwoKICAgICAgZWwuaW5uZXJIVE1MID0KICAgICAgICAnPGRpdiByb2xlPSJidXR0b24iIGNsYXNzPSJzcGxpdC1ob3Jpem9udGFsIj4nICsKICAgICAgICAgICc8c3BhbiBjbGFzcz0ib3B0aW9ucy1jaGVja2JveCIgZGF0YS1jaGVja2VkPSIxIj4nICsKICAgICAgICAgICh2aXMuc3BsaXREaXIgPT09ICJoIiA/ICcmI3gyNjEyOycgOiAnJiN4MjYxMDsnKSArCiAgICAgICAgICAnPC9zcGFuPiBTcGxpdCBob3Jpem9udGFsbHknICsKICAgICAgICAnPC9kaXY+JyArCiAgICAgICAgJzxkaXYgcm9sZT0iYnV0dG9uIiBjbGFzcz0iaGlkZS1pbnRlcm5hbCI+JyArCiAgICAgICAgICAnPHNwYW4gY2xhc3M9Im9wdGlvbnMtY2hlY2tib3giIGRhdGEtY2hlY2tlZD0iMSI+JiN4MjYxMjs8L3NwYW4+IEhpZGUgaW50ZXJuYWwgZnVuY3Rpb24gY2FsbHMnICsKICAgICAgICAnPC9kaXY+JyArCiAgICAgICAgJzxkaXYgcm9sZT0iYnV0dG9uIiBjbGFzcz0iaGlkZS16ZXJvLXJvdyI+JyArCiAgICAgICAgICAnPHNwYW4gY2xhc3M9Im9wdGlvbnMtY2hlY2tib3giIGRhdGEtY2hlY2tlZD0iMCI+JiN4MjYxMDs8L3NwYW4+IEhpZGUgbGluZXMgb2YgY29kZSB3aXRoIHplcm8gdGltZScgKwogICAgICAgICc8L2Rpdj4nICsKICAgICAgICAnPGRpdiByb2xlPSJidXR0b24iIGNsYXNzPSJoaWRlLW1lbW9yeSI+JyArCiAgICAgICAgICAnPHNwYW4gY2xhc3M9Im9wdGlvbnMtY2hlY2tib3giIGRhdGEtY2hlY2tlZD0iMCI+JiN4MjYxMDs8L3NwYW4+IEhpZGUgbWVtb3J5IHJlc3VsdHMnICsKICAgICAgICAnPC9kaXY+JzsKCiAgICAgIC8vIFRvZ2dsZSB0aGUgYXBwZWFyYW5jZSBvZiBhIGNoZWNrYm94IGFuZCByZXR1cm4gdGhlIG5ldyBjaGVja2VkIHN0YXRlLgogICAgICBmdW5jdGlvbiB0b2dnbGVDaGVja2JveCgkY2hlY2tib3gpIHsKICAgICAgICAvLyBVc2UgYXR0cigpIGluc3RlYWQgb2YgZGF0YSgpLCBiZWNhdXNlIHRoZSBsYXR0ZXIgdHJpZXMgdG8gY29lcmNlIHRvCiAgICAgICAgLy8gbnVtYmVycywgd2hpY2ggY29tcGxpY2F0ZXMgb3VyIGNvbXBhcmlzb25zLgogICAgICAgIHZhciBjaGVja2VkID0gJGNoZWNrYm94LmF0dHIoImRhdGEtY2hlY2tlZCIpOwoKICAgICAgICBpZiAoY2hlY2tlZCA9PT0gIjAiKSB7CiAgICAgICAgICAkY2hlY2tib3guYXR0cigiZGF0YS1jaGVja2VkIiwgIjEiKTsKICAgICAgICAgICRjaGVja2JveC5odG1sKCImI3gyNjEyOyIpOwogICAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAkY2hlY2tib3guYXR0cigiZGF0YS1jaGVja2VkIiwgIjAiKTsKICAgICAgICAgICRjaGVja2JveC5odG1sKCImI3gyNjEwOyIpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgJGVsLmZpbmQoIi5zcGxpdC1ob3Jpem9udGFsIikKICAgICAgICAub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICB2YXIgY2hlY2tlZCA9IHRvZ2dsZUNoZWNrYm94KCQodGhpcykuZmluZCgiLm9wdGlvbnMtY2hlY2tib3giKSk7CiAgICAgICAgICBvbk9wdGlvbnNDaGFuZ2UoInNwbGl0IiwgY2hlY2tlZCk7CiAgICAgICAgfSk7CgogICAgICAkZWwuZmluZCgiLmhpZGUtaW50ZXJuYWwiKQogICAgICAgIC5vbigiY2xpY2siLCBmdW5jdGlvbigpIHsKICAgICAgICAgIHZhciBjaGVja2VkID0gdG9nZ2xlQ2hlY2tib3goJCh0aGlzKS5maW5kKCIub3B0aW9ucy1jaGVja2JveCIpKTsKICAgICAgICAgIG9uT3B0aW9uc0NoYW5nZSgiaW50ZXJuYWxzIiwgY2hlY2tlZCk7CiAgICAgICAgfSk7CgogICAgICAkZWwuZmluZCgiLmhpZGUtbWVtb3J5IikKICAgICAgICAub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICB2YXIgY2hlY2tlZCA9IHRvZ2dsZUNoZWNrYm94KCQodGhpcykuZmluZCgiLm9wdGlvbnMtY2hlY2tib3giKSk7CiAgICAgICAgICBvbk9wdGlvbnNDaGFuZ2UoIm1lbW9yeSIsIGNoZWNrZWQpOwogICAgICAgIH0pOwoKICAgICAgLy8gTWFrZSB0aGUgImhpZGUgaW50ZXJuYWwiIG9wdGlvbiBhdmFpbGFibGUgb3IgdW5hdmFpbGFibGUgdG8gdXNlcnMKICAgICAgZnVuY3Rpb24gZW5hYmxlSGlkZUludGVybmFsKCkgewogICAgICAgICRlbC5maW5kKCIuaGlkZS1pbnRlcm5hbCIpLmNzcygiZGlzcGxheSIsICIiKTsKICAgICAgfQogICAgICBmdW5jdGlvbiBkaXNhYmxlSGlkZUludGVybmFsKCkgewogICAgICAgICRlbC5maW5kKCIuaGlkZS1pbnRlcm5hbCIpLmNzcygiZGlzcGxheSIsICJub25lIik7CiAgICAgIH0KICAgICAgLy8gQnkgZGVmYXVsdCwgc3RhcnQgd2l0aCBpdCB1bmF2YWlsYWJsZTsgaXQncyBvbmx5IHJlbGV2YW50IGZvciBTaGlueQogICAgICAvLyBhcHBzLgogICAgICBkaXNhYmxlSGlkZUludGVybmFsKCk7CgoKICAgICAgJGVsLmZpbmQoIi5oaWRlLXplcm8tcm93IikKICAgICAgICAub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICB2YXIgY2hlY2tlZCA9IHRvZ2dsZUNoZWNrYm94KCQodGhpcykuZmluZCgiLm9wdGlvbnMtY2hlY2tib3giKSk7CgogICAgICAgICAgaWYgKGNoZWNrZWQpIHsKICAgICAgICAgICAgdmlzLmNvZGVUYWJsZS5oaWRlWmVyb1RpbWVSb3dzKCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2aXMuY29kZVRhYmxlLnNob3daZXJvVGltZVJvd3MoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgIGVsLnN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsKICAgICAgZnVuY3Rpb24gdG9nZ2xlVmlzaWJpbGl0eShvZmZzZXQpIHsKICAgICAgICBpZiAoZWwuc3R5bGUudmlzaWJpbGl0eSA9PT0gInZpc2libGUiKSB7CiAgICAgICAgICBlbC5zdHlsZS52aXNpYmlsaXR5ID0gImhpZGRlbiI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVsLnN0eWxlLnZpc2liaWxpdHkgPSAidmlzaWJsZSI7CiAgICAgICAgICAkKGRvY3VtZW50KS5vbigiY2xpY2siLCBoaWRlT25DbGlja091dHNpZGUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8gSGlkZSB0aGUgcGFuZWwgd2hlbiBhIGNsaWNrIGhhcHBlbnMgb3V0c2lkZS4gVGhpcyBoYW5kbGVyIGFsc28gcmVtb3ZlcwogICAgICAvLyBpdHNlbGYgYWZ0ZXIgaXQgZmlyZXMuCiAgICAgIGZ1bmN0aW9uIGhpZGVPbkNsaWNrT3V0c2lkZShlKSB7CiAgICAgICAgdmFyICRlbCA9ICQoZWwpOwogICAgICAgIGlmICghJGVsLmlzKGUudGFyZ2V0KSAmJiAkZWwuaGFzKGUudGFyZ2V0KS5sZW5ndGggPT09IDApIHsKICAgICAgICAgIGVsLnN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsKICAgICAgICAgIC8vIFVucmVnaXN0ZXIgdGhpcyBldmVudCBsaXN0ZW5lcgogICAgICAgICAgJChkb2N1bWVudCkub2ZmKCJjbGljayIsIGhpZGVPbkNsaWNrT3V0c2lkZSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIGVsOiBlbCwKICAgICAgICB0b2dnbGVWaXNpYmlsaXR5OiB0b2dnbGVWaXNpYmlsaXR5LAogICAgICAgIGVuYWJsZUhpZGVJbnRlcm5hbDogZW5hYmxlSGlkZUludGVybmFsLAogICAgICAgIGRpc2FibGVIaWRlSW50ZXJuYWw6IGRpc2FibGVIaWRlSW50ZXJuYWwKICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBub3RpZnlTb3VyY2VGaWxlTWVzc2FnZShkLCBkZXRhaWxzKSB7CiAgICAgIGlmICh3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKSB7CiAgICAgICAgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSh7CiAgICAgICAgICBzb3VyY2U6ICJwcm9mdmlzIiwKICAgICAgICAgIG1lc3NhZ2U6ICJzb3VyY2VmaWxlIiwKICAgICAgICAgIGZpbGU6IGQuZmlsZW5hbWUsCiAgICAgICAgICBub3JtcGF0aDogZC5ub3JtcGF0aCA/IGQubm9ybXBhdGggOiBnZXROb3JtUGF0aCh2aXMuZmlsZXMsIGQuZmlsZW5hbWUpLAogICAgICAgICAgbGluZTogZC5saW5lbnVtLAogICAgICAgICAgZGV0YWlsczogZGV0YWlscwogICAgICAgIH0sIHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4pOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gcm91bmRPbmVEZWNpbWFsTnVtKG51bWJlciwgZGVjaW1hbHMpIHsKICAgICAgcmV0dXJuIE1hdGgucm91bmQobnVtYmVyICogMTApIC8gMTA7CiAgICB9CgogICAgZnVuY3Rpb24gcm91bmRPbmVEZWNpbWFsKG51bWJlciwgZGVjaW1hbHMpIHsKICAgICAgaWYgKCFudW1iZXIpIHJldHVybiAwOwogICAgICByZXR1cm4gcm91bmRPbmVEZWNpbWFsTnVtKG51bWJlcikudG9GaXhlZCgxKTsKICAgIH0KCiAgICAvLyBHZW5lcmF0ZSB0aGUgY29kZSB0YWJsZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBnZW5lcmF0ZUNvZGVUYWJsZShlbCkgewogICAgICB2YXIgdXNlTWVtb3J5ID0gZmFsc2U7CiAgICAgIHZhciBjb250ZW50ID0gZDMuc2VsZWN0KGVsKTsKCiAgICAgIGlmICh2aXMuZmlsZUxpbmVTdGF0cy5sZW5ndGggPT09IDApIHsKICAgICAgICBjb250ZW50LmFwcGVuZCgiZGl2IikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJwcm9mdmlzLW1lc3NhZ2UiKQogICAgICAgICAgLmFwcGVuZCgiZGl2IikKICAgICAgICAgICAgLnRleHQoIihTb3VyY2VzIG5vdCBhdmFpbGFibGUpIik7CiAgICAgIH0KCiAgICAgIC8vIE9uZSB0YWJsZSBmb3IgZWFjaCBmaWxlCiAgICAgIHZhciB0YWJsZXMgPSBjb250ZW50LnNlbGVjdEFsbCgidGFibGUiKQogICAgICAgICAgLmRhdGEodmlzLmZpbGVMaW5lU3RhdHMpCiAgICAgICAgLmVudGVyKCkKICAgICAgICAgIC5hcHBlbmQoInRhYmxlIikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJwcm9mdmlzLXRhYmxlIik7CgogICAgICAvLyBUYWJsZSBoZWFkZXJzCiAgICAgIHZhciBoZWFkZXJSb3dzID0gdGFibGVzLmFwcGVuZCgidHIiKTsKICAgICAgaGVhZGVyUm93cy5hcHBlbmQoInRoIikKICAgICAgICAuYXR0cigiY29sc3BhbiIsICIyIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAiZmlsZW5hbWUiKQogICAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZmlsZW5hbWU7IH0pOwoKICAgICAgdmFyIHBlcmNlbnRUb29sdGlwID0gIlBlcmNlbnRhZ2Ugb2YgdHJhY2tlZCBleGVjdXRpb24gdGltZSI7CiAgICAgIHZhciBwZXJjZW50TWVtVG9vbHRpcCA9ICJQZXJjZW50YWdlIG9mIHBlYWsgbWVtb3J5IGRlYWxsb2NhdGlvbiBhbmQgYWxsb2NhdGlvbiI7CgogICAgICBoZWFkZXJSb3dzLmFwcGVuZCgidGgiKQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0YWJsZS1tZW1vcnkgbWVtb3J5IikKICAgICAgICAuYXR0cigiY29sc3BhbiIsICI0IikKICAgICAgICAudGV4dCgiTWVtb3J5Iik7CgogICAgICBoZWFkZXJSb3dzLmFwcGVuZCgidGgiKQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0aW1lIikKICAgICAgICAuYXR0cigiY29sc3BhbiIsICIyIikKICAgICAgICAudGV4dCgiVGltZSIpOwoKICAgICAgaGVhZGVyUm93cy5hcHBlbmQoInRoIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAic3BhY2luZyIpCiAgICAgICAgLmF0dHIoImRhdGEtcHNldWRvLWNvbnRlbnQiLCAiXHUwMGEwIik7CgogICAgICAvLyBJbnNlcnQgZWFjaCBsaW5lIG9mIGNvZGUKICAgICAgdmFyIHJvd3MgPSB0YWJsZXMuc2VsZWN0QWxsKCJ0ci5jb2RlLXJvdyIpCiAgICAgICAgICAuZGF0YShmdW5jdGlvbihkKSB7IHJldHVybiBkLmxpbmVEYXRhOyB9KQogICAgICAgIC5lbnRlcigpCiAgICAgICAgICAuYXBwZW5kKCJ0ciIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAiY29kZS1yb3ciKTsKCiAgICAgIC8vIFVzZSBwc2V1ZG8tY29udGVudCBhbmQgQ1NTIGNvbnRlbnQgcnVsZSB0byBtYWtlIHRleHQgdW5zZWxlY3RhYmxlIGFuZAogICAgICAvLyB1bmNvcHlhYmxlLiBTZWUgaHR0cHM6Ly9kYW5vYy5tZS9ibG9nL2Nzcy1wcmV2ZW50LWNvcHkvCiAgICAgIHJvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgImxpbmVudW0iKQogICAgICAgIC5hdHRyKCJkYXRhLXBzZXVkby1jb250ZW50IiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5saW5lbnVtOyB9KTsKCiAgICAgIHJvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgImNvZGUgciIpCiAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5jb250ZW50OyB9KQogICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkgeyBobGpzLmhpZ2hsaWdodEJsb2NrKHRoaXMpOyB9KTsKCiAgICAgIHJvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgInRhYmxlLW1lbW9yeSBtZW1vcnkiKQogICAgICAgIC5hdHRyKCJ0aXRsZSIsICJNZW1vcnkgZGVhbGxvY2F0aW9uIChNQikiKQogICAgICAgIC5hdHRyKCJkYXRhLXBzZXVkby1jb250ZW50IiwKICAgICAgICAgICAgICBmdW5jdGlvbihkKSB7IHJldHVybiByb3VuZE9uZURlY2ltYWxOdW0oZC5zdW1NZW1EZWFsbG9jKSAhPT0gMCA/IHJvdW5kT25lRGVjaW1hbChkLnN1bU1lbURlYWxsb2MpIDogIiI7IH0pOwoKICAgICAgcm93cy5hcHBlbmQoInRkIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidGFibGUtbWVtb3J5IG1lbWJhci1sZWZ0LWNlbGwiKQogICAgICAgIC5hcHBlbmQoImRpdiIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAibWVtYmFyIikKICAgICAgICAgIC5hdHRyKCJ0aXRsZSIsIHBlcmNlbnRNZW1Ub29sdGlwKQogICAgICAgICAgLnN0eWxlKCJ3aWR0aCIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgdmFyIHAgPSBNYXRoLm1pbihNYXRoLmFicyhNYXRoLm1pbihNYXRoLnJvdW5kKGQucHJvcE1lbURlYWxsb2MgKiAxMDApLCAwKSksIDEwMCk7CgogICAgICAgICAgICAvLyA4JSBpcyB0aGUgbWluaW1hbCBzaXplIHRoYXQgbG9va3MgdmlzdWFsbHkgYXBwZWFsaW5nIHdoaWxlIGRyYXdpbmcgYW4gYWxtb3N0IGVtcHR5IGJhcgogICAgICAgICAgICBwID0gcm91bmRPbmVEZWNpbWFsTnVtKGQuc3VtTWVtRGVhbGxvYykgIT09IDAgPyBNYXRoLm1heChwLCA4KSA6IDA7CiAgICAgICAgICAgIHJldHVybiBwICsgIiUiOwogICAgICAgICAgfSkKICAgICAgICAgIC8vIEFkZCB0aGUgZXF1aXZhbGVudCBvZiAmbmJzcDsgdG8gYmUgYWRkZWQgd2l0aCBDU1MgY29udGVudAogICAgICAgICAgLmF0dHIoImRhdGEtcHNldWRvLWNvbnRlbnQiLCAiXHUwMGEwIik7CgogICAgICByb3dzLmFwcGVuZCgidGQiKQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0YWJsZS1tZW1vcnkgbWVtYmFyLXJpZ2h0LWNlbGwiKQogICAgICAgIC5hcHBlbmQoImRpdiIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAibWVtYmFyIikKICAgICAgICAgIC5hdHRyKCJ0aXRsZSIsIHBlcmNlbnRNZW1Ub29sdGlwKQogICAgICAgICAgLnN0eWxlKCJ3aWR0aCIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgdmFyIHAgPSBNYXRoLm1pbihNYXRoLm1heChNYXRoLnJvdW5kKGQucHJvcE1lbUFsbG9jICogMTAwKSwgMCksIDEwMCk7CgogICAgICAgICAgICAvLyA0JSBpcyB0aGUgbWluaW1hbCBzaXplIHRoYXQgbG9va3MgdmlzdWFsbHkgYXBwZWFsaW5nIHdoaWxlIGRyYXdpbmcgYW4gYWxtb3N0IGVtcHR5IGJhcgogICAgICAgICAgICBwID0gcm91bmRPbmVEZWNpbWFsTnVtKGQuc3VtTWVtQWxsb2MpICE9PSAwID8gTWF0aC5tYXgocCwgNCkgOiAwOwogICAgICAgICAgICByZXR1cm4gcCArICIlIjsKICAgICAgICAgIH0pCiAgICAgICAgICAvLyBBZGQgdGhlIGVxdWl2YWxlbnQgb2YgJm5ic3A7IHRvIGJlIGFkZGVkIHdpdGggQ1NTIGNvbnRlbnQKICAgICAgICAgIC5hdHRyKCJkYXRhLXBzZXVkby1jb250ZW50IiwgIlx1MDBhMCIpOwoKICAgICAgcm93cy5hcHBlbmQoInRkIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidGFibGUtbWVtb3J5IG1lbW9yeSBtZW1vcnktcmlnaHQiKQogICAgICAgIC5hdHRyKCJ0aXRsZSIsICJNZW1vcnkgYWxsb2NhdGlvbiAoTUIpIikKICAgICAgICAuYXR0cigiZGF0YS1wc2V1ZG8tY29udGVudCIsCiAgICAgICAgICAgICAgZnVuY3Rpb24oZCkgeyByZXR1cm4gcm91bmRPbmVEZWNpbWFsTnVtKGQuc3VtTWVtQWxsb2MpICE9PSAwID8gcm91bmRPbmVEZWNpbWFsKGQuc3VtTWVtQWxsb2MpIDogIiI7IH0pOwoKICAgICAgcm93cy5hcHBlbmQoInRkIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidGltZSIpCiAgICAgICAgLmF0dHIoInRpdGxlIiwgIlRvdGFsIHRpbWUgKG1zKSIpCiAgICAgICAgLmF0dHIoImRhdGEtcHNldWRvLWNvbnRlbnQiLAogICAgICAgICAgICAgIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIE1hdGgucm91bmQoZC5zdW1UaW1lICogMTAwKSAhPT0gMCA/IChNYXRoLnJvdW5kKGQuc3VtVGltZSAqIDEwMCkgLyAxMDApIDogIiI7IH0pOwoKICAgICAgcm93cy5hcHBlbmQoInRkIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidGltZWJhci1jZWxsIikKICAgICAgICAuYXBwZW5kKCJkaXYiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgInRpbWViYXIiKQogICAgICAgICAgLmF0dHIoInRpdGxlIiwgcGVyY2VudFRvb2x0aXApCiAgICAgICAgICAuc3R5bGUoIndpZHRoIiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChkLnByb3BUaW1lICogMTAwKSArICIlIjsKICAgICAgICAgIH0pCiAgICAgICAgICAvLyBBZGQgdGhlIGVxdWl2YWxlbnQgb2YgJm5ic3A7IHRvIGJlIGFkZGVkIHdpdGggQ1NTIGNvbnRlbnQKICAgICAgICAgIC5hdHRyKCJkYXRhLXBzZXVkby1jb250ZW50IiwgIlx1MDBhMCIpOwoKICAgICAgcm93cy5hcHBlbmQoInRkIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAic3BhY2luZyIpCiAgICAgICAgLmF0dHIoImRhdGEtcHNldWRvLWNvbnRlbnQiLCAiXHUwMGEwIik7CgogICAgICByb3dzCiAgICAgICAgLm9uKCJjbGljayIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIC8vIEluZm8gYm94IGlzIG9ubHkgcmVsZXZhbnQgd2hlbiBtb3VzaW5nIG92ZXIgZmxhbWVncmFwaAogICAgICAgICAgdmlzLmluZm9Cb3guaGlkZSgpOwogICAgICAgICAgaGlnaGxpZ2h0ZXIuY2xpY2soZCk7CiAgICAgICAgICBub3RpZnlTb3VyY2VGaWxlTWVzc2FnZShkLCAic2VsZWN0Iik7CiAgICAgICAgfSkKICAgICAgICAub24oIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIGlmIChoaWdobGlnaHRlci5pc0xvY2tlZCgpKSByZXR1cm47CgogICAgICAgICAgLy8gSW5mbyBib3ggaXMgb25seSByZWxldmFudCB3aGVuIG1vdXNpbmcgb3ZlciBmbGFtZWdyYXBoCiAgICAgICAgICB2aXMuaW5mb0JveC5oaWRlKCk7CiAgICAgICAgICBoaWdobGlnaHRlci5ob3ZlcihkKTsKICAgICAgICB9KQogICAgICAgIC5vbigibW91c2VvdXQiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZXIuaXNMb2NrZWQoKSkgcmV0dXJuOwoKICAgICAgICAgIGhpZ2hsaWdodGVyLmhvdmVyKG51bGwpOwogICAgICAgIH0pCiAgICAgICAgLm9uKCJkYmxjbGljayIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIG5vdGlmeVNvdXJjZUZpbGVNZXNzYWdlKGQsICJvcGVuIik7CiAgICAgICAgfSk7CgogICAgICBmdW5jdGlvbiBoaWRlWmVyb1RpbWVSb3dzKCkgewogICAgICAgIHJvd3MKICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5zdW1UaW1lID09PSAwOyB9KQogICAgICAgICAgLnN0eWxlKCJkaXNwbGF5IiwgIm5vbmUiKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gc2hvd1plcm9UaW1lUm93cygpIHsKICAgICAgICByb3dzCiAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuc3VtVGltZSA9PT0gMDsgfSkKICAgICAgICAgIC5zdHlsZSgiZGlzcGxheSIsICIiKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gYWRkTG9ja0hpZ2hsaWdodChkKSB7CiAgICAgICAgdmFyIHRhcmdldCA9IGQ7CiAgICAgICAgcm93cwogICAgICAgICAgLmZpbHRlcihmdW5jdGlvbihkKSB7IHJldHVybiBkID09PSB0YXJnZXQ7IH0gKQogICAgICAgICAgLmNsYXNzZWQoeyBsb2NrZWQ6IHRydWUgfSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGNsZWFyTG9ja0hpZ2hsaWdodCgpIHsKICAgICAgICByb3dzCiAgICAgICAgICAuZmlsdGVyKCIubG9ja2VkIikKICAgICAgICAgIC5jbGFzc2VkKHsgbG9ja2VkOiBmYWxzZSB9KTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gYWRkQWN0aXZlSGlnaGxpZ2h0KGQpIHsKICAgICAgICAvLyBJZiB3ZSBoYXZlIGZpbGVuYW1lIGFuZCBsaW5lbnVtLCBzZWFyY2ggZm9yIGNlbGxzIHRoYXQgbWF0Y2gsIGFuZAogICAgICAgIC8vIHNldCB0aGVtIGFzICJhY3RpdmUiLgogICAgICAgIHZhciB0YXJnZXQgPSBkOwogICAgICAgIGlmICh0YXJnZXQuZmlsZW5hbWUgJiYgdGFyZ2V0LmxpbmVudW0pIHsKICAgICAgICAgIHZhciB0ciA9IHJvd3MKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbihkKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGQubGluZW51bSA9PT0gdGFyZ2V0LmxpbmVudW0gJiYKICAgICAgICAgICAgICAgICAgICAgZC5maWxlbmFtZSA9PT0gdGFyZ2V0LmZpbGVuYW1lOwogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2xhc3NlZCh7IGFjdGl2ZTogdHJ1ZSB9KTsKCiAgICAgICAgICB0ci5ub2RlKCkuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCgpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2xlYXJBY3RpdmVIaWdobGlnaHQoKSB7CiAgICAgICAgcm93cwogICAgICAgICAgLmZpbHRlcigiLmFjdGl2ZSIpCiAgICAgICAgICAuY2xhc3NlZCh7IGFjdGl2ZTogZmFsc2UgfSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGVuYWJsZVNjcm9sbCgpIHsKICAgICAgICAvLyBUT0RPOiBpbXBsZW1lbnQgdGhpcwogICAgICB9CgogICAgICBmdW5jdGlvbiBkaXNhYmxlU2Nyb2xsKCkgewogICAgICB9CgogICAgICBmdW5jdGlvbiB1c2VNZW1vcnlSZXN1bHRzKCkgewogICAgICAgIGQzLnNlbGVjdEFsbCgiLnRhYmxlLW1lbW9yeSIpLnN0eWxlKCJkaXNwbGF5IiwgdmlzLmhpZGVNZW1vcnkgPyAibm9uZSIgOiAiIik7CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgZWw6IGVsLAogICAgICAgIGhpZGVaZXJvVGltZVJvd3M6IGhpZGVaZXJvVGltZVJvd3MsCiAgICAgICAgc2hvd1plcm9UaW1lUm93czogc2hvd1plcm9UaW1lUm93cywKICAgICAgICBhZGRMb2NrSGlnaGxpZ2h0OiBhZGRMb2NrSGlnaGxpZ2h0LAogICAgICAgIGNsZWFyTG9ja0hpZ2hsaWdodDogY2xlYXJMb2NrSGlnaGxpZ2h0LAogICAgICAgIGFkZEFjdGl2ZUhpZ2hsaWdodDogYWRkQWN0aXZlSGlnaGxpZ2h0LAogICAgICAgIGNsZWFyQWN0aXZlSGlnaGxpZ2h0OiBjbGVhckFjdGl2ZUhpZ2hsaWdodCwKICAgICAgICBlbmFibGVTY3JvbGw6IGVuYWJsZVNjcm9sbCwKICAgICAgICBkaXNhYmxlU2Nyb2xsOiBkaXNhYmxlU2Nyb2xsLAogICAgICAgIHVzZU1lbW9yeVJlc3VsdHM6IHVzZU1lbW9yeVJlc3VsdHMKICAgICAgfTsKICAgIH0KCgogICAgdmFyIGhpZ2hsaWdodGVyID0gKGZ1bmN0aW9uKCkgewogICAgICAvLyBEMyBkYXRhIG9iamVjdHMgZm9yIHRoZSBjdXJyZW50bHkgbG9ja2VkIGFuZCBhY3RpdmUgaXRlbXMKICAgICAgdmFyIGxvY2tJdGVtID0gbnVsbDsKICAgICAgdmFyIGFjdGl2ZUl0ZW0gPSBudWxsOwoKICAgICAgZnVuY3Rpb24gaXNMb2NrZWQoKSB7CiAgICAgICAgcmV0dXJuIGxvY2tJdGVtICE9PSBudWxsOwogICAgICB9CgogICAgICBmdW5jdGlvbiBjdXJyZW50TG9jaygpIHsKICAgICAgICByZXR1cm4gbG9ja0l0ZW07CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGN1cnJlbnRBY3RpdmUoKSB7CiAgICAgICAgcmV0dXJuIGFjdGl2ZUl0ZW07CiAgICAgIH0KCgogICAgICAvLyBUaGlzIGlzIGNhbGxlZCB3aGVuIGEgZmxhbWVncmFwaCBjZWxsIG9yIGEgbGluZSBvZiBjb2RlIGlzIGNsaWNrZWQgb24uCiAgICAgIC8vIENsaWNrcyBhbHNvIHNob3VsZCB0cmlnZ2VyIGhvdmVyIGV2ZW50cy4KICAgICAgZnVuY3Rpb24gY2xpY2soZCkgewogICAgICAgIC8vIElmIGQgaXMgbnVsbCAoYmFja2dyb3VuZCBpcyBjbGlja2VkKSwgb3IgaWYgbG9ja2VkIGFuZCB0aGlzIGNsaWNrCiAgICAgICAgLy8gaXMgb24gdGhlIGN1cnJlbnRseSBsb2NrZWQgc2VsZWN0aW9uLCBqdXN0IHVubG9jayBhbmQgcmV0dXJuLgogICAgICAgIGlmIChkID09PSBudWxsIHx8IChsb2NrSXRlbSAmJiBkID09PSBsb2NrSXRlbSkpIHsKICAgICAgICAgIGxvY2tJdGVtID0gbnVsbDsKICAgICAgICAgIHZpcy5mbGFtZUdyYXBoLmNsZWFyTG9ja0hpZ2hsaWdodCgpOwogICAgICAgICAgdmlzLmNvZGVUYWJsZS5jbGVhckxvY2tIaWdobGlnaHQoKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIElmIG5vdGhpbmcgY3VycmVudGx5IGxvY2tlZCwgb3IgaWYgbG9ja2VkIGFuZCB0aGlzIGNsaWNrIGlzIG9uCiAgICAgICAgLy8gc29tZXRoaW5nIG90aGVyIHRoYW4gdGhlIGN1cnJlbnRseSBsb2NrZWQgc2VsZWN0aW9uLCB0aGVuIGxvY2sgdGhlCiAgICAgICAgLy8gY3VycmVudCBzZWxlY3Rpb24uCiAgICAgICAgbG9ja0l0ZW0gPSBkOwoKICAgICAgICB2aXMuZmxhbWVHcmFwaC5jbGVhckxvY2tIaWdobGlnaHQoKTsKICAgICAgICB2aXMuY29kZVRhYmxlLmNsZWFyTG9ja0hpZ2hsaWdodCgpOwogICAgICAgIGhvdmVyKG51bGwpOwoKICAgICAgICB2aXMuZmxhbWVHcmFwaC5hZGRMb2NrSGlnaGxpZ2h0KGQpOwogICAgICAgIHZpcy5jb2RlVGFibGUuYWRkTG9ja0hpZ2hsaWdodChkKTsKICAgICAgICBob3ZlcihkKTsKICAgICAgfQoKCiAgICAgIGZ1bmN0aW9uIGhvdmVyKGQpIHsKICAgICAgICBhY3RpdmVJdGVtID0gZDsKCiAgICAgICAgaWYgKGFjdGl2ZUl0ZW0pIHsKICAgICAgICAgIHZpcy5mbGFtZUdyYXBoLmFkZEFjdGl2ZUhpZ2hsaWdodChhY3RpdmVJdGVtKTsKICAgICAgICAgIHZpcy5jb2RlVGFibGUuYWRkQWN0aXZlSGlnaGxpZ2h0KGFjdGl2ZUl0ZW0pOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmlzLmZsYW1lR3JhcGguY2xlYXJBY3RpdmVIaWdobGlnaHQoKTsKICAgICAgICB2aXMuY29kZVRhYmxlLmNsZWFyQWN0aXZlSGlnaGxpZ2h0KCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgaXNMb2NrZWQ6IGlzTG9ja2VkLAogICAgICAgIGN1cnJlbnRMb2NrOiBjdXJyZW50TG9jaywKICAgICAgICBjdXJyZW50QWN0aXZlOiBjdXJyZW50QWN0aXZlLAoKICAgICAgICBjbGljazogY2xpY2ssCiAgICAgICAgaG92ZXI6IGhvdmVyCiAgICAgIH07CiAgICB9KSgpOwoKCiAgICAvLyBHZW5lcmF0ZSB0aGUgZmxhbWUgZ3JhcGggLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uIGdlbmVyYXRlRmxhbWVHcmFwaChlbCkgewogICAgICBlbC5pbm5lckhUTUwgPSAiIjsKCiAgICAgIHZhciBzdGFja0hlaWdodCA9IDE1OyAgIC8vIEhlaWdodCBvZiBlYWNoIGxheWVyIG9uIHRoZSBzdGFjaywgaW4gcGl4ZWxzCiAgICAgIHZhciB6b29tTWFyZ2luID0gMC4wMjsgIC8vIEV4dHJhIG1hcmdpbiBvbiBzaWRlcyB3aGVuIHpvb21pbmcgdG8gZml0CgogICAgICAvLyBEaW1lbnNpb25zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogICAgICAvLyBNYXJnaW4gaW5zaWRlIHRoZSBzdmcgd2hlcmUgdGhlIHBsb3R0aW5nIG9jY3VycwogICAgICB2YXIgZGltcyA9IHsKICAgICAgICBtYXJnaW46IHsgdG9wOiAwLCByaWdodDogMCwgbGVmdDogMCwgYm90dG9tOiAzMCB9CiAgICAgIH07CiAgICAgIGRpbXMud2lkdGggPSBlbC5jbGllbnRXaWR0aCAtIGRpbXMubWFyZ2luLmxlZnQgLSBkaW1zLm1hcmdpbi5yaWdodDsKICAgICAgZGltcy5oZWlnaHQgPSBlbC5jbGllbnRIZWlnaHQgLSBkaW1zLm1hcmdpbi50b3AgLSBkaW1zLm1hcmdpbi5ib3R0b207CgogICAgICB2YXIgZG9tYWlucyA9IHsKICAgICAgICB4OiBbCiAgICAgICAgICBkMy5taW4odmlzLnByb2YsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuc3RhcnRUaW1lOyB9KSwKICAgICAgICAgIGQzLm1heCh2aXMucHJvZiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5lbmRUaW1lOyB9KQogICAgICAgIF0sCiAgICAgICAgeTogWwogICAgICAgICAgZDMubWluKHZpcy5wcm9mLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmRlcHRoOyB9KSAtIDEsCiAgICAgICAgICBkMy5tYXgodmlzLnByb2YsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZGVwdGg7IH0pCiAgICAgICAgXQogICAgICB9OwogICAgICAvLyBTbGlnaHRseSBleHBhbmQgeCBkb21haW4KICAgICAgZG9tYWlucy54ID0gZXhwYW5kUmFuZ2UoZG9tYWlucy54LCB6b29tTWFyZ2luKTsKCiAgICAgIC8vIFNjYWxlcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgdmFyIHNjYWxlcyA9IHsKICAgICAgICB4OiBkMy5zY2FsZS5saW5lYXIoKQogICAgICAgICAgICAuZG9tYWluKGRvbWFpbnMueCkKICAgICAgICAgICAgLnJhbmdlKFswLCBkaW1zLndpZHRoXSksCgogICAgICAgIHk6IGQzLnNjYWxlLmxpbmVhcigpCiAgICAgICAgICAgIC5kb21haW4oZG9tYWlucy55KQogICAgICAgICAgICAucmFuZ2UoW2RpbXMuaGVpZ2h0LCBkaW1zLmhlaWdodCAtIChkb21haW5zLnlbMV0gLSBkb21haW5zLnlbMF0pICogc3RhY2tIZWlnaHRdKSwKCiAgICAgICAgLy8gVGhpcyB3aWxsIGJlIGEgZnVuY3Rpb24gdGhhdCwgZ2l2ZW4gYSBkYXRhIHBvaW50LCByZXR1cm5zIHRoZSBkZXB0aC4KICAgICAgICAvLyBUaGlzIGZ1bmN0aW9uIGNhbiBjaGFuZ2U7IHNvbWV0aW1lcyBpdCByZXR1cm5zIHRoZSBvcmlnaW5hbCBkZXB0aCwKICAgICAgICAvLyBhbmQgc29tZXRpbWVzIGl0IHJldHVybnMgdGhlIGNvbGxhcHNlZCBkZXB0aC4gVGhpcyBpc24ndCBleGFjdGx5IGEKICAgICAgICAvLyBzY2FsZSBmdW5jdGlvbiwgYnV0IGl0J3MgY2xvc2UgZW5vdWdoIGZvciBvdXIgcHVycG9zZXMuCiAgICAgICAgZ2V0RGVwdGg6IG51bGwKICAgICAgfTsKCiAgICAgIGZ1bmN0aW9uIHVzZUNvbGxhcHNlZERlcHRoKCkgewogICAgICAgIHNjYWxlcy5nZXREZXB0aCA9IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZGVwdGhDb2xsYXBzZWQ7IH07CiAgICAgIH0KICAgICAgZnVuY3Rpb24gdXNlVW5jb2xsYXBzZWREZXB0aCgpIHsKICAgICAgICBzY2FsZXMuZ2V0RGVwdGggPSBmdW5jdGlvbihkKSB7IHJldHVybiBkLmRlcHRoOyB9OwogICAgICB9CgogICAgICB1c2VDb2xsYXBzZWREZXB0aCgpOwoKICAgICAgLy8gU1ZHIGNvbnRhaW5lciBvYmplY3RzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KGVsKS5hcHBlbmQoJ3N2ZycpOwoKICAgICAgdmFyIGNsaXBSZWN0ID0gc3ZnLmFwcGVuZCgiY2xpcFBhdGgiKQogICAgICAgICAgLmF0dHIoImlkIiwgImNsaXAtIiArIHZpcy5lbC5pZCkKICAgICAgICAuYXBwZW5kKCJyZWN0Iik7CgogICAgICB2YXIgY29udGFpbmVyID0gc3ZnLmFwcGVuZCgnZycpCiAgICAgICAgLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoIiArIGRpbXMubWFyZ2luLmxlZnQgKyAiLCIgKyBkaW1zLm1hcmdpbi50b3AgKyAiKSIpCiAgICAgICAgLmF0dHIoImNsaXAtcGF0aCIsICJ1cmwoIiArIHVybE5vSGFzaCgpICsgIiNjbGlwLSIgKyB2aXMuZWwuaWQgKyAiKSIpOwoKICAgICAgLy8gQWRkIGEgYmFja2dyb3VuZCByZWN0IHNvIHdlIGhhdmUgc29tZXRoaW5nIHRvIGdyYWIgZm9yIHpvb21pbmcvcGFubmluZwogICAgICB2YXIgYmFja2dyb3VuZFJlY3QgPSBjb250YWluZXIuYXBwZW5kKCJyZWN0IikKICAgICAgICAuYXR0cigiY2xhc3MiLCAiYmFja2dyb3VuZCIpOwoKICAgICAgLy8gQXhlcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgdmFyIHhBeGlzID0gZDMuc3ZnLmF4aXMoKQogICAgICAgIC5zY2FsZShzY2FsZXMueCkKICAgICAgICAub3JpZW50KCJib3R0b20iKTsKCiAgICAgIHN2Zy5hcHBlbmQoImciKQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJ4IGF4aXMiKQogICAgICAgIC5jYWxsKHhBeGlzKTsKCiAgICAgIC8vIENvbnRhaW5lciBzaXppbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgLy8gVXBkYXRlIGRpbWVuc2lvbnMgb2YgdmFyaW91cyBjb250YWluZXIgZWxlbWVudHMsIGJhc2VkIG9uIHRoZSBvdmVyYWxsCiAgICAgIC8vIGRpbWVuc2lvbnMgb2YgdGhlIGNvbnRhaW5pbmcgZGl2LgogICAgICBmdW5jdGlvbiB1cGRhdGVDb250YWluZXJTaXplKCkgewogICAgICAgIGRpbXMud2lkdGggPSBlbC5jbGllbnRXaWR0aCAtIGRpbXMubWFyZ2luLmxlZnQgLSBkaW1zLm1hcmdpbi5yaWdodDsKICAgICAgICBkaW1zLmhlaWdodCA9IGVsLmNsaWVudEhlaWdodCAtIGRpbXMubWFyZ2luLnRvcCAtIGRpbXMubWFyZ2luLmJvdHRvbTsKCiAgICAgICAgc3ZnCiAgICAgICAgICAuYXR0cignd2lkdGgnLCBkaW1zLndpZHRoICsgZGltcy5tYXJnaW4ubGVmdCArIGRpbXMubWFyZ2luLnJpZ2h0KQogICAgICAgICAgLmF0dHIoJ2hlaWdodCcsIGRpbXMuaGVpZ2h0ICsgZGltcy5tYXJnaW4udG9wICsgZGltcy5tYXJnaW4uYm90dG9tKTsKCiAgICAgICAgY2xpcFJlY3QKICAgICAgICAgIC5hdHRyKCJ4IiwgZGltcy5tYXJnaW4ubGVmdCkKICAgICAgICAgIC5hdHRyKCJ5IiwgZGltcy5tYXJnaW4udG9wKQogICAgICAgICAgLmF0dHIoIndpZHRoIiwgZGltcy53aWR0aCkKICAgICAgICAgIC5hdHRyKCJoZWlnaHQiLCBkaW1zLmhlaWdodCk7CgogICAgICAgIGJhY2tncm91bmRSZWN0CiAgICAgICAgICAuYXR0cigid2lkdGgiLCBkaW1zLndpZHRoKQogICAgICAgICAgLmF0dHIoImhlaWdodCIsIGRpbXMuaGVpZ2h0KTsKCiAgICAgICAgc3ZnLnNlbGVjdCgiLnguYXhpcyIpCiAgICAgICAgICAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgZGltcy5tYXJnaW4ubGVmdCArICIsIiArIGRpbXMuaGVpZ2h0ICsgIikiKTsKICAgICAgfQoKCiAgICAgIC8vIFJlZHJhd2luZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgICAgIC8vIFJlZHJhd2luZyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZC4gRm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMsIHRoZQogICAgICAvLyBmbGFtZWdyYXBoIGNlbGxzIHRoYXQgYXJlIG9mZnNjcmVlbiBhcmVuJ3QgcmVuZGVyZWQ7IHRoZXkncmUgcmVtb3ZlZAogICAgICAvLyBmcm9tIHRoZSBEMyBzZWxlY3Rpb24gb2YgY2VsbHMuIEhvd2V2ZXIsIHdoZW4gdHJhbnNpdGlvbnMgYXJlCiAgICAgIC8vIGludm9sdmVkLCBpdCBtYXkgYmUgbmVjc3NhcnkgdG8gYWRkIG9iamVjdHMgaW4gdGhlaXIgY29ycmVjdAogICAgICAvLyBvZmYtc2NyZWVuIHN0YXJ0aW5nIGxvY2F0aW9ucyBiZWZvcmUgdGhlIHRyYW5zaXRpb24sIGFuZCB0aGVuIGRvIHRoZQogICAgICAvLyB0cmFuc2l0aW9uLiBTaW1pbGFybHksIGl0IG1heSBiZSBuZWNzc2FyeSB0byB0cmFuc2l0aW9uIG9iamVjdHMgdG8KICAgICAgLy8gdGhlaXIgY29ycmVjdCBvZmYtc2NyZWVuIGVuZGluZyBwb3NpdGlvbnMuCiAgICAgIC8vCiAgICAgIC8vIEluIG9yZGVyIHRvIGhhbmRsZSB0aGlzLCB3aGVuZXZlciB0aGVyZSdzIGEgdHJhbnNpdGlvbiwgd2UgbmVlZCB0bwogICAgICAvLyBoYXZlIHRoZSBzY2FsZXMgZm9yIGJlZm9yZSB0aGUgdHJhbnNpdGlvbiwgYW5kIGFmdGVyLiBXaGVuIGEgZnVuY3Rpb24KICAgICAgLy8gaW52b2tlcyBhIHRyYW5zaXRpb24sIGl0IHdpbGwgZ2VuZXJhbGx5IGRvIHRoZSBmb2xsb3dpbmc6ICgxKSBzYXZlIHRoZQogICAgICAvLyBwcmV2aW91cyBzY2FsZXMsICgyKSBtb2RpZnkgdGhlIGN1cnJlbnQgc2NhbGVzLCAoMykgY2FsbCBhIHJlZHJhdwogICAgICAvLyBmdW5jdGlvbi4gVGhlIHJlZHJhdyBmdW5jdGlvbnMgYXJlIGN1c3RvbWl6ZWQgZm9yIGRpZmZlcmVudCB0eXBlcyBvZgogICAgICAvLyB0cmFuc2l0aW9ucywgYW5kIHRoZXkgd2lsbCB1c2UgdGhlIHNhdmVkIHByZXZpb3VzIHNjYWxlcyB0byBwb3NpdGlvbgogICAgICAvLyBvYmplY3RzIGNvcnJlY3RseSBmb3IgdGhlIHRyYW5zaXRpb24uIFdoZW4gdGhlcmUncyBubyB0cmFuc2l0aW9uLCB0aGUKICAgICAgLy8gcHJldmlvdXMgc2NhbGVzIGFyZW4ndCBuZWVkZWQsIGFuZCB0aGUgcmVkcmF3SW1tZWRpYXRlKCkgZnVuY3Rpb24KICAgICAgLy8gc2hvdWxkIGJlIHVzZWQuCgogICAgICAvLyBDYWNoZSBjZWxscyBmb3IgZmFzdGVyIGFjY2VzcyAoYXZvaWQgYSBkMy5zZWxlY3QoKSkKICAgICAgdmFyIGNlbGxzOwoKICAgICAgLy8gRm9yIGEgZGF0YSBlbGVtZW50LCByZXR1cm4gaWRlbnRpZnlpbmcga2V5CiAgICAgIGZ1bmN0aW9uIGRhdGFLZXkoZCkgewogICAgICAgIHJldHVybiBkLmRlcHRoICsgIi0iICsgZC5zdGFydFRpbWUgKyAiLSIgKyBkLmVuZFRpbWU7CiAgICAgIH0KCiAgICAgIC8vIEZvciB0cmFuc2l0aW9ucyB3aXRoIGFuaW1hdGlvbiwgd2UgbmVlZCB0byBoYXZlIGEgY29weSBvZiB0aGUgcHJldmlvdXMKICAgICAgLy8gc2NhbGVzIGluIGFkZGl0aW9uIHRvIHRoZSBjdXJyZW50IG9uZXMuCiAgICAgIHZhciBwcmV2U2NhbGVzID0ge307CiAgICAgIGZ1bmN0aW9uIHNhdmVQcmV2U2NhbGVzKCkgewogICAgICAgIHByZXZTY2FsZXMgPSB7CiAgICAgICAgICB4OiAgICAgICAgc2NhbGVzLnguY29weSgpLAogICAgICAgICAgeTogICAgICAgIHNjYWxlcy55LmNvcHkoKSwKICAgICAgICAgIGdldERlcHRoOiBzY2FsZXMuZ2V0RGVwdGgKICAgICAgICB9OwogICAgICB9CiAgICAgIHNhdmVQcmV2U2NhbGVzKCk7CgoKICAgICAgLy8gUmV0dXJucyBhIEQzIHNlbGVjdGlvbiBvZiB0aGUgY2VsbHMgdGhhdCBhcmUgd2l0aGluIHRoZSBwbG90dGluZwogICAgICAvLyByZWdpb24sIHVzaW5nIGEgc2V0IG9mIHNjYWxlcy4KICAgICAgZnVuY3Rpb24gc2VsZWN0QWN0aXZlQ2VsbHMoc2NhbGVzKSB7CiAgICAgICAgdmFyIHhTY2FsZSA9IHNjYWxlcy54OwogICAgICAgIHZhciB5U2NhbGUgPSBzY2FsZXMueTsKICAgICAgICB2YXIgZGVwdGggPSBzY2FsZXMuZ2V0RGVwdGg7CiAgICAgICAgdmFyIHdpZHRoID0gZGltcy53aWR0aDsKICAgICAgICB2YXIgaGVpZ2h0ID0gZGltcy5oZWlnaHQ7CgogICAgICAgIHZhciBkYXRhID0gdmlzLnByb2YuZmlsdGVyKGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIHZhciBkZXB0aFZhbCA9IGRlcHRoKGQpOwogICAgICAgICAgcmV0dXJuICEoeFNjYWxlKGQuZW5kVGltZSkgICAgPCAwICAgICAgfHwKICAgICAgICAgICAgICAgICAgIHhTY2FsZShkLnN0YXJ0VGltZSkgID4gd2lkdGggIHx8CiAgICAgICAgICAgICAgICAgICBkZXB0aFZhbCAgICAgICAgICAgPT09IG51bGwgICB8fAogICAgICAgICAgICAgICAgICAgeVNjYWxlKGRlcHRoVmFsIC0gMSkgPCAwICAgICAgfHwKICAgICAgICAgICAgICAgICAgIHlTY2FsZShkZXB0aFZhbCkgICAgID4gaGVpZ2h0KTsKICAgICAgICB9KTsKCiAgICAgICAgY2VsbHMgPSBjb250YWluZXIuc2VsZWN0QWxsKCJnLmNlbGwiKS5kYXRhKGRhdGEsIGRhdGFLZXkpOwoKICAgICAgICByZXR1cm4gY2VsbHM7CiAgICAgIH0KCiAgICAgIC8vIEdpdmVuIGFuIGVudGVyIHNlbGVjdGlvbiwgYWRkIHRoZSByZWN0IGFuZCB0ZXh0IG9iamVjdHMsIGJ1dCBkb24ndAogICAgICAvLyBwb3NpdGlvbiB0aGVtLiBSZXR1cm5zIGEgc2VsZWN0aW9uIG9mIHRoZSBuZXcgPGc+IGVsZW1lbnRzLgogICAgICAvLyBUaGlzIHNob3VsZCB1c3VhbGx5IGJlIGNhbGxlZCB3aXRoIGFkZEl0ZW1zKHNlbC5lbnRlcigpKSBpbnN0ZWFkCiAgICAgIC8vIG9mIHNlbC5lbnRlcigpLmNhbGwoYWRkSXRlbXMpLCBiZWNhdXNlIHRoZSBsYXR0ZXIgcmV0dXJucyB0aGUgb3JpZ2luYWwKICAgICAgLy8gZW50ZXIgc2VsZWN0aW9uLCBub3QgdGhlIHNlbGVjdGlvbiBvZiA8Zz4gZWxlbWVudHMsIGFuZCBjYW4ndCBiZQogICAgICAvLyB1c2VkIGZvciBjaGFpbmluZyBtb3JlIGZ1bmN0aW9uIGNhbGxzIG9uIHRoZSA8Zz4gc2VsZWN0aW9uLgogICAgICBmdW5jdGlvbiBhZGRJdGVtcyhlbnRlclNlbGVjdGlvbikgewogICAgICAgIHZhciBjZWxscyA9IGVudGVyU2VsZWN0aW9uLmFwcGVuZCgiZyIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAiY2VsbCIpCiAgICAgICAgICAuY2xhc3NlZCgiaGlnaGxpZ2h0ZWQiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmZpbGVuYW1lICE9PSBudWxsOyB9KQogICAgICAgICAgLmNhbGwoYWRkTW91c2VFdmVudEhhbmRsZXJzKTsKCiAgICAgICAgLy8gQWRkIENTUyBjbGFzc2VzIGZvciBoaWdobGlnaHRpbmcgY2VsbHMgd2l0aCBsYWJlbHMgdGhhdCBtYXRjaCBwYXJ0aWN1bGFyCiAgICAgICAgLy8gcmVnZXggcGF0dGVybnMuCiAgICAgICAgdmFyIGhpZ2hsaWdodFBhdHRlcm5zID0gZDMuZW50cmllcyhtZXNzYWdlLmhpZ2hsaWdodCk7CiAgICAgICAgaGlnaGxpZ2h0UGF0dGVybnMubWFwKGZ1bmN0aW9uKGl0ZW0pIHsKICAgICAgICAgIHZhciBjc3NDbGFzcyA9IGl0ZW0ua2V5OwogICAgICAgICAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoaXRlbS52YWx1ZSk7CgogICAgICAgICAgY2VsbHMuY2xhc3NlZChjc3NDbGFzcywgZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gZC5sYWJlbC5zZWFyY2gocmVnZXhwKSAhPT0gLTE7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgY2VsbHMuYXBwZW5kKCJyZWN0IikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJyZWN0Iik7CgogICAgICAgIGNlbGxzLmFwcGVuZCgidGV4dCIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAicHJvZnZpcy1sYWJlbCIpCiAgICAgICAgICAudGV4dChmdW5jdGlvbihkKSB7IHJldHVybiBkLmxhYmVsOyB9KTsKCiAgICAgICAgcmV0dXJuIGNlbGxzOwogICAgICB9CgogICAgICAvLyBHaXZlbiBhIHNlbGVjdGlvbiwgcG9zaXRpb24gdGhlIHJlY3RzIGFuZCBsYWJlbHMsIHVzaW5nIGEgc2V0IG9mCiAgICAgIC8vIHNjYWxlcy4KICAgICAgZnVuY3Rpb24gcG9zaXRpb25JdGVtcyhjZWxscywgc2NhbGVzKSB7CiAgICAgICAgdmFyIHhTY2FsZSA9IHNjYWxlcy54OwogICAgICAgIHZhciB5U2NhbGUgPSBzY2FsZXMueTsKICAgICAgICB2YXIgZGVwdGggPSBzY2FsZXMuZ2V0RGVwdGg7CgogICAgICAgIGNlbGxzLnNlbGVjdCgicmVjdCIpCiAgICAgICAgICAuYXR0cigid2lkdGgiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHJldHVybiB4U2NhbGUoZC5lbmRUaW1lKSAtIHhTY2FsZShkLnN0YXJ0VGltZSk7CiAgICAgICAgICB9KQogICAgICAgICAgLmF0dHIoImhlaWdodCIsIHlTY2FsZSgwKSAtIHlTY2FsZSgxKSkKICAgICAgICAgIC5hdHRyKCJ4IiwgZnVuY3Rpb24oZCkgeyByZXR1cm4geFNjYWxlKGQuc3RhcnRUaW1lKTsgfSkKICAgICAgICAgIC5hdHRyKCJ5IiwgZnVuY3Rpb24oZCkgeyByZXR1cm4geVNjYWxlKGRlcHRoKGQpKTsgfSk7CgogICAgICAgIGNlbGxzLnNlbGVjdCgidGV4dCIpCiAgICAgICAgICAuYXR0cigieCIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgLy8gVG8gcGxhY2UgdGhlIGxhYmVscywgY2hlY2sgaWYgdGhlcmUncyBlbm91Z2ggc3BhY2UgdG8gZml0IHRoZQogICAgICAgICAgICAvLyBsYWJlbCBwbHVzIHBhZGRpbmcgaW4gdGhlIHJlY3QuIChXZSBhbHJlYWR5IGtub3cgdGhlIGxhYmVsIGZpdHMKICAgICAgICAgICAgLy8gd2l0aG91dCBwYWRkaW5nIGlmIHdlIGdvdCBoZXJlLikKICAgICAgICAgICAgLy8gKiBJZiB0aGVyZSdzIG5vdCBlbm91Z2ggc3BhY2UsIHNpbXBseSBjZW50ZXIgdGhlIGxhYmVsIGluIHRoZQogICAgICAgICAgICAvLyAgIHJlY3QuCiAgICAgICAgICAgIC8vICogSWYgdGhlcmUgaXMgZW5vdWdoIHNwYWNlLCBrZWVwIHRoZSBsYWJlbCB3aXRoaW4gdGhlIHJlY3QsIHdpdGgKICAgICAgICAgICAgLy8gICBwYWRkaW5nLiBUcnkgdG8gbGVmdC1hbGlnbiwga2VlcGluZyB0aGUgbGFiZWwgd2l0aGluIHRoZQogICAgICAgICAgICAvLyAgIHZpZXdpbmcgYXJlYSBpZiBwb3NzaWJsZS4KCiAgICAgICAgICAgIC8vIFBhZGRpbmcgb24gbGVmdCBhbmQgcmlnaHQKICAgICAgICAgICAgdmFyIHBhZCA9IDI7CgogICAgICAgICAgICB2YXIgdGV4dFdpZHRoID0gZ2V0TGFiZWxXaWR0aCh0aGlzLCBkLmxhYmVsLmxlbmd0aCk7CiAgICAgICAgICAgIHZhciByZWN0V2lkdGggPSB4U2NhbGUoZC5lbmRUaW1lKSAtIHhTY2FsZShkLnN0YXJ0VGltZSk7CgogICAgICAgICAgICBpZiAodGV4dFdpZHRoICsgcGFkKjIgPiByZWN0V2lkdGgpIHsKICAgICAgICAgICAgICByZXR1cm4geFNjYWxlKGQuc3RhcnRUaW1lKSArIChyZWN0V2lkdGggLSB0ZXh0V2lkdGgpIC8gMjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gTWF0aC5taW4oCiAgICAgICAgICAgICAgICBNYXRoLm1heCgwLCB4U2NhbGUoZC5zdGFydFRpbWUpKSArIHBhZCwKICAgICAgICAgICAgICAgIHhTY2FsZShkLmVuZFRpbWUpIC0gdGV4dFdpZHRoIC0gcGFkCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC5hdHRyKCJ5IiwgZnVuY3Rpb24oZCkgeyByZXR1cm4geVNjYWxlKGRlcHRoKGQpIC0gMC44KTsgfSk7CgogICAgICAgIHJldHVybiBjZWxsczsKICAgICAgfQoKCiAgICAgIC8vIFJlZHJhdyB3aXRob3V0IGEgdHJhbnNpdGlvbiAocmVndWxhciBwYW5uaW5nIGFuZCB6b29taW5nKQogICAgICBmdW5jdGlvbiByZWRyYXdJbW1lZGlhdGUoKSB7CiAgICAgICAgY2VsbHMgPSBzZWxlY3RBY3RpdmVDZWxscyhzY2FsZXMpOwoKICAgICAgICBjZWxscy5leGl0KCkucmVtb3ZlKCk7CiAgICAgICAgYWRkSXRlbXMoY2VsbHMuZW50ZXIoKSkKICAgICAgICAgIC5jYWxsKGFkZExvY2tIaWdobGlnaHRTZWxlY3Rpb24sIGhpZ2hsaWdodGVyLmN1cnJlbnRMb2NrKCkpCiAgICAgICAgICAuY2FsbChhZGRBY3RpdmVIaWdobGlnaHRTZWxlY3Rpb24sIGhpZ2hsaWdodGVyLmN1cnJlbnRBY3RpdmUoKSk7CiAgICAgICAgY2VsbHMuY2FsbChwb3NpdGlvbkl0ZW1zLCBzY2FsZXMpOwogICAgICAgIGNlbGxzLnNlbGVjdCgndGV4dCcpCiAgICAgICAgICAuY2FsbCh1cGRhdGVMYWJlbFZpc2liaWxpdHkpOwogICAgICAgIHN2Zy5zZWxlY3QoIi54LmF4aXMiKS5jYWxsKHhBeGlzKTsKICAgICAgfQoKICAgICAgLy8gUmVkcmF3IGZvciBkb3VibGUtY2xpY2sgem9vbWluZywgd2hlcmUgdGhlcmUncyBhIHRyYW5zaXRpb24KICAgICAgZnVuY3Rpb24gcmVkcmF3Wm9vbShkdXJhdGlvbikgewogICAgICAgIC8vIEZpZ3VyZSBvdXQgaWYgd2UncmUgem9vbWluZyBpbiBvciBvdXQuIFRoaXMgd2lsbCBkZXRlcm1pbmUgd2hlbiB3ZQogICAgICAgIC8vIHJlY2FsY3VsYXRlIHRoZSBsYWJlbCB2aXNpYmlsaXR5OiBiZWZvcmUgb3IgYWZ0ZXIgdGhlIHRyYW5zaXRpb24uCiAgICAgICAgdmFyIHByZXZFeHRlbnQgPSBwcmV2U2NhbGVzLnguZG9tYWluKClbMV0gLSBwcmV2U2NhbGVzLnguZG9tYWluKClbMF07CiAgICAgICAgdmFyIGN1ckV4dGVudCA9IHNjYWxlcy54LmRvbWFpbigpWzFdIC0gc2NhbGVzLnguZG9tYWluKClbMF07CiAgICAgICAgdmFyIHpvb21JbiA9IGN1ckV4dGVudCA8IHByZXZFeHRlbnQ7CgogICAgICAgIGNlbGxzID0gc2VsZWN0QWN0aXZlQ2VsbHMoc2NhbGVzKTsKCiAgICAgICAgLy8gUGhhc2UgMQogICAgICAgIC8vIEFkZCB0aGUgZW50ZXIgaXRlbXMsIGhpZ2hsaWdodCB0aGVtLCBhbmQgcG9zaXRpb24gdGhlbSB1c2luZyB0aGUKICAgICAgICAvLyBwcmV2aW91cyBzY2FsZXMKICAgICAgICBhZGRJdGVtcyhjZWxscy5lbnRlcigpKQogICAgICAgICAgLmNhbGwoYWRkTG9ja0hpZ2hsaWdodFNlbGVjdGlvbiwgaGlnaGxpZ2h0ZXIuY3VycmVudExvY2soKSkKICAgICAgICAgIC5jYWxsKGFkZEFjdGl2ZUhpZ2hsaWdodFNlbGVjdGlvbiwgaGlnaGxpZ2h0ZXIuY3VycmVudEFjdGl2ZSgpKQogICAgICAgICAgLmNhbGwocG9zaXRpb25JdGVtcywgcHJldlNjYWxlcyk7CgogICAgICAgIC8vIElmIHpvb21pbmcgb3V0LCB1cGRhdGUgbGFiZWwgdmlzaWJpbGl0eS4gVGhpcyB3aWxsIGhpZGUgc29tZSBsYWJlbHMKICAgICAgICAvLyBub3csIGJlZm9yZSB0aGUgdHJhbnNpdGlvbiwgZW5zdXJpbmcgdGhhdCB0aGV5IHdpbGwgbmV2ZXIgYmUgbGFyZ2VyCiAgICAgICAgLy8gdGhhbiB0aGUgYm94LgogICAgICAgIGlmICghem9vbUluKSB7CiAgICAgICAgICBjZWxscy5zZWxlY3QoJ3RleHQnKQogICAgICAgICAgICAuY2FsbCh1cGRhdGVMYWJlbFZpc2liaWxpdHkpOwogICAgICAgIH0KCiAgICAgICAgLy8gUGhhc2UgMgogICAgICAgIC8vIFBvc2l0aW9uIHRoZSB1cGRhdGUgKGFuZCBlbnRlcikgaXRlbXMgdXNpbmcgdGhlIG5ldyBzY2FsZXMKICAgICAgICBjZWxscwogICAgICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbihkdXJhdGlvbikKICAgICAgICAgICAgLmNhbGwocG9zaXRpb25JdGVtcywgc2NhbGVzKTsKCiAgICAgICAgLy8gUG9zaXRpb24gdGhlIGV4aXQgaXRlbXMgdXNpbmcgdGhlIG5ldyBzY2FsZXMKICAgICAgICBjZWxscy5leGl0KCkKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pCiAgICAgICAgICAgIC5jYWxsKHBvc2l0aW9uSXRlbXMsIHNjYWxlcyk7CgogICAgICAgIC8vIFVwZGF0ZSB4IGF4aXMKICAgICAgICBzdmcuc2VsZWN0KCIueC5heGlzIikKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pCiAgICAgICAgICAgIC5jYWxsKHhBeGlzKTsKCiAgICAgICAgLy8gUGhhc2UgMwogICAgICAgIC8vIElmIHpvb21pbmcgaW4sIHVwZGF0ZSBsYWJlbCB2aXNpYmlsaXR5LiBUaGlzIHdpbGwgaGlkZSBzb21lIGxhYmVscwogICAgICAgIC8vIG5vdywgYWZ0ZXIgdGhlIHRyYW5zaXRpb24sIGVuc3VyaW5nIHRoYXQgdGhleSB3aWxsIG5ldmVyIGJlIGxhcmdlcgogICAgICAgIC8vIHRoYW4gdGhlIGJveC4KICAgICAgICBpZiAoem9vbUluKSB7CiAgICAgICAgICBjZWxscy5zZWxlY3QoJ3RleHQnKQogICAgICAgICAgICAudHJhbnNpdGlvbigpLmRlbGF5KGR1cmF0aW9uKQogICAgICAgICAgICAuY2FsbCh1cGRhdGVMYWJlbFZpc2liaWxpdHkpOwogICAgICAgIH0KCiAgICAgICAgLy8gUmVtb3ZlIHRoZSBleGl0IGl0ZW1zCiAgICAgICAgY2VsbHMuZXhpdCgpCiAgICAgICAgICAudHJhbnNpdGlvbigpLmRlbGF5KGR1cmF0aW9uKQogICAgICAgICAgICAucmVtb3ZlKCk7CiAgICAgIH0KCiAgICAgIC8vIFJlZHJhdyB3aGVuIGludGVybmFsIGZ1bmN0aW9ucyBhcmUgaGlkZGVuCiAgICAgIGZ1bmN0aW9uIHJlZHJhd0NvbGxhcHNlKGV4aXREdXJhdGlvbiwgdXBkYXRlRHVyYXRpb24pIHsKICAgICAgICBjZWxscyA9IHNlbGVjdEFjdGl2ZUNlbGxzKHNjYWxlcyk7CgogICAgICAgIC8vIFRoZXJlIGFyZSB0d28gc3Vic2V0cyBvZiB0aGUgZXhpdCBpdGVtczoKICAgICAgICAvLyAgIDEuIFRob3NlIHRoYXQgZXhpdCBiZWNhdXNlIGRlcHRoIGlzIG51bGwuIFRoZXNlIHNob3VsZCBmYWRlIG91dC4KICAgICAgICAvLyAgIDIuIFRob3NlIHRoYXQgZXhpdCBiZWNhdXNlIHRoZXkgbW92ZSBvZmYgc2NyZWVuLiBUaGVzZSBzaG91bGQgd2FpdAogICAgICAgIC8vICAgICAgZm9yIHN1YnNldCAxIHRvIGZhZGUgb3V0LCB0aGVuIG1vdmUgd2l0aCBhIHRyYW5zaXRpb24uCiAgICAgICAgdmFyIGZhZGVPdXRDZWxscyA9IGNlbGxzLmV4aXQoKQogICAgICAgICAgLmZpbHRlcihmdW5jdGlvbihkKSB7IHJldHVybiBzY2FsZXMuZ2V0RGVwdGgoZCkgPT09IG51bGw7IH0pOwogICAgICAgIHZhciBtb3ZlT3V0Q2VsbHMgPSBjZWxscy5leGl0KCkKICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gc2NhbGVzLmdldERlcHRoKGQpICE9PSBudWxsOyB9KTsKCiAgICAgICAgLy8gUGhhc2UgMQogICAgICAgIC8vIEFkZCB0aGUgZW50ZXIgaXRlbXMsIGhpZ2hsaWdodCB0aGVtLCBhbmQgcG9zaXRpb24gdGhlbSB1c2luZyB0aGUKICAgICAgICAvLyBwcmV2aW91cyBzY2FsZXMKICAgICAgICBhZGRJdGVtcyhjZWxscy5lbnRlcigpKQogICAgICAgICAgLmNhbGwoYWRkTG9ja0hpZ2hsaWdodFNlbGVjdGlvbiwgaGlnaGxpZ2h0ZXIuY3VycmVudExvY2soKSkKICAgICAgICAgIC5jYWxsKGFkZEFjdGl2ZUhpZ2hsaWdodFNlbGVjdGlvbiwgaGlnaGxpZ2h0ZXIuY3VycmVudEFjdGl2ZSgpKQogICAgICAgICAgLmNhbGwocG9zaXRpb25JdGVtcywgcHJldlNjYWxlcyk7CgogICAgICAgIGNlbGxzLnNlbGVjdCgndGV4dCcpCiAgICAgICAgICAuY2FsbCh1cGRhdGVMYWJlbFZpc2liaWxpdHkpOwoKICAgICAgICAvLyBQaGFzZSAyCiAgICAgICAgLy8gRmFkZSBvdXQgdGhlIGl0ZW1zIHRoYXQgaGF2ZSBhIG51bGwgZGVwdGgKICAgICAgICBmYWRlT3V0Q2VsbHMKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oZXhpdER1cmF0aW9uKQogICAgICAgICAgICAuc3R5bGUoIm9wYWNpdHkiLCAwKTsKCiAgICAgICAgLy8gUGhhc2UgMwogICAgICAgIC8vIFBvc2l0aW9uIHRoZSB1cGRhdGUgKGFuZCBlbnRlcikgaXRlbXMgdXNpbmcgdGhlIG5ldyBzY2FsZXMKICAgICAgICBjZWxscwogICAgICAgICAgLnRyYW5zaXRpb24oKS5kZWxheShleGl0RHVyYXRpb24pLmR1cmF0aW9uKHVwZGF0ZUR1cmF0aW9uKQogICAgICAgICAgICAuY2FsbChwb3NpdGlvbkl0ZW1zLCBzY2FsZXMpOwoKICAgICAgICAvLyBQb3NpdGlvbiB0aGUgZXhpdCBpdGVtcyB0aGF0IG1vdmUgb3V0LCB1c2luZyB0aGUgbmV3IHNjYWxlcwogICAgICAgIG1vdmVPdXRDZWxscwogICAgICAgICAgLnRyYW5zaXRpb24oKS5kZWxheShleGl0RHVyYXRpb24pLmR1cmF0aW9uKHVwZGF0ZUR1cmF0aW9uKQogICAgICAgICAgICAuY2FsbChwb3NpdGlvbkl0ZW1zLCBzY2FsZXMpOwoKICAgICAgICAvLyBQaGFzZSA0CiAgICAgICAgLy8gUmVtb3ZlIGFsbCB0aGUgZXhpdCBpdGVtcwogICAgICAgIGNlbGxzLmV4aXQoKQogICAgICAgICAgLnRyYW5zaXRpb24oKS5kZWxheShleGl0RHVyYXRpb24gKyB1cGRhdGVEdXJhdGlvbikKICAgICAgICAgIC5yZW1vdmUoKTsKICAgICAgfQoKICAgICAgLy8gUmVkcmF3IHdoZW4gaW50ZXJuYWwgZnVuY3Rpb25zIGFyZSB1bi1oaWRkZW4KICAgICAgZnVuY3Rpb24gcmVkcmF3VW5jb2xsYXBzZSh1cGRhdGVEdXJhdGlvbiwgZW50ZXJEdXJhdGlvbikgewogICAgICAgIGNlbGxzID0gc2VsZWN0QWN0aXZlQ2VsbHMoc2NhbGVzKTsKCiAgICAgICAgdmFyIGVudGVyQ2VsbHMgPSBhZGRJdGVtcyhjZWxscy5lbnRlcigpKTsKICAgICAgICAvLyBUaGVyZSBhcmUgdHdvIHN1YnNldHMgb2YgdGhlIGVudGVyIGl0ZW1zOgogICAgICAgIC8vICAgMS4gVGhvc2UgdGhhdCBlbnRlciBiZWNhdXNlIHRoZXkgbW92ZSBvbiBzY3JlZW4gKGJ1dCB0aGUgcHJldmlvdXMKICAgICAgICAvLyAgICAgIGRlcHRoIHdhcyBub3QgbnVsbCkuIFRoZXNlIHNob3VsZCBtb3ZlIHdpdGggYSB0cmFuc2l0aW9uLgogICAgICAgIC8vICAgMi4gVGhvc2UgdGhhdCBlbnRlciBiZWNhdXNlIHRoZSBwcmV2aW91cyBkZXB0aCB3YXMgbnVsbC4gVGhlc2UKICAgICAgICAvLyAgICAgIHNob3VsZCB3YWl0IGZvciBzdWJzZXQgMSB0byBtb3ZlLCB0aGVuIGZhZGUgaW4uCiAgICAgICAgdmFyIG1vdmVJbkNlbGxzID0gZW50ZXJDZWxscwogICAgICAgICAgLmZpbHRlcihmdW5jdGlvbihkKSB7IHJldHVybiBwcmV2U2NhbGVzLmdldERlcHRoKGQpICE9PSBudWxsOyB9KTsKICAgICAgICB2YXIgZmFkZUluQ2VsbHMgPSBlbnRlckNlbGxzCiAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHByZXZTY2FsZXMuZ2V0RGVwdGgoZCkgPT09IG51bGw7IH0pOwoKICAgICAgICAvLyBQaGFzZSAxCiAgICAgICAgLy8gSGlnaGxpZ2h0IGFuZCBwb3NpdGlvbiB0aGUgbW92ZS1pbiBpdGVtcyB3aXRoIHRoZSBvbGQgc2NhbGVzCiAgICAgICAgbW92ZUluQ2VsbHMKICAgICAgICAgIC5jYWxsKGFkZExvY2tIaWdobGlnaHRTZWxlY3Rpb24sIGhpZ2hsaWdodGVyLmN1cnJlbnRMb2NrKCkpCiAgICAgICAgICAuY2FsbChhZGRBY3RpdmVIaWdobGlnaHRTZWxlY3Rpb24sIGhpZ2hsaWdodGVyLmN1cnJlbnRBY3RpdmUoKSkKICAgICAgICAgIC5jYWxsKHBvc2l0aW9uSXRlbXMsIHByZXZTY2FsZXMpOwoKICAgICAgICBjZWxscy5zZWxlY3QoJ3RleHQnKQogICAgICAgICAgLmNhbGwodXBkYXRlTGFiZWxWaXNpYmlsaXR5KTsKCiAgICAgICAgLy8gUGhhc2UgMgogICAgICAgIC8vIFBvc2l0aW9uIHRoZSBtb3ZlLWluLCB1cGRhdGUsIGFuZCBleGl0IGl0ZW1zIHdpdGggYSB0cmFuc2l0aW9uCiAgICAgICAgbW92ZUluQ2VsbHMKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24odXBkYXRlRHVyYXRpb24pCiAgICAgICAgICAgIC5jYWxsKHBvc2l0aW9uSXRlbXMsIHNjYWxlcyk7CiAgICAgICAgY2VsbHMKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24odXBkYXRlRHVyYXRpb24pCiAgICAgICAgICAgIC5jYWxsKHBvc2l0aW9uSXRlbXMsIHNjYWxlcyk7CiAgICAgICAgY2VsbHMuZXhpdCgpCiAgICAgICAgICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKHVwZGF0ZUR1cmF0aW9uKQogICAgICAgICAgICAuY2FsbChwb3NpdGlvbkl0ZW1zLCBzY2FsZXMpOwoKICAgICAgICAvLyBQaGFzZSAzCiAgICAgICAgLy8gSGlnaGxpZ2h0IGFuZCBwb3NpdGlvbiB0aGUgZmFkZS1pbiBpdGVtcywgdGhlbiBmYWRlIGluCiAgICAgICAgZmFkZUluQ2VsbHMKICAgICAgICAgICAgLmNhbGwoYWRkTG9ja0hpZ2hsaWdodFNlbGVjdGlvbiwgaGlnaGxpZ2h0ZXIuY3VycmVudExvY2soKSkKICAgICAgICAgICAgLmNhbGwoYWRkQWN0aXZlSGlnaGxpZ2h0U2VsZWN0aW9uLCBoaWdobGlnaHRlci5jdXJyZW50QWN0aXZlKCkpCiAgICAgICAgICAgIC5jYWxsKHBvc2l0aW9uSXRlbXMsIHNjYWxlcykKICAgICAgICAgICAgLnN0eWxlKCJvcGFjaXR5IiwgMCkKICAgICAgICAgIC50cmFuc2l0aW9uKCkuZGVsYXkodXBkYXRlRHVyYXRpb24pLmR1cmF0aW9uKGVudGVyRHVyYXRpb24pCiAgICAgICAgICAgIC5zdHlsZSgib3BhY2l0eSIsIDEpOwoKICAgICAgICAvLyBQaGFzZSA0CiAgICAgICAgLy8gUmVtb3ZlIHRoZSBleGl0IGl0ZW1zCiAgICAgICAgY2VsbHMuZXhpdCgpCiAgICAgICAgICAudHJhbnNpdGlvbigpLmRlbGF5KHVwZGF0ZUR1cmF0aW9uICsgZW50ZXJEdXJhdGlvbikKICAgICAgICAgICAgLnJlbW92ZSgpOwogICAgICB9CgoKICAgICAgLy8gQ2FsY3VsYXRlIHdoZXRoZXIgdG8gZGlzcGxheSBsYWJlbCBpbiBlYWNoIGNlbGwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICAgICAgLy8gRmluZGluZyB0aGUgZGltZW5zaW9ucyBvZiBTVkcgZWxlbWVudHMgaXMgZXhwZW5zaXZlLiBXZSdsbCByZWR1Y2UgdGhlCiAgICAgIC8vIGNhbGxzIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIGJ5IGNhY2hpbmcgdGhlIGRpbWVuc2lvbnMuCgogICAgICAvLyBDYWNoZSB0aGUgd2lkdGggb2YgbGFiZWxzLiBUaGlzIGlzIGEgbG9va3VwIHRhYmxlIHdoaWNoLCBnaXZlbiB0aGUKICAgICAgLy8gbnVtYmVyIG9mIGNoYXJhY3RlcnMsIGdpdmVzIHRoZSBudW1iZXIgb2YgcGl4ZWxzLiBUaGUgbGFiZWwgd2lkdGgKICAgICAgLy8gbmV2ZXIgY2hhbmdlcywgc28gd2UgY2FuIGtlZXAgaXQgb3V0c2lkZSBvZiB1cGRhdGVMYWJlbFZpc2liaWxpdHkoKS4KICAgICAgdmFyIGxhYmVsV2lkdGhUYWJsZSA9IHt9OwogICAgICBmdW5jdGlvbiBnZXRMYWJlbFdpZHRoKGVsLCBuY2hhcikgewogICAgICAgIC8vIEFkZCBlbnRyeSBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QKICAgICAgICBpZiAobGFiZWxXaWR0aFRhYmxlW25jaGFyXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAvLyBJZiB0aGUgdGV4dCBpc24ndCBkaXNwbGF5ZWQsIHRoZW4gd2UgY2FuJ3QgZ2V0IGl0cyB3aWR0aC4gTWFrZQogICAgICAgICAgLy8gc3VyZSBpdCdzIHZpc2libGUsIGdldCB0aGUgd2lkdGgsIGFuZCB0aGVuIHJlc3RvcmUgb3JpZ2luYWwKICAgICAgICAgIC8vIGRpc3BsYXkgc3RhdGUuCiAgICAgICAgICB2YXIgb2xkRGlzcGxheSA9IGVsLnN0eWxlLmRpc3BsYXk7CiAgICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gImlubGluZSI7CiAgICAgICAgICBsYWJlbFdpZHRoVGFibGVbbmNoYXJdID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7CiAgICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gb2xkRGlzcGxheTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGxhYmVsV2lkdGhUYWJsZVtuY2hhcl07CiAgICAgIH0KCiAgICAgIC8vIFNob3cgbGFiZWxzIHRoYXQgZml0IGluIHRoZSBjb3JyZXNwb25kaW5nIHJlY3RhbmdsZSwgYW5kIGhpZGUgb3RoZXJzLgogICAgICBmdW5jdGlvbiB1cGRhdGVMYWJlbFZpc2liaWxpdHkobGFiZWxzKSB7CiAgICAgICAgLy8gQ2FjaGUgdGhlIHdpZHRoIG9mIHJlY3RzLiBUaGlzIGlzIGEgbG9va3VwIHRhYmxlIHdoaWNoLCBnaXZlbiB0aGUKICAgICAgICAvLyB0aW1lc3BhbiAod2lkdGggaW4gZGF0YSksIGdpdmVzIHRoZSBudW1iZXIgb2YgcGl4ZWxzLiBUaGUgd2lkdGggb2YKICAgICAgICAvLyByZWN0cyBjaGFuZ2VzIHdpdGggdGhlIHggc2NhbGUsIHNvIHdlIGhhdmUgdG8gcmVidWlsZCB0aGUgdGFibGUgZWFjaAogICAgICAgIC8vIHRpbWUgdGhlIHNjYWxlIGNoYW5nZXMuCiAgICAgICAgdmFyIHJlY3RXaWR0aFRhYmxlID0ge307CiAgICAgICAgdmFyIHgwID0gc2NhbGVzLngoMCk7CiAgICAgICAgZnVuY3Rpb24gZ2V0UmVjdFdpZHRoKHRpbWUpIHsKICAgICAgICAgIC8vIEFkZCBlbnRyeSBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QKICAgICAgICAgIGlmIChyZWN0V2lkdGhUYWJsZVt0aW1lXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHJlY3RXaWR0aFRhYmxlW3RpbWVdID0gc2NhbGVzLngodGltZSkgLSB4MDsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiByZWN0V2lkdGhUYWJsZVt0aW1lXTsKICAgICAgICB9CgogICAgICAgIC8vIE5vdyBjYWxjdWxhdGUgdGV4dCBhbmQgcmVjdCB3aWR0aCBmb3IgZWFjaCBjZWxsLgogICAgICAgIGxhYmVscy5zdHlsZSgiZGlzcGxheSIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIHZhciBsYWJlbFdpZHRoID0gZ2V0TGFiZWxXaWR0aCh0aGlzLCBkLmxhYmVsLmxlbmd0aCk7CiAgICAgICAgICB2YXIgYm94V2lkdGggPSBnZXRSZWN0V2lkdGgoZC5lbmRUaW1lIC0gZC5zdGFydFRpbWUpOwoKICAgICAgICAgIHJldHVybiAobGFiZWxXaWR0aCA8PSBib3hXaWR0aCkgPyAiIiA6ICJub25lIjsKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIGxhYmVsczsKICAgICAgfQoKCiAgICAgIGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICAgIHVwZGF0ZUNvbnRhaW5lclNpemUoKTsKCiAgICAgICAgc2NhbGVzLngucmFuZ2UoWzAsIGRpbXMud2lkdGhdKTsKICAgICAgICB6b29tLngoc2NhbGVzLngpOwoKICAgICAgICAvLyBQcmVzZXJ2ZSBkaXN0YW5jZSBmcm9tIGJvdHRvbSwgaW5zdGVhZCBvZiBmcm9tIHRvcCAod2hpY2ggaXMgdGhlCiAgICAgICAgLy8gZGVmYXVsdCBiZWhhdmlvcikuCiAgICAgICAgc2NhbGVzLnkucmFuZ2UoWwogICAgICAgICAgZGltcy5oZWlnaHQsCiAgICAgICAgICBkaW1zLmhlaWdodCAtIChkb21haW5zLnlbMV0gLSBkb21haW5zLnlbMF0pICogc3RhY2tIZWlnaHQKICAgICAgICBdKTsKICAgICAgICByZWRyYXdJbW1lZGlhdGUoKTsKICAgICAgfQoKICAgICAgLy8gQXR0YWNoIG1vdXNlIGV2ZW50IGhhbmRsZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICB2YXIgZHJhZ2dpbmcgPSBmYWxzZTsKCiAgICAgIGZ1bmN0aW9uIGFkZE1vdXNlRXZlbnRIYW5kbGVycyhjZWxscykgewogICAgICAgIGNlbGxzCiAgICAgICAgICAub24oIm1vdXNldXAiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIGlmIChkcmFnZ2luZykgcmV0dXJuOwoKICAgICAgICAgICAgLy8gSWYgaXQgd2Fzbid0IGEgZHJhZywgdHJlYXQgaXQgYXMgYSBjbGljawogICAgICAgICAgICB2aXMuaW5mb0JveC5zaG93KGQpOwogICAgICAgICAgICBoaWdobGlnaHRlci5jbGljayhkKTsKICAgICAgICAgICAgbm90aWZ5U291cmNlRmlsZU1lc3NhZ2UoZCwgInNlbGVjdCIpOwogICAgICAgICAgfSkKICAgICAgICAgIC5vbigibW91c2VvdmVyIiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICBpZiAoZHJhZ2dpbmcpIHJldHVybjsKCiAgICAgICAgICAgIC8vIElmIG5vIGxhYmVsIGN1cnJlbnRseSBzaG93biwgZGlzcGxheSBhIHRvb2x0aXAKICAgICAgICAgICAgdmFyIGxhYmVsID0gdGhpcy5xdWVyeVNlbGVjdG9yKCIucHJvZnZpcy1sYWJlbCIpOwogICAgICAgICAgICBpZiAobGFiZWwuc3R5bGUuZGlzcGxheSA9PT0gIm5vbmUiKSB7CiAgICAgICAgICAgICAgdmFyIGJveCA9IHRoaXMuZ2V0QkJveCgpOwogICAgICAgICAgICAgIHNob3dUb29sdGlwKAogICAgICAgICAgICAgICAgZC5sYWJlbCwKICAgICAgICAgICAgICAgIGJveC54ICsgYm94LndpZHRoIC8gMiwKICAgICAgICAgICAgICAgIGJveC55IC0gYm94LmhlaWdodAogICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghaGlnaGxpZ2h0ZXIuaXNMb2NrZWQoKSkgewogICAgICAgICAgICAgIHZpcy5pbmZvQm94LnNob3coZCk7CiAgICAgICAgICAgICAgaGlnaGxpZ2h0ZXIuaG92ZXIoZCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgICAub24oIm1vdXNlb3V0IiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICBpZiAoZHJhZ2dpbmcpIHJldHVybjsKCiAgICAgICAgICAgIGhpZGVUb29sdGlwKCk7CgogICAgICAgICAgICBpZiAoIWhpZ2hsaWdodGVyLmlzTG9ja2VkKCkpIHsKICAgICAgICAgICAgICB2aXMuaW5mb0JveC5oaWRlKCk7CiAgICAgICAgICAgICAgaGlnaGxpZ2h0ZXIuaG92ZXIobnVsbCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgICAub24oImRibGNsaWNrLnpvb21jZWxsIiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICAvLyBXaGVuIGEgY2VsbCBpcyBkb3VibGUtY2xpY2tlZCwgem9vbSB4IHRvIHRoYXQgY2VsbCdzIHdpZHRoLgogICAgICAgICAgICBzYXZlUHJldlNjYWxlcygpOwoKICAgICAgICAgICAgc2NhbGVzLnguZG9tYWluKGV4cGFuZFJhbmdlKFtkLnN0YXJ0VGltZSwgZC5lbmRUaW1lXSwgem9vbU1hcmdpbikpOwogICAgICAgICAgICB6b29tLngoc2NhbGVzLngpOwoKICAgICAgICAgICAgcmVkcmF3Wm9vbSgyNTApOwoKICAgICAgICAgICAgbm90aWZ5U291cmNlRmlsZU1lc3NhZ2UoZCwgIm9wZW4iKTsKICAgICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gY2VsbHM7CiAgICAgIH0KCiAgICAgIC8vIFRvb2x0aXAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgZnVuY3Rpb24gc2hvd1Rvb2x0aXAobGFiZWwsIHgsIHkpIHsKICAgICAgICB2YXIgdG9vbHRpcCA9IGNvbnRhaW5lci5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJwcm9mdmlzLXRvb2x0aXAiKTsKICAgICAgICB2YXIgdG9vbHRpcFJlY3QgPSB0b29sdGlwLmFwcGVuZCgicmVjdCIpOwogICAgICAgIHZhciB0b29sdGlwTGFiZWwgPSB0b29sdGlwLmFwcGVuZCgidGV4dCIpCiAgICAgICAgICAudGV4dChsYWJlbCkKICAgICAgICAgIC5hdHRyKCJ4IiwgeCkKICAgICAgICAgIC5hdHRyKCJ5IiwgeSArIHN0YWNrSGVpZ2h0ICogMC4yKTsgLy8gU2hpZnQgZG93biBzbGlnaHRseSBmb3IgYmFzZWxpbmUKCiAgICAgICAgLy8gQWRkIGJveCBhcm91bmQgbGFiZWwKICAgICAgICB2YXIgbGFiZWxCb3ggPSB0b29sdGlwTGFiZWwubm9kZSgpLmdldEJCb3goKTsKICAgICAgICB2YXIgcmVjdFdpZHRoID0gbGFiZWxCb3gud2lkdGggKyAxMDsKICAgICAgICB2YXIgcmVjdEhlaWdodCA9IGxhYmVsQm94LmhlaWdodCArIDQ7CiAgICAgICAgdG9vbHRpcFJlY3QKICAgICAgICAgIC5hdHRyKCJ3aWR0aCIsIHJlY3RXaWR0aCkKICAgICAgICAgIC5hdHRyKCJoZWlnaHQiLCByZWN0SGVpZ2h0KQogICAgICAgICAgLmF0dHIoIngiLCB4IC0gcmVjdFdpZHRoIC8gMikKICAgICAgICAgIC5hdHRyKCJ5IiwgeSAtIHJlY3RIZWlnaHQgLyAyKQogICAgICAgICAgLmF0dHIoInJ4IiwgNCkgICAgLy8gUm91bmRlZCBjb3JuZXJzIC0tIGNhbid0IHNldCB0aGlzIGluIENTUwogICAgICAgICAgLmF0dHIoInJ5IiwgNCk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGhpZGVUb29sdGlwKCkgewogICAgICAgIGNvbnRhaW5lci5zZWxlY3QoImcucHJvZnZpcy10b29sdGlwIikucmVtb3ZlKCk7CiAgICAgIH0KCgogICAgICAvLyBIaWdobGlnaHRpbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogICAgICBmdW5jdGlvbiBhZGRMb2NrSGlnaGxpZ2h0KGQpIHsKICAgICAgICBhZGRMb2NrSGlnaGxpZ2h0U2VsZWN0aW9uKGNlbGxzLCBkKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2xlYXJMb2NrSGlnaGxpZ2h0KCkgewogICAgICAgIGNlbGxzCiAgICAgICAgICAuZmlsdGVyKCIubG9ja2VkIikKICAgICAgICAgIC5jbGFzc2VkKHsgbG9ja2VkOiBmYWxzZSB9KTsKICAgICAgfQoKCiAgICAgIGZ1bmN0aW9uIGFkZEFjdGl2ZUhpZ2hsaWdodChkKSB7CiAgICAgICAgaWYgKCFkKSByZXR1cm47CiAgICAgICAgYWRkQWN0aXZlSGlnaGxpZ2h0U2VsZWN0aW9uKGNlbGxzLCBkKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2xlYXJBY3RpdmVIaWdobGlnaHQoKSB7CiAgICAgICAgY2VsbHMKICAgICAgICAgIC5maWx0ZXIoIi5hY3RpdmUiKQogICAgICAgICAgLmNsYXNzZWQoeyBhY3RpdmU6IGZhbHNlIH0pOwogICAgICB9CgogICAgICAvLyBUaGVzZSBhcmUgdmVyc2lvbnMgb2YgYWRkTG9ja0hpZ2hsaWdodCBhbmQgYWRkQWN0aXZlSGlnaGxpZ2h0IHdoaWNoCiAgICAgIC8vIGFyZSBvbmx5IGludGVybmFsbHkgdmlzaWJsZS4gSXQgbXVzdCBiZSBwYXNzZWQgYSBzZWxlY3Rpb24gb2YgY2VsbHMgdG8KICAgICAgLy8gcGVyZm9ybSB0aGUgaGlnaGxpZ2h0aW5nIG9uLiBUaGlzIGNhbiBiZSBtb3JlIGVmZmljaWVudCBiZWNhdXNlIGl0IGNhbgogICAgICAvLyBvcGVyYXRlIG9uIGp1c3QgYW4gZW50ZXIgc2VsZWN0aW9uIGluc3RlYWQgb2YgYWxsIGNlbGxzLgogICAgICBmdW5jdGlvbiBhZGRMb2NrSGlnaGxpZ2h0U2VsZWN0aW9uKHNlbGVjdGlvbiwgZCkgewogICAgICAgIGlmICghZCkgcmV0dXJuOwoKICAgICAgICB2YXIgdGFyZ2V0ID0gZDsKICAgICAgICBzZWxlY3Rpb24KICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gZCA9PT0gdGFyZ2V0OyB9ICkKICAgICAgICAgIC5jbGFzc2VkKHsgbG9ja2VkOiB0cnVlIH0pCiAgICAgICAgICAuY2FsbChtb3ZlVG9Gcm9udCk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGFkZEFjdGl2ZUhpZ2hsaWdodFNlbGVjdGlvbihzZWxlY3Rpb24sIGQpIHsKICAgICAgICBpZiAoIWQpIHJldHVybjsKCiAgICAgICAgdmFyIHRhcmdldCA9IGQ7CiAgICAgICAgaWYgKHRhcmdldC5maWxlbmFtZSAmJiB0YXJnZXQubGluZW51bSkgewogICAgICAgICAgc2VsZWN0aW9uCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgewogICAgICAgICAgICAgIC8vIENoZWNrIGZvciBmaWxlbmFtZSBhbmQgbGluZW51bSBtYXRjaCwgYW5kIGlmIHByb3ZpZGVkLCBhIGxhYmVsIG1hdGNoLgogICAgICAgICAgICAgIHZhciBtYXRjaCA9IGQuZmlsZW5hbWUgPT09IHRhcmdldC5maWxlbmFtZSAmJgogICAgICAgICAgICAgICAgICAgICAgICAgIGQubGluZW51bSA9PT0gdGFyZ2V0LmxpbmVudW07CiAgICAgICAgICAgICAgaWYgKCEhdGFyZ2V0LmxhYmVsKSB7CiAgICAgICAgICAgICAgICBtYXRjaCA9IG1hdGNoICYmIChkLmxhYmVsID09PSB0YXJnZXQubGFiZWwpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gbWF0Y2g7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jbGFzc2VkKHsgYWN0aXZlOiB0cnVlIH0pOwoKICAgICAgICB9IGVsc2UgaWYgKHRhcmdldC5sYWJlbCkgewogICAgICAgICAgLy8gRG9uJ3QgaGlnaGxpZ2h0IGJsb2NrcyBmb3IgdGhlc2UgbGFiZWxzCiAgICAgICAgICB2YXIgZXhjbHVzaW9ucyA9IFsiPEFub255bW91cz4iLCAiRlVOIl07CiAgICAgICAgICBpZiAoZXhjbHVzaW9ucy5zb21lKGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHRhcmdldC5sYWJlbCA9PT0geDsgfSkpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQoKICAgICAgICAgIC8vIElmIHdlIG9ubHkgaGF2ZSB0aGUgbGFiZWwsIHNlYXJjaCBmb3IgY2VsbHMgdGhhdCBtYXRjaCwgYnV0IG1ha2Ugc3VyZQogICAgICAgICAgLy8gdG8gbm90IHNlbGVjdCBvbmVzIHRoYXQgaGF2ZSBhIGZpbGVuYW1lIGFuZCBsaW5lbnVtLgogICAgICAgICAgc2VsZWN0aW9uCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgewogICAgICAgICAgICAgIHJldHVybiBkLmxhYmVsID09PSB0YXJnZXQubGFiZWwgJiYKICAgICAgICAgICAgICAgICAgICAgZC5maWxlbmFtZSA9PT0gbnVsbCAmJgogICAgICAgICAgICAgICAgICAgICBkLmxpbmVudW0gPT09IG51bGw7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jbGFzc2VkKHsgYWN0aXZlOiB0cnVlIH0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8gTW92ZSBhIEQzIHNlbGVjdGlvbiB0byBmcm9udC4gSWYgdGhpcyBpcyBjYWxsZWQgb24gYSBzZWxlY3Rpb24sIHRoYXQKICAgICAgLy8gc2VsZWN0aW9uIHNob3VsZCBoYXZlIGJlZW4gY3JlYXRlZCB3aXRoIGEgZGF0YSBpbmRleGluZyBmdW5jdGlvbiAoZS5nLgogICAgICAvLyBkYXRhKGRhdGEsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIC4uLiB9KSkuIE90aGVyd2lzZSwgdGhlIHdyb25nIG9iamVjdAogICAgICAvLyBtYXkgYmUgbW92ZWQgdG8gdGhlIGZyb250LgogICAgICBmdW5jdGlvbiBtb3ZlVG9Gcm9udChzZWxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gc2VsZWN0aW9uLmVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgICB0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcyk7CiAgICAgICAgfSk7CiAgICAgIH0KCgogICAgICAvLyBQYW5uaW5nIGFuZCB6b29taW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC8vIEZvciBwYW5uaW5nIGFuZCB6b29taW5nIHgsIGQzLmJlaGF2aW9yLnpvb20gZG9lcyBtb3N0IG9mIHdoYXQgd2Ugd2FudAogICAgICAvLyBhdXRvbWF0aWNhbGx5LiBGb3IgcGFubmluZyB5LCB3ZSBjYW4ndCB1c2UgZDMuYmVoYXZpb3Iuem9vbSBiZWN1YXNlIGl0CiAgICAgIC8vIHdpbGwgYWxzbyBhdXRvbWF0aWNhbGx5IGFkZCB6b29taW5nLCB3aGljaCB3ZSBkb24ndCB3YW50LiBJbnN0ZWFkLCB3ZQogICAgICAvLyBuZWVkIHRvIHVzZSBkMy5iZWhhdmlvci5kcmFnIGFuZCBzZXQgdGhlIHkgZG9tYWluIGFwcHJvcHJpYXRlbHkuCiAgICAgIHZhciBkcmFnID0gZDMuYmVoYXZpb3IuZHJhZygpCiAgICAgICAgLm9uKCJkcmFnIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICBkcmFnZ2luZyA9IHRydWU7CiAgICAgICAgICB2YXIgeSA9IHNjYWxlcy55OwogICAgICAgICAgdmFyIHlkb20gPSB5LmRvbWFpbigpOwogICAgICAgICAgdmFyIHlkaWZmID0geS5pbnZlcnQoZDMuZXZlbnQuZHkpIC0geS5pbnZlcnQoMCk7CiAgICAgICAgICB5LmRvbWFpbihbeWRvbVswXSAtIHlkaWZmLCB5ZG9tWzFdIC0geWRpZmZdKTsKICAgICAgICB9KTsKCgogICAgICAvLyBGb3IgbW91c2V3aGVlbCB6b29taW5nLCB3ZSBuZWVkIHRvIGxpbWl0IHpvb20gYW1vdW50LiBUaGlzIGlzIG5lZWRlZAogICAgICAvLyBiZWNhdXNlIGluIEZpcmVmb3gsIHpvb20gaW5jcmVtZW50cyBhcmUgdG9vIGJpZy4gVG8gZG8gdGhpcywgd2UgbGltaXQKICAgICAgLy8gc2NhbGVFeHRlbnQgYmVmb3JlIHRoZSBmaXJzdCB6b29tIGV2ZW50LCBhbmQgYWZ0ZXIgZWFjaCBzdWJzZXF1ZW50CiAgICAgIC8vIG9uZS4KICAgICAgLy8KICAgICAgLy8gV2hlbiB6b29taW5nIG91dCwgdGhlcmUncyBhbiBhZGRpdGlvbmFsIGxpbWl0OiBuZXZlciB6b29tIG91dCBwYXN0CiAgICAgIC8vIHRoZSBvcmlnaW5hbCB6b29tIHNwYW4uIFRoZSByZWFzb24gaXQncyBuZWNlc3NhcnkgdG8gY2FsY3VsYXRlIHRoaXMKICAgICAgLy8gZWFjaCB0aW1lLCBpbnN0ZWFkIG9mIHNpbXBseSBzZXR0aW5nIHRoZSBzY2FsZUV4dGVudCgpIHNvIHRoYXQgdGhlCiAgICAgIC8vIGxvd2VyIGJvdW5kIGlzIDEsIGlzIGJlY2F1c2Ugb3RoZXIgem9vbSBldmVudHMgKGxpa2UKICAgICAgLy8gZGJsY2xpY2suem9vbWNlbGwpIGFyZSBhYmxlIHRvIGNoYW5nZSB0aGUgZG9tYWluIG9mIHNjYWxlcy54LCB3aXRob3V0CiAgICAgIC8vIGNoYW5naW5nIHRoZSB2YWx1ZSBvZiB6b29tLnNjYWxlKCkuIFRoaXMgbWVhbnMgdGhhdCB0aGUgcmVsYXRpb25zaGlwCiAgICAgIC8vIGJldHdlZW4gdGhlIHpvb20uc2NhbGUoKSBkb2VzIG5vdCBoYXZlIGEgZml4ZWQgbGluZWFyIHJlbGF0aW9uc2hpcCB0bwogICAgICAvLyB0aGUgc3BhbiBvZiBzY2FsZXMueCwgYW5kIHdlIGhhdmUgdG8gcmVjYWxjdWxhdGUgaXQuCiAgICAgIHZhciBtYXhab29tUGVyU3RlcCA9IDEuMTsKCiAgICAgIGZ1bmN0aW9uIHpvb21PdXRMaW1pdCgpIHsKICAgICAgICB2YXIgc3BhbiA9IHNjYWxlcy54LmRvbWFpbigpWzFdIC0gc2NhbGVzLnguZG9tYWluKClbMF07CiAgICAgICAgdmFyIHN0YXJ0U3BhbiA9IGRvbWFpbnMueFsxXSAtIGRvbWFpbnMueFswXTsKICAgICAgICByZXR1cm4gTWF0aC5taW4obWF4Wm9vbVBlclN0ZXAsIHN0YXJ0U3Bhbi9zcGFuKTsKICAgICAgfQoKICAgICAgdmFyIHpvb20gPSBkMy5iZWhhdmlvci56b29tKCkKICAgICAgICAueChzY2FsZXMueCkKICAgICAgICAub24oInpvb21zdGFydCIsIGZ1bmN0aW9uKCkgewogICAgICAgICAgem9vbS5zY2FsZUV4dGVudChbem9vbS5zY2FsZSgpIC8gem9vbU91dExpbWl0KCksIHpvb20uc2NhbGUoKSAqIG1heFpvb21QZXJTdGVwXSk7CiAgICAgICAgfSkKICAgICAgICAub24oInpvb20iLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICByZWRyYXdJbW1lZGlhdGUoKTsKICAgICAgICAgIHpvb20uc2NhbGVFeHRlbnQoW3pvb20uc2NhbGUoKSAvIHpvb21PdXRMaW1pdCgpLCB6b29tLnNjYWxlKCkgKiBtYXhab29tUGVyU3RlcF0pOwogICAgICAgIH0pOwoKICAgICAgLy8gUmVnaXN0ZXIgZHJhZyBiZWZvcmUgem9vbWluZywgYmVjYXVzZSB3ZSBuZWVkIHRoZSBkcmFnIHRvIHNldCB0aGUgeQogICAgICAvLyBzY2FsZSBiZWZvcmUgdGhlIHpvb20gdHJpZ2dlcnMgYSByZWRyYXcuCiAgICAgIHN2ZwogICAgICAgIC5vbigibW91c2V1cCIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgIGRyYWdnaW5nID0gZmFsc2U7CiAgICAgICAgfSkKICAgICAgICAuY2FsbChkcmFnKTsKCiAgICAgIC8vIFVubG9jayBzZWxlY3Rpb24gd2hlbiBiYWNrZ3JvdW5kIGlzIGNsaWNrZWQsIGFuZCB6b29tIG91dCB3aGVuCiAgICAgIC8vIGJhY2tncm91bmQgaXMgZG91YmxlLWNsaWNrZWQuCiAgICAgIGJhY2tncm91bmRSZWN0CiAgICAgICAgLm9uKCJtb3VzZXVwIiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgaWYgKGRyYWdnaW5nKSByZXR1cm47CgogICAgICAgICAgLy8gSWYgaXQgd2Fzbid0IGEgZHJhZywgaGlkZSBpbmZvIGJveCBhbmQgdW5sb2NrLgogICAgICAgICAgdmlzLmluZm9Cb3guaGlkZSgpOwogICAgICAgICAgaGlnaGxpZ2h0ZXIuY2xpY2sobnVsbCk7CiAgICAgICAgfSkKICAgICAgICAub24oImRibGNsaWNrLnpvb21iYWNrZ3JvdW5kIiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICBzYXZlUHJldlNjYWxlcygpOwoKICAgICAgICAgIHNjYWxlcy54LmRvbWFpbihkb21haW5zLngpOwogICAgICAgICAgem9vbS54KHNjYWxlcy54KTsKCiAgICAgICAgICByZWRyYXdab29tKDI1MCk7CiAgICAgICAgfSk7CgoKICAgICAgdmFyIHpvb21FbmFibGVkID0gZmFsc2U7CiAgICAgIGZ1bmN0aW9uIGRpc2FibGVab29tKCkgewogICAgICAgIGlmICh6b29tRW5hYmxlZCkgewogICAgICAgICAgc3ZnLm9uKCIuem9vbSIsIG51bGwpOwogICAgICAgICAgem9vbUVuYWJsZWQgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgICAgZnVuY3Rpb24gZW5hYmxlWm9vbSgpIHsKICAgICAgICBpZiAoIXpvb21FbmFibGVkKSB7CiAgICAgICAgICBzdmcKICAgICAgICAgICAgLmNhbGwoem9vbSkKICAgICAgICAgICAgLm9uKCJkYmxjbGljay56b29tIiwgbnVsbCk7IC8vIERpc2FibGUgem9vbSdzIGJ1aWx0LWluIGRvdWJsZS1jbGljayBiZWhhdmlvcgogICAgICAgICAgem9vbUVuYWJsZWQgPSB0cnVlOwogICAgICAgIH0KICAgICAgfQogICAgICBlbmFibGVab29tKCk7CgogICAgICBvblJlc2l6ZSgpOwoKICAgICAgcmV0dXJuIHsKICAgICAgICBlbDogZWwsCiAgICAgICAgb25SZXNpemU6IG9uUmVzaXplLAogICAgICAgIG9uVXBkYXRlSW50ZXJuYWxzOiBvblJlc2l6ZSwKICAgICAgICByZWRyYXdJbW1lZGlhdGU6IHJlZHJhd0ltbWVkaWF0ZSwKICAgICAgICByZWRyYXdab29tOiByZWRyYXdab29tLAogICAgICAgIHJlZHJhd0NvbGxhcHNlOiByZWRyYXdDb2xsYXBzZSwKICAgICAgICByZWRyYXdVbmNvbGxhcHNlOiByZWRyYXdVbmNvbGxhcHNlLAogICAgICAgIHNhdmVQcmV2U2NhbGVzOiBzYXZlUHJldlNjYWxlcywKICAgICAgICB1c2VDb2xsYXBzZWREZXB0aDogdXNlQ29sbGFwc2VkRGVwdGgsCiAgICAgICAgdXNlVW5jb2xsYXBzZWREZXB0aDogdXNlVW5jb2xsYXBzZWREZXB0aCwKICAgICAgICBhZGRMb2NrSGlnaGxpZ2h0OiBhZGRMb2NrSGlnaGxpZ2h0LAogICAgICAgIGNsZWFyTG9ja0hpZ2hsaWdodDogY2xlYXJMb2NrSGlnaGxpZ2h0LAogICAgICAgIGFkZEFjdGl2ZUhpZ2hsaWdodDogYWRkQWN0aXZlSGlnaGxpZ2h0LAogICAgICAgIGNsZWFyQWN0aXZlSGlnaGxpZ2h0OiBjbGVhckFjdGl2ZUhpZ2hsaWdodCwKICAgICAgICBkaXNhYmxlWm9vbTogZGlzYWJsZVpvb20sCiAgICAgICAgZW5hYmxlWm9vbTogZW5hYmxlWm9vbQogICAgICB9OwogICAgfSAvLyBnZW5lcmF0ZUZsYW1lR3JhcGgKCgogICAgZnVuY3Rpb24gaW5pdEluZm9Cb3goZWwpIHsKCiAgICAgIGZ1bmN0aW9uIHNob3coZCkgewogICAgICAgIHZhciBsYWJlbCA9IGQubGFiZWwgPyBkLmxhYmVsIDogIiI7CiAgICAgICAgdmFyIHJlZiA9IChkLmZpbGVuYW1lICYmIGQubGluZW51bSkgPwogICAgICAgICAgKGQuZmlsZW5hbWUgKyAiIyIgKyBkLmxpbmVudW0pIDoKICAgICAgICAgICIoc291cmNlIHVuYXZhaWxhYmxlKSI7CgogICAgICAgIGVsLnN0eWxlLnZpc2liaWxpdHkgPSAiIjsKCiAgICAgICAgZWwuaW5uZXJIVE1MID0KICAgICAgICAgICI8dGFibGU+IiArCiAgICAgICAgICAiPHRyPjx0ZCBjbGFzcz0naW5mb2JveC10aXRsZSc+TGFiZWw8L3RkPjx0ZD4iICsgZXNjYXBlSFRNTChsYWJlbCkgKyAiPC90ZD48L3RyPiIgKwogICAgICAgICAgIjx0cj48dGQgY2xhc3M9J2luZm9ib3gtdGl0bGUnPkNhbGxlZCBmcm9tPC90ZD48dGQ+IiArIGVzY2FwZUhUTUwocmVmKSArICI8L3RkPjwvdHI+IiArCiAgICAgICAgICAiPHRyPjx0ZCBjbGFzcz0naW5mb2JveC10aXRsZSc+VG90YWwgdGltZTwvdGQ+PHRkPiIgKyAoZC5lbmRUaW1lIC0gZC5zdGFydFRpbWUpICsgIm1zPC90ZD48L3RyPiIgKwogICAgICAgICAgIjx0cj48dGQgY2xhc3M9J2luZm9ib3gtdGl0bGUnPk1lbW9yeTwvdGQ+PHRkPiIgKwogICAgICAgICAgICByb3VuZE9uZURlY2ltYWwoZC5zdW1NZW1EZWFsbG9jKSArICIgLyAiICsgcm91bmRPbmVEZWNpbWFsKGQuc3VtTWVtQWxsb2MpICsKICAgICAgICAgICAgIiBNQjwvdGQ+PC90cj4iICsKICAgICAgICAgICI8dHI+PHRkIGNsYXNzPSdpbmZvYm94LXRpdGxlJz5BZ2cuIHRvdGFsIHRpbWU8L3RkPjx0ZD4iICsgdmlzLmFnZ0xhYmVsVGltZXNbbGFiZWxdICsgIm1zPC90ZD48L3RyPiIgKwogICAgICAgICAgIjx0cj48dGQgY2xhc3M9J2luZm9ib3gtdGl0bGUnPkNhbGwgc3RhY2sgZGVwdGg8L3RkPjx0ZD4iICsgZC5kZXB0aCArICI8L3RkPjwvdHI+IiArCiAgICAgICAgICAiPC90YWJsZT4iOwogICAgICB9CgogICAgICBmdW5jdGlvbiBoaWRlKCkgewogICAgICAgIGVsLnN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsKICAgICAgfQoKICAgICAgaGlkZSgpOwoKICAgICAgcmV0dXJuIHsKICAgICAgICBlbDogZWwsCiAgICAgICAgc2hvdzogc2hvdywKICAgICAgICBoaWRlOiBoaWRlCiAgICAgIH07CiAgICB9CgogICAgLy8gR2VuZXJhdGUgdGhlIHRyZWUgdGFibGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gZ2VuZXJhdGVUcmVldGFibGUoZWwpIHsKICAgICAgdmFyIGNvbnRlbnQgPSBkMy5zZWxlY3QoZWwpOwoKICAgICAgdmFyIHRhYmxlID0gY29udGVudC5hcHBlbmQoInRhYmxlIikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJyZXN1bHRzIikKICAgICAgICAgIC5hdHRyKCJjZWxsc3BhY2luZyIsICIwIikKICAgICAgICAgIC5hdHRyKCJjZWxscGFkZGluZyIsICIwIik7CgogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpOwogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpCiAgICAgICAgLnN0eWxlKCJ3aWR0aCIsICIxMjBweCIpOwogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpCiAgICAgICAgLnN0eWxlKCJ3aWR0aCIsICI1MHB4IikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLW1lbW9yeSIpOwogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpCiAgICAgICAgLnN0eWxlKCJ3aWR0aCIsICIyNnB4IikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLW1lbW9yeSIpOwogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpCiAgICAgICAgLnN0eWxlKCJ3aWR0aCIsICI1MHB4IikKICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLW1lbW9yeSIpOwogICAgICB0YWJsZS5hcHBlbmQoImNvbCIpCiAgICAgICAgLnN0eWxlKCJ3aWR0aCIsICI1MHB4Iik7CiAgICAgIHRhYmxlLmFwcGVuZCgiY29sIikKICAgICAgICAuc3R5bGUoIndpZHRoIiwgIjQwcHgiKTsKCiAgICAgIHZhciB0YWJsZUJvZHkgPSB0YWJsZS5hcHBlbmQoInRib2R5Iik7CgogICAgICB2YXIgaGVhZGVyUm93cyA9IHRhYmxlQm9keS5hcHBlbmQoInRyIik7CgogICAgICBoZWFkZXJSb3dzLmFwcGVuZCgidGgiKQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJjb2RlLWxhYmVsIikKICAgICAgICAudGV4dCgiQ29kZSIpOwoKICAgICAgaGVhZGVyUm93cy5hcHBlbmQoInRoIikKICAgICAgICAuYXR0cigiY2xhc3MiLCAicGF0aCIpCiAgICAgICAgLnRleHQoIkZpbGUiKTsKCiAgICAgIGhlYWRlclJvd3MuYXBwZW5kKCJ0aCIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgInRyZWV0YWJsZS1tZW1vcnkgbWVtb3J5IikKICAgICAgICAuYXR0cigiY29sc3BhbiIsICIzIikKICAgICAgICAudGV4dCgiTWVtb3J5IChNQikiKTsKCiAgICAgIGhlYWRlclJvd3MuYXBwZW5kKCJ0aCIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgInRpbWUiKQogICAgICAgIC5hdHRyKCJjb2xzcGFuIiwgIjIiKQogICAgICAgIC50ZXh0KCJUaW1lIChtcykiKTsKCiAgICAgIC8vIFJldHJpZXZlIGFsbCBub2RlcyAobiksIHJlY3Vyc2V2ZWx5LCB3aGVyZSBjaGVjayhuKSA9PSB0cnVlLgogICAgICBmdW5jdGlvbiBhbGxUb3BOb2Rlcyhub2RlcywgY2hlY2spIHsKICAgICAgICB2YXIgaW5jbHVkZWQgPSBbXTsKICAgICAgICBub2RlcyA9IG5vZGVzLnNsaWNlKCk7CgogICAgICAgIHdoaWxlIChub2Rlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICB2YXIgbm9kZSA9IG5vZGVzLnNoaWZ0KCk7CgogICAgICAgICAgaWYgKGNoZWNrKG5vZGUpKQogICAgICAgICAgICBpbmNsdWRlZC5wdXNoKG5vZGUpOwogICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIG5vZGUuc3VtQ2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjMSkgewogICAgICAgICAgICAgIG5vZGVzLnVuc2hpZnQoYzEpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGluY2x1ZGVkOwogICAgICB9CgogICAgICAvLyBJcyB0aGVyZSBvbmUgbm9kZSAobiksIGluY2x1ZGluZyByb290LCB3aGVyZSBjaGVjayhuKSA9PSB0cnVlPwogICAgICBmdW5jdGlvbiBvbmVOb2RlKHJvb3QsIGNoZWNrKSB7CiAgICAgICAgdmFyIG5vZGVzID0gW3Jvb3RdOwoKICAgICAgICB3aGlsZSAobm9kZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgdmFyIG4gPSBub2Rlcy5zaGlmdCgpOwogICAgICAgICAgaWYgKGNoZWNrKG4pKQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgICBuLnN1bUNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oeCkgewogICAgICAgICAgICBub2Rlcy51bnNoaWZ0KHgpOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHVwZGF0ZVJvd3NEaXNwbGF5KGQpIHsKICAgICAgICBpZiAodmlzLmhpZGVJbnRlcm5hbHMgJiYgZC5pc0ludGVybmFsKQogICAgICAgICAgcmV0dXJuICJub25lIjsKICAgICAgICBlbHNlIGlmICghdmlzLmhpZGVJbnRlcm5hbHMgJiYgZC5pc0Rlc2NlbmRhbnQpCiAgICAgICAgICByZXR1cm4gIm5vbmUiOwoKICAgICAgICB2YXIgY29sbGFwc2VkID0gZmFsc2U7CiAgICAgICAgd2hpbGUgKGQucGFyZW50KSB7CiAgICAgICAgICBkID0gZC5wYXJlbnQ7CiAgICAgICAgICBpZiAoZC5jb2xsYXBzZWQpIHsKICAgICAgICAgICAgY29sbGFwc2VkID0gdHJ1ZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBjb2xsYXBzZWQgPyAibm9uZSIgOiAiIjsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gdG9nZ2xlVHJlZU5vZGUoZCkgewogICAgICAgIGlmICghZC5jYW5FeHBhbmQpCiAgICAgICAgICByZXR1cm47CgogICAgICAgIHZhciBjb2xsYXBzZWQgPSBkLmNvbGxhcHNlZDsKICAgICAgICBpZiAoY29sbGFwc2VkID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgIC8vIENyZWF0ZSBhIGNvcHkgc2luY2Ugd2UgbWlnaHQgaW5zZXJ0IHRoZSBzYW1lIG5vZGUgdHdpY2U6IG9uY2UKICAgICAgICAgIC8vIGZvciB0aGUgbm9ybWFsIGxlYWYgdGhlIG90aGVyIG9uZSBmb3IgYSBjb2xsYXBzZWQgbm9kZS4KICAgICAgICAgIHZhciBzdW1DaGlsZHJlbiA9IGQuc3VtQ2hpbGRyZW4ubWFwKGZ1bmN0aW9uKHgpIHsKICAgICAgICAgICAgcmV0dXJuIGpRdWVyeS5leHRlbmQoe30sIHgpOwogICAgICAgICAgfSk7CgogICAgICAgICAgdmFyIGNoaWxkTm9kZXMgPSBzdW1DaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24oeCkgewogICAgICAgICAgICByZXR1cm4geC5kZXB0aENvbGxhcHNlZCAhPT0gbnVsbDsKICAgICAgICAgIH0pOwoKICAgICAgICAgIGNoaWxkTm9kZXMuZm9yRWFjaChmdW5jdGlvbih4KSB7CiAgICAgICAgICAgIHguaXNJbnRlcm5hbCA9IGQuaXNJbnRlcm5hbCA/IGQuaXNJbnRlcm5hbCA6IGZhbHNlOwogICAgICAgICAgICB4LmlzRGVzY2VuZGFudCA9IGQuaXNEZXNjZW5kYW50ID8gZC5pc0Rlc2NlbmRhbnQgOiBmYWxzZTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIHZhciBpbnRlcm5hbENoaWxkTm9kZXMgPSBzdW1DaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24oeCkgewogICAgICAgICAgICByZXR1cm4geC5kZXB0aENvbGxhcHNlZCA9PT0gbnVsbDsKICAgICAgICAgIH0pOwoKICAgICAgICAgIGludGVybmFsQ2hpbGROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKHgpIHsKICAgICAgICAgICAgeC5pc0ludGVybmFsID0gdHJ1ZTsKICAgICAgICAgICAgeC5pc0Rlc2NlbmRhbnQgPSBmYWxzZTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIHZhciBub3RJbnRlcm5hbERlc2NlbmRhbnROb2RlcyA9IFtdOwogICAgICAgICAgaWYgKCFkLmlzSW50ZXJuYWwpIHsKICAgICAgICAgICAgbm90SW50ZXJuYWxEZXNjZW5kYW50Tm9kZXMgPSBhbGxUb3BOb2RlcyhpbnRlcm5hbENoaWxkTm9kZXMsIGZ1bmN0aW9uKHgpIHsKICAgICAgICAgICAgICByZXR1cm4geC5kZXB0aENvbGxhcHNlZCAhPT0gbnVsbCAmJiBkLmRlcHRoIDwgeC5kZXB0aDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgbm90SW50ZXJuYWxEZXNjZW5kYW50Tm9kZXMuZm9yRWFjaChmdW5jdGlvbih4KSB7CiAgICAgICAgICAgIHguaXNJbnRlcm5hbCA9IGZhbHNlOwogICAgICAgICAgICB4LmlzRGVzY2VuZGFudCA9IHRydWU7CiAgICAgICAgICB9KTsKCiAgICAgICAgICBjaGlsZE5vZGVzID0gY2hpbGROb2Rlcy5jb25jYXQoaW50ZXJuYWxDaGlsZE5vZGVzKTsKICAgICAgICAgIGNoaWxkTm9kZXMgPSBjaGlsZE5vZGVzLmNvbmNhdChub3RJbnRlcm5hbERlc2NlbmRhbnROb2Rlcyk7CgogICAgICAgICAgY2hpbGROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgbi52aXN1YWxEZXB0aCA9IGQudmlzdWFsRGVwdGggKyAxOwogICAgICAgICAgICBuLnBhcmVudCA9IGQ7CiAgICAgICAgICB9KTsKCiAgICAgICAgICB2aXMucHJvZlRhYmxlID0gdmlzLnByb2ZUYWJsZS5jb25jYXQoY2hpbGROb2Rlcyk7CiAgICAgICAgICBkLmNvbGxhcHNlZCA9IGZhbHNlOwoKICAgICAgICAgIHVwZGF0ZVJvd3MoKTsKCiAgICAgICAgICAvLyBOb2RlcyBhcmUgc29ydGVkICJoZWF2aWVzdCBmaXJzdCIKICAgICAgICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCA9PSAxKSB0b2dnbGVUcmVlTm9kZShjaGlsZE5vZGVzWzBdKTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICBkLmNvbGxhcHNlZCA9ICFjb2xsYXBzZWQ7CiAgICAgICAgICB1cGRhdGVSb3dzKCk7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiB1cGRhdGVMYWJlbENlbGxzKGxhYmVsQ2VsbCkgewogICAgICAgIGxhYmVsQ2VsbAogICAgICAgICAgLmF0dHIoIm5vd3JhcCIsICJ0cnVlIikKICAgICAgICAgIC5zdHlsZSgicGFkZGluZy1sZWZ0IiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gKDggKyAxNSAqIChkLnZpc3VhbERlcHRoIC0gMSkpICsgInB4IjsKICAgICAgICAgIH0pCiAgICAgICAgICAub24oImNsaWNrIiwgdG9nZ2xlVHJlZU5vZGUpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIGQuY2FuRXhwYW5kID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChkLnN1bUNoaWxkcmVuKSB7CiAgICAgICAgICAgICAgZC5zdW1DaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGMpIHsKICAgICAgICAgICAgICAgIGlmIChjLnN1bUNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgaWYgKCF2aXMuaGlkZUludGVybmFscyB8fCBvbmVOb2RlKGMsIGZ1bmN0aW9uKGMxKSB7IHJldHVybiBjMS5kZXB0aENvbGxhcHNlZCAhPT0gbnVsbDsgfSkpCiAgICAgICAgICAgICAgICAgICAgZC5jYW5FeHBhbmQgPSB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgY29sbGFwc2VkQ2xhc3MgPSAiIjsKICAgICAgICAgICAgaWYgKGQuY2FuRXhwYW5kKQogICAgICAgICAgICAgIGNvbGxhcHNlZENsYXNzID0gZC5jb2xsYXBzZWQgPT09IHVuZGVmaW5lZCA/ICJ0cmVldGFibGUtZXhwYW5kIiA6IGQuY29sbGFwc2VkID8gInRyZWV0YWJsZS1leHBhbmQiIDogInRyZWV0YWJsZS1jb2xsYXBzZSI7CgogICAgICAgICAgICByZXR1cm4gImNvZGUtbGFiZWwgIiArIChkLmNhbkV4cGFuZCA/ICJsYWJlbC1wb2ludGVyICIgKyBjb2xsYXBzZWRDbGFzcyA6ICIiKTsKICAgICAgICAgIH0pOwogICAgICB9CgogICAgICBmdW5jdGlvbiB1cGRhdGVSb3dzKCkgewogICAgICAgIHZhciByb3dzID0gdGFibGVCb2R5LnNlbGVjdEFsbCgidHIudHJlZXRhYmxlLXJvdyIpCiAgICAgICAgICAuZGF0YSh2aXMucHJvZlRhYmxlLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHJldHVybiBkLmlkOwogICAgICAgICAgfSk7CgogICAgICAgIHJvd3MuZXhpdCgpCiAgICAgICAgICAucmVtb3ZlKCk7CgogICAgICAgIHZhciB1cGRhdGVkUm93cyA9IHJvd3MKICAgICAgICAgIC5zdHlsZSgiZGlzcGxheSIsIHVwZGF0ZVJvd3NEaXNwbGF5KTsKCiAgICAgICAgdmFyIHVwZGF0ZWRMYWJlbENlbGxzID0gdXBkYXRlZFJvd3Muc2VsZWN0QWxsKCJ0ZC5jb2RlLWxhYmVsIik7CiAgICAgICAgdXBkYXRlTGFiZWxDZWxscyh1cGRhdGVkTGFiZWxDZWxscyk7CgogICAgICAgIHZhciBuZXdSb3dzID0gcm93cy5lbnRlcigpCiAgICAgICAgICAuYXBwZW5kKCJ0ciIpCiAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgaWYgKHZpcy5oaWRlSW50ZXJuYWxzICYmIGQuZGVwdGhDb2xsYXBzZWQgPT09IG51bGwpCiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9KQogICAgICAgICAgLm9uKCJjbGljayIsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgdGFibGUuc2VsZWN0QWxsKCJ0ciIpCiAgICAgICAgICAgICAgLnN0eWxlKCJiYWNrZ3JvdW5kLWNvbG9yIiwgbnVsbCk7CgogICAgICAgICAgICB0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJyZ2IoMjQxLCAyNDEsIDI0MSkiOwogICAgICAgICAgICBub3RpZnlTb3VyY2VGaWxlTWVzc2FnZShkLCAic2VsZWN0Iik7CiAgICAgICAgICB9KQogICAgICAgICAgLnN0eWxlKCJkaXNwbGF5IiwgdXBkYXRlUm93c0Rpc3BsYXkpOwoKICAgICAgICBuZXdSb3dzCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLXJvdyIpOwoKICAgICAgICB2YXIgbGFiZWxDZWxsID0gbmV3Um93cy5hcHBlbmQoInRkIik7CiAgICAgICAgdXBkYXRlTGFiZWxDZWxscyhsYWJlbENlbGwpOwoKICAgICAgICB2YXIgY2VsbFdyYXBwZXIgPSBsYWJlbENlbGwuYXBwZW5kKCJkaXYiKTsKICAgICAgICBjZWxsV3JhcHBlci5hcHBlbmQoImRpdiIpOwoKICAgICAgICBsYWJlbENlbGwuYXBwZW5kKCJkaXYiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgImxhYmVsLXRleHQiKQogICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5sYWJlbDsgfSk7CgogICAgICAgIG5ld1Jvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAicGF0aCIpCiAgICAgICAgICAudGV4dChmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHZhciBsYXN0U2xhc2ggPSBkLmZpbGVuYW1lID8gZC5maWxlbmFtZS5sYXN0SW5kZXhPZigiLyIpIDogLTE7CiAgICAgICAgICAgIGlmIChsYXN0U2xhc2ggPj0gMCkKICAgICAgICAgICAgICByZXR1cm4gZC5maWxlbmFtZS5zdWJzdHIobGFzdFNsYXNoICsgMSk7CgogICAgICAgICAgICByZXR1cm4gZC5maWxlbmFtZTsKICAgICAgICAgIH0pOwoKICAgICAgICBuZXdSb3dzLmFwcGVuZCgidGQiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgInRyZWV0YWJsZS1tZW1vcnkgbWVtb3J5LWluZm8iKQogICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gcm91bmRPbmVEZWNpbWFsKGQuc3VtTWVtRGVhbGxvYyk7CiAgICAgICAgICB9KTsKCiAgICAgICAgdmFyIG1lbW9yeUJhckNvbnRhaW5lciA9IG5ld1Jvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLW1lbW9yeSBtZW1vcnktYmFyLWNvbnRhaW5lciIpOwoKICAgICAgICB2YXIgbWVtb3J5TGVmdENlbGwgPSBtZW1vcnlCYXJDb250YWluZXIuYXBwZW5kKCJkaXYiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgIm1lbW9yeS1sZWZ0YmFyLXdyYXBwZXIiKTsKCiAgICAgICAgbWVtb3J5TGVmdENlbGwuYXBwZW5kKCJkaXYiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgIm1lbW9yeS1sZWZ0YmFyIikKICAgICAgICAgIC5zdHlsZSgid2lkdGgiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHJldHVybiAgMSArIE1hdGgubWluKE1hdGguYWJzKE1hdGgubWluKE1hdGgucm91bmQoZC5wcm9wTWVtRGVhbGxvYyAqIDUpLCAwKSksIDUpICsgInB4IjsKICAgICAgICAgIH0pOwoKICAgICAgICBtZW1vcnlCYXJDb250YWluZXIuYXBwZW5kKCJkaXYiKQogICAgICAgICAgLmF0dHIoImNsYXNzIiwgIm1lbW9yeS1yaWdodGJhciIpCiAgICAgICAgICAuc3R5bGUoIndpZHRoIiwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gMSArIE1hdGgubWluKE1hdGgubWF4KE1hdGgucm91bmQoZC5wcm9wTWVtQWxsb2MgKiAxMyksIDApLCAxMykgKyAicHgiOwogICAgICAgICAgfSk7CgogICAgICAgIG5ld1Jvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAidHJlZXRhYmxlLW1lbW9yeSBtZW1vcnktaW5mby1yaWdodCIpCiAgICAgICAgICAudGV4dChmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHJldHVybiByb3VuZE9uZURlY2ltYWwoZC5zdW1NZW1BbGxvYyk7CiAgICAgICAgICB9KTsKCiAgICAgICAgbmV3Um93cy5hcHBlbmQoInRkIikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0aW1lLWluZm8iKQogICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgewogICAgICAgICAgICByZXR1cm4gZC5zdW1UaW1lOwogICAgICAgICAgfSk7CgogICAgICAgIHZhciB0aW1lQ2VsbCA9IG5ld1Jvd3MuYXBwZW5kKCJ0ZCIpCiAgICAgICAgICAuYXR0cigiY2xhc3MiLCAidGltZS1iYXItY29udGFpbmVyIik7CgogICAgICAgIHRpbWVDZWxsLmFwcGVuZCgiZGl2IikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0aW1lYmFyIikKICAgICAgICAgIC5zdHlsZSgid2lkdGgiLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKGQucHJvcFRpbWUgKiAyMCkgKyAicHgiOwogICAgICAgICAgfSk7CgogICAgICAgIHZhciB1bm9yZGVyZWRSb3dzID0gZDMuc2VsZWN0QWxsKCJ0ci50cmVldGFibGUtcm93IikKICAgICAgICAgIC5kYXRhKHZpcy5wcm9mVGFibGUsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGQuaWQ7CiAgICAgICAgICB9KTsKCiAgICAgICAgdW5vcmRlcmVkUm93cy5zb3J0KGZ1bmN0aW9uKGEsYikgewogICAgICAgICAgcmV0dXJuIChhLmlkIDwgYi5pZCkgPyAtMSA6IChhLmlkID09IGIuaWQgPyAwIDogMSk7CiAgICAgICAgfSk7CgogICAgICAgIHVzZU1lbW9yeVJlc3VsdHMoKTsKICAgICAgfQoKICAgICAgdmFyIGJ1aWxkUHJvZlRhYmxlID0gZnVuY3Rpb24gKHByb2ZUcmVlKSB7CiAgICAgICAgdmFyIGhlYWQgPSBqUXVlcnkuZXh0ZW5kKHt9LCBwcm9mVHJlZSk7CiAgICAgICAgdmFyIG5vZGVzID0gW2hlYWRdOwoKICAgICAgICB2YXIgYWdncmVnYXRlQ2hpbGRyZW4gPSBmdW5jdGlvbihub2RlKSB7CiAgICAgICAgICB2YXIgbmFtZU1hcCA9IHt9OwogICAgICAgICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGMpIHsKICAgICAgICAgICAgdmFyIG5hbWVNYXBFbnRyeSA9IG5hbWVNYXBbYy5sYWJlbF07CiAgICAgICAgICAgIGlmICghbmFtZU1hcEVudHJ5KSB7CiAgICAgICAgICAgICAgbmFtZU1hcEVudHJ5ID0galF1ZXJ5LmV4dGVuZCh7fSwgYyk7CiAgICAgICAgICAgICAgbmFtZU1hcEVudHJ5LnN1bVRpbWUgICAgID0gYy5lbmRUaW1lIC0gYy5zdGFydFRpbWU7CiAgICAgICAgICAgICAgbmFtZU1hcEVudHJ5LnN1bUNoaWxkcmVuID0gW107CiAgICAgICAgICAgICAgbmFtZU1hcEVudHJ5LmNoaWxkcmVuICAgID0gW107CiAgICAgICAgICAgICAgbmFtZU1hcEVudHJ5LnBhcmVudCAgICAgID0gbm9kZTsKICAgICAgICAgICAgICBuYW1lTWFwRW50cnkuc3VtQ291bnQgICAgPSAxOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5zdW1NZW0gICAgICAgID0gbmFtZU1hcEVudHJ5LnN1bU1lbSAgICAgICAgKyBjLnN1bU1lbTsKICAgICAgICAgICAgICBuYW1lTWFwRW50cnkuc3VtTWVtRGVhbGxvYyA9IG5hbWVNYXBFbnRyeS5zdW1NZW1EZWFsbG9jICsgYy5zdW1NZW1EZWFsbG9jOwogICAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5zdW1NZW1BbGxvYyAgID0gbmFtZU1hcEVudHJ5LnN1bU1lbUFsbG9jICAgKyBjLnN1bU1lbUFsbG9jOwogICAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5zdW1UaW1lICAgICAgID0gbmFtZU1hcEVudHJ5LnN1bVRpbWUgICAgICAgKyAoYy5lbmRUaW1lIC0gYy5zdGFydFRpbWUpOwogICAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5zdW1Db3VudCAgICAgID0gbmFtZU1hcEVudHJ5LnN1bUNvdW50ICAgICAgKyAxOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuYW1lTWFwRW50cnkucHJvcE1lbSAgICAgICAgPSBuYW1lTWFwRW50cnkuc3VtTWVtICAgICAgICAvIHZpcy50b3RhbE1lbTsKICAgICAgICAgICAgbmFtZU1hcEVudHJ5LnByb3BNZW1EZWFsbG9jID0gbmFtZU1hcEVudHJ5LnN1bU1lbURlYWxsb2MgLyB2aXMudG90YWxNZW07CiAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5wcm9wTWVtQWxsb2MgICA9IG5hbWVNYXBFbnRyeS5zdW1NZW1BbGxvYyAgIC8gdmlzLnRvdGFsTWVtOwogICAgICAgICAgICBuYW1lTWFwRW50cnkucHJvcFRpbWUgICAgICAgPSBuYW1lTWFwRW50cnkuc3VtVGltZSAgICAgICAvIHZpcy50b3RhbFRpbWU7CgogICAgICAgICAgICBjLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgIG5hbWVNYXBFbnRyeS5jaGlsZHJlbi5wdXNoKGUpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIG5hbWVNYXBbYy5sYWJlbF0gPSBuYW1lTWFwRW50cnk7CiAgICAgICAgICB9KTsKCiAgICAgICAgICB2YXIgY2hpbGRyZW5TdW0gPSBbXTsKICAgICAgICAgIGZvciAodmFyIGxhYmVsIGluIG5hbWVNYXApIHsKICAgICAgICAgICAgY2hpbGRyZW5TdW0ucHVzaChuYW1lTWFwW2xhYmVsXSk7CiAgICAgICAgICB9CgogICAgICAgICAgLy8gU29ydCBieSB0aW1lIGRlc2NlbmRpbmcKICAgICAgICAgIGNoaWxkcmVuU3VtLnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gYi5zdW1UaW1lIC0gYS5zdW1UaW1lIH0pOwogICAgICAgICAgcmV0dXJuIGNoaWxkcmVuU3VtOwogICAgICAgIH07CgogICAgICAgIGZ1bmN0aW9uIGFkZFRvTm9kZXNBdChjLCBpKSB7CiAgICAgICAgICBub2Rlcy5zcGxpY2UoaSwgMCwgYyk7CiAgICAgICAgfQoKICAgICAgICB2YXIgaWQgPSAwOwogICAgICAgIHdoaWxlIChub2Rlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICB2YXIgbm9kZSA9IG5vZGVzLnNoaWZ0KCk7CgogICAgICAgICAgbm9kZS5pZCA9IGlkOwogICAgICAgICAgaWQgPSBpZCArIDE7CgogICAgICAgICAgbm9kZS5zdW1DaGlsZHJlbiA9IGFnZ3JlZ2F0ZUNoaWxkcmVuKG5vZGUpOwoKICAgICAgICAgIC8vIFByb2Nlc3NpbmcgaW4gb3JkZXIgaXMgaW1wb3J0YW50IHRvIHByZXNlcnZlIG9yZGVyIG9mIElEcyEKICAgICAgICAgIG5vZGUuc3VtQ2hpbGRyZW4uZm9yRWFjaChhZGRUb05vZGVzQXQpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGhlYWQuc3VtQ2hpbGRyZW47CiAgICAgIH07CgogICAgICBmdW5jdGlvbiB1c2VNZW1vcnlSZXN1bHRzKCkgewogICAgICAgIGQzLnNlbGVjdEFsbCgiLnRyZWV0YWJsZS1tZW1vcnkiKS5zdHlsZSgiZGlzcGxheSIsIHZpcy5oaWRlTWVtb3J5ID8gIm5vbmUiIDogIiIpOwogICAgICB9CgogICAgICB2aXMucHJvZlRhYmxlID0gYnVpbGRQcm9mVGFibGUodmlzLnByb2ZUcmVlKTsKICAgICAgdmlzLnByb2ZUYWJsZS5mb3JFYWNoKGZ1bmN0aW9uKGUpIHsKICAgICAgICBlLnZpc3VhbERlcHRoID0gMTsKICAgICAgfSk7CgogICAgICB1cGRhdGVSb3dzKCk7CgogICAgICByZXR1cm4gewogICAgICAgIGVsOiBlbCwKICAgICAgICBvblJlc2l6ZTogdXBkYXRlUm93cywKICAgICAgICBvbk9wdGlvbnNDaGFuZ2U6IHVwZGF0ZVJvd3MsCiAgICAgICAgb25VcGRhdGVJbnRlcm5hbHM6IGZ1bmN0aW9uKCkgewoKICAgICAgICB9LAogICAgICAgIHVzZU1lbW9yeVJlc3VsdHM6IHVzZU1lbW9yeVJlc3VsdHMKICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBlbmFibGVTY3JvbGwoKSB7CiAgICAgIHZpcy5jb2RlVGFibGUuZW5hYmxlU2Nyb2xsKCk7CiAgICAgIHZpcy5mbGFtZUdyYXBoLmVuYWJsZVpvb20oKTsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXNhYmxlU2Nyb2xsKCkgewogICAgICB2aXMuY29kZVRhYmxlLmRpc2FibGVTY3JvbGwoKTsKICAgICAgdmlzLmZsYW1lR3JhcGguZGlzYWJsZVpvb20oKTsKICAgIH0KCgogICAgLy8gU2V0IHVwIHJlc2l6aW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogICAgLy8gVGhpcyBpcyB1c2VkIGFzIGEgalF1ZXJ5IGV2ZW50IG5hbWVzcGFjZSBzbyB0aGF0IHdlIGNhbiByZW1vdmUgdGhlIHdpbmRvdwogICAgLy8gcmVzaXplIGhhbmRsZXIgb24gc3Vic2VxdWVudCBjYWxscyB0byBpbml0UmVzaXppbmcoKS4gTm90IGVsZWdhbnQsIGJ1dCBpdAogICAgLy8gZ2V0cyB0aGUgam9iIGRvbmUuCiAgICB2YXIgcmVzaXplQ2FsbGJhY2tOYW1lc3BhY2UgPSByYW5kb21TdHJpbmcoMTApOwoKICAgIC8vIFJlc2l6ZSBwYW5lbDEgYW5kIHBhbmVsMiB0byA1MCUgb2YgYXZhaWxhYmxlIHNwYWNlIGFuZCBhZGQgY2FsbGJhY2sKICAgIC8vIGZvciB3aW5kb3cgcmVzaXppbmcuCiAgICBmdW5jdGlvbiBpbml0UmVzaXppbmcoKSB7CiAgICAgIHZhciAkZWwgPSAkKHZpcy5lbCk7CiAgICAgIHZhciAkcGFuZWwxID0gJGVsLmNoaWxkcmVuKCIucHJvZnZpcy1wYW5lbDEiKTsKICAgICAgdmFyICRwYW5lbDIgPSAkZWwuY2hpbGRyZW4oIi5wcm9mdmlzLXBhbmVsMiIpOwogICAgICB2YXIgJHNwbGl0QmFyID0gJGVsLmNoaWxkcmVuKCIucHJvZnZpcy1zcGxpdGJhciIpOwogICAgICB2YXIgJHN0YXR1c0JhciA9ICRlbC5jaGlsZHJlbigiLnByb2Z2aXMtc3RhdHVzLWJhciIpOwoKICAgICAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIHBvc2l0aW9uaW5nIHRoYXQgbWF5IGhhdmUgaGFwcGVuZWQgZnJvbSBwcmV2aW91cwogICAgICAvLyBjYWxscyB0byB0aGlzIGZ1bmN0aW9uIGFuZCB0aGUgY2FsbGJhY2tzIHRoYXQgaXQgc2V0cyB1cC4KICAgICAgJHBhbmVsMS5yZW1vdmVBdHRyKCJzdHlsZSIpOwogICAgICAkcGFuZWwyLnJlbW92ZUF0dHIoInN0eWxlIik7CiAgICAgICRzcGxpdEJhci5yZW1vdmVBdHRyKCJzdHlsZSIpOwogICAgICAkc3RhdHVzQmFyLnJlbW92ZUF0dHIoInN0eWxlIik7CgogICAgICAvLyBDU1MgY2xhc3Mgc3VmZml4IGZvciBzcGxpdCBkaXJlY3Rpb24KICAgICAgdmFyIHNwbGl0Q2xhc3MgPSAodmlzLnNwbGl0RGlyID09PSAiaCIpID8gImhvcml6b250YWwiIDogInZlcnRpY2FsIjsKCiAgICAgIC8vIFJlbW92ZSBleGlzdGluZyBob3Jpem9udGFsL3ZlcnRpY2FsIGNsYXNzIGFuZCBhZGQgdGhlIGNvcnJlY3QgY2xhc3MgYmFjay4KICAgICAgJHBhbmVsMS5yZW1vdmVDbGFzcygicHJvZnZpcy1wYW5lbDEtaG9yaXpvbnRhbCBwcm9mdmlzLXBhbmVsMS12ZXJ0aWNhbCIpOwogICAgICAkcGFuZWwyLnJlbW92ZUNsYXNzKCJwcm9mdmlzLXBhbmVsMi1ob3Jpem9udGFsIHByb2Z2aXMtcGFuZWwyLXZlcnRpY2FsIik7CiAgICAgICRzcGxpdEJhci5yZW1vdmVDbGFzcygicHJvZnZpcy1zcGxpdGJhci1ob3Jpem9udGFsIHByb2Z2aXMtc3BsaXRiYXItdmVydGljYWwiKTsKICAgICAgJHBhbmVsMS5hZGRDbGFzcygicHJvZnZpcy1wYW5lbDEtIiArIHNwbGl0Q2xhc3MpOwogICAgICAkcGFuZWwyLmFkZENsYXNzKCJwcm9mdmlzLXBhbmVsMi0iICsgc3BsaXRDbGFzcyk7CiAgICAgICRzcGxpdEJhci5hZGRDbGFzcygicHJvZnZpcy1zcGxpdGJhci0iICsgc3BsaXRDbGFzcyk7CgoKICAgICAgdmFyIHNwbGl0QmFyR2FwOwogICAgICB2YXIgbWFyZ2luOwogICAgICAvLyBSZWNvcmQgdGhlIHByb3BvcnRpb25zIGZyb20gdGhlIHByZXZpb3VzIGNhbGwgdG8gcmVzaXplUGFuZWxzLiBUaGlzIGlzCiAgICAgIC8vIG5lZWRlZCB3aGVuIHdlIHJlc2l6ZSB0aGUgd2luZG93IHRvIHByZXNlcnZlIHRoZSBzYW1lIHByb3BvcnRpb25zLgogICAgICB2YXIgbGFzdFNwbGl0UHJvcG9ydGlvbjsKCiAgICAgIGlmICh2aXMuc3BsaXREaXIgPT09ICJ2IikgewogICAgICAgIC8vIFJlY29yZCB0aGUgZ2FwIGJldHdlZW4gdGhlIHNwbGl0IGJhciBhbmQgdGhlIG9iamVjdHMgdG8gbGVmdCBhbmQgcmlnaHQKICAgICAgICBzcGxpdEJhckdhcCA9IHsKICAgICAgICAgIGxlZnQ6ICRzcGxpdEJhci5vZmZzZXQoKS5sZWZ0IC0gb2Zmc2V0UmlnaHQoJHBhbmVsMSksCiAgICAgICAgICByaWdodDogJHBhbmVsMi5vZmZzZXQoKS5sZWZ0IC0gb2Zmc2V0UmlnaHQoJHNwbGl0QmFyKQogICAgICAgIH07CgogICAgICAgIC8vIENhcHR1cmUgdGhlIGluaXRpYWwgZGlzdGFuY2UgZnJvbSB0aGUgbGVmdCBhbmQgcmlnaHQgb2YgY29udGFpbmVyIGVsZW1lbnQKICAgICAgICBtYXJnaW4gPSB7CiAgICAgICAgICBsZWZ0OiAkcGFuZWwxLnBvc2l0aW9uKCkubGVmdCwKICAgICAgICAgIHJpZ2h0OiAkZWwuaW5uZXJXaWR0aCgpIC0gcG9zaXRpb25SaWdodCgkcGFuZWwyKQogICAgICAgIH07CgogICAgICB9IGVsc2UgaWYgKHZpcy5zcGxpdERpciA9PT0gImgiKSB7CiAgICAgICAgc3BsaXRCYXJHYXAgPSB7CiAgICAgICAgICB0b3A6ICRzcGxpdEJhci5vZmZzZXQoKS50b3AgLSBvZmZzZXRCb3R0b20oJHBhbmVsMSksCiAgICAgICAgICBib3R0b206ICRwYW5lbDIub2Zmc2V0KCkudG9wIC0gb2Zmc2V0Qm90dG9tKCRzcGxpdEJhcikKICAgICAgICB9OwoKICAgICAgICBtYXJnaW4gPSB7CiAgICAgICAgICB0b3A6ICRwYW5lbDEucG9zaXRpb24oKS50b3AsCiAgICAgICAgICBib3R0b206ICRlbC5pbm5lcldpZHRoKCkgLSBwb3NpdGlvbkJvdHRvbSgkcGFuZWwyKQogICAgICAgIH07CiAgICAgIH0KCiAgICAgIC8vIFJlc2l6ZSB0aGUgcGFuZWxzLiBzcGxpdFByb3BvcnRpb24gaXMgYSBudW1iZXIgZnJvbSAwLTEgcmVwcmVzZW50aW5nIHRoZQogICAgICAvLyBob3Jpem9udGFsIHBvc2l0aW9uIG9mIHRoZSBzcGxpdCBiYXIuCiAgICAgIGZ1bmN0aW9uIHJlc2l6ZVBhbmVscyhzcGxpdFByb3BvcnRpb24pIHsKICAgICAgICBpZiAoIXNwbGl0UHJvcG9ydGlvbikKICAgICAgICAgIHNwbGl0UHJvcG9ydGlvbiA9IGxhc3RTcGxpdFByb3BvcnRpb247CgogICAgICAgIGlmICh2aXMuc3BsaXREaXIgPT09ICJ2IikgewogICAgICAgICAgdmFyIGlubmVyV2lkdGggPSBvZmZzZXRSaWdodCgkcGFuZWwyKSAtICRwYW5lbDEub2Zmc2V0KCkubGVmdDsKCiAgICAgICAgICAkc3BsaXRCYXIub2Zmc2V0KHsKICAgICAgICAgICAgbGVmdDogJHBhbmVsMS5vZmZzZXQoKS5sZWZ0ICsgaW5uZXJXaWR0aCAqIHNwbGl0UHJvcG9ydGlvbiAtCiAgICAgICAgICAgICAgICAgICRzcGxpdEJhci5vdXRlcldpZHRoKCkvMgogICAgICAgICAgfSk7CgogICAgICAgICAgLy8gU2l6ZSBhbmQgcG9zaXRpb24gdGhlIHBhbmVscwogICAgICAgICAgJHBhbmVsMS5vdXRlcldpZHRoKCRzcGxpdEJhci5wb3NpdGlvbigpLmxlZnQgLSBzcGxpdEJhckdhcC5sZWZ0IC0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4ubGVmdCk7CiAgICAgICAgICAkcGFuZWwyLm9mZnNldCh7IGxlZnQ6IG9mZnNldFJpZ2h0KCRzcGxpdEJhcikgKyBzcGxpdEJhckdhcC5yaWdodCB9KTsKCiAgICAgICAgfSBlbHNlIGlmICh2aXMuc3BsaXREaXIgPT09ICJoIikgewogICAgICAgICAgdmFyIGlubmVySGVpZ2h0ID0gb2Zmc2V0Qm90dG9tKCRwYW5lbDIpIC0gJHBhbmVsMS5vZmZzZXQoKS50b3A7CgogICAgICAgICAgJHNwbGl0QmFyLm9mZnNldCh7CiAgICAgICAgICAgIHRvcDogJHBhbmVsMS5vZmZzZXQoKS50b3AgKyBpbm5lckhlaWdodCAqIHNwbGl0UHJvcG9ydGlvbiAtCiAgICAgICAgICAgICAgICAgJHNwbGl0QmFyLm91dGVySGVpZ2h0KCkvMgogICAgICAgICAgfSk7CgogICAgICAgICAgLy8gU2l6ZSBhbmQgcG9zaXRpb24gdGhlIHBhbmVscwogICAgICAgICAgJHBhbmVsMS5vdXRlckhlaWdodCgkc3BsaXRCYXIucG9zaXRpb24oKS50b3AgLSBzcGxpdEJhckdhcC50b3AgLQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi50b3ApOwogICAgICAgICAgJHBhbmVsMi5vZmZzZXQoeyB0b3A6IG9mZnNldEJvdHRvbSgkc3BsaXRCYXIpICsgc3BsaXRCYXJHYXAuYm90dG9tIH0pOwogICAgICAgIH0KCiAgICAgICAgbGFzdFNwbGl0UHJvcG9ydGlvbiA9IHNwbGl0UHJvcG9ydGlvbjsKICAgICAgfQoKICAgICAgLy8gSW5pdGlhbGx5LCBzZXQgd2lkdGhzIHRvIDUwLzUwCiAgICAgIC8vIEZvciB0aGUgZmlyc3Qgc2l6aW5nLCB3ZSBkb24ndCBuZWVkIHRvIGNhbGwgdmlzLmZsYW1lR3JhcGgub25SZXNpemUoKQogICAgICAvLyBiZWNhdXNlIHRoaXMgaGFwcGVucyBiZWZvcmUgdGhlIGZsYW1lIGdyYXBoIGlzIGdlbmVyYXRlZC4KICAgICAgcmVzaXplUGFuZWxzKDAuNSk7CgogICAgICB2YXIgcmVzaXplUGFuZWxzRGVib3VuY2VkID0gZGVib3VuY2UoZnVuY3Rpb24oKSB7CiAgICAgICAgcmVzaXplUGFuZWxzKGxhc3RTcGxpdFByb3BvcnRpb24pOwogICAgICAgIHZpcy5hY3RpdmVWaWV3cy5mb3JFYWNoKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgIGlmIChlLm9uUmVzaXplKSBlLm9uUmVzaXplKCk7CiAgICAgICAgfSk7CiAgICAgIH0sIDI1MCk7CgogICAgICAvLyBDbGVhciBvbGQgcmVzaXplIGhhbmRsZXIgYW5kIGFkZCBuZXcgb25lLiBXZSB1c2UgYSBuYW1lc3BhY2UgZm9yIHRoaXMKICAgICAgLy8gdmlzdWFsaXphdGlvbiB0byBtYWtlIHN1cmUgbm90IHRvIGRlbGV0ZSBoYW5kbGVycyBmb3Igb3RoZXIgcHJvZnZpcwogICAgICAvLyB2aXN1YWxpemF0aW9ucyBvbiB0aGUgc2FtZSBwYWdlICh0aGlzIGNhbiBoYXBwZW4gd2l0aCBSbWQgZG9jdW1lbnRzKS4KICAgICAgJCh3aW5kb3cpLm9mZigicmVzaXplLnByb2Z2aXMuIiArIHJlc2l6ZUNhbGxiYWNrTmFtZXNwYWNlKTsKICAgICAgJCh3aW5kb3cpLm9uKCJyZXNpemUucHJvZnZpcy4iICsgcmVzaXplQ2FsbGJhY2tOYW1lc3BhY2UsIHJlc2l6ZVBhbmVsc0RlYm91bmNlZCk7CgogICAgICAvLyBHZXQgY3VycmVudCBwcm9wb3J0aW9uYWwgcG9zaXRpb24gb2Ygc3BsaXQgYmFyCiAgICAgIGZ1bmN0aW9uIHNwbGl0UHJvcG9ydGlvbigpIHsKICAgICAgICB2YXIgc3BsaXRDZW50ZXI7CgogICAgICAgIGlmICh2aXMuc3BsaXREaXIgPT09ICJ2IikgewogICAgICAgICAgc3BsaXRDZW50ZXIgPSAkc3BsaXRCYXIub2Zmc2V0KCkubGVmdCAtICRwYW5lbDEub2Zmc2V0KCkubGVmdCArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3BsaXRCYXIub3V0ZXJXaWR0aCgpLzI7CiAgICAgICAgICB2YXIgaW5uZXJXaWR0aCA9IG9mZnNldFJpZ2h0KCRwYW5lbDIpIC0gJHBhbmVsMS5vZmZzZXQoKS5sZWZ0OwogICAgICAgICAgcmV0dXJuIHNwbGl0Q2VudGVyIC8gaW5uZXJXaWR0aDsKCiAgICAgICAgfSBlbHNlIGlmICh2aXMuc3BsaXREaXIgPT09ICJoIikgewogICAgICAgICAgc3BsaXRDZW50ZXIgPSAkc3BsaXRCYXIub2Zmc2V0KCkudG9wIC0gJHBhbmVsMS5vZmZzZXQoKS50b3AgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNwbGl0QmFyLm91dGVySGVpZ2h0KCkvMjsKICAgICAgICAgIHZhciBpbm5lckhlaWdodCA9IG9mZnNldEJvdHRvbSgkcGFuZWwyKSAtICRwYW5lbDEub2Zmc2V0KCkudG9wOwogICAgICAgICAgcmV0dXJuIHNwbGl0Q2VudGVyIC8gaW5uZXJIZWlnaHQ7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiBwb3NpdGlvblJpZ2h0KCRlbCkgewogICAgICAgIHJldHVybiAkZWwucG9zaXRpb24oKS5sZWZ0ICsgJGVsLm91dGVyV2lkdGgoKTsKICAgICAgfQogICAgICBmdW5jdGlvbiBvZmZzZXRSaWdodCgkZWwpIHsKICAgICAgICByZXR1cm4gJGVsLm9mZnNldCgpLmxlZnQgKyAkZWwub3V0ZXJXaWR0aCgpOwogICAgICB9CiAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uQm90dG9tKCRlbCkgewogICAgICAgIHJldHVybiAkZWwucG9zaXRpb24oKS50b3AgKyAkZWwub3V0ZXJIZWlnaHQoKTsKICAgICAgfQogICAgICBmdW5jdGlvbiBvZmZzZXRCb3R0b20oJGVsKSB7CiAgICAgICAgcmV0dXJuICRlbC5vZmZzZXQoKS50b3AgKyAkZWwub3V0ZXJIZWlnaHQoKTsKICAgICAgfQoKICAgICAgLy8gRW5hYmxlIGRyYWdnaW5nIG9mIHRoZSBzcGxpdCBiYXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICB2YXIgZHJhZ2dpbmcgPSBmYWxzZTsKICAgICAgICAvLyBGb3IgdmVydGljYWwgc3BsaXQgKGxlZnQtcmlnaHQgZHJhZ2dpbmcpCiAgICAgICAgdmFyIHN0YXJ0RHJhZ1g7CiAgICAgICAgdmFyIHN0YXJ0T2Zmc2V0TGVmdDsKICAgICAgICAvLyBGb3IgaG9yaXpvbnRhbCBzcGxpdCAodXAtZG93biBkcmFnZ2luZykKICAgICAgICB2YXIgc3RhcnREcmFnWTsKICAgICAgICB2YXIgc3RhcnRPZmZzZXRUb3A7CgogICAgICAgIHZhciBzdG9wRHJhZyA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgIGlmICghZHJhZ2dpbmcpIHJldHVybjsKICAgICAgICAgIGRyYWdnaW5nID0gZmFsc2U7CgogICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgZHJhZyk7CiAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZXVwIiwgc3RvcERyYWcpOwoKICAgICAgICAgICRzcGxpdEJhci5jc3MoIm9wYWNpdHkiLCAiIik7CgogICAgICAgICAgaWYgKCh2aXMuc3BsaXREaXIgPT09ICJ2IiAmJiBlLnBhZ2VYIC0gc3RhcnREcmFnWCA9PT0gMCkgfHwKICAgICAgICAgICAgICAodmlzLnNwbGl0RGlyID09PSAiaCIgJiYgZS5wYWdlWSAtIHN0YXJ0RHJhZ1kgPT09IDApKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICByZXNpemVQYW5lbHMoc3BsaXRQcm9wb3J0aW9uKCkpOwogICAgICAgICAgdmlzLmZsYW1lR3JhcGgub25SZXNpemUoKTsKICAgICAgICB9OwoKICAgICAgICB2YXIgc3RhcnREcmFnID0gZnVuY3Rpb24oZSkgewogICAgICAgICAgLy8gRG9uJ3Qgc3RhcnQgYW5vdGhlciBkcmFnIGlmIHdlJ3JlIGFscmVhZHkgaW4gb25lLgogICAgICAgICAgaWYgKGRyYWdnaW5nKSByZXR1cm47CiAgICAgICAgICBkcmFnZ2luZyA9IHRydWU7CiAgICAgICAgICBwYXVzZUV2ZW50KGUpOwoKICAgICAgICAgICRzcGxpdEJhci5jc3MoIm9wYWNpdHkiLCAwLjc1KTsKCiAgICAgICAgICBpZiAodmlzLnNwbGl0RGlyID09PSAidiIpIHsKICAgICAgICAgICAgc3RhcnREcmFnWCA9IGUucGFnZVg7CiAgICAgICAgICAgIHN0YXJ0T2Zmc2V0TGVmdCA9ICRzcGxpdEJhci5vZmZzZXQoKS5sZWZ0OwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc3RhcnREcmFnWSA9IGUucGFnZVk7CiAgICAgICAgICAgIHN0YXJ0T2Zmc2V0VG9wID0gJHNwbGl0QmFyLm9mZnNldCgpLnRvcDsKICAgICAgICAgIH0KCiAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLCBkcmFnKTsKICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLCBzdG9wRHJhZyk7CiAgICAgICAgfTsKCiAgICAgICAgdmFyIGRyYWcgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgICBpZiAoIWRyYWdnaW5nKSByZXR1cm47CiAgICAgICAgICBwYXVzZUV2ZW50KGUpOwoKICAgICAgICAgIGlmICh2aXMuc3BsaXREaXIgPT09ICJ2IikgewogICAgICAgICAgICB2YXIgZHggPSBlLnBhZ2VYIC0gc3RhcnREcmFnWDsKICAgICAgICAgICAgaWYgKGR4ID09PSAwKQogICAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgIC8vIE1vdmUgdGhlIHNwbGl0IGJhcgogICAgICAgICAgICAkc3BsaXRCYXIub2Zmc2V0KHsgbGVmdDogc3RhcnRPZmZzZXRMZWZ0ICsgZHggfSk7CgogICAgICAgICAgfSBlbHNlIGlmICh2aXMuc3BsaXREaXIgPT09ICJoIikgewogICAgICAgICAgICB2YXIgZHkgPSBlLnBhZ2VZIC0gc3RhcnREcmFnWTsKICAgICAgICAgICAgaWYgKGR5ID09PSAwKQogICAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgIC8vIE1vdmUgdGhlIHNwbGl0IGJhcgogICAgICAgICAgICAkc3BsaXRCYXIub2Zmc2V0KHsgdG9wOiBzdGFydE9mZnNldFRvcCArIGR5IH0pOwogICAgICAgICAgfQogICAgICAgIH07CgogICAgICAgIC8vIFN0b3AgcHJvcG9nYXRpb24gc28gdGhhdCB3ZSBkb24ndCBzZWxlY3QgdGV4dCB3aGlsZSBkcmFnZ2luZwogICAgICAgIGZ1bmN0aW9uIHBhdXNlRXZlbnQoZSl7CiAgICAgICAgICBpZihlLnN0b3BQcm9wYWdhdGlvbikgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgIGlmKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIGUuY2FuY2VsQnViYmxlID0gdHJ1ZTsKICAgICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIC8vIFJlbW92ZSBleGlzdGluZyBldmVudCBsaXN0ZW5lciBmcm9tIHByZXZpb3VzIGNhbGxzIHRvIGluaXRSZXNpemluZygpLgogICAgICAgICRzcGxpdEJhci5vZmYoIm1vdXNlZG93bi5wcm9mdmlzIik7CiAgICAgICAgJHNwbGl0QmFyLm9uKCJtb3VzZWRvd24ucHJvZnZpcyIsIHN0YXJ0RHJhZyk7CiAgICAgIH0pKCk7CgoKICAgICAgcmV0dXJuIHsKICAgICAgICByZXNpemVQYW5lbHM6IHJlc2l6ZVBhbmVscwogICAgICB9OwogICAgfQoKCiAgICB2YXIgcHJvZiA9IHByZXBhcmVQcm9mRGF0YShtZXNzYWdlLnByb2YsIG1lc3NhZ2UuaW50ZXJ2YWwpOwoKICAgIHZhciB2aXMgPSB7CiAgICAgIGVsOiBlbCwKICAgICAgcHJvZjogcHJvZiwKICAgICAgcHJvZlRyZWU6IGdldFByb2ZUcmVlKHByb2YpLAogICAgICBpbnRlcnZhbDogbWVzc2FnZS5pbnRlcnZhbCwKICAgICAgdG90YWxUaW1lOiBnZXRUb3RhbFRpbWUocHJvZiksCiAgICAgIHRvdGFsTWVtOiBnZXRUb3RhbE1lbW9yeShwcm9mKSwKICAgICAgZmlsZXM6IG1lc3NhZ2UuZmlsZXMsCiAgICAgIGFnZ0xhYmVsVGltZXM6IGdldEFnZ3JlZ2F0ZWRMYWJlbFRpbWVzKHByb2YpLAogICAgICBmaWxlTGluZVN0YXRzOiBnZXRGaWxlTGluZVN0YXRzKHByb2YsIG1lc3NhZ2UuZmlsZXMpLAogICAgICBwcm9mVGFibGU6IFtdLAoKICAgICAgLy8gT2JqZWN0cyByZXByZXNlbnRpbmcgZWFjaCBjb21wb25lbnQKICAgICAgc3RhdHVzQmFyOiBudWxsLAogICAgICBvcHRpb25zUGFuZWw6IG51bGwsCiAgICAgIGNvZGVUYWJsZTogbnVsbCwKICAgICAgZmxhbWVHcmFwaDogbnVsbCwKICAgICAgaW5mb0JveDogbnVsbCwKICAgICAgdHJlZXRhYmxlOiBudWxsLAogICAgICBhY3RpdmVWaWV3czogW10sCgogICAgICAvLyBGdW5jdGlvbnMgdG8gZW5hYmxlL2Rpc2FibGUgcmVzcG9uZGluZyB0byBzY3JvbGx3aGVlbCBldmVudHMKICAgICAgZW5hYmxlU2Nyb2xsOiBlbmFibGVTY3JvbGwsCiAgICAgIGRpc2FibGVTY3JvbGw6IGRpc2FibGVTY3JvbGwsCgogICAgICBzcGxpdERpcjogbWVzc2FnZS5zcGxpdCwKICAgICAgaGlkZUludGVybmFsczogdHJ1ZSwKICAgICAgaGlkZU1lbW9yeTogZmFsc2UsCgogICAgICByZXNpemVQYW5lbHM6IG51bGwKICAgIH07CgoKICAgIC8vIFJlbmRlciB0aGUgb2JqZWN0cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgICB2YXIgc3RhdHVzQmFyRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHN0YXR1c0JhckVsLmNsYXNzTmFtZSA9ICJwcm9mdmlzLXN0YXR1cy1iYXIiOwogICAgdmlzLmVsLmFwcGVuZENoaWxkKHN0YXR1c0JhckVsKTsKCiAgICAvLyBDb250YWluZXIgcGFuZWxzIC0gdG9wL2JvdHRvbSBvciBsZWZ0L3JpZ2h0CiAgICB2YXIgcGFuZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBwYW5lbDEuY2xhc3NOYW1lID0gInByb2Z2aXMtcGFuZWwxIjsKICAgIHZpcy5lbC5hcHBlbmRDaGlsZChwYW5lbDEpOwoKICAgIHZhciBwYW5lbDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHBhbmVsMi5jbGFzc05hbWUgPSAicHJvZnZpcy1wYW5lbDIiOwogICAgdmlzLmVsLmFwcGVuZENoaWxkKHBhbmVsMik7CgogICAgdmFyIHNwbGl0QmFyRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHNwbGl0QmFyRWwuY2xhc3NOYW1lID0gInByb2Z2aXMtc3BsaXRiYXIiOwogICAgdmlzLmVsLmFwcGVuZENoaWxkKHNwbGl0QmFyRWwpOwoKICAgIHZhciBmb290ZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgZm9vdGVyRWwuY2xhc3NOYW1lID0gInByb2Z2aXMtZm9vdGVyIjsKICAgIHZpcy5lbC5hcHBlbmRDaGlsZChmb290ZXJFbCk7CgogICAgLy8gSXRlbXMgaW4gdGhlIHBhbmVscwogICAgdmFyIGNvZGVUYWJsZUVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBjb2RlVGFibGVFbC5jbGFzc05hbWUgPSAicHJvZnZpcy1jb2RlIjsKICAgIHBhbmVsMS5hcHBlbmRDaGlsZChjb2RlVGFibGVFbCk7CgogICAgdmFyIGZsYW1lR3JhcGhFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgZmxhbWVHcmFwaEVsLmNsYXNzTmFtZSA9ICJwcm9mdmlzLWZsYW1lZ3JhcGgiOwogICAgcGFuZWwyLmFwcGVuZENoaWxkKGZsYW1lR3JhcGhFbCk7CgogICAgdmFyIGluZm9Cb3hFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgaW5mb0JveEVsLmNsYXNzTmFtZSA9ICJwcm9mdmlzLWluZm9ib3giOwogICAgcGFuZWwyLmFwcGVuZENoaWxkKGluZm9Cb3hFbCk7CgogICAgdmFyIHRyZWV0YWJsZUVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICB0cmVldGFibGVFbC5jbGFzc05hbWUgPSAicHJvZnZpcy10cmVldGFibGUiOwogICAgdHJlZXRhYmxlRWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHZpcy5lbC5hcHBlbmRDaGlsZCh0cmVldGFibGVFbCk7CgogICAgdmFyIG9wdGlvbnNQYW5lbEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBvcHRpb25zUGFuZWxFbC5jbGFzc05hbWUgPSAicHJvZnZpcy1vcHRpb25zLXBhbmVsIjsKICAgIHZpcy5lbC5hcHBlbmRDaGlsZChvcHRpb25zUGFuZWxFbCk7CgogICAgLy8gRWZmaWNpZW50IHRvIHByb3Blcmx5IHNpemUgcGFuZWxzIGJlZm9yZSB0aGUgY29kZSArIGZsYW1lZ3JhcGggYXJlCiAgICAvLyByZW5kZXJlZCwgc28gdGhhdCB3ZSBkb24ndCBoYXZlIHRvIHJlLXJlbmRlci4KICAgIHZhciByZXNpemUgPSBpbml0UmVzaXppbmcoKTsKICAgIHZpcy5yZXNpemVQYW5lbHMgPSByZXNpemUucmVzaXplUGFuZWxzOwoKICAgIHZhciBoaWRlVmlld3MgPSBmdW5jdGlvbigpIHsKICAgICAgc3BsaXRCYXJFbC5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICBwYW5lbDEuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgcGFuZWwyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgIHRyZWV0YWJsZUVsLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9OwoKICAgIHZhciB0b2dnbGVWaWV3cyA9IGZ1bmN0aW9uKHZpZXcpIHsKICAgICAgaGlkZVZpZXdzKCk7CgogICAgICBzd2l0Y2ggKHZpZXcpIHsKICAgICAgICBjYXNlICJmbGFtZWdyYXBoIjoKICAgICAgICAgIHNwbGl0QmFyRWwuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICBwYW5lbDEuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICBwYW5lbDIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CgogICAgICAgICAgdmlzLmFjdGl2ZVZpZXdzID0gW3Zpcy5mbGFtZUdyYXBoLCB2aXMuY29kZVRhYmxlXTsKICAgICAgICAgIHZpcy5yZXNpemVQYW5lbHMoKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgInRyZWV0YWJsZSI6CiAgICAgICAgICBpZiAoIXZpcy50cmVldGFibGUpIHsKICAgICAgICAgICAgdmlzLnRyZWV0YWJsZSA9IGdlbmVyYXRlVHJlZXRhYmxlKHRyZWV0YWJsZUVsKTsKICAgICAgICAgIH0KCiAgICAgICAgICB0cmVldGFibGVFbC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKCiAgICAgICAgICB2aXMuYWN0aXZlVmlld3MgPSBbdmlzLnRyZWV0YWJsZV07CiAgICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgdmlzLmFjdGl2ZVZpZXdzLmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgIGlmIChlLm9uUmVzaXplKSBlLm9uUmVzaXplKCk7CiAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgb25PcHRpb25zQ2hhbmdlID0gZnVuY3Rpb24ob3B0aW9uLCBjaGVja2VkKSB7CiAgICAgIHN3aXRjaCAob3B0aW9uKQogICAgICB7CiAgICAgICAgY2FzZSAic3BsaXQiOiB7CiAgICAgICAgICB2aXMuc3BsaXREaXIgPSBjaGVja2VkID8gImgiIDogInYiOwogICAgICAgICAgLy8gQ2hlY2sgdGhhdCBmbGFtZSBncmFwaCBpcyB2aXNpYmxlCiAgICAgICAgICBpZiAoJC5pbkFycmF5KHZpcy5mbGFtZUdyYXBoLCB2aXMuYWN0aXZlVmlld3MpICE9PSAtMSkgewogICAgICAgICAgICBpbml0UmVzaXppbmcoKTsKICAgICAgICAgICAgdmlzLmZsYW1lR3JhcGgub25SZXNpemUoKTsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBjYXNlICJpbnRlcm5hbHMiOiB7CiAgICAgICAgICB2aXMuZmxhbWVHcmFwaC5zYXZlUHJldlNjYWxlcygpOwoKICAgICAgICAgIHZpcy5oaWRlSW50ZXJuYWxzID0gY2hlY2tlZDsKICAgICAgICAgIGlmIChjaGVja2VkKSB7CiAgICAgICAgICAgIHZpcy5mbGFtZUdyYXBoLnVzZUNvbGxhcHNlZERlcHRoKCk7CiAgICAgICAgICAgIHZpcy5mbGFtZUdyYXBoLnJlZHJhd0NvbGxhcHNlKDQwMCwgNDAwKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZpcy5mbGFtZUdyYXBoLnVzZVVuY29sbGFwc2VkRGVwdGgoKTsKICAgICAgICAgICAgdmlzLmZsYW1lR3JhcGgucmVkcmF3VW5jb2xsYXBzZSg0MDAsIDI1MCk7CiAgICAgICAgICB9CgogICAgICAgICAgdmlzLmFjdGl2ZVZpZXdzLmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgICAgICBpZiAoZS5vbk9wdGlvbnNDaGFuZ2UpIGUub25PcHRpb25zQ2hhbmdlKCk7CiAgICAgICAgICB9KTsKCiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgY2FzZSAibWVtb3J5IjogewogICAgICAgICAgdmlzLmhpZGVNZW1vcnkgPSBjaGVja2VkOwogICAgICAgICAgdmlzLmFjdGl2ZVZpZXdzLmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgICAgICBpZiAoZS51c2VNZW1vcnlSZXN1bHRzKSBlLnVzZU1lbW9yeVJlc3VsdHMoKTsKICAgICAgICAgIH0pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9OwoKICAgIC8vIENyZWF0ZSB0aGUgVUkgY29tcG9uZW50cwogICAgdmlzLnN0YXR1c0JhciA9IGdlbmVyYXRlU3RhdHVzQmFyKHN0YXR1c0JhckVsLCB0b2dnbGVWaWV3cyk7CiAgICB2aXMuZm9vdGVyID0gZ2VuZXJhdGVGb290ZXIoZm9vdGVyRWwpOwogICAgdmlzLm9wdGlvbnNQYW5lbCA9IGdlbmVyYXRlT3B0aW9uc1BhbmVsKG9wdGlvbnNQYW5lbEVsLCBvbk9wdGlvbnNDaGFuZ2UpOwogICAgdmlzLmNvZGVUYWJsZSA9IGdlbmVyYXRlQ29kZVRhYmxlKGNvZGVUYWJsZUVsKTsKICAgIHZpcy5mbGFtZUdyYXBoID0gZ2VuZXJhdGVGbGFtZUdyYXBoKGZsYW1lR3JhcGhFbCk7CiAgICB2aXMuaW5mb0JveCA9IGluaXRJbmZvQm94KGluZm9Cb3hFbCk7CiAgICB2aXMudHJlZXRhYmxlID0gbnVsbDsKICAgIHZpcy5hY3RpdmVWaWV3cyA9IFt2aXMuZmxhbWVHcmFwaCwgdmlzLmNvZGVUYWJsZV07CgogICAgLy8gSWYgYW55IGRlcHRoIGNvbGxhcHNpbmcgb2NjdXJlZCwgZW5hYmxlIHRoZSAiaGlkZSBpbnRlcm5hbCIgY2hlY2tib3guCiAgICBpZiAocHJvZi5zb21lKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZGVwdGggIT09IGQuZGVwdGhDb2xsYXBzZWQ7IH0pKSB7CiAgICAgIHZpcy5vcHRpb25zUGFuZWwuZW5hYmxlSGlkZUludGVybmFsKCk7CiAgICB9CgogICAgLy8gU3RhcnQgd2l0aCBzY3JvbGxpbmcgZGlzYWJsZWQgYmVjYXVzZSBvZiBtb3VzZXdoZWVsIHNjcm9sbGluZyBpc3N1ZQogICAgZGlzYWJsZVNjcm9sbCgpOwoKICAgIC8vIE1ha2UgdGhlIHZpcyBvYmplY3QgYWNjZXNzaWJsZSB2aWEgdGhlIERPTSBlbGVtZW50CiAgICAkKGVsKS5kYXRhKCJwcm9mdmlzIiwgdmlzKTsKCiAgICByZXR1cm4gdmlzOwogIH07ICAvLyBwcm9mdmlzLnJlbmRlcigpCgogIC8vIENhbGN1bGF0ZSBhbW91bnQgb2YgdGltZSBzcGVudCBvbiBlYWNoIGxpbmUgb2YgY29kZS4gUmV0dXJucyBuZXN0ZWQgb2JqZWN0cwogIC8vIGdyb3VwZWQgYnkgZmlsZSwgYW5kIHRoZW4gYnkgbGluZSBudW1iZXIuCiAgZnVuY3Rpb24gZ2V0RmlsZUxpbmVTdGF0cyhwcm9mLCBmaWxlcykgewogICAgLy8gRHJvcCBlbnRyaWVzIHdpdGggbnVsbCBvciAiIiBmaWxlbmFtZQogICAgcHJvZiA9IHByb2YuZmlsdGVyKGZ1bmN0aW9uKHJvdykgewogICAgICByZXR1cm4gcm93LmZpbGVuYW1lICE9PSBudWxsICYmIHJvdy5maWxlbmFtZSAhPT0gIiI7CiAgICB9KTsKCiAgICAvLyBHYXRoZXIgbGluZS1ieS1saW5lIGZpbGUgY29udGVudHMKICAgIHZhciBmaWxlTGluZVN0YXRzID0gZmlsZXMubWFwKGZ1bmN0aW9uKGZpbGUpIHsKICAgICAgLy8gQ3JlYXRlIGFycmF5IG9mIG9iamVjdHMgd2l0aCBpbmZvIGZvciBlYWNoIGxpbmUgb2YgY29kZS4KICAgICAgdmFyIGxpbmVzID0gZmlsZS5jb250ZW50LnNwbGl0KCJcbiIpOwogICAgICB2YXIgbGluZURhdGEgPSBbXTsKICAgICAgdmFyIGZpbGVuYW1lID0gZmlsZS5maWxlbmFtZTsKICAgICAgdmFyIG5vcm1wYXRoID0gZmlsZS5ub3JtcGF0aDsKICAgICAgZm9yICh2YXIgaT0wOyBpPGxpbmVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGluZURhdGFbaV0gPSB7CiAgICAgICAgICBmaWxlbmFtZTogZmlsZW5hbWUsCiAgICAgICAgICBub3JtcGF0aDogbm9ybXBhdGgsCiAgICAgICAgICBsaW5lbnVtOiBpICsgMSwKICAgICAgICAgIGNvbnRlbnQ6IGxpbmVzW2ldLAogICAgICAgICAgc3VtVGltZTogMCwKICAgICAgICAgIHN1bU1lbTogMCwKICAgICAgICAgIHN1bU1lbUFsbG9jOiAwLAogICAgICAgICAgc3VtTWVtRGVhbGxvYzogMAogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLAogICAgICAgIGxpbmVEYXRhOiBsaW5lRGF0YQogICAgICB9OwogICAgfSk7CgogICAgLy8gR2V0IHRpbWluZyBkYXRhIGZvciBlYWNoIGxpbmUKICAgIHZhciBzdGF0c0RhdGEgPSBkMy5uZXN0KCkKICAgICAgLmtleShmdW5jdGlvbihkKSB7IHJldHVybiBkLmZpbGVuYW1lOyB9KQogICAgICAua2V5KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQubGluZW51bTsgfSkKICAgICAgLnJvbGx1cChmdW5jdGlvbihsZWF2ZXMpIHsKICAgICAgICB2YXIgc3VtVGltZSA9IGxlYXZlcy5yZWR1Y2UoZnVuY3Rpb24oc3VtLCBkKSB7CiAgICAgICAgICAvLyBBZGQgdGhpcyBub2RlJ3MgdGltZSBvbmx5IGlmIG5vIGFuY2VzdG9yIG5vZGUgaGFzIHRoZSBzYW1lCiAgICAgICAgICAvLyBmaWxlbmFtZSBhbmQgbGluZW51bS4gVGhpcyBpcyB0byBhdm9pZCBkb3VibGUtY291bnRpbmcgdGltZXMgZm9yCiAgICAgICAgICAvLyBhIGxpbmUuCiAgICAgICAgICB2YXIgaW5jVGltZSA9IDA7CiAgICAgICAgICBpZiAoIWFuY2VzdG9ySGFzRmlsZW5hbWVMaW5lbnVtKGQuZmlsZW5hbWUsIGQubGluZW51bSwgZC5wYXJlbnQpKSB7CiAgICAgICAgICAgIGluY1RpbWUgPSBkLmVuZFRpbWUgLSBkLnN0YXJ0VGltZTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBzdW0gKyBpbmNUaW1lOwogICAgICAgIH0sIDApOwoKICAgICAgICB2YXIgc3VtTWVtID0gbGVhdmVzLnJlZHVjZShmdW5jdGlvbihzdW0sIGQpIHsKICAgICAgICAgIHJldHVybiBzdW0gKyBkLnN1bU1lbTsKICAgICAgICB9LCAwKTsKCiAgICAgICAgdmFyIHN1bU1lbURlYWxsb2MgPSBsZWF2ZXMucmVkdWNlKGZ1bmN0aW9uKHN1bSwgZCkgewogICAgICAgICAgcmV0dXJuIHN1bSArIGQuc3VtTWVtRGVhbGxvYzsKICAgICAgICB9LCAwKTsKCiAgICAgICAgdmFyIHN1bU1lbUFsbG9jID0gbGVhdmVzLnJlZHVjZShmdW5jdGlvbihzdW0sIGQpIHsKICAgICAgICAgIHJldHVybiBzdW0gKyBkLnN1bU1lbUFsbG9jOwogICAgICAgIH0sIDApOwoKICAgICAgICByZXR1cm4gewogICAgICAgICAgZmlsZW5hbWU6IGxlYXZlc1swXS5maWxlbmFtZSwKICAgICAgICAgIGxpbmVudW06IGxlYXZlc1swXS5saW5lbnVtLAogICAgICAgICAgc3VtVGltZTogc3VtVGltZSwKICAgICAgICAgIHN1bU1lbTogc3VtTWVtLAogICAgICAgICAgc3VtTWVtQWxsb2M6IHN1bU1lbUFsbG9jLAogICAgICAgICAgc3VtTWVtRGVhbGxvYzogc3VtTWVtRGVhbGxvYwogICAgICAgIH07CiAgICAgIH0pCiAgICAgIC5lbnRyaWVzKHByb2YpOwoKICAgIC8vIEluc2VydCB0aGUgc3VtVGltZXMgaW50byBsaW5lIGNvbnRlbnQgZGF0YQogICAgc3RhdHNEYXRhLmZvckVhY2goZnVuY3Rpb24oZmlsZUluZm8pIHsKICAgICAgLy8gRmluZCBpdGVtIGluIGZpbGVUaW1lcyB0aGF0IG1hdGNoZXMgdGhlIGZpbGUgb2YgdGhpcyBmaWxlSW5mbyBvYmplY3QKICAgICAgdmFyIGZpbGVMaW5lRGF0YSA9IGZpbGVMaW5lU3RhdHMuZmlsdGVyKGZ1bmN0aW9uKGQpIHsKICAgICAgICByZXR1cm4gZC5maWxlbmFtZSA9PT0gZmlsZUluZm8ua2V5OwogICAgICB9KVswXS5saW5lRGF0YTsKCiAgICAgIGZpbGVJbmZvLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGxpbmVJbmZvKSB7CiAgICAgICAgbGluZUluZm8gPSBsaW5lSW5mby52YWx1ZXM7CiAgICAgICAgZmlsZUxpbmVEYXRhW2xpbmVJbmZvLmxpbmVudW0gLSAxXS5zdW1UaW1lID0gbGluZUluZm8uc3VtVGltZTsKICAgICAgICBmaWxlTGluZURhdGFbbGluZUluZm8ubGluZW51bSAtIDFdLnN1bU1lbSA9IGxpbmVJbmZvLnN1bU1lbTsKICAgICAgICBmaWxlTGluZURhdGFbbGluZUluZm8ubGluZW51bSAtIDFdLnN1bU1lbURlYWxsb2MgPSBsaW5lSW5mby5zdW1NZW1EZWFsbG9jOwogICAgICAgIGZpbGVMaW5lRGF0YVtsaW5lSW5mby5saW5lbnVtIC0gMV0uc3VtTWVtQWxsb2MgPSBsaW5lSW5mby5zdW1NZW1BbGxvYzsKICAgICAgfSk7CiAgICB9KTsKCiAgICAvLyBDYWxjdWxhdGUgcHJvcG9ydGlvbmFsIHRpbWVzLCByZWxhdGl2ZSB0byB0aGUgbG9uZ2VzdCB0aW1lIGluIHRoZSBkYXRhCiAgICAvLyBzZXQuIE1vZGlmaWVzIGRhdGEgaW4gcGxhY2UuCiAgICB2YXIgZmlsZU1heFRpbWVzID0gZmlsZUxpbmVTdGF0cy5tYXAoZnVuY3Rpb24obGluZXMpIHsKICAgICAgdmFyIGxpbmVUaW1lcyA9IGxpbmVzLmxpbmVEYXRhLm1hcChmdW5jdGlvbih4KSB7IHJldHVybiB4LnN1bVRpbWU7IH0pOwogICAgICByZXR1cm4gZDMubWF4KGxpbmVUaW1lcyk7CiAgICB9KTsKCiAgICB2YXIgbWF4VGltZSA9IGQzLm1heChmaWxlTWF4VGltZXMpOwoKICAgIGZpbGVMaW5lU3RhdHMubWFwKGZ1bmN0aW9uKGxpbmVzKSB7CiAgICAgIGxpbmVzLmxpbmVEYXRhLm1hcChmdW5jdGlvbihsaW5lKSB7CiAgICAgICAgbGluZS5wcm9wVGltZSA9IGxpbmUuc3VtVGltZSAvIG1heFRpbWU7CiAgICAgIH0pOwogICAgfSk7CgogICAgdmFyIHRvdGFsTWVtID0gZ2V0VG90YWxNZW1vcnkocHJvZik7CgogICAgZmlsZUxpbmVTdGF0cy5tYXAoZnVuY3Rpb24obGluZXMpIHsKICAgICAgbGluZXMubGluZURhdGEubWFwKGZ1bmN0aW9uKGxpbmUpIHsKICAgICAgICBsaW5lLnByb3BNZW0gPSBsaW5lLnN1bU1lbSAvIHRvdGFsTWVtOwogICAgICAgIGxpbmUucHJvcE1lbURlYWxsb2MgPSBsaW5lLnN1bU1lbURlYWxsb2MgLyB0b3RhbE1lbTsKICAgICAgICBsaW5lLnByb3BNZW1BbGxvYyA9IGxpbmUuc3VtTWVtQWxsb2MgLyB0b3RhbE1lbTsKICAgICAgfSk7CiAgICB9KTsKCiAgICByZXR1cm4gZmlsZUxpbmVTdGF0czsKCiAgICAvLyBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG5vZGUgb3Igb25lIG9mIGl0cyBhbmNlc3RvcnMgaGFzIHRoZSBnaXZlbgogICAgLy8gZmlsZW5hbWUgYW5kIGxpbmVudW07IGZhbHNlIG90aGVyd2lzZS4KICAgIGZ1bmN0aW9uIGFuY2VzdG9ySGFzRmlsZW5hbWVMaW5lbnVtKGZpbGVuYW1lLCBsaW5lbnVtLCBub2RlKSB7CiAgICAgIGlmICghbm9kZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICBpZiAobm9kZS5maWxlbmFtZSA9PT0gZmlsZW5hbWUgJiYgbm9kZS5saW5lbnVtID09PSBsaW5lbnVtKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgcmV0dXJuIGFuY2VzdG9ySGFzRmlsZW5hbWVMaW5lbnVtKGZpbGVuYW1lLCBsaW5lbnVtLCBub2RlLnBhcmVudCk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBwcmVwYXJlUHJvZkRhdGEocHJvZiwgaW50ZXJ2YWwpIHsKICAgIC8vIENvbnZlcnQgb2JqZWN0LXdpdGgtYXJyYXlzIGZvcm1hdCBwcm9mIGRhdGEgdG8gYXJyYXktb2Ytb2JqZWN0cyBmb3JtYXQKICAgIHZhciBkYXRhID0gY29sVG9Sb3dzKHByb2YpOwogICAgZGF0YSA9IGFkZFBhcmVudENoaWxkTGlua3MoZGF0YSk7CiAgICBkYXRhID0gY29uc29saWRhdGVSdW5zKGRhdGEpOwogICAgZGF0YSA9IGFwcGx5SW50ZXJ2YWwoZGF0YSwgaW50ZXJ2YWwpOwogICAgZGF0YSA9IGZpbmRDb2xsYXBzZWREZXB0aHMoZGF0YSk7CgogICAgcmV0dXJuIGRhdGE7CiAgfQoKICAvLyBHaXZlbiB0aGUgcmF3IHByb2ZpbGluZyBkYXRhLCBjb252ZXJ0IGB0aW1lYCBhbmQgYGxhc3RUaW1lYCBmaWVsZHMgdG8KICAvLyBgc3RhcnRUaW1lYCBhbmQgYGVuZFRpbWVgLCBhbmQgdXNlIHRoZSBzdXBwbGllZCBpbnRlcnZhbC4gTW9kaWZpZXMgZGF0YQogIC8vIGluIHBsYWNlLgogIGZ1bmN0aW9uIGFwcGx5SW50ZXJ2YWwocHJvZiwgaW50ZXJ2YWwpIHsKICAgIHByb2YuZm9yRWFjaChmdW5jdGlvbihkKSB7CiAgICAgIGQuc3RhcnRUaW1lID0gaW50ZXJ2YWwgKiAoZC50aW1lIC0gMSk7CiAgICAgIGQuZW5kVGltZSA9IGludGVydmFsICogKGQubGFzdFRpbWUpOwogICAgICBkZWxldGUgZC50aW1lOwogICAgICBkZWxldGUgZC5sYXN0VGltZTsKICAgIH0pOwoKICAgIHJldHVybiBwcm9mOwogIH0KCiAgLy8gRmluZCB0aGUgdG90YWwgdGltZSBzcGFubmVkIGluIHRoZSBkYXRhCiAgZnVuY3Rpb24gZ2V0VG90YWxUaW1lKHByb2YpIHsKICAgIHJldHVybiBkMy5tYXgocHJvZiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5lbmRUaW1lOyB9KSAtCiAgICAgICAgICAgZDMubWluKHByb2YsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuc3RhcnRUaW1lOyB9KTsKICB9CgogIC8vIEZpbmQgdGhlIHRvdGFsIG1lbW9yeSBzcGFubmVkIGluIHRoZSBkYXRhCiAgZnVuY3Rpb24gZ2V0VG90YWxNZW1vcnkocHJvZikgewogICAgcmV0dXJuIGQzLm1heChwcm9mLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLm1lbWFsbG9jOyB9KTsKICB9CgogIC8vIENhbGN1bGF0ZSB0aGUgdG90YWwgYW1vdW50IG9mIHRpbWUgc3BlbnQgaW4gZWFjaCBmdW5jdGlvbiBsYWJlbAogIGZ1bmN0aW9uIGdldEFnZ3JlZ2F0ZWRMYWJlbFRpbWVzKHByb2YpIHsKICAgIHZhciBsYWJlbFRpbWVzID0ge307CiAgICB2YXIgdHJlZSA9IGdldFByb2ZUcmVlKHByb2YpOwogICAgY2FsY0xhYmVsVGltZXModHJlZSk7CgogICAgcmV0dXJuIGxhYmVsVGltZXM7CgogICAgLy8gVHJhdmVyc2UgdGhlIHRyZWUgd2l0aCB0aGUgZm9sbG93aW5nIHN0cmF0ZWd5OgogICAgLy8gKiBDaGVjayBpZiBjdXJyZW50IGxhYmVsIGlzIHVzZWQgaW4gYW4gYW5jZXN0b3IuCiAgICAvLyAgICogSWYgeWVzLCBkb24ndCBhZGQgdG8gdGltZXMgZm9yIHRoYXQgbGFiZWwuCiAgICAvLyAgICogSWYgbm8sIGRvIGFkZCB0byB0aW1lcyBmb3IgdGhhdCBsYWJlbC4KICAgIC8vICogUmVjdXJzZSBpbnRvIGNoaWxkcmVuLgogICAgZnVuY3Rpb24gY2FsY0xhYmVsVGltZXMobm9kZSkgewogICAgICB2YXIgbGFiZWwgPSBub2RlLmxhYmVsOwogICAgICBpZiAoIWFuY2VzdG9ySGFzTGFiZWwobGFiZWwsIG5vZGUucGFyZW50KSkgewogICAgICAgIGlmIChsYWJlbFRpbWVzW2xhYmVsXSA9PT0gdW5kZWZpbmVkKQogICAgICAgICAgbGFiZWxUaW1lc1tsYWJlbF0gPSAwOwoKICAgICAgICBsYWJlbFRpbWVzW2xhYmVsXSArPSBub2RlLmVuZFRpbWUgLSBub2RlLnN0YXJ0VGltZTsKICAgICAgfQoKICAgICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGNhbGNMYWJlbFRpbWVzKTsKICAgIH0KCiAgICAvLyBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG5vZGUgb3Igb25lIG9mIGl0cyBhbmNlc3RvcnMgaGFzIHRoZSBnaXZlbgogICAgLy8gbGFiZWw7IGZhbHNlIG90aGVyd2lzZS4KICAgIGZ1bmN0aW9uIGFuY2VzdG9ySGFzTGFiZWwobGFiZWwsIG5vZGUpIHsKICAgICAgaWYgKG5vZGUpIHsKICAgICAgICBpZiAobm9kZS5sYWJlbCA9PT0gbGFiZWwpIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gYW5jZXN0b3JIYXNMYWJlbChsYWJlbCwgbm9kZS5wYXJlbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQogIH0KCgogIC8vIEdpdmVuIHByb2ZpbGluZyBkYXRhLCBhZGQgcGFyZW50IGFuZCBjaGlsZCBsaW5rcyB0byBpbmRpY2F0ZSBzdGFjawogIC8vIHJlbGF0aW9uc2hpcHMuCiAgZnVuY3Rpb24gYWRkUGFyZW50Q2hpbGRMaW5rcyhwcm9mKSB7CiAgICB2YXIgZGF0YSA9IGQzLm5lc3QoKQogICAgICAua2V5KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudGltZTsgfSkKICAgICAgLnJvbGx1cChmdW5jdGlvbihsZWF2ZXMpIHsKICAgICAgICBsZWF2ZXMgPSBsZWF2ZXMuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBhLmRlcHRoIC0gYi5kZXB0aDsgfSk7CgogICAgICAgIGxlYXZlc1swXS5wYXJlbnQgPSBudWxsOwogICAgICAgIGxlYXZlc1swXS5jaGlsZHJlbiA9IFtdOwoKICAgICAgICBmb3IgKHZhciBpPTE7IGk8bGVhdmVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBsZWF2ZXNbaS0xXS5jaGlsZHJlbi5wdXNoKGxlYXZlc1tpXSk7CiAgICAgICAgICBsZWF2ZXNbaV0ucGFyZW50ID0gbGVhdmVzW2ktMV07CiAgICAgICAgICBsZWF2ZXNbaV0uY2hpbGRyZW4gPSBbXTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBsZWF2ZXM7CiAgICAgIH0pCiAgICAgIC5tYXAocHJvZik7CgogICAgLy8gQ29udmVydCBkYXRhIGZyb20gb2JqZWN0IG9mIGFycmF5cyB0byBhcnJheSBvZiBhcnJheXMKICAgIGRhdGEgPSBkMy5tYXAoZGF0YSkudmFsdWVzKCk7CiAgICAvLyBGbGF0dGVuIGRhdGEKICAgIHJldHVybiBkMy5tZXJnZShkYXRhKTsKICB9CgoKICAvLyBHaXZlbiBwcm9maWxpbmcgZGF0YSwgY29uc29saWRhdGUgY29uc2VjdXRpdmUgYmxvY2tzIGZvciBhIGZsYW1lZ3JhcGguCiAgLy8gVGhpcyBmdW5jdGlvbiBhbHNvIGFzc2lnbnMgY29ycmVjdCBwYXJlbnQtY2hpbGQgcmVsYXRpb25zaGlwcyB0byBmb3JtIGEKICAvLyB0cmVlIG9mIGRhdGEgb2JqZWN0cywgd2l0aCBhIGhpZGRlbiByb290IG5vZGUgYXQgZGVwdGggMC4KICBmdW5jdGlvbiBjb25zb2xpZGF0ZVJ1bnMocHJvZikgewogICAgLy8gQ3JlYXRlIGEgc3BlY2lhbCB0b3AtbGV2ZWwgbGVhZiB3aG9zZSBvbmx5IHB1cnBvc2UgaXMgdG8gcG9pbnQgdG8gaXRzCiAgICAvLyBjaGlsZHJlbiwgdGhlIGl0ZW1zIGF0IGRlcHRoIDEuCiAgICB2YXIgdG9wTGVhZiA9IHsKICAgICAgZGVwdGg6IDAsCiAgICAgIHBhcmVudDogbnVsbCwKICAgICAgY2hpbGRyZW46IHByb2YuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZGVwdGggPT09IDE7IH0pCiAgICB9OwoKICAgIHZhciB0cmVlID0gY29uc29saWRhdGVUcmVlKHRvcExlYWYpOwogICAgdmFyIGRhdGEgPSB0cmVlVG9BcnJheSh0cmVlKTsKICAgIC8vIFJlbW92ZSB0aGUgcm9vdCBub2RlIGZyb20gdGhlIGZsYXR0ZW5lZCBkYXRhCiAgICBkYXRhID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5kZXB0aCAhPT0gMDsgfSk7CiAgICByZXR1cm4gZGF0YTsKCiAgICBmdW5jdGlvbiBjb25zb2xpZGF0ZVRyZWUodHJlZSkgewogICAgICB2YXIgbGVhdmVzID0gdHJlZS5jaGlsZHJlbjsKICAgICAgbGVhdmVzID0gbGVhdmVzLnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gYS50aW1lIC0gYi50aW1lOyB9KTsKCiAgICAgIC8vIENvbGxhcHNlIGNvbnNlY3V0aXZlIGxlYXZlcywgd2l0aCBzb21lIGNvbmRpdGlvbnMKICAgICAgdmFyIHN0YXJ0TGVhZiA9IG51bGw7ICAvLyBsZWFmIHN0YXJ0aW5nIHRoaXMgcnVuCiAgICAgIHZhciBsYXN0TGVhZiA9IG51bGw7ICAgLy8gVGhlIGxhc3QgbGVhZiB3ZSd2ZSBsb29rZWQgYXQKICAgICAgdmFyIG5ld0xlYXZlcyA9IFtdOwogICAgICB2YXIgY29sbGVjdGVkQ2hpbGRyZW4gPSBbXTsKICAgICAgdmFyIHN1bU1lbSA9IDA7CiAgICAgIHZhciBzdW1NZW1EZWFsbG9jID0gMDsKICAgICAgdmFyIHN1bU1lbUFsbG9jID0gMDsKCiAgICAgIC8vIFRoaXMgdGFrZXMgdGhlIHN0YXJ0IGxlYWYsIGVuZCBsZWFmLCBhbmQgdGhlIHNldCBvZiBjaGlsZHJlbiBmb3IgdGhlCiAgICAgIC8vIG5ldyBsZWFmLCBhbmQgY3JlYXRlcyBhIG5ldyBsZWFmIHdoaWNoIGNvcGllcyBhbGwgaXRzIHByb3BlcnRpZXMgZnJvbQogICAgICAvLyB0aGUgc3RhcnRMZWFmLCBleGNlcHQgbGFzdFRpbWUgYW5kIGNoaWxkcmVuLgogICAgICBmdW5jdGlvbiBhZGROZXdMZWFmKHN0YXJ0TGVhZiwgZW5kTGVhZiwgbmV3TGVhZkNoaWxkcmVuLCBzdW1NZW0sIHN1bU1lbURlYWxsb2MsIHN1bU1lbUFsbG9jKSB7CiAgICAgICAgdmFyIG5ld0xlYWYgPSAkLmV4dGVuZCh7fSwgc3RhcnRMZWFmKTsKICAgICAgICBuZXdMZWFmLmxhc3RUaW1lID0gZW5kTGVhZi50aW1lOwogICAgICAgIG5ld0xlYWYucGFyZW50ID0gdHJlZTsKICAgICAgICBuZXdMZWFmLmNoaWxkcmVuID0gbmV3TGVhZkNoaWxkcmVuOwoKICAgICAgICAvLyBSZWN1cnNlIGludG8gY2hpbGRyZW4KICAgICAgICBuZXdMZWFmID0gY29uc29saWRhdGVUcmVlKG5ld0xlYWYpOwoKICAgICAgICAvLyBBZ2dyZWdhdGUgbWVtb3J5IGZyb20gdGhpcyBjb25zb2xpZGF0aW9uIGJhdGNoIGFuZCB0aGVpciBjaGlsZHJlbgogICAgICAgIGFnZ3JlZ2F0ZU1lbW9yeShuZXdMZWFmLCBzdW1NZW0sIHN1bU1lbURlYWxsb2MsIHN1bU1lbUFsbG9jKTsKCiAgICAgICAgbmV3TGVhdmVzLnB1c2gobmV3TGVhZik7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGFnZ3JlZ2F0ZU1lbW9yeShsZWFmLCBzdW1NZW0sIHN1bU1lbURlYWxsb2MsIHN1bU1lbUFsbG9jKSB7CiAgICAgICAgbGVhZi5zdW1NZW0gPSBzdW1NZW07CiAgICAgICAgbGVhZi5zdW1NZW1EZWFsbG9jID0gc3VtTWVtRGVhbGxvYzsKICAgICAgICBsZWFmLnN1bU1lbUFsbG9jID0gc3VtTWVtQWxsb2M7CiAgICAgICAgaWYgKGxlYWYuY2hpbGRyZW4pIHsKICAgICAgICAgIGxlYWYuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjaGlsZCkgewogICAgICAgICAgICBsZWFmLnN1bU1lbSArPSBjaGlsZC5zdW1NZW0gPyBjaGlsZC5zdW1NZW0gOiAwOwogICAgICAgICAgICBsZWFmLnN1bU1lbURlYWxsb2MgKz0gY2hpbGQuc3VtTWVtRGVhbGxvYyA/IGNoaWxkLnN1bU1lbURlYWxsb2MgOiAwOwogICAgICAgICAgICBsZWFmLnN1bU1lbUFsbG9jICs9IGNoaWxkLnN1bU1lbUFsbG9jID8gY2hpbGQuc3VtTWVtQWxsb2MgOiAwOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBmb3IgKHZhciBpPTA7IGk8bGVhdmVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGxlYWYgPSBsZWF2ZXNbaV07CgogICAgICAgIGlmIChpID09PSAwKSB7CiAgICAgICAgICBzdGFydExlYWYgPSBsZWFmOwogICAgICAgICAgc3VtTWVtID0gc3VtTWVtQWxsb2MgPSBzdW1NZW1EZWFsbG9jID0gMDsKICAgICAgICB9IGVsc2UgaWYgKGxlYWYubGFiZWwgIT09IHN0YXJ0TGVhZi5sYWJlbCB8fAogICAgICAgICAgICAgICAgICAgbGVhZi5maWxlbmFtZSAhPT0gc3RhcnRMZWFmLmZpbGVuYW1lIHx8CiAgICAgICAgICAgICAgICAgICBsZWFmLmxpbmVudW0gIT09IHN0YXJ0TGVhZi5saW5lbnVtIHx8CiAgICAgICAgICAgICAgICAgICBsZWFmLmRlcHRoICE9PSBzdGFydExlYWYuZGVwdGgpCiAgICAgICAgewogICAgICAgICAgYWRkTmV3TGVhZihzdGFydExlYWYsIGxhc3RMZWFmLCBjb2xsZWN0ZWRDaGlsZHJlbiwgc3VtTWVtLCBzdW1NZW1EZWFsbG9jLCBzdW1NZW1BbGxvYyk7CgogICAgICAgICAgY29sbGVjdGVkQ2hpbGRyZW4gPSBbXTsKICAgICAgICAgIHN0YXJ0TGVhZiA9IGxlYWY7CiAgICAgICAgICBzdW1NZW0gPSBzdW1NZW1BbGxvYyA9IHN1bU1lbURlYWxsb2MgPSAwOwogICAgICAgIH0KCiAgICAgICAgc3VtTWVtICs9IGxlYWYubWVtaW5jOwogICAgICAgIHN1bU1lbURlYWxsb2MgKz0gTWF0aC5taW4obGVhZi5tZW1pbmMsIDApOwogICAgICAgIHN1bU1lbUFsbG9jICs9IE1hdGgubWF4KGxlYWYubWVtaW5jLCAwKTsKICAgICAgICBjb2xsZWN0ZWRDaGlsZHJlbiA9IGNvbGxlY3RlZENoaWxkcmVuLmNvbmNhdChsZWFmLmNoaWxkcmVuKTsKICAgICAgICBsYXN0TGVhZiA9IGxlYWY7CiAgICAgIH0KCiAgICAgIC8vIEFkZCB0aGUgbGFzdCBvbmUsIGlmIHRoZXJlIHdlcmUgYW55IGF0IGFsbAogICAgICBpZiAoaSAhPT0gMCkgewogICAgICAgIGFkZE5ld0xlYWYoc3RhcnRMZWFmLCBsYXN0TGVhZiwgY29sbGVjdGVkQ2hpbGRyZW4sIHN1bU1lbSwgc3VtTWVtRGVhbGxvYywgc3VtTWVtQWxsb2MpOwogICAgICB9CgogICAgICB0cmVlLmNoaWxkcmVuID0gbmV3TGVhdmVzOwogICAgICByZXR1cm4gdHJlZTsKICAgIH0KCiAgICAvLyBHaXZlbiBhIHRyZWUsIHB1bGwgb3V0IGFsbCB0aGUgbGVhdmVzIGFuZCBwdXQgdGhlbSBpbiBhIGZsYXQgYXJyYXkKICAgIGZ1bmN0aW9uIHRyZWVUb0FycmF5KHRyZWUpIHsKICAgICAgdmFyIGFsbExlYXZlcyA9IFtdOwoKICAgICAgZnVuY3Rpb24gcHVzaExlYXZlcyhsZWFmKSB7CiAgICAgICAgYWxsTGVhdmVzLnB1c2gobGVhZik7CiAgICAgICAgbGVhZi5jaGlsZHJlbi5mb3JFYWNoKHB1c2hMZWF2ZXMpOwogICAgICB9CgogICAgICBwdXNoTGVhdmVzKHRyZWUpOwogICAgICByZXR1cm4gYWxsTGVhdmVzOwogICAgfQogIH0KCgogIC8vIEdpdmVuIHByb2ZpbGluZyBkYXRhIHdpdGggcGFyZW50LWNoaWxkIGluZm9ybWF0aW9uLCBnZXQgdGhlIHJvb3Qgbm9kZS4KICBmdW5jdGlvbiBnZXRQcm9mVHJlZShwcm9mKSB7CiAgICBpZiAocHJvZi5sZW5ndGggPT09IDApCiAgICAgIHJldHVybiBudWxsOwoKICAgIC8vIENsaW1iIHVwIHRvIHRoZSB0b3Agb2YgdGhlIHRyZWUKICAgIHZhciBub2RlID0gcHJvZlswXTsKICAgIHdoaWxlIChub2RlLnBhcmVudCkgewogICAgICBub2RlID0gbm9kZS5wYXJlbnQ7CiAgICB9CiAgICByZXR1cm4gbm9kZTsKICB9CgoKICAvLyBHaXZlbiBwcm9maWxpbmcgZGF0YSwgZmluZCBkZXB0aCBvZiBpdGVtcyBhZnRlciBoaWRpbmcgaXRlbXMgYmV0d2VlbgogIC8vIGl0ZW1zIHdpdGggbGFiZWxzICIuLnN0YWNrdHJhY2VvZmYuLiIgYW5kICIuLnN0YWNrdHJhY2Vvbi4uIi4gTW9kaWZpZXMKICAvLyBkYXRhIGluIHBsYWNlLgogIGZ1bmN0aW9uIGZpbmRDb2xsYXBzZWREZXB0aHMoZGF0YSkgewogICAgdmFyIHRyZWUgPSBnZXRQcm9mVHJlZShkYXRhKTsKICAgIGNhbGN1bGF0ZURlcHRocyh0cmVlLCB0cmVlLmRlcHRoLCAwKTsKICAgIHJldHVybiBkYXRhOwoKICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZURlcHRocyhub2RlLCBjdXJDb2xsYXBzZWREZXB0aCwgc3RhY2t0cmFjZU9mZkNvdW50KSB7CiAgICAgIGlmIChub2RlLmxhYmVsID09PSAiLi5zdGFja3RyYWNlb2ZmLi4iKSB7CiAgICAgICAgc3RhY2t0cmFjZU9mZkNvdW50Kys7CiAgICAgIH0KCiAgICAgIGlmIChzdGFja3RyYWNlT2ZmQ291bnQgPiAwKSB7CiAgICAgICAgbm9kZS5kZXB0aENvbGxhcHNlZCA9IG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbm9kZS5kZXB0aENvbGxhcHNlZCA9IGN1ckNvbGxhcHNlZERlcHRoOwogICAgICAgIGN1ckNvbGxhcHNlZERlcHRoKys7CiAgICAgIH0KCiAgICAgIGlmIChub2RlLmxhYmVsID09PSAiLi5zdGFja3RyYWNlb24uLiIpIHsKICAgICAgICBzdGFja3RyYWNlT2ZmQ291bnQtLTsKICAgICAgfQoKICAgICAgLy8gUmVjdXJzZQogICAgICBub2RlLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oeCkgewogICAgICAgIGNhbGN1bGF0ZURlcHRocyh4LCBjdXJDb2xsYXBzZWREZXB0aCwgc3RhY2t0cmFjZU9mZkNvdW50KTsKICAgICAgfSk7CiAgICB9CiAgfQoKCiAgLy8gVHJhbnNmb3JtIGNvbHVtbi1vcmllbnRlZCBkYXRhIChhbiBvYmplY3Qgd2l0aCBhcnJheXMpIHRvIHJvdy1vcmllbnRlZCBkYXRhCiAgLy8gKGFuIGFycmF5IG9mIG9iamVjdHMpLgogIGZ1bmN0aW9uIGNvbFRvUm93cyh4KSB7CiAgICB2YXIgY29sbmFtZXMgPSBkMy5rZXlzKHgpOwogICAgaWYgKGNvbG5hbWVzLmxlbmd0aCA9PT0gMCkKICAgICAgcmV0dXJuIFtdOwoKICAgIHZhciBuZXdkYXRhID0gW107CiAgICBmb3IgKHZhciBpPTA7IGkgPCB4W2NvbG5hbWVzWzBdXS5sZW5ndGg7IGkrKykgewogICAgICB2YXIgcm93ID0ge307CiAgICAgIGZvciAodmFyIGo9MDsgaiA8IGNvbG5hbWVzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgdmFyIGNvbG5hbWUgPSBjb2xuYW1lc1tqXTsKICAgICAgICByb3dbY29sbmFtZV0gPSB4W2NvbG5hbWVdW2ldOwogICAgICB9CiAgICAgIG5ld2RhdGFbaV0gPSByb3c7CiAgICB9CgogICAgcmV0dXJuIG5ld2RhdGE7CiAgfQoKICAvLyBHaXZlbiBhbiBhcnJheSB3aXRoIHR3byB2YWx1ZXMgKGEgbWluIGFuZCBtYXgpLCByZXR1cm4gYW4gYXJyYXkgd2l0aCB0aGUKICAvLyByYW5nZSBleHBhbmRlZCBieSBgYW1vdW50YC4KICBmdW5jdGlvbiBleHBhbmRSYW5nZShyYW5nZSwgYW1vdW50KSB7CiAgICB2YXIgYWRqdXN0ID0gYW1vdW50ICogKHJhbmdlWzFdIC0gcmFuZ2VbMF0pOwogICAgcmV0dXJuIFsKICAgICAgcmFuZ2VbMF0gLSBhZGp1c3QsCiAgICAgIHJhbmdlWzFdICsgYWRqdXN0CiAgICBdOwogIH0KCgogIC8vIEVzY2FwZSBhbiBIVE1MIHN0cmluZy4KICBmdW5jdGlvbiBlc2NhcGVIVE1MKHRleHQpIHsKICAgIHJldHVybiB0ZXh0CiAgICAgIC5yZXBsYWNlKC8mL2csICImYW1wOyIpCiAgICAgIC5yZXBsYWNlKC88L2csICImbHQ7IikKICAgICAgLnJlcGxhY2UoLz4vZywgIiZndDsiKQogICAgICAucmVwbGFjZSgvIi9nLCAiJnF1b3Q7IikKICAgICAgLnJlcGxhY2UoLycvZywgIiYjMDM5OyIpOwogIH0KCiAgLy8gVGhpcyByZXR1cm5zIHRoZSBjdXJyZW50IHBhZ2UgVVJMIHdpdGhvdXQgYW55IHRyYWlsaW5nIGhhc2guIFNob3VsZCBiZQogIC8vIHVzZWQgaW4gdXJsKCkgcmVmZXJlbmNlcyBpbiBTVkdzIHRvIGF2b2lkIHByb2JsZW1zIHdoZW4gdGhlcmUncyBhIDxiYXNlPgogIC8vIHRhZyBpbiB0aGUgZG9jdW1lbnQuCiAgZnVuY3Rpb24gdXJsTm9IYXNoKCkgewogICAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCIjIilbMF07CiAgfQoKICBmdW5jdGlvbiBkZWJvdW5jZShmLCBkZWxheSkgewogICAgdmFyIHRpbWVyID0gbnVsbDsKICAgIHJldHVybiBmdW5jdGlvbigpIHsKICAgICAgdmFyIGNvbnRleHQgPSB0aGlzOwogICAgICB2YXIgYXJncyA9IGFyZ3VtZW50czsKICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTsKICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBmLmFwcGx5KGNvbnRleHQsIGFyZ3MpOwogICAgICB9LCBkZWxheSk7CiAgICB9OwogIH0KCiAgZnVuY3Rpb24gcmFuZG9tU3RyaW5nKGxlbmd0aCkgewogICAgdmFyIGNoYXJzID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6JzsKICAgIHZhciByZXN1bHQgPSAnJzsKICAgIGZvciAodmFyIGkgPSBsZW5ndGg7IGkgPiAwOyAtLWkpCiAgICAgIHJlc3VsdCArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTsKICAgIHJldHVybiByZXN1bHQ7CiAgfQoKICB2YXIgZ2V0Tm9ybVBhdGggPSBmdW5jdGlvbihmaWxlcywgZmlsZW5hbWUpIHsKICAgIHZhciBub3JtcGF0aCA9IG51bGw7CiAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uKGUpIHsKICAgICAgaWYgKGUuZmlsZW5hbWUgPT0gZmlsZW5hbWUpIHsKICAgICAgICBub3JtcGF0aCA9IGUubm9ybXBhdGg7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIG5vcm1wYXRoOwogIH07CgoKICAoZnVuY3Rpb24oKSB7CiAgICAvLyBQcmV2ZW50IHVud2FudGVkIHNjcm9sbCBjYXB0dXJpbmcuIEJhc2VkIG9uIHRoZSBjb3JyZXNwb25kaW5nIGNvZGUgaW4KICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yc3R1ZGlvL2xlYWZsZXQKCiAgICAvLyBUaGUgcm91Z2ggaWRlYSBpcyB0aGF0IHdlIGRpc2FibGUgc2Nyb2xsIHdoZWVsIHpvb21pbmcgaW5zaWRlIGVhY2gKICAgIC8vIHByb2Z2aXMgb2JqZWN0LCB1bnRpbCB0aGUgdXNlciBtb3ZlcyB0aGUgbW91c2UgY3Vyc29yIG9yIGNsaWNrcyBvbiB0aGUKICAgIC8vIHZpc3VhbGl6YXRpb24uIFRoaXMgaXMgdHJpY2tpZXIgdGhhbiBqdXN0IGxpc3RlbmluZyBmb3IgbW91c2Vtb3ZlLAogICAgLy8gYmVjYXVzZSBtb3VzZW1vdmUgaXMgZmlyZWQgd2hlbiB0aGUgcGFnZSBpcyBzY3JvbGxlZCwgZXZlbiBpZiB0aGUgdXNlcgogICAgLy8gZGlkIG5vdCBwaHlzaWNhbGx5IG1vdmUgdGhlIG1vdXNlLiBXZSBoYW5kbGUgdGhpcyBieSBleGFtaW5pbmcgdGhlCiAgICAvLyBtb3VzZW1vdmUgZXZlbnQncyBzY3JlZW5YIGFuZCBzY3JlZW5ZIHByb3BlcnRpZXM7IGlmIHRoZXkgY2hhbmdlLCB3ZSBrbm93CiAgICAvLyBpdCdzIGEgInRydWUiIG1vdmUuCiAgICAvLwogICAgLy8gVGhlcmUncyBhIGNvbXBsaWNhdGlvbiB0byB0aGlzOiB3aGVuIHRoZSBtb3VzZSB3aGVlbCBpcyBzY3JvbGxlZCBxdWlja2x5LAogICAgLy8gb24gdGhlIHN0ZXAgd2hlcmUgdGhlIHByb2Z2aXMgRE9NIG9iamVjdCBvdmVybGFwcyB0aGUgY3Vyc29yLCBzb21ldGltZXMKICAgIC8vIHRoZSBtb3VzZW1vdmUgZXZlbnQgaGFwcGVucyBiZWZvcmUgdGhlIG1vdXNld2hlZWwgZXZlbnQsIGFuZCBzb21ldGltZXMKICAgIC8vIGl0J3MgdGhlIHJldmVyc2UgKGF0IGxlYXN0IG9uIENocm9tZSA0NiBvbiBMaW51eCkuIFRoaXMgbWVhbnMgdGhhdCB3ZQogICAgLy8gY2FuJ3QgcmVseSBvbiB0aGUgbW91c2Vtb3ZlIGhhbmRsZXIgZGlzYWJsaW5nIHRoZSBwcm9mdmlzIG9iamVjdCdzIHpvb20KICAgIC8vIGJlZm9yZSBhIHNjcm9sbCBldmVudCBpcyB0cmlnZ2VyZWQgb24gdGhlIHByb2Z2aXMgb2JqZWN0IChjYXV6aW5nCiAgICAvLyB6b29taW5nKS4gSW4gb3JkZXIgdG8gZGVhbCB3aXRoIHRoaXMsIHdlIHN0YXJ0IGVhY2ggcHJvZnZpcyBvYmplY3Qgd2l0aAogICAgLy8gem9vbWluZyBkaXNhYmxlZCwgYW5kIGFsc28gZGlzYWJsZSB6b29taW5nIHdoZW4gdGhlIGN1cnNvciBsZWF2ZXMgdGhlCiAgICAvLyBwcm9mdmlzIGRpdi4gVGhhdCB3YXksIGV2ZW4gaWYgYSBtb3VzZXdoZWVsIGV2ZW50IGdldHMgdHJpZ2dlcmVkIG9uIHRoZQogICAgLy8gb2JqZWN0IGJlZm9yZSB0aGUgbW91c2Vtb3ZlLCBpdCB3b24ndCBjYXVzZSB6b29taW5nLgoKICAgIC8vIGxhc3RTY3JlZW4gY2FuIG5ldmVyIGJlIG51bGwsIGJ1dCBpdHMgeCBhbmQgeSBjYW4uCiAgICB2YXIgbGFzdFNjcmVlbiA9IHsgeDogbnVsbCwgeTogbnVsbCB9OwoKICAgICQoZG9jdW1lbnQpCiAgICAgIC5vbigibW91c2V3aGVlbCBET01Nb3VzZVNjcm9sbCIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAvLyBBbnkgbW91c2Vtb3ZlIGV2ZW50cyBhdCB0aGlzIHNjcmVlbiBwb3NpdGlvbiB3aWxsIGJlIGlnbm9yZWQuCiAgICAgICAgbGFzdFNjcmVlbiA9IHsgeDogZS5vcmlnaW5hbEV2ZW50LnNjcmVlblgsIHk6IGUub3JpZ2luYWxFdmVudC5zY3JlZW5ZIH07CiAgICAgIH0pCiAgICAgIC5vbigibW91c2Vtb3ZlIiwgIi5wcm9mdmlzIiwgZnVuY3Rpb24oZSkgewogICAgICAgIC8vIERpZCB0aGUgbW91c2UgcmVhbGx5IG1vdmU/CiAgICAgICAgaWYgKGxhc3RTY3JlZW4ueCAhPT0gbnVsbCAmJiBlLnNjcmVlblggIT09IGxhc3RTY3JlZW4ueCB8fCBlLnNjcmVlblkgIT09IGxhc3RTY3JlZW4ueSkgewogICAgICAgICAgJCh0aGlzKS5kYXRhKCJwcm9mdmlzIikuZmxhbWVHcmFwaC5lbmFibGVab29tKCk7CiAgICAgICAgICBsYXN0U2NyZWVuID0geyB4OiBudWxsLCB5OiBudWxsIH07CiAgICAgICAgfQogICAgICB9KQogICAgICAub24oIm1vdXNlZG93biIsICIucHJvZnZpcyIsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAvLyBDbGlja2luZyBhbHdheXMgZW5hYmxlcyB6b29taW5nLgogICAgICAgICQodGhpcykuZGF0YSgicHJvZnZpcyIpLmZsYW1lR3JhcGguZW5hYmxlWm9vbSgpOwogICAgICAgIGxhc3RTY3JlZW4gPSB7IHg6IG51bGwsIHk6IG51bGwgfTsKICAgICAgfSkKICAgICAgLm9uKCJtb3VzZWxlYXZlIiwgIi5wcm9mdmlzIiwgZnVuY3Rpb24oZSkgewogICAgICAgICQodGhpcykuZGF0YSgicHJvZnZpcyIpLmZsYW1lR3JhcGguZGlzYWJsZVpvb20oKTsKICAgICAgfSk7CiAgfSkoKTsKCgogIGlmICghRWxlbWVudC5wcm90b3R5cGUuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCkgewogICAgRWxlbWVudC5wcm90b3R5cGUuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCA9IGZ1bmN0aW9uIChjZW50ZXJJZk5lZWRlZCkgewogICAgICBjZW50ZXJJZk5lZWRlZCA9IGFyZ3VtZW50cy5sZW5ndGggPT09IDAgPyB0cnVlIDogISFjZW50ZXJJZk5lZWRlZDsKCiAgICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGUsCiAgICAgICAgICBwYXJlbnRDb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUocGFyZW50LCBudWxsKSwKICAgICAgICAgIHBhcmVudEJvcmRlclRvcFdpZHRoID0gcGFyc2VJbnQocGFyZW50Q29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItdG9wLXdpZHRoJykpLAogICAgICAgICAgcGFyZW50Qm9yZGVyTGVmdFdpZHRoID0gcGFyc2VJbnQocGFyZW50Q29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItbGVmdC13aWR0aCcpKSwKICAgICAgICAgIG92ZXJUb3AgPSB0aGlzLm9mZnNldFRvcCAtIHBhcmVudC5vZmZzZXRUb3AgPCBwYXJlbnQuc2Nyb2xsVG9wLAogICAgICAgICAgb3ZlckJvdHRvbSA9ICh0aGlzLm9mZnNldFRvcCAtIHBhcmVudC5vZmZzZXRUb3AgKyB0aGlzLmNsaWVudEhlaWdodCAtIHBhcmVudEJvcmRlclRvcFdpZHRoKSA+IChwYXJlbnQuc2Nyb2xsVG9wICsgcGFyZW50LmNsaWVudEhlaWdodCksCiAgICAgICAgICBvdmVyTGVmdCA9IHRoaXMub2Zmc2V0TGVmdCAtIHBhcmVudC5vZmZzZXRMZWZ0IDwgcGFyZW50LnNjcm9sbExlZnQsCiAgICAgICAgICBvdmVyUmlnaHQgPSAodGhpcy5vZmZzZXRMZWZ0IC0gcGFyZW50Lm9mZnNldExlZnQgKyB0aGlzLmNsaWVudFdpZHRoIC0gcGFyZW50Qm9yZGVyTGVmdFdpZHRoKSA+IChwYXJlbnQuc2Nyb2xsTGVmdCArIHBhcmVudC5jbGllbnRXaWR0aCksCiAgICAgICAgICBhbGlnbldpdGhUb3AgPSBvdmVyVG9wICYmICFvdmVyQm90dG9tOwoKICAgICAgaWYgKChvdmVyVG9wIHx8IG92ZXJCb3R0b20pICYmIGNlbnRlcklmTmVlZGVkKSB7CiAgICAgICAgcGFyZW50LnNjcm9sbFRvcCA9IHRoaXMub2Zmc2V0VG9wIC0gcGFyZW50Lm9mZnNldFRvcCAtIHBhcmVudC5jbGllbnRIZWlnaHQgLyAyIC0gcGFyZW50Qm9yZGVyVG9wV2lkdGggKyB0aGlzLmNsaWVudEhlaWdodCAvIDI7CiAgICAgIH0KCiAgICAgIGlmICgob3ZlckxlZnQgfHwgb3ZlclJpZ2h0KSAmJiBjZW50ZXJJZk5lZWRlZCkgewogICAgICAgIHBhcmVudC5zY3JvbGxMZWZ0ID0gdGhpcy5vZmZzZXRMZWZ0IC0gcGFyZW50Lm9mZnNldExlZnQgLSBwYXJlbnQuY2xpZW50V2lkdGggLyAyIC0gcGFyZW50Qm9yZGVyTGVmdFdpZHRoICsgdGhpcy5jbGllbnRXaWR0aCAvIDI7CiAgICAgIH0KCiAgICAgIGlmICgob3ZlclRvcCB8fCBvdmVyQm90dG9tIHx8IG92ZXJMZWZ0IHx8IG92ZXJSaWdodCkgJiYgIWNlbnRlcklmTmVlZGVkKSB7CiAgICAgICAgdGhpcy5zY3JvbGxJbnRvVmlldyhhbGlnbldpdGhUb3ApOwogICAgICB9CiAgICB9OwogIH0KCiAgcmV0dXJuIHByb2Z2aXM7Cn0pKCk7Cg=="></script>
<link href="data:text/css;charset=utf-8,span%2Eoperator%2C%0Aspan%2Eparen%20%7B%0Acolor%3A%20rgb%28104%2C%20118%2C%20135%29%0A%7D%0Aspan%2Eliteral%20%7B%0Acolor%3A%20rgb%2888%2C%2072%2C%20246%29%0A%7D%0Aspan%2Enumber%20%7B%0Acolor%3A%20rgb%280%2C%200%2C%20205%29%3B%0A%7D%0Aspan%2Ecomment%20%7B%0Acolor%3A%20rgb%2876%2C%20136%2C%20107%29%3B%0A%7D%0Aspan%2Ekeyword%20%7B%0Acolor%3A%20rgb%280%2C%200%2C%20255%29%3B%0A%7D%0Aspan%2Eidentifier%20%7B%0Acolor%3A%20rgb%280%2C%200%2C%200%29%3B%0A%7D%0Aspan%2Estring%20%7B%0Acolor%3A%20rgb%283%2C%20106%2C%207%29%3B%0A%7D%0A" rel="stylesheet" />
<script src="data:application/x-javascript;base64,"></script>
<script src="data:application/x-javascript;base64,SFRNTFdpZGdldHMud2lkZ2V0KHsKCiAgbmFtZTogJ3Byb2Z2aXMnLAoKICB0eXBlOiAnb3V0cHV0JywKCiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oZWwsIHdpZHRoLCBoZWlnaHQpIHsKCiAgICByZXR1cm4gewogICAgICAvLyBUT0RPOiBhZGQgaW5zdGFuY2UgZmllbGRzIGFzIHJlcXVpcmVkCiAgICB9OwoKICB9LAoKICByZW5kZXJWYWx1ZTogZnVuY3Rpb24oZWwsIHgsIGluc3RhbmNlKSB7CiAgICBwcm9mdmlzLnJlbmRlcihlbCwgeC5tZXNzYWdlKTsKICB9LAoKICByZXNpemU6IGZ1bmN0aW9uKGVsLCB3aWR0aCwgaGVpZ2h0LCBpbnN0YW5jZSkgewoKICB9Cgp9KTsK"></script>
</head>
<body style="background-color: white;">
<div id="htmlwidget_container">
<div id="htmlwidget-96c97e5f119aa49c6fbf" class="profvis html-widget" style="width:960px;height:500px;">

</div>
</div>
<script type="application/json" data-for="htmlwidget-96c97e5f119aa49c6fbf">{"x":{"message":{"prof":{"time":[1,1,1,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,6,6,6,7,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,19,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,24,25,25,25,25,25,26,26,26,27,27,27,28,28,28,28,28,29,29,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,33,33,33,34,34,34,34,34,35,35,35,35,35,36,36,36,36,36,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,40,40,40,40,40,41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,44,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,48,49,49,49,49,49,50,50,50,50,50,51,51,51,51,51,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,56,56,56,56,57,57,58,58,58,58,58,59,59,59,59,60,60,60,60,60,60,60,61,61,61,61,61,61,61,62,62,62,62,62,63,63,63,64,64,64,65,65,65,65,65,66,66,66,66,66,67,67,67,67,67,67,67,68,68,68,68,68,69,69,69,69,69,69,70,70,70,70,71,71,71,71,71,72,72,72,72,73,73,73,73,73,74,74,74,74,75,75,75,75,76,76,76,76,76,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,81,81,81,81,81,82,82,82,83,83,83,84,84,84,84,84,85,85,85,85,85,86,86,86,86,86,87,87,87,87,87,88,88,88,89,89,89,89,90,90,90,90,90,91,91,91,92,92,92,92,92,93,93,93,93,93,93,94,94,94,94,94,95,95,95,95,95,95,96,96,96,96,96,97,97,97,97,97,98,98,98,98,98,99,99,99,99,99,100,100,100,100,100,101,101,101,101,101,102,102,102,102,103,103,103,103,104,104,104,104,104,105,105,105,105,106,106,107,107,107,107,107,108,108,108,108,108,109,109,109,109,109,110,110,110,110,110,111,111,111,112,112,112,113,113,113,113,113,114,114,114,114,114,115,115,115,115,115,116,116,116,117,117,117,118,118,118,118,119,119,119,119,119,119,120,120,120,120,120,121,121,121,121,121,122,122,122,122,122,122,123,123,123,123,123,124,124,124,124,124,125,125,125,125,125,126,126,126,126,126,127,127,127,127,128,128,128,128,128,129,129,129,129,129,130,130,130,130,130,130,130,131,131,131,131,132,132,132,132,133,133,133,133,133,133,134,134,134,134,135,135,135,135,136,136,136,136,137,137,137,137,138,138,138,138,138,139,139,139,139,139,140,140,140,140,140,141,141,141,141,141,142,142,142,143,143,143,144,144,144,144,144,145,145,145,145,145,146,146,146,146,146,147,147,147,148,148,148,149,149,149,150,150,150,150,150,150,151,151,151,151,152,152,152,152,152,152,152,153,153,153,153,153,154,154,154,154,154,155,155,155,155,155,156,156,156,156,156,157,157,157,157,157,157,158,158,158,158,158,159,159,159,159,159,160,160,160,160,160,161,161,161,161,162,162,162,162,162,163,163,163,164,164,164,164,164,165,165,165,165,165,165,166,166,166,166,167,167,167,167,168,168,168,168,168,169,169,169,169,169,170,170,170,170,170,171,171,171,171,171,172,172,172,172,172,173,173,173,173,173,174,174,174,174,174,175,175,175,176,176,176,177,177,177,177,177,178,178,178,178,178,179,179,179,179,179,180,180,180,181,181,181,182,182,182,182,183,183,183,183,183,183,184,184,184,184,184,185,185,185,185,185,185,186,186,186,186,186,187,187,187,187,188,188,188,188,188,189,189,189,190,190,190,190,191,191,191,191,191,192,192,192,192,192,193,193,193,193,193,194,194,194,194,194,195,195,195,195,195,196,196,196,196,196,196,197,197,197,197,198,198,198,198,198,199,199,199,199,200,200,200,200,201,201,201,201,201,202,202,202,202,202,203,203,203,203,203,204,204,204,204,204,205,205,205,205,205,206,206,206,207,207,207,207,207,208,208,208,209,209,209,210,210,210,210,210,211,211,211,211,211,212,212,212,212,212,213,213,213,214,214,214,215,215,216,216,216,216,217,217,217,217,217,218,218,218,218,219,219,219,219,219,219,219,220,220,220,220,220,221,221,221,221,221,221,222,222,222,222,222,223,223,223,223,223,223,223,224,224,224,224,224,225,225,225,225,225,226,226,226,226,226,227,227,227,227,228,228,228,228,228,229,229,229,229,229,230,230,230,230,230,230,231,231,231,231,232,232,232,232,232,233,233,233,233,234,234,234,234,234,234,234,235,235,235,235,236,236,236,236,237,237,237,237,238,238,238,238,238,239,239,239,239,239,240,240,240,240,240,241,241,241,241,241,241,242,242,242,242,242,243,243,243,243,243,244,244,245,245,245,246,246,246,246,246,247,247,247,247,247,248,248,248,248,248,249,249,249,249,249,250,250,250,250,251,251,251,252,252,252,252,252,253,253,253,253,253,254,254,254,254,254,255,255,255,255,256,256,256,256,256,257,257,257,258,258,258,258,259,259,259,260,260,260,261,261,261,261,261,261,262,262,262,262,262,263,263,263,263,263,264,264,264,264,264,264,264,265,265,265,265,265,266,266,266,266,266,267,267,267,267,267,267,268,268,268,268,268,269,269,269,269,270,270,270,270,271,271,271,272,272,272,272,272,273,273,273,273,273,274,274,274,274,274,275,275,275,275,275,276,276,276,276,276,277,277,277,278,278,278,278,278,279,279,279,280,280,280,281,281,281,281,281,282,282,282,282,282,283,283,283,283,283,284,284,284,284,284,284,285,285,285,285,285,286,286,286,287,287,288,288,288,289,289,289,290,290,290,291,291,292,292,292,292,292,293,293,293,293,293,294,294,294,295,295,295,295,295,295,295,296,296,296,296,296,297,297,297,297,297,298,298,298,299,299,299,300,300,300,300,300,301,301,301,301,301,302,302,302,302,303,303,303,303,303,303,303,304,304,304,304,305,305,305,305,306,306,306,306,307,307,307,307,307,308,308,309,309,309,309,309,310,310,310,310,310,311,311,311,311,311,312,312,312,312,312,313,313,313,313,313,314,314,314,314,314,315,315,315,315,315,316,316,316,316,316,317,317,317,318,318,318,318,318,319,319,319,319,319,320,320,320,320,320,321,321,321,322,322,322,323,323,324,324,324,325,325,325,325,326,326,326,326,326,327,327,327,327,327,328,328,328,328,328,329,329,329,329,329,330,330,330,330,330,330,331,331,331,331,331,332,332,332,332,332,333,333,333,333,333,333,334,334,334,334,334,335,335,335,335,335,336,336,336,336,336,337,337,337,337,338,338,338,339,339,339,339,340,340,340,340,341,341,341,342,342,342,342,342,343,343,343,343,343,344,344,344,344,344,345,345,345,345,345,345,346,346,346,346,346,347,347,347,347,347,348,348,348,348,348,349,349,349,350,350,350,350,350,351,351,351,351,351,352,352,352,352,352,353,353,353,353,353,354,354,354,354,354,354,355,355,355,356,356,356,357,357,357,358,358,358,358,358,359,359,359,359,359,360,360,360,360,360,360,361,361,361,361,361,361,362,362,362,362,362,363,363,363,363,364,364,364,364,365,365,365,365,366,366,366,366,367,367,367,367,368,368,368,369,369,369,369,369,370,370,370,370,370,370,371,371,371,371,371,372,372,372,372,372,373,373,373,373,373,373,374,374,374,374,374,375,375,375,375,376,376,376,376,377,377,377,377,377,378,378,378,378,379,379,379,379,380,380,380,380,380,381,381,381,381,381,382,382,382,382,382,383,383,383,383,383,384,384,384,384,384,385,385,385,385,385,386,386,386,386,387,387,387,387,387,388,388,388,388,388,389,389,389,390,390,390,390,390,391,391,391,391,391,392,392,392,392,392,393,393,393,393,393,394,394,394,394,394,395,395,395,396,396,396,396,397,397,398,398,398,398,399,399,399,399,400,400,400,400,400,401,401,401,401,401,402,402,402,402,402,403,403,403,404,404,404,404,404,404,404,405,405,405,405,405,406,406,406,406,406,407,407,407,407,407,408,408,408,408,408,409,409,409,409,410,410,410,410,410,411,411,411,411,412,412,412,412,413,413,413,413,414,414,414,414,415,415,415,416,416,416,416,416,417,417,417,417,417,418,418,418,418,418,419,419,419,419,419,420,420,420,420,420,421,421,421,421,421,422,422,422,422,422,423,423,423,423,423,424,424,424,425,425,425,425,425,426,426,426,426,426,427,427,427,427,427,428,428,428,428,428,429,429,429,429,429,430,430,430,431,431,431,432,432,432,433,433,433,433,433,434,434,434,434,434,435,435,435,436,436,436,436,436,436,437,437,437,437,437,438,438,438,438,438,439,439,439,439,439,440,440,440,440,440,441,441,441,441,441,442,442,442,442,442,442,442,443,443,443,443,443,444,444,444,445,445,445,445,445,445,445,446,446,446,446,447,447,447,447,448,448,448,448,449,449,449,449,449,450,450,450,450,451,451,451,451,451,452,452,452,452,452,453,453,453,453,453,454,454,454,454,454,455,455,455,455,455,456,456,456,456,456,457,457,457,457,457,458,458,458,458,458,459,459,459,460,460,460,460,460,461,461,461,461,461,462,462,462,462,462,463,463,463,463,463,464,464,464,464,464,465,465,465,465,466,466,466,467,467,468,468,468,468,469,469,469,469,470,470,470,470,471,471,471,471,472,472,472,472,473,473,473,473,473,474,474,474,474,474,475,475,475,475,475,476,476,476,476,476,477,477,477,477,478,478,478,479,479,479,479,479,480,480,480,480,480,480,480,481,481,481,481,481,482,482,482,482,483,483,483,483,483,484,484,484,484,485,485,485,485,486,486,486,486,487,487,487,487,488,488,488,488,489,489,489,489,489,490,490,490,490,490,491,491,491,491,491,492,492,492,492,492,493,493,493,493,493,494,494,494,494,494,495,495,495,495,495,496,496,496,496,496,497,497,497,497,497,498,498,498,499,499,499,499,499,500,500,500,500,500,501,501,501,501,501,502,502,502,502,502,503,503,503,503,503,504,504,504,504,505,505,505,506,506,507,507,507,507,508,508,508,508,509,509,509,509,510,510,510,510,510,511,511,511,511,511,512,512,512,512,512,513,513,513,513,513,513,514,514,514,515,515,515,516,516,516,516,516,516,516,517,517,517,517,517,518,518,518,518,518,519,519,519,519,520,520,520,520,520,521,521,521,521,522,522,522,522,522,523,523,523,523,523,524,524,524,524,525,525,525,525,526,526,527,527,527,527,527,528,528,528,528,528,529,529,529,529,529,530,530,530,530,530,531,531,531,531,531,532,532,532,532,532,533,533,533,533,533,534,534,534,534,534,535,535,535,535,535,536,536,536,537,537,537,537,537,538,538,538,538,538,539,539,539,539,539,540,540,540,540,540,541,541,541,541,541,542,542,542,543,543,543,544,544,544,545,545,545,545,545,546,546,546,547,547,547,547,547,548,548,548,548,548,548,549,549,549,549,549,550,550,550,550,550,551,551,551,552,552,552,552,552,552,552,553,553,553,553,553,553,553,554,554,554,554,554,554,554,555,555,555,555,555,555,555,556,556,556,557,557,557,557,557,558,558,558,558,558,559,559,559,559,560,560,560,560,560,561,561,561,561,562,562,562,562,562,563,563,563,563,564,564,564,564,565,565,565,565,566,566,566,566,566,567,567,567,567,567,568,568,568,568,568,569,569,569,569,569,570,570,570,570,570,571,571,571,571,571,572,572,572,572,572,573,573,573,573,573,574,574,574,574,574,575,575,575,575,575,576,576,576,577,577,577,577,577,578,578,578,578,578,579,579,579,579,579,580,580,580,580,580,581,581,581,581,581,582,582,582,583,583,583,584,584,584,585,585,585,586,586,586,586,586,587,587,587,587,587,588,588,588,588,588,589,589,589,589,589,590,590,590,590,590,591,591,591,591,591,591,592,592,592,592,592,593,593,593,593,593,594,594,594,594,594,594,595,595,595,595,595,596,596,596,596,596,597,597,597,597,598,598,598,598,599,599,599,600,600,600,600,600,601,601,601,601,602,602,602,602,603,603,603,603,603,604,604,604,604,604,605,605,605,605,605,606,606,606,606,606,607,607,607,607,607,608,608,608,608,608,609,609,609,609,609,610,610,610,611,611,611,611,611,612,612,612,612,612,613,613,613,614,614,614,614,614,614,615,615,615,615,615,616,616,616,616,616,617,617,617,617,617,618,618,618,618,618,619,619,619,619,620,620,620,621,621,622,622,622,622,623,623,623,623,624,624,624,624,625,625,625,625,625,626,626,626,626,626,626,627,627,627,627,627,628,628,628,628,628,629,629,629,629,629,630,630,630,631,631,631,631,631,632,632,632,632,632,633,633,633,633,633,634,634,634,635,635,635,635,635,635,636,636,636,636,636,637,637,637,637,638,638,638,638,639,639,639,639,639,640,640,640,640,641,641,641,641,642,642,642,642,642,643,643,643,643,643,644,644,644,644,644,645,645,645,645,645,646,646,646,646,646,647,647,647,647,647,648,648,648,648,648,649,649,649,649,649,650,650,650,650,650,651,651,651,651,651,652,652,652,653,653,653,654,654,654,654,654,655,655,655,655,655,656,656,656,656,656,657,657,657,657,657,658,658,658,658,658,659,659,659,659,660,660,660,661,661,661,661,661,661,661,662,662,662,663,663,663,664,664,664,664,664,664,665,665,665,665,665,666,666,666,666,666,666,667,667,667,667,667,667,668,668,668,668,668,668,669,669,669,669,669,669,670,670,670,670,670,670,671,671,671,671,671,672,672,672,672,672,673,673,673,673,673,673,674,674,674,674,674,675,675,675,675,675,676,676,676,676,676,676,677,677,677,677,678,678,678,678,678,679,679,679,679,680,680,680,680,681,681,681,681,682,682,682,682,683,683,683,683,684,684,684,684,684,685,685,685,685,685,686,686,686,686,686,687,687,687,687,687,688,688,688,688,688,689,689,689,689,689,690,690,690,690,690,691,691,691,691,691,692,692,692,692,692,693,693,693,693,693,694,694,694,695,695,695,696,696,696,696,696,697,697,697,697,697,698,698,698,698,698,699,699,699,699,699,700,700,700,700,700,700,701,701,701,701,702,702,702,703,703,703,704,704,704,704,704,705,705,705,705,706,706,706,706,706,707,707,707,707,707,708,708,708,708,708,709,709,709,710,710,710,710,710,710,711,711,711,711,711,712,712,712,712,712,713,713,713,714,714,714,715,715,715,716,716,716,716,716,717,717,717,717,718,718,718,718,718,719,719,719,719,720,720,720,720,721,721,721,721,721,722,722,722,722,723,723,723,723,723,724,724,724,724,724,725,725,725,725,725,726,726,726,726,726,727,727,727,727,727,728,728,728,728,728,729,729,729,729,729,730,730,730,730,730,731,731,731,731,731,732,732,732,733,733,733,734,734,734,734,734,735,735,735,735,735,736,736,736,736,736,737,737,737,737,737,738,738,738,738,738,739,739,739,740,740,740,741,741,741,742,742,742,742,742,742,743,743,743,743,744,744,744,744,744,745,745,745,745,746,746,746,746,747,747,747,747,748,748,748,748,749,749,749,749,750,750,750,750,750,751,751,751,751,751,752,752,752,752,752,753,753,753,753,753,754,754,754,755,755,755,755,755,755,756,756,756,756,756,757,757,757,757,757,758,758,758,758,758,759,759,759,760,760,760,760,761,761,761,761,762,762,763,763,763,763,763,764,764,764,764,764,765,765,765,765,765,765,766,766,766,766,766,767,767,767,767,767,768,768,768,768,768,769,769,769,769,769,770,770,770,770,770,771,771,771,771,771,772,772,772,773,773,773,774,774,774,774,774,775,775,775,775,775,776,776,776,776,776,777,777,777,777,777,778,778,778,778,778,779,779,779,780,780,780,781,781,781,782,782,782,782,783,783,783,783,783,784,784,784,784,784,784,785,785,785,785,785,786,786,786,786,786,786,787,787,787,787,788,788,788,788,788,789,789,789,789,789,790,790,790,790,790,790,791,791,791,791,791,792,792,792,792,792,793,793,793,793,793,794,794,794,794,795,795,795,795,796,796,796,796,796,797,797,797,797,797,798,798,798,798,798,799,799,799,799,799,800,800,800,800,801,801,801,801,802,802,803,803,803,803,803,804,804,804,804,804,805,805,805,805,805,805,806,806,806,806,806,807,807,807,807,807,808,808,808,808,808,809,809,809,809,809,810,810,810,810,810,811,811,811,811,811,812,812,812,813,813,813,814,814,814,814,814,815,815,815,815,815,816,816,816,816,816,817,817,817,817,817,818,818,818,818,818,819,819,819,819,820,820,820,820,821,821,821,822,822,822,823,823,823,824,824,824,824,824,825,825,825,825,826,826,826,827,827,827,827,828,828,828,828,828,829,829,829,829,829,829,830,830,830,830,831,831,831,831,831,832,832,832,832,832,833,833,833,833,834,834,834,835,835,835,835,836,836,836,836,836,837,837,837,837,838,838,838,838,839,839,839,839,840,840,840,840,841,841,841,841,842,842,842,842,842,843,843,844,844,844,844,844,845,845,845,845,845,846,846,846,846,846,847,847,847,847,847,848,848,848,848,848,849,849,849,849,849,850,850,850,850,850,851,851,851,851,851,852,852,852,852,852,853,853,853,854,854,854,854,854,855,855,855,855,855,856,856,856,856,856,857,857,857,857,857,858,858,858,858,858,859,859,859,859,859,860,860,860,861,861,861,862,862,862,862,862,862,862,862,863,863,863,864,864,864,864,864,864,865,865,865,865,866,866,866,866,866,867,867,867,867,867,868,868,868,868,868,869,869,869,869,869,870,870,870,870,870,871,871,871,871,871,872,872,872,872,872,873,873,873,873,873,873,874,874,874,874,874,875,875,875,875,875,876,876,876,876,876,876,876,877,877,877,877,877,878,878,878,878,878,879,879,879,879,880,880,880,880,881,881,881,882,882,882,882,883,883,883,883,884,884,884,884,884,885,885,885,886,886,886,886,886,887,887,887,887,887,888,888,888,888,888,889,889,889,889,889,890,890,890,890,890,890,891,891,891,891,891,892,892,892,892,892,893,893,893,893,893,894,894,894,894,894,895,895,895,896,896,896,897,897,897,897,897,898,898,898,898,898,899,899,899,899,899,900,900,900,900,900,901,901,901,901,901,902,902,902,902,902,902,903,903,903,904,904,904,905,905,905,906,906,906,906,906,907,907,907,907,908,908,908,909,909,909,909,909,910,910,910,910,910,910,911,911,911,912,912,912,912,912,912,913,913,913,914,914,914,914,915,915,915,915,915,916,916,916,916,916,916,916,917,917,917,917,917,918,918,918,918,918,919,919,919,919,920,920,920,920,920,921,921,921,921,922,922,922,922,923,923,923,923,924,924,924,924,924,925,925,925,925,925,926,926,926,926,926,927,927,927,927,927,928,928,928,928,928,929,929,929,929,929,930,930,930,930,930,931,931,931,931,931,932,932,932,932,932,933,933,933,933,933,934,934,935,935,935,936,936,936,937,937,937,937,937,938,938,938,938,938,939,939,939,939,939,940,940,940,940,940,941,941,941,941,941,942,942,942,943,943,943,944,944,944,945,945,945,946,946,946,946,947,947,947,947,948,948,948,948,949,949,949,949,950,950,950,950,950,950,951,951,951,951,951,951,952,952,952,952,952,952,953,953,953,953,953,953,954,954,954,954,954,955,955,955,955,955,956,956,956,956,956,957,957,957,957,957,958,958,958,958,958,959,959,959,959,959,960,960,960,960,960,961,961,961,961,961,962,962,962,962,962,963,963,963,963,964,964,964,964,964,965,965,965,965,966,966,966,966,967,967,967,967,967,968,968,968,968,969,969,969,969,970,970,970,970,970,971,971,971,971,971,972,972,972,972,972,973,973,973,973,973,974,974,974,974,974,975,975,975,975,975,976,976,976,976,976,977,977,977,977,977,978,978,978,978,978,979,979,979,979,979,980,980,980,980,980,981,981,981,982,982,982,983,983,983,983,983,984,984,984,984,984,985,985,985,985,985,986,986,986,986,986,987,987,987,987,987,987,988,988,988,988,988,989,989,989,990,990,990,991,991,991,992,992,992,992,992,992,993,993,993,993,994,994,994,994,994,995,995,995,995,996,996,996,996,996,997,997,997,997,997,998,998,998,998,998,999,999,999,999,999,999,1000,1000,1000,1000,1000,1000,1001,1001,1001,1001,1001,1001,1002,1002,1002,1003,1003,1003,1003,1003,1003,1004,1004,1004,1004,1004,1004,1005,1005,1005,1005,1006,1006,1006,1006,1006,1007,1007,1007,1007,1007,1007,1008,1008,1008,1008,1009,1009,1009,1009,1010,1010,1010,1010,1011,1011,1011,1011,1012,1012,1013,1013,1013,1013,1013,1014,1014,1014,1014,1014,1015,1015,1015,1015,1015,1016,1016,1016,1016,1016,1017,1017,1017,1017,1017,1018,1018,1018,1018,1018,1019,1019,1019,1019,1019,1020,1020,1020,1020,1020,1021,1021,1021,1021,1021,1022,1022,1022,1023,1023,1023,1024,1024,1024,1024,1024,1025,1025,1025,1025,1025,1026,1026,1026,1026,1026,1027,1027,1027,1027,1027,1028,1028,1028,1028,1028,1029,1029,1029,1029,1029,1030,1030,1030,1031,1031,1031,1032,1032,1032,1033,1033,1033,1033,1033,1034,1034,1034,1034,1035,1035,1035,1035,1035,1035,1036,1036,1036,1036,1036,1037,1037,1037,1037,1037,1038,1038,1038,1038,1038,1038,1039,1039,1039,1039,1039,1039,1040,1040,1040,1040,1040,1041,1041,1041,1041,1041,1042,1042,1042,1042,1042,1042,1042,1043,1043,1043,1043,1043,1044,1044,1044,1045,1045,1045,1045,1046,1046,1046,1046,1046,1047,1047,1047,1047,1048,1048,1048,1048,1049,1049,1049,1049,1049,1050,1050,1050,1050,1051,1051,1051,1051,1052,1052,1053,1053,1053,1053,1053,1054,1054,1054,1054,1054,1055,1055,1055,1055,1055,1056,1056,1056,1056,1056,1057,1057,1057,1057,1057,1058,1058,1058,1058,1058,1059,1059,1059,1059,1059,1060,1060,1060,1060,1061,1061,1061,1061,1061,1062,1062,1062,1062,1062,1063,1063,1063,1063,1063,1063,1064,1064,1064,1065,1065,1065,1065,1065,1066,1066,1066,1066,1066,1067,1067,1067,1067,1067,1068,1068,1068,1068,1068,1069,1069,1069,1069,1069,1070,1070,1070,1070,1070,1071,1071,1071,1072,1072,1072,1073,1073,1073,1073,1074,1074,1074,1074,1075,1075,1075,1075,1076,1076,1076,1076,1076,1076,1077,1077,1077,1077,1077,1077,1078,1078,1078,1078,1078,1078,1079,1079,1079,1079,1079,1079,1080,1080,1080,1081,1081,1081,1081,1081,1082,1082,1082,1082,1082,1083,1083,1083,1083,1083,1084,1084,1084,1084,1084,1085,1085,1085,1085,1085,1085,1085,1086,1086,1086,1086,1086,1087,1087,1087,1087,1087,1088,1088,1088,1088,1088,1088,1089,1089,1089,1089,1089,1090,1090,1090,1091,1091,1091,1091,1092,1092,1092,1092,1093,1093,1093,1093,1094,1094,1094,1094,1095,1095,1096,1096,1096,1096,1096,1097,1097,1097,1097,1097,1097,1098,1098,1098,1098,1098,1099,1099,1099,1100,1100,1100,1100,1100,1101,1101,1101,1101,1101,1102,1102,1102,1102,1102,1103,1103,1103,1103,1103,1104,1104,1104,1104,1104,1105,1105,1105,1105,1105,1105,1106,1106,1106,1106,1106,1107,1107,1107,1107,1107,1108,1108,1108,1109,1109,1109,1110,1110,1110,1110,1110,1111,1111,1111,1111,1111,1112,1112,1112,1112,1112,1113,1113,1113,1113,1113,1113,1114,1114,1114,1114,1114,1115,1115,1115,1115,1115,1116,1116,1116,1117,1117,1117,1118,1118,1118,1119,1119,1119,1120,1120,1120,1120,1121,1121,1121,1121,1121,1122,1122,1122,1122,1123,1123,1123,1123,1123,1123,1124,1124,1124,1124,1124,1125,1125,1125,1126,1126,1126,1126,1127,1127,1127,1127,1127,1128,1128,1128,1128,1128,1129,1129,1129,1129,1130,1130,1130,1130,1130,1131,1131,1131,1131,1131,1132,1132,1132,1132,1132,1133,1133,1133,1133,1134,1134,1134,1134,1134,1135,1135,1135,1135,1136,1136,1136,1136,1137,1137,1137,1137,1137,1138,1138,1138,1138,1139,1139,1139,1139,1140,1140,1141,1141,1141,1141,1141,1142,1142,1142,1142,1142,1143,1143,1143,1143,1143,1144,1144,1144,1144,1144,1145,1145,1145,1145,1145,1146,1146,1146,1146,1146,1147,1147,1147,1147,1147,1148,1148,1148,1148,1148,1149,1149,1149,1149,1149,1150,1150,1150,1150,1150,1150,1151,1151,1151,1152,1152,1152,1153,1153,1153,1153,1153,1154,1154,1154,1154,1154,1155,1155,1155,1155,1155,1156,1156,1156,1156,1156,1157,1157,1157,1157,1157,1158,1158,1158,1158,1158,1159,1159,1159,1160,1160,1160,1161,1161,1162,1162,1162,1163,1163,1163,1163,1163,1164,1164,1164,1164,1164,1165,1165,1165,1165,1165,1165,1166,1166,1166,1166,1166,1166,1167,1167,1167,1167,1167,1167,1168,1168,1168,1168,1168,1168,1169,1169,1169,1170,1170,1170,1170,1170,1171,1171,1171,1171,1171,1172,1172,1172,1172,1172,1172,1173,1173,1173,1173,1173,1174,1174,1174,1174,1174,1175,1175,1175,1175,1175,1175,1175,1176,1176,1176,1176,1176,1177,1177,1177,1177,1177,1178,1178,1178,1178,1178,1178,1178,1179,1179,1179,1179,1180,1180,1180,1181,1181,1181,1181,1182,1182,1182,1182,1182,1183,1183,1183,1183,1184,1184,1184,1184,1185,1185,1185,1185,1186,1186,1186,1186,1186,1186,1186,1186,1187,1187,1187,1187,1187,1188,1188,1188,1188,1188,1189,1189,1189,1189,1189,1190,1190,1190,1190,1190,1191,1191,1191,1191,1191,1191,1192,1192,1192,1192,1192,1193,1193,1193,1193,1193,1194,1194,1194,1194,1195,1195,1195,1195,1195,1196,1196,1196,1196,1196,1197,1197,1197,1198,1198,1198,1199,1199,1199,1199,1199,1200,1200,1200,1200,1200,1201,1201,1201,1201,1201,1202,1202,1202,1202,1202,1202,1203,1203,1203,1203,1203,1204,1204,1204,1204,1204,1205,1205,1205,1206,1206,1206,1207,1207,1208,1208,1208,1209,1209,1209,1209,1210,1210,1210,1210,1210,1211,1211,1211,1211,1212,1212,1212,1212,1212,1212,1213,1213,1213,1213,1213,1213,1214,1214,1214,1214,1214,1214,1215,1215,1215,1215,1215,1215,1216,1216,1216,1216,1216,1217,1217,1217,1217,1217,1218,1218,1218,1218,1218,1219,1219,1219,1219,1219,1220,1220,1220,1221,1221,1221,1222,1222,1222,1222,1222,1223,1223,1223,1223,1223,1224,1224,1224,1225,1225,1225,1225,1225,1226,1226,1226,1226,1227,1227,1227,1227,1228,1228,1228,1228,1229,1229,1229,1229,1229,1230,1230,1230,1230,1231,1231,1232,1232,1232,1232,1232,1233,1233,1233,1233,1233,1234,1234,1234,1234,1234,1235,1235,1235,1235,1235,1236,1236,1236,1236,1236,1237,1237,1237,1237,1237,1238,1238,1238,1238,1238,1239,1239,1239,1239,1240,1240,1240,1240,1240,1241,1241,1241,1241,1241,1242,1242,1242,1243,1243,1243,1244,1244,1244,1244,1244,1245,1245,1245,1245,1245,1246,1246,1246,1246,1246,1247,1247,1247,1247,1247,1248,1248,1248,1248,1248,1249,1249,1249,1249,1249,1249,1250,1250,1250,1250,1250,1251,1251,1251,1252,1252,1252,1253,1253,1254,1254,1254,1254,1255,1255,1255,1255,1255,1256,1256,1256,1257,1257,1257,1257,1257,1258,1258,1258,1258,1258,1258,1259,1259,1259,1259,1259,1260,1260,1260,1260,1260,1261,1261,1261,1261,1261,1262,1262,1262,1262,1262,1263,1263,1263,1263,1263,1264,1264,1264,1264,1264,1265,1265,1265,1265,1265,1266,1266,1266,1266,1267,1267,1267,1267,1267,1268,1268,1268,1268,1268,1269,1269,1269,1269,1270,1270,1270,1270,1271,1271,1271,1271,1272,1272,1272,1272,1272,1273,1273,1273,1273,1274,1274,1274,1274,1274,1275,1275,1275,1275,1275,1276,1276,1276,1276,1276,1277,1277,1277,1277,1277,1278,1278,1278,1278,1278,1279,1279,1279,1279,1279,1280,1280,1280,1280,1280,1281,1281,1281,1281,1281,1282,1282,1282,1282,1282,1283,1283,1283,1283,1284,1284,1284,1285,1285,1285,1286,1286,1286,1286,1286,1287,1287,1287,1287,1287,1288,1288,1288,1288,1288,1289,1289,1289,1289,1289,1290,1290,1290,1290,1290,1291,1291,1291,1291,1291,1292,1292,1292,1293,1293,1293,1294,1294,1294,1295,1295,1295,1295,1296,1296,1296,1296,1297,1297,1297,1297,1297,1298,1298,1298,1298,1298,1299,1299,1299,1299,1299,1300,1300,1300,1300,1300,1301,1301,1301,1302,1302,1302,1302,1302,1303,1303,1303,1303,1303,1304,1304,1304,1304,1304,1305,1305,1305,1305,1305,1306,1306,1306,1306,1306,1306,1307,1307,1307,1307,1307,1308,1308,1308,1308,1308,1309,1309,1309,1309,1309,1309,1309,1310,1310,1310,1310,1311,1311,1311,1311,1311,1312,1312,1312,1312,1313,1313,1313,1313,1313,1313,1313,1314,1314,1314,1314,1315,1315,1315,1315,1316,1316,1316,1316,1317,1317,1318,1318,1318,1318,1318,1319,1319,1319,1319,1319,1320,1320,1320,1320,1320,1321,1321,1321,1321,1321,1322,1322,1322,1322,1322,1323,1323,1323,1323,1323,1324,1324,1324,1324,1324,1325,1325,1325,1325,1325,1326,1326,1326,1326,1326,1327,1327,1327,1327,1327,1328,1328,1328,1329,1329,1329,1329,1329,1330,1330,1330,1330,1330,1331,1331,1331,1331,1331,1332,1332,1332,1332,1332,1333,1333,1333,1333,1333,1333,1334,1334,1334,1334,1334,1335,1335,1335,1335,1335,1336,1336,1336,1337,1337,1337,1338,1338,1338,1338,1338,1338,1339,1339,1339,1340,1340,1340,1341,1341,1341,1341,1341,1342,1342,1342,1342,1342,1343,1343,1343,1343,1343,1343,1344,1344,1344,1344,1344,1345,1345,1345,1345,1345,1346,1346,1346,1346,1346,1347,1347,1347,1348,1348,1348,1348,1348,1349,1349,1349,1349,1349,1349,1349,1350,1350,1350,1350,1350,1351,1351,1351,1351,1351,1351,1352,1352,1352,1352,1352,1353,1353,1353,1353,1353,1354,1354,1354,1354,1355,1355,1355,1355,1356,1356,1356,1356,1356,1357,1357,1357,1357,1358,1358,1358,1358,1359,1359,1359,1359,1359,1360,1360,1360,1360,1360,1361,1361,1361,1361,1361,1362,1362,1362,1362,1362,1363,1363,1363,1363,1363,1364,1364,1364,1364,1364,1365,1365,1365,1365,1365,1366,1366,1366,1366,1366,1367,1367,1367,1367,1367,1368,1368,1368,1368,1368,1369,1369,1369,1369,1370,1370,1370,1371,1371,1371,1372,1372,1372,1372,1372,1373,1373,1373,1373,1373,1374,1374,1374,1374,1374,1375,1375,1375,1375,1375,1376,1376,1376,1376,1376,1377,1377,1377,1377,1377,1378,1378,1378,1379,1379,1379,1380,1380,1380,1381,1381,1381,1382,1382,1382,1382,1383,1383,1383,1383,1383,1384,1384,1384,1384,1384,1385,1385,1385,1385,1385,1386,1386,1386,1386,1386,1387,1387,1387,1388,1388,1388,1388,1388,1389,1389,1389,1389,1389,1390,1390,1390,1391,1391,1391,1391,1391,1392,1392,1392,1392,1392,1393,1393,1393,1393,1393,1394,1394,1394,1394,1394,1395,1395,1395,1395,1395,1395,1395,1396,1396,1396,1396,1397,1397,1397,1397,1397,1398,1398,1398,1398,1399,1399,1399,1399,1399,1400,1400,1400,1400,1401,1401,1401,1401,1402,1402,1402,1402,1403,1403,1403,1403,1403,1403,1404,1404,1404,1404,1404,1405,1405,1405,1405,1405,1406,1406,1406,1407,1407,1407,1407,1407,1408,1408,1408,1408,1408,1409,1409,1409,1409,1409,1410,1410,1410,1410,1410,1410,1411,1411,1411,1411,1411,1412,1412,1412,1412,1412,1413,1413,1413,1413,1414,1414,1414,1414,1414,1415,1415,1415,1415,1415,1416,1416,1416,1416,1416,1417,1417,1417,1418,1418,1418,1418,1418,1419,1419,1419,1419,1419,1420,1420,1420,1420,1420,1421,1421,1421,1421,1421,1422,1422,1422,1422,1422,1423,1423,1423,1423,1423,1424,1424,1424,1424,1425,1425,1425,1426,1426,1426,1427,1427,1427,1427,1428,1428,1428,1428,1428,1429,1429,1429,1429,1429,1430,1430,1430,1430,1431,1431,1431,1431,1431,1431,1432,1432,1432,1432,1432,1432,1433,1433,1433,1433,1433,1433,1434,1434,1434,1434,1434,1434,1435,1435,1435,1435,1435,1435,1436,1436,1436,1436,1436,1437,1437,1437,1437,1437,1438,1438,1438,1438,1438,1439,1439,1439,1439,1439,1440,1440,1440,1440,1440,1441,1441,1441,1441,1441,1441,1441,1442,1442,1442,1442,1442,1443,1443,1443,1443,1443,1444,1444,1444,1444,1444,1445,1445,1445,1445,1446,1446,1446,1446,1446,1447,1447,1447,1447,1448,1448,1448,1448,1449,1449,1449,1449,1449,1450,1450,1450,1450,1451,1451,1452,1452,1452,1452,1452,1453,1453,1453,1453,1453,1454,1454,1454,1454,1454,1455,1455,1455,1455,1455,1456,1456,1456,1456,1456,1457,1457,1457,1457,1457,1458,1458,1458,1458,1458,1459,1459,1459,1459,1459,1459,1460,1460,1460,1460,1460,1461,1461,1461,1461,1461,1462,1462,1462,1463,1463,1463,1464,1464,1464,1464,1464,1465,1465,1465,1465,1465,1466,1466,1466,1466,1466,1467,1467,1467,1467,1467,1467,1468,1468,1468,1468,1468,1468,1469,1469,1469,1469,1469,1470,1470,1470,1471,1471,1471,1472,1472,1473,1473,1473,1474,1474,1474,1474,1474,1475,1475,1475,1475,1475,1476,1476,1476,1476,1476,1477,1477,1477,1477,1478,1478,1478,1478,1478,1479,1479,1479,1479,1479,1480,1480,1480,1480,1480,1481,1481,1481,1481,1481,1481,1482,1482,1482,1482,1482,1483,1483,1483,1483,1483,1484,1484,1484,1484,1484,1484,1485,1485,1485,1486,1486,1486,1486,1486,1487,1487,1487,1487,1488,1488,1488,1488,1489,1489,1489,1489,1490,1490,1490,1490,1491,1491,1491,1491,1492,1492,1492,1492,1492,1493,1493,1494,1494,1494,1494,1494,1495,1495,1495,1495,1495,1496,1496,1496,1496,1496,1497,1497,1497,1497,1497,1498,1498,1498,1498,1498,1499,1499,1499,1499,1499,1500,1500,1500,1500,1501,1501,1501,1501,1501,1502,1502,1502,1502,1502,1503,1503,1504,1504,1504,1505,1505,1505,1505,1505,1505,1506,1506,1506,1506,1506,1507,1507,1507,1507,1507,1508,1508,1508,1508,1508,1509,1509,1509,1509,1509,1510,1510,1510,1510,1510,1511,1511,1511,1511,1512,1512,1512,1513,1513,1513,1514,1514,1514,1514,1515,1515,1515,1516,1516,1516,1516,1516,1517,1517,1517,1517,1518,1518,1518,1518,1518,1518,1519,1519,1519,1519,1519,1519,1520,1520,1520,1520,1520,1520,1521,1521,1521,1521,1521,1521,1522,1522,1522,1522,1523,1523,1523,1523,1523,1524,1524,1524,1524,1525,1525,1525,1525,1525,1526,1526,1526,1526,1526,1527,1527,1527,1527,1527,1528,1528,1528,1528,1528,1529,1529,1529,1529,1529,1529,1529,1530,1530,1530,1530,1531,1531,1531,1531,1531,1532,1532,1532,1532,1533,1533,1533,1533,1534,1534,1534,1534,1535,1535,1535,1535,1536,1536,1536,1536,1537,1537,1537,1537,1537,1538,1538,1538,1538,1538,1539,1539,1539,1539,1539,1540,1540,1540,1540,1540,1541,1541,1541,1541,1541,1542,1542,1542,1542,1542,1543,1543,1543,1543,1543,1543,1544,1544,1544,1544,1544,1545,1545,1545,1545,1545,1546,1546,1546,1546,1547,1547,1547,1547,1547,1548,1548,1548,1548,1548,1549,1549,1549,1550,1550,1550,1551,1551,1551,1551,1551,1552,1552,1552,1552,1552,1553,1553,1553,1553,1553,1554,1554,1554,1554,1554,1554,1555,1555,1555,1555,1555,1556,1556,1556,1556,1556,1557,1557,1557,1557,1557,1558,1558,1558,1559,1559,1559,1560,1560,1561,1561,1561,1561,1562,1562,1562,1562,1562,1563,1563,1563,1563,1564,1564,1564,1564,1564,1564,1565,1565,1565,1565,1565,1566,1566,1566,1566,1566,1567,1567,1567,1568,1568,1568,1568,1569,1569,1569,1569,1569,1570,1570,1570,1570,1570,1571,1571,1571,1571,1572,1572,1572,1572,1572,1573,1573,1573,1573,1573,1574,1574,1574,1574,1575,1575,1575,1576,1576,1576,1576,1577,1577,1577,1577,1578,1578,1578,1578,1578,1579,1579,1579,1579,1580,1580,1580,1580,1581,1581,1581,1581,1582,1582,1582,1582,1582,1583,1583,1583,1583,1583,1584,1584,1584,1584,1584,1585,1585,1585,1585,1585,1586,1586,1586,1586,1586,1587,1587,1587,1587,1587,1588,1588,1588,1588,1588,1589,1589,1589,1589,1589,1590,1590,1590,1590,1590,1591,1591,1591,1591,1591,1592,1592,1592,1592,1592,1593,1593,1593,1594,1594,1594,1595,1595,1595,1595,1595,1596,1596,1596,1596,1596,1597,1597,1597,1597,1597,1598,1598,1598,1598,1598,1599,1599,1599,1599,1599,1600,1600,1600,1600,1600,1600,1601,1601,1601,1602,1602,1602,1603,1603,1603,1604,1604,1604,1604,1605,1605,1605,1605,1606,1606,1606,1606,1606,1606,1607,1607,1607,1607,1607,1607,1608,1608,1608,1608,1608,1608,1609,1609,1609,1609,1609,1609,1610,1610,1610,1611,1611,1611,1611,1611,1612,1612,1612,1613,1613,1613,1613,1613,1614,1614,1614,1614,1614,1615,1615,1615,1616,1616,1616,1616,1617,1617,1617,1617,1618,1618,1618,1618,1619,1619,1619,1619,1620,1620,1620,1620,1620,1621,1621,1621,1621,1621,1622,1622,1622,1622,1622,1623,1623,1623,1623,1623,1623,1624,1624,1624,1624,1624,1625,1625,1625,1625,1626,1626,1626,1626,1627,1627,1627,1627,1628,1628,1628,1628,1629,1629,1629,1629,1630,1630,1630,1630,1631,1631,1631,1631,1631,1632,1632,1632,1632,1632,1633,1633,1633,1633,1633,1634,1634,1634,1634,1634,1635,1635,1635,1635,1635,1636,1636,1636,1636,1636,1637,1637,1637,1637,1637,1638,1638,1638,1638,1638,1638,1639,1639,1639,1639,1639,1640,1640,1640,1640,1640,1641,1641,1641,1642,1642,1642,1642,1642,1643,1643,1643,1643,1643,1643,1644,1644,1644,1644,1644,1645,1645,1645,1645,1645,1646,1646,1646,1646,1646,1647,1647,1647,1647,1647,1648,1648,1648,1648,1648,1649,1649,1649,1650,1650,1650,1651,1651,1652,1652,1652,1652,1653,1653,1653,1653,1653,1654,1654,1654,1654,1655,1655,1655,1655,1655,1655,1656,1656,1656,1656,1656,1656,1657,1657,1657,1657,1657,1658,1658,1658,1658,1658,1659,1659,1659,1659,1659,1659,1660,1660,1660,1660,1660,1661,1661,1661,1661,1661,1662,1662,1662,1662,1662,1663,1663,1663,1663,1663,1664,1664,1664,1664,1665,1665,1665,1665,1665,1666,1666,1666,1666,1666,1666,1667,1667,1667,1667,1668,1668,1668,1668,1669,1669,1669,1669,1670,1670,1670,1670,1671,1671,1671,1671,1671,1671,1672,1672,1672,1672,1672,1673,1673,1673,1673,1673,1674,1674,1674,1674,1674,1675,1675,1675,1675,1675,1676,1676,1676,1676,1676,1677,1677,1677,1677,1677,1678,1678,1678,1678,1678,1679,1679,1679,1679,1680,1680,1680,1680,1680,1680,1681,1681,1681,1681,1681,1682,1682,1682,1682,1682,1683,1683,1683,1684,1684,1684,1684,1684,1685,1685,1685,1685,1685,1686,1686,1686,1686,1686,1687,1687,1687,1687,1687,1688,1688,1688,1688,1688,1688,1689,1689,1689,1689,1689,1690,1690,1690,1691,1691,1691,1692,1692,1693,1693,1693,1693,1693,1694,1694,1694,1694,1694,1695,1695,1695,1695,1695,1696,1696,1696,1696,1696,1697,1697,1697,1697,1697,1698,1698,1698,1698,1699,1699,1699,1699,1700,1700,1700,1700,1700,1701,1701,1701,1701,1701,1701,1702,1702,1702,1702,1702,1703,1703,1703,1703,1703,1703,1703,1704,1704,1704,1704,1704,1705,1705,1705,1705,1705,1706,1706,1706,1706,1706,1707,1707,1707,1707,1707,1708,1708,1708,1708,1709,1709,1709,1709,1710,1710,1710,1710,1710,1711,1711,1711,1711,1712,1712,1712,1712,1713,1713,1713,1713,1714,1714,1714,1714,1715,1715,1715,1715,1715,1716,1716,1716,1716,1717,1717,1717,1717,1717,1718,1718,1718,1718,1718,1719,1719,1719,1719,1719,1720,1720,1720,1720,1720,1721,1721,1721,1721,1721,1722,1722,1722,1722,1722,1723,1723,1723,1723,1723,1724,1724,1724,1724,1724,1724,1725,1725,1725,1725,1725,1726,1726,1726,1726,1726,1727,1727,1727,1727,1727,1728,1728,1728,1728,1728,1729,1729,1729,1729,1729,1730,1730,1730,1731,1731,1731,1731,1731,1732,1732,1732,1732,1732,1733,1733,1733,1733,1733,1734,1734,1734,1734,1734,1735,1735,1735,1735,1735,1736,1736,1736,1736,1736,1737,1737,1737,1738,1738,1738,1739,1739,1739,1740,1740,1740,1740,1741,1741,1741,1741,1742,1742,1742,1742,1742,1743,1743,1743,1743,1743,1743,1744,1744,1744,1744,1744,1745,1745,1745,1745,1746,1746,1746,1747,1747,1747,1747,1747,1748,1748,1748,1748,1748,1749,1749,1749,1749,1750,1750,1750,1750,1750,1751,1751,1751,1752,1752,1752,1752,1752,1753,1753,1753,1753,1754,1754,1754,1754,1754,1754,1755,1755,1755,1755,1756,1756,1756,1756,1757,1757,1757,1757,1758,1758,1758,1758,1759,1759,1759,1759,1760,1760,1760,1760,1760,1761,1761,1761,1761,1761,1762,1762,1762,1762,1762,1763,1763,1763,1763,1763,1764,1764,1764,1764,1764,1765,1765,1765,1765,1765,1766,1766,1766,1766,1766,1767,1767,1767,1767,1767,1768,1768,1768,1768,1768,1769,1769,1769,1769,1769,1770,1770,1770,1770,1770,1771,1771,1771,1772,1772,1772,1772,1772,1773,1773,1773,1773,1773,1774,1774,1774,1774,1774,1775,1775,1775,1775,1775,1776,1776,1776,1776,1776,1777,1777,1777,1777,1777,1778,1778,1778,1778,1779,1779,1779,1780,1780,1780,1780,1780,1780,1781,1781,1781,1781,1782,1782,1782,1782,1783,1783,1783,1783,1784,1784,1784,1784,1785,1785,1785,1785,1785,1786,1786,1786,1786,1786,1786,1787,1787,1787,1787,1787,1787,1788,1788,1788,1788,1788,1789,1789,1789,1790,1790,1790,1791,1791,1791,1791,1791,1792,1792,1792,1792,1792,1793,1793,1793,1793,1794,1794,1794,1794,1794,1795,1795,1795,1795,1795,1796,1796,1796,1796,1796,1797,1797,1797,1797,1797,1797,1798,1798,1798,1798,1799,1799,1799,1799,1800,1800,1800,1800,1801,1801,1801,1801,1802,1802,1802,1802,1803,1803,1803,1803,1804,1804,1804,1805,1805,1805,1805,1805,1806,1806,1806,1806,1806,1807,1807,1807,1807,1808,1808,1808,1808,1808,1809,1809,1809,1809,1809,1810,1810,1810,1810,1810,1811,1811,1811,1811,1811,1812,1812,1812,1812,1812,1812,1813,1813,1813,1813,1813,1814,1814,1814,1814,1814,1815,1815,1815,1816,1816,1816,1816,1816,1816,1817,1817,1817,1817,1817,1818,1818,1818,1818,1818,1819,1819,1819,1819,1819,1820,1820,1820,1820,1820,1821,1821,1821,1821,1821,1822,1822,1822,1822,1822,1823,1823,1823,1824,1824,1824,1825,1825,1826,1826,1826,1827,1827,1827,1827,1828,1828,1828,1828,1829,1829,1829,1829,1830,1830,1830,1830,1830,1831,1831,1831,1831,1831,1831,1832,1832,1832,1832,1832,1832,1833,1833,1833,1833,1833,1834,1834,1834,1834,1834,1835,1835,1835,1835,1836,1836,1836,1836,1836,1837,1837,1837,1837,1837,1838,1838,1838,1838,1839,1839,1839,1839,1840,1840,1840,1840,1841,1841,1841,1841,1842,1842,1842,1843,1843,1843,1843,1843,1844,1844,1844,1844,1844,1845,1845,1845,1845,1845,1846,1846,1846,1846,1847,1847,1847,1847,1847,1847,1848,1848,1848,1849,1849,1849,1849,1850,1850,1850,1850,1851,1851,1851,1851,1852,1852,1852,1852,1853,1853,1853,1853,1853,1854,1854,1854,1854,1854,1855,1855,1855,1855,1855,1856,1856,1856,1856,1856,1857,1857,1857,1857,1857,1858,1858,1858,1858,1858,1859,1859,1859,1859,1859,1860,1860,1860,1860,1860,1861,1861,1861,1861,1861,1861,1862,1862,1862,1862,1862,1863,1863,1863,1863,1863,1864,1864,1864,1865,1865,1865,1865,1865,1866,1866,1866,1866,1866,1867,1867,1867,1867,1867,1867,1868,1868,1868,1868,1868,1869,1869,1869,1869,1869,1870,1870,1870,1870,1870,1871,1871,1871,1871,1871,1872,1872,1872,1873,1873,1873,1874,1874,1874,1875,1875,1875,1875,1876,1876,1876,1876,1877,1877,1877,1877,1878,1878,1878,1878,1878,1879,1879,1879,1879,1879,1879,1880,1880,1880,1880,1880,1880,1881,1881,1881,1881,1881,1882,1882,1882,1883,1883,1883,1883,1883,1884,1884,1884,1884,1884,1884,1885,1885,1885,1885,1885,1885,1886,1886,1886,1886,1886,1886,1887,1887,1887,1887,1887,1888,1888,1888,1888,1888,1889,1889,1889,1889,1890,1890,1890,1890,1891,1891,1891,1891,1892,1892,1892,1892,1893,1893,1893,1893,1894,1894,1894,1894,1895,1895,1895,1895,1896,1896,1897,1897,1897,1897,1897,1898,1898,1898,1898,1898,1899,1899,1899,1899,1899,1900,1900,1900,1900,1900,1901,1901,1901,1901,1901,1902,1902,1902,1902,1902,1903,1903,1903,1903,1903,1903,1903,1904,1904,1904,1904,1904,1905,1905,1905,1905,1905,1906,1906,1906,1907,1907,1907,1908,1908,1908,1908,1908,1909,1909,1909,1909,1909,1910,1910,1910,1910,1910,1911,1911,1911,1911,1911,1912,1912,1912,1912,1912,1912,1913,1913,1913,1913,1913,1914,1914,1914,1915,1915,1915,1916,1916,1917,1917,1917,1917,1918,1918,1918,1918,1919,1919,1919,1919,1920,1920,1920,1920,1921,1921,1921,1921,1922,1922,1922,1922,1923,1923,1923,1923,1923,1924,1924,1924,1924,1925,1925,1925,1925,1925,1926,1926,1926,1926,1926,1927,1927,1927,1927,1927,1928,1928,1928,1928,1929,1929,1929,1929,1929,1930,1930,1930,1930,1930,1931,1931,1931,1931,1931,1932,1932,1932,1932,1932,1933,1933,1933,1933,1933,1934,1934,1934,1934,1935,1935,1935,1935,1935,1936,1936,1936,1936,1937,1937,1937,1937,1938,1938,1938,1938,1939,1939,1939,1939,1940,1940,1940,1940,1940,1941,1941,1941,1941,1942,1942,1943,1943,1943,1943,1943,1944,1944,1944,1944,1944,1945,1945,1945,1945,1945,1945,1946,1946,1946,1946,1946,1947,1947,1947,1947,1947,1948,1948,1948,1948,1948,1949,1949,1949,1949,1949,1950,1950,1950,1950,1951,1951,1951,1951,1951,1952,1952,1952,1952,1952,1953,1953,1953,1953,1953,1954,1954,1954,1955,1955,1955,1956,1956,1956,1956,1956,1957,1957,1957,1957,1957,1958,1958,1958,1958,1958,1959,1959,1959,1959,1959,1960,1960,1960,1960,1960,1961,1961,1961,1961,1961,1962,1962,1962,1963,1963,1963,1964,1964,1964,1965,1965,1965,1965,1966,1966,1966,1966,1966,1966,1967,1967,1967,1967,1968,1968,1968,1968,1968,1969,1969,1969,1969,1969,1970,1970,1970,1970,1970,1971,1971,1971,1972,1972,1972,1972,1972,1972,1973,1973,1973,1973,1973,1974,1974,1974,1974,1974,1975,1975,1975,1975,1975,1976,1976,1976,1976,1976,1977,1977,1977,1977,1977,1978,1978,1978,1978,1979,1979,1979,1979,1980,1980,1980,1981,1981,1981,1981,1982,1982,1982,1982,1983,1983,1983,1983,1984,1984,1984,1984,1985,1985,1986,1986,1986,1986,1986,1987,1987,1987,1987,1987,1988,1988,1988,1988,1988,1989,1989,1989,1989,1989,1989,1990,1990,1990,1990,1990,1991,1991,1991,1991,1991,1992,1992,1992,1992,1992,1993,1993,1993,1993,1993,1994,1994,1994,1994,1994,1995,1995,1995,1995,1995,1996,1996,1996,1996,1996,1997,1997,1997,1998,1998,1998,1998,1998,1999,1999,1999,1999,1999,2000,2000,2000,2000,2000,2001,2001,2001,2001,2001,2002,2002,2002,2002,2002,2003,2003,2003,2003,2003,2004,2004,2004,2005,2005,2005,2005,2006,2006,2006,2006,2007,2007,2008,2008,2008,2008,2009,2009,2009,2009,2009,2010,2010,2010,2010,2010,2011,2011,2011,2012,2012,2012,2012,2012,2013,2013,2013,2013,2013,2014,2014,2014,2015,2015,2015,2016,2016,2016,2016,2016,2017,2017,2017,2017,2017,2018,2018,2018,2018,2018,2019,2019,2019,2019,2020,2020,2020,2020,2021,2021,2021,2021,2021,2022,2022,2022,2022,2023,2023,2023,2023,2024,2024,2024,2024,2025,2025,2025,2025,2026,2026,2026,2026,2027,2027,2027,2027,2027,2028,2028,2028,2028,2029,2029,2029,2029,2029,2030,2030,2030,2030,2030,2031,2031,2031,2031,2031,2032,2032,2032,2032,2032,2033,2033,2033,2033,2033,2034,2034,2034,2034,2034,2035,2035,2035,2035,2035,2036,2036,2036,2036,2036,2037,2037,2037,2037,2037,2038,2038,2038,2038,2038,2039,2039,2039,2039,2039,2040,2040,2041,2041,2041,2042,2042,2042,2042,2042,2043,2043,2043,2043,2043,2044,2044,2044,2044,2044,2045,2045,2045,2045,2045,2046,2046,2046,2046,2046,2047,2047,2047,2047,2047,2048,2048,2048,2048,2049,2049,2049,2050,2050,2050,2051,2051,2051,2052,2052,2052,2052,2053,2053,2053,2053,2053,2054,2054,2054,2054,2054,2055,2055,2055,2055,2055,2056,2056,2056,2056,2056,2057,2057,2057,2057,2057,2058,2058,2058,2058,2058,2059,2059,2059,2059,2059,2060,2060,2060,2060,2060,2061,2061,2061,2061,2061,2062,2062,2062,2062,2062,2063,2063,2063,2063,2063,2064,2064,2064,2064,2065,2065,2065,2065,2066,2066,2066,2066,2066,2067,2067,2067,2067,2068,2068,2068,2068,2069,2069,2069,2069,2070,2070,2070,2070,2071,2071,2071,2071,2072,2072,2072,2072,2072,2073,2073,2073,2073,2074,2074,2074,2074,2074,2075,2075,2075,2075,2075,2076,2076,2076,2076,2076,2077,2077,2077,2077,2077,2078,2078,2078,2078,2078,2079,2079,2079,2079,2079,2080,2080,2080,2080,2080,2081,2081,2081,2081,2081,2081,2082,2082,2082,2082,2082,2083,2083,2083,2083,2083,2084,2084,2084,2085,2085,2085,2086,2086,2086,2086,2086,2086,2087,2087,2087,2087,2087,2088,2088,2088,2088,2088,2089,2089,2089,2089,2089,2090,2090,2090,2090,2090,2091,2091,2091,2091,2091,2092,2092,2092,2093,2093,2093,2094,2094,2094,2095,2095,2095,2095,2096,2096,2096,2096,2097,2097,2097,2097,2098,2098,2098,2099,2099,2099,2099,2099,2100,2100,2100,2100,2101,2101,2101,2101,2101,2102,2102,2102,2102,2102,2103,2103,2103,2103,2103,2103,2104,2104,2104,2104,2104,2105,2105,2105,2105,2105,2106,2106,2106,2106,2106,2107,2107,2107,2107,2107,2108,2108,2108,2108,2108,2108,2109,2109,2109,2109,2109,2110,2110,2110,2110,2110,2111,2111,2111,2111,2112,2112,2112,2112,2113,2113,2113,2113,2114,2114,2114,2114,2115,2115,2115,2115,2116,2116,2116,2116,2116,2117,2117,2117,2117,2118,2118,2118,2118,2118,2119,2119,2119,2119,2119,2120,2120,2120,2120,2120,2121,2121,2121,2121,2121,2122,2122,2122,2122,2122,2123,2123,2123,2123,2123,2124,2124,2124,2124,2124,2125,2125,2125,2125,2125,2126,2126,2126,2126,2126,2127,2127,2127,2127,2127,2128,2128,2128,2129,2129,2129,2129,2129,2130,2130,2130,2130,2130,2131,2131,2131,2131,2131,2132,2132,2132,2132,2132,2133,2133,2133,2133,2133,2134,2134,2134,2134,2134,2135,2135,2135,2136,2136,2136,2137,2137,2138,2138,2138,2139,2139,2139,2139,2139,2139,2140,2140,2140,2140,2140,2141,2141,2141,2141,2141,2142,2142,2142,2142,2142,2143,2143,2143,2143,2143,2143,2144,2144,2144,2144,2144,2144,2145,2145,2145,2145,2145,2146,2146,2146,2146,2146,2147,2147,2147,2147,2147,2148,2148,2148,2148,2148,2149,2149,2149,2149,2149,2150,2150,2150,2151,2151,2151,2151,2151,2152,2152,2152,2152,2153,2153,2153,2153,2154,2154,2154,2154,2154,2155,2155,2155,2155,2156,2156,2156,2156,2156,2157,2157,2157,2157,2158,2158,2158,2158,2159,2159,2159,2159,2160,2160,2161,2161,2161,2161,2161,2162,2162,2162,2162,2162,2163,2163,2163,2163,2163,2164,2164,2164,2164,2164,2165,2165,2165,2165,2165,2166,2166,2166,2166,2166,2167,2167,2167,2167,2167,2168,2168,2168,2168,2168,2169,2169,2169,2169,2169,2170,2170,2170,2170,2170,2171,2171,2171,2171,2171,2172,2172,2172,2173,2173,2173,2173,2173,2174,2174,2174,2174,2174,2175,2175,2175,2175,2175,2176,2176,2176,2176,2176,2177,2177,2177,2177,2177,2178,2178,2178,2178,2178,2179,2179,2179,2180,2180,2180,2181,2181,2181,2182,2182,2182,2182,2183,2183,2183,2183,2183,2184,2184,2184,2184,2184,2184,2185,2185,2185,2185,2186,2186,2186,2186,2186,2187,2187,2187,2187,2187,2188,2188,2188,2188,2188,2189,2189,2189,2189,2189,2190,2190,2190,2191,2191,2191,2191,2191,2192,2192,2192,2193,2193,2193,2193,2193,2194,2194,2194,2194,2194,2195,2195,2195,2195,2196,2196,2196,2196,2196,2197,2197,2197,2197,2197,2198,2198,2198,2198,2198,2199,2199,2199,2199,2199,2200,2200,2200,2201,2201,2201,2201,2201,2202,2202,2202,2202,2202,2203,2203,2203,2203,2204,2204,2204,2204,2205,2205,2205,2205,2206,2206,2206,2206,2207,2207,2207,2207,2207,2207,2208,2208,2208,2208,2208,2209,2209,2209,2209,2209,2210,2210,2210,2210,2210,2211,2211,2211,2211,2211,2212,2212,2212,2212,2212,2213,2213,2213,2213,2213,2214,2214,2214,2214,2214,2215,2215,2215,2215,2215,2216,2216,2216,2216,2216,2217,2217,2217,2217,2217,2217,2218,2218,2218,2218,2218,2219,2219,2219,2219,2219,2220,2220,2220,2220,2220,2220,2221,2221,2221,2221,2221,2222,2222,2222,2223,2223,2223,2224,2224,2224,2225,2225,2226,2226,2227,2227,2228,2228,2229,2229,2230,2230,2231,2231,2231,2232,2232,2232,2233,2233,2233,2233,2233,2234,2234,2234,2234,2234,2235,2235,2235,2235,2235,2236,2236,2236,2236,2236,2237,2237,2237,2237,2237,2238,2238,2238,2238,2238,2239,2239,2239,2239,2240,2240,2240,2241,2241,2241,2242,2242,2242,2243,2243,2243,2244,2244,2244,2245,2245,2245,2245,2245,2245,2246,2246,2246,2246,2246,2246,2247,2247,2247,2247,2247,2247,2248,2248,2248,2248,2248,2248,2249,2249,2249,2249,2249,2250,2250,2250,2250,2250,2251,2251,2251,2251,2251,2252,2252,2252,2252,2252,2253,2253,2253,2253,2254,2254,2254,2254,2254,2255,2255,2255,2255,2255,2256,2256,2256,2257,2257,2257,2258,2258,2258,2258,2258,2259,2259,2259,2259,2259,2259,2259,2260,2260,2260,2260,2260,2260,2260,2261,2261,2261,2261,2262,2262,2262,2262,2262,2263,2263,2263,2263,2264,2264,2264,2264,2265,2265,2265,2265,2266,2266,2266,2266,2267,2267,2267,2267,2268,2268,2268,2268,2269,2269,2269,2269,2269,2270,2270,2271,2271,2271,2271,2271,2272,2272,2272,2272,2272,2273,2273,2273,2273,2273,2274,2274,2274,2274,2274,2275,2275,2275,2275,2275,2276,2276,2276,2276,2276,2277,2277,2277,2277,2277,2278,2278,2278,2278,2278,2279,2279,2279,2279,2280,2280,2280,2280,2280,2281,2281,2281,2281,2281,2282,2282,2282,2283,2283,2283,2284,2284,2284,2284,2284,2285,2285,2285,2285,2285,2286,2286,2286,2286,2286,2287,2287,2287,2287,2287,2288,2288,2288,2288,2288,2289,2289,2289,2289,2289,2290,2290,2290,2290,2290,2291,2291,2291,2292,2292,2292,2293,2293,2293,2294,2294,2294,2294,2295,2295,2295,2295,2295,2295,2296,2296,2296,2296,2296,2297,2297,2297,2297,2297,2298,2298,2298,2298,2298,2299,2299,2299,2299,2299,2299,2300,2300,2300,2300,2300,2301,2301,2301,2301,2301,2302,2302,2302,2303,2303,2303,2304,2304,2304,2304,2305,2305,2305,2305,2306,2306,2306,2306,2307,2307,2307,2307,2308,2308,2308,2308,2309,2309,2309,2309,2309,2310,2310,2310,2310,2310,2310,2311,2311,2311,2312,2312,2312,2312,2313,2313,2313,2313,2314,2314,2314,2314,2314,2315,2315,2315,2315,2315,2316,2316,2316,2316,2317,2317,2317,2317,2318,2318,2318,2318,2319,2319,2319,2319,2320,2320,2320,2320,2320,2321,2321,2321,2321,2321,2322,2322,2322,2322,2322,2323,2323,2323,2323,2323,2324,2324,2324,2324,2324,2325,2325,2325,2325,2325,2326,2326,2326,2326,2326,2327,2327,2327,2327,2327,2328,2328,2328,2328,2328,2328,2329,2329,2329,2329,2329,2330,2330,2330,2330,2330,2331,2331,2331,2332,2332,2332,2333,2333,2333,2333,2333,2334,2334,2334,2334,2334,2335,2335,2335,2335,2335,2336,2336,2336,2336,2336,2337,2337,2337,2337,2337,2338,2338,2338,2338,2338,2339,2339,2339,2340,2340,2340,2341,2341,2341,2341,2341,2341,2341,2342,2342,2342,2343,2343,2343,2344,2344,2344,2344,2344,2345,2345,2345,2345,2345,2346,2346,2346,2346,2346,2347,2347,2347,2347,2347,2348,2348,2348,2348,2348,2348,2348,2349,2349,2349,2349,2349,2349,2350,2350,2350,2351,2351,2351,2351,2351,2352,2352,2352,2352,2352,2352,2353,2353,2353,2354,2354,2354,2354,2355,2355,2355,2355,2355,2356,2356,2356,2356,2357,2357,2357,2357,2357,2358,2358,2358,2358,2359,2359,2359,2359,2359,2360,2360,2360,2360,2361,2361,2361,2361,2362,2362,2362,2362,2363,2363,2364,2364,2364,2364,2364,2365,2365,2365,2365,2365,2365,2366,2366,2366,2366,2366,2367,2367,2367,2367,2367,2368,2368,2368,2368,2368,2369,2369,2369,2369,2369,2370,2370,2370,2370,2370,2371,2371,2371,2371,2371,2372,2372,2372,2372,2373,2373,2373,2373,2373,2373,2374,2374,2374,2374,2374,2375,2375,2375,2375,2375,2376,2376,2376,2377,2377,2377,2378,2378,2378,2378,2378,2379,2379,2379,2379,2379,2380,2380,2380,2380,2380,2381,2381,2381,2381,2381,2382,2382,2382,2382,2382,2383,2383,2383,2384,2384,2384,2384,2385,2385,2385,2386,2386,2386,2387,2387,2388,2388,2388,2388,2389,2389,2389,2389,2390,2390,2390,2390,2391,2391,2391,2391,2391,2392,2392,2392,2393,2393,2393,2394,2394,2394,2394,2394,2394,2395,2395,2395,2395,2395,2396,2396,2396,2396,2396,2397,2397,2397,2397,2398,2398,2398,2398,2399,2399,2399,2399,2400,2400,2400,2400,2401,2401,2401,2401,2402,2402,2402,2402,2402,2403,2403,2403,2403,2404,2404,2404,2405,2405,2405,2405,2406,2406,2406,2406,2407,2407,2407,2407,2408,2408,2408,2408,2408,2409,2409,2409,2409,2410,2410,2410,2410,2411,2411,2411,2411,2412,2412,2413,2413,2413,2413,2413,2414,2414,2414,2414,2414,2415,2415,2415,2415,2415,2415,2416,2416,2416,2416,2416,2417,2417,2417,2417,2417,2418,2418,2418,2418,2418,2419,2419,2419,2419,2419,2420,2420,2420,2420,2420,2421,2421,2421,2421,2421,2421,2422,2422,2422,2422,2422,2423,2423,2423,2423,2423,2424,2424,2424,2425,2425,2425,2426,2426,2426,2426,2426,2427,2427,2427,2427,2427,2428,2428,2428,2428,2428,2429,2429,2429,2429,2429,2430,2430,2430,2430,2430,2431,2431,2431,2431,2431,2432,2432,2432,2433,2433,2433,2434,2434,2434,2434,2434,2434,2434,2435,2435,2435,2436,2436,2436,2437,2437,2437,2437,2437,2438,2438,2438,2438,2439,2439,2439,2440,2440,2440,2440,2440,2441,2441,2441,2441,2442,2442,2442,2442,2442,2443,2443,2443,2443,2443,2444,2444,2444,2444,2444,2444,2445,2445,2445,2445,2445,2445,2446,2446,2446,2447,2447,2447,2447,2447,2448,2448,2448,2448,2448,2449,2449,2449,2449,2450,2450,2450,2450,2451,2451,2451,2451,2452,2452,2452,2452,2452,2453,2453,2453,2453,2454,2454,2454,2454,2455,2455,2455,2455,2456,2456,2457,2457,2457,2457,2457,2458,2458,2458,2458,2458,2459,2459,2459,2459,2460,2460,2460,2460,2460,2461,2461,2461,2461,2461,2462,2462,2462,2462,2462,2463,2463,2463,2463,2463,2464,2464,2464,2464,2464,2465,2465,2465,2465,2465,2466,2466,2466,2466,2466,2467,2467,2467,2468,2468,2468,2469,2469,2469,2469,2469,2470,2470,2470,2470,2470,2471,2471,2471,2471,2471,2472,2472,2472,2472,2472,2473,2473,2473,2473,2473,2474,2474,2474,2474,2474,2475,2475,2475,2475,2475,2476,2476,2476,2476,2477,2477,2477,2478,2478,2478,2479,2479,2480,2480,2480,2481,2481,2481,2481,2481,2482,2482,2482,2482,2482,2483,2483,2483,2483,2483,2484,2484,2484,2484,2484,2485,2485,2485,2485,2485,2485,2486,2486,2486,2486,2486,2487,2487,2487,2487,2487,2488,2488,2488,2488,2488,2489,2489,2489,2489,2489,2489,2490,2490,2490,2490,2490,2490,2491,2491,2491,2491,2491,2491,2492,2492,2492,2492,2492,2493,2493,2493,2493,2493,2493,2494,2494,2494,2494,2495,2495,2495,2495,2495,2496,2496,2496,2496,2497,2497,2497,2497,2497,2498,2498,2498,2498,2498,2499,2499,2499,2499,2500,2500,2500,2500,2501,2501,2501,2501,2502,2502,2502,2502,2503,2503,2503,2503,2503,2503,2503,2503,2504,2504,2504,2504,2504,2505,2505,2505,2505,2505,2506,2506,2506,2506,2506,2507,2507,2507,2507,2507,2508,2508,2508,2508,2508,2509,2509,2509,2509,2509,2510,2510,2510,2510,2510,2511,2511,2511,2511,2511,2512,2512,2512,2512,2512,2512,2513,2513,2513,2513,2513,2514,2514,2514,2514,2514,2515,2515,2515,2516,2516,2516,2517,2517,2517,2517,2517,2518,2518,2518,2518,2518,2519,2519,2519,2519,2519,2520,2520,2520,2520,2520,2521,2521,2521,2521,2521,2522,2522,2522,2522,2522,2523,2523,2523,2523,2523,2524,2524,2524,2525,2525,2525,2526,2526,2527,2527,2527,2528,2528,2528,2528,2528,2529,2529,2529,2529,2530,2530,2530,2530,2530,2531,2531,2531,2531,2531,2532,2532,2532,2532,2532,2532,2533,2533,2533,2533,2533,2534,2534,2534,2534,2535,2535,2535,2535,2535,2536,2536,2536,2536,2536,2537,2537,2537,2537,2537,2537,2537,2538,2538,2538,2538,2538,2539,2539,2539,2539,2539,2539,2540,2540,2540,2540,2540,2541,2541,2541,2541,2542,2542,2542,2542,2543,2543,2543,2543,2543,2544,2544,2544,2544,2544,2545,2545,2545,2545,2546,2546,2546,2546,2547,2547,2547,2547,2548,2548,2548,2548,2549,2549,2549,2549,2550,2550,2550,2550,2550,2551,2551,2551,2551,2551,2552,2552,2552,2552,2552,2553,2553,2553,2553,2553,2554,2554,2554,2554,2554,2555,2555,2555,2555,2555,2556,2556,2556,2556,2556,2557,2557,2557,2557,2557,2557,2558,2558,2558,2558,2558,2559,2559,2559,2559,2559,2560,2560,2560,2561,2561,2561,2561,2561,2562,2562,2562,2562,2562,2563,2563,2563,2563,2563,2563,2564,2564,2564,2564,2564,2565,2565,2565,2565,2565,2566,2566,2566,2566,2566,2567,2567,2567,2567,2567,2568,2568,2568,2569,2569,2569,2570,2570,2570,2571,2571,2572,2572,2572,2573,2573,2573,2573,2573,2574,2574,2574,2574,2574,2575,2575,2575,2575,2575,2575,2576,2576,2576,2576,2576,2577,2577,2577,2577,2577,2578,2578,2578,2578,2579,2579,2579,2579,2580,2580,2580,2580,2581,2581,2581,2581,2582,2582,2582,2582,2583,2583,2583,2583,2584,2584,2584,2584,2585,2585,2585,2585,2586,2586,2586,2586,2586,2587,2587,2587,2587,2587,2588,2588,2588,2588,2588,2588,2589,2589,2589,2589,2589,2590,2590,2590,2590,2590,2591,2591,2591,2591,2591,2591,2591,2592,2592,2592,2592,2593,2593,2593,2593,2593,2594,2594,2594,2594,2595,2595,2595,2595,2596,2596,2596,2596,2597,2597,2597,2597,2598,2598,2598,2598,2599,2599,2599,2599,2599,2600,2600,2600,2600,2600,2601,2601,2601,2601,2601,2602,2602,2602,2602,2602,2603,2603,2603,2603,2603,2604,2604,2604,2604,2604,2605,2605,2605,2605,2605,2606,2606,2606,2606,2606,2607,2607,2607,2607,2607,2607,2608,2608,2608,2608,2608,2609,2609,2609,2609,2609,2610,2610,2610,2611,2611,2611,2611,2611,2612,2612,2612,2612,2612,2613,2613,2613,2613,2613,2614,2614,2614,2614,2614,2615,2615,2615,2615,2615,2616,2616,2616,2616,2616,2617,2617,2617,2618,2618,2618,2618,2619,2619,2619,2620,2620,2620,2621,2621,2622,2622,2622,2622,2623,2623,2623,2623,2623,2624,2624,2624,2624,2625,2625,2625,2625,2625,2626,2626,2626,2626,2626,2627,2627,2627,2627,2628,2628,2628,2628,2628,2629,2629,2629,2629,2629,2630,2630,2630,2630,2630,2631,2631,2631,2631,2631,2632,2632,2632,2632,2632,2633,2633,2633,2633,2634,2634,2634,2634,2634,2635,2635,2635,2635,2636,2636,2636,2636,2637,2637,2637,2637,2637,2638,2638,2638,2638,2639,2639,2639,2639,2640,2640,2640,2640,2641,2641,2641,2642,2642,2642,2642,2642,2643,2643,2643,2643,2643,2644,2644,2644,2644,2644,2645,2645,2645,2645,2645,2646,2646,2646,2646,2646,2647,2647,2647,2647,2647,2648,2648,2648,2648,2648,2649,2649,2649,2649,2649,2650,2650,2650,2650,2650,2651,2651,2651,2651,2651,2652,2652,2652,2653,2653,2653,2654,2654,2654,2654,2654,2655,2655,2655,2655,2655,2656,2656,2656,2656,2656,2657,2657,2657,2657,2657,2657,2658,2658,2658,2658,2658,2659,2659,2659,2659,2659,2660,2660,2660,2661,2661,2661,2662,2662,2663,2663,2663,2663,2664,2664,2664,2664,2664,2664,2665,2665,2665,2665,2665,2666,2666,2666,2666,2666,2667,2667,2667,2667,2667,2668,2668,2668,2668,2668,2668,2668,2669,2669,2669,2669,2669,2669,2669,2670,2670,2670,2670,2670,2671,2671,2671,2671,2671,2672,2672,2672,2672,2672,2673,2673,2673,2673,2674,2674,2674,2674,2674,2675,2675,2675,2675,2675,2676,2676,2676,2676,2677,2677,2677,2677,2678,2678,2678,2678,2679,2679,2679,2679,2680,2680,2680,2680,2680,2681,2681,2681,2681,2682,2682,2682,2682,2683,2683,2684,2684,2684,2684,2684,2685,2685,2685,2685,2685,2685,2686,2686,2686,2686,2686,2687,2687,2687,2687,2687,2688,2688,2688,2688,2688,2689,2689,2689,2689,2689,2690,2690,2690,2690,2690,2691,2691,2691,2691,2691,2692,2692,2692,2692,2692,2693,2693,2693,2693,2693,2694,2694,2694,2694,2694,2695,2695,2695,2695,2695,2696,2696,2696,2697,2697,2697,2698,2698,2698,2698,2698,2699,2699,2699,2699,2699,2700,2700,2700,2700,2700,2701,2701,2701,2701,2701,2702,2702,2702,2702,2702,2703,2703,2703,2704,2704,2704,2704,2704,2705,2705,2705,2706,2706,2706,2707,2707,2707,2708,2708,2708,2708,2708,2709,2709,2709,2709,2710,2710,2710,2711,2711,2711,2711,2711,2712,2712,2712,2712,2712,2712,2713,2713,2713,2713,2713,2714,2714,2714,2714,2714,2715,2715,2715,2715,2715,2716,2716,2716,2716,2717,2717,2717,2717,2718,2718,2718,2718,2719,2719,2719,2719,2720,2720,2720,2720,2721,2721,2721,2721,2722,2722,2722,2723,2723,2723,2723,2724,2724,2724,2724,2724,2725,2725,2725,2725,2726,2726,2726,2726,2727,2727,2727,2727,2727,2728,2728,2728,2728,2729,2729,2729,2729,2729,2730,2730,2730,2730,2731,2731,2731,2731,2732,2732,2732,2732,2733,2733,2733,2734,2734,2734,2734,2734,2735,2735,2735,2735,2735,2735,2736,2736,2736,2736,2736,2737,2737,2737,2737,2737,2738,2738,2738,2738,2738,2739,2739,2739,2739,2739,2740,2740,2740,2740,2740,2741,2741,2741,2741,2741,2742,2742,2742,2742,2742,2742,2743,2743,2743,2743,2743,2744,2744,2744,2744,2744,2745,2745,2745,2745,2745,2746,2746,2746,2747,2747,2747,2747,2747,2748,2748,2748,2748,2748,2749,2749,2749,2749,2749,2750,2750,2750,2750,2750,2751,2751,2751,2751,2751,2752,2752,2752,2752,2752,2753,2753,2753,2753,2754,2754,2754,2755,2755,2755,2756,2756,2756,2757,2757,2757,2758,2758,2758,2758,2759,2759,2759,2760,2760,2760,2760,2761,2761,2761,2761,2761,2762,2762,2762,2762,2762,2763,2763,2763,2763,2764,2764,2764,2764,2764,2765,2765,2765,2765,2765,2766,2766,2766,2766,2766,2767,2767,2767,2767,2767,2768,2768,2768,2768,2768,2768,2769,2769,2769,2769,2769,2770,2770,2770,2770,2770,2771,2771,2771,2771,2772,2772,2772,2772,2773,2773,2773,2773,2774,2774,2774,2774,2775,2775,2775,2775,2775,2776,2776,2776,2776,2777,2777,2777,2777,2778,2778,2778,2778,2778,2779,2779,2779,2779,2779,2780,2780,2780,2780,2780,2781,2781,2781,2781,2781,2782,2782,2782,2782,2782,2783,2783,2783,2783,2783,2784,2784,2784,2784,2784,2785,2785,2785,2785,2785,2786,2786,2786,2786,2786,2787,2787,2787,2787,2787,2787,2788,2788,2788,2788,2788,2789,2789,2789,2789,2789,2790,2790,2790,2791,2791,2791,2792,2792,2792,2792,2792,2793,2793,2793,2793,2793,2794,2794,2794,2794,2794,2795,2795,2795,2795,2795,2796,2796,2796,2796,2796,2797,2797,2797,2797,2797,2798,2798,2798,2799,2799,2799,2799,2799,2800,2800,2800,2801,2801,2801,2802,2802,2803,2803,2803,2804,2804,2804,2804,2804,2805,2805,2805,2805,2806,2806,2806,2806,2806,2807,2807,2807,2807,2807,2808,2808,2808,2808,2809,2809,2809,2809,2809,2810,2810,2810,2810,2810,2811,2811,2811,2811,2811,2812,2812,2812,2812,2812,2813,2813,2813,2813,2813,2813,2814,2814,2814,2814,2815,2815,2815,2815,2816,2816,2816,2816,2817,2817,2817,2817,2818,2818,2818,2818,2819,2819,2819,2819,2820,2820,2820,2820,2820,2821,2821,2821,2821,2821,2822,2822,2822,2822,2823,2823,2823,2823,2824,2824,2824,2824,2825,2825,2825,2825,2826,2826,2827,2827,2827,2827,2827,2828,2828,2828,2828,2828,2829,2829,2829,2829,2829,2830,2830,2830,2830,2830,2831,2831,2831,2831,2831,2832,2832,2832,2832,2832,2833,2833,2833,2833,2833,2834,2834,2834,2834,2834,2834,2835,2835,2835,2835,2835,2836,2836,2836,2836,2836,2837,2837,2837,2838,2838,2838,2838,2838,2839,2839,2839,2839,2839,2840,2840,2840,2840,2840,2841,2841,2841,2841,2841,2842,2842,2842,2842,2842,2843,2843,2843,2843,2843,2844,2844,2844,2844,2844,2844,2845,2845,2845,2846,2846,2846,2847,2847,2847,2848,2848,2849,2849,2849,2849,2850,2850,2850,2850,2850,2851,2851,2851,2851,2851,2852,2852,2852,2852,2852,2853,2853,2853,2853,2853,2854,2854,2854,2855,2855,2855,2855,2855,2855,2855,2856,2856,2856,2856,2856,2857,2857,2857,2857,2857,2858,2858,2858,2858,2858,2859,2859,2859,2859,2859,2859,2859,2860,2860,2860,2860,2860,2861,2861,2861,2861,2861,2861,2862,2862,2862,2862,2862,2863,2863,2863,2863,2864,2864,2864,2864,2865,2865,2865,2865,2865,2866,2866,2866,2866,2867,2867,2867,2867,2868,2868,2868,2868,2869,2869,2869,2869,2870,2870,2871,2871,2871,2871,2871,2872,2872,2872,2872,2872,2872,2873,2873,2873,2873,2873,2874,2874,2874,2874,2874,2875,2875,2875,2875,2875,2876,2876,2876,2876,2876,2876,2877,2877,2877,2877,2877,2878,2878,2878,2878,2878,2879,2879,2879,2879,2880,2880,2880,2880,2880,2881,2881,2881,2881,2881,2882,2882,2882,2882,2882,2883,2883,2883,2884,2884,2884,2884,2884,2885,2885,2885,2885,2885,2885,2886,2886,2886,2886,2886,2887,2887,2887,2887,2887,2888,2888,2888,2888,2888,2889,2889,2889,2889,2889,2890,2890,2890,2890,2890,2891,2891,2891,2892,2892,2892,2893,2893,2893,2894,2894,2894,2895,2895,2895,2896,2896,2896,2897,2897,2897,2898,2898,2898,2898,2899,2899,2899,2900,2900,2900,2900,2900,2901,2901,2901,2901,2901,2901,2902,2902,2902,2902,2902,2902,2903,2903,2903,2903,2903,2903,2904,2904,2904,2904,2904,2904,2905,2905,2905,2905,2905,2905,2906,2906,2906,2906,2906,2907,2907,2907,2907,2907,2908,2908,2908,2908,2908,2909,2909,2909,2909,2910,2910,2910,2910,2911,2911,2911,2912,2912,2912,2912,2913,2913,2913,2913,2913,2914,2914,2914,2914,2915,2915,2915,2915,2915,2916,2916,2916,2916,2917,2917,2917,2917,2917,2918,2918,2918,2918,2919,2919,2919,2919,2920,2920,2920,2920,2921,2921,2922,2922,2922,2922,2922,2923,2923,2923,2923,2923,2924,2924,2924,2924,2924,2925,2925,2925,2925,2925,2926,2926,2926,2926,2926,2927,2927,2927,2927,2927,2928,2928,2928,2928,2928,2929,2929,2929,2929,2929,2929,2930,2930,2930,2930,2930,2931,2931,2931,2931,2931,2932,2932,2932,2933,2933,2933,2934,2934,2934,2934,2934,2935,2935,2935,2935,2935,2936,2936,2936,2936,2936,2937,2937,2937,2937,2937,2938,2938,2938,2938,2938,2939,2939,2939,2939,2939,2940,2940,2940,2940,2940,2941,2941,2941,2942,2942,2942,2943,2943,2944,2944,2944,2944,2944,2944,2944,2945,2945,2945,2946,2946,2946,2946,2946,2947,2947,2947,2947,2948,2948,2948,2948,2948,2949,2949,2949,2949,2949,2950,2950,2950,2950,2950,2951,2951,2951,2951,2951,2952,2952,2952,2952,2952,2953,2953,2953,2953,2953,2954,2954,2954,2954,2954,2955,2955,2955,2955,2955,2956,2956,2956,2956,2956,2957,2957,2957,2958,2958,2958,2958,2958,2959,2959,2959,2959,2960,2960,2960,2960,2961,2961,2961,2961,2962,2962,2962,2962,2962,2963,2963,2963,2963,2964,2964,2964,2964,2965,2965,2965,2965,2966,2966,2967,2967,2967,2967,2967,2968,2968,2968,2968,2968,2969,2969,2969,2969,2969,2970,2970,2970,2970,2970,2971,2971,2971,2971,2971,2972,2972,2972,2972,2972,2973,2973,2973,2973,2973,2974,2974,2974,2974,2974,2975,2975,2975,2975,2975,2975,2976,2976,2976,2976,2976,2977,2977,2977,2977,2977,2978,2978,2978,2979,2979,2979,2980,2980,2980,2980,2980,2981,2981,2981,2981,2981,2982,2982,2982,2982,2982,2983,2983,2983,2983,2983,2984,2984,2984,2984,2984,2985,2985,2985,2985,2985,2986,2986,2986,2986,2986,2987,2987,2987,2988,2988,2988,2989,2989,2990,2990,2990,2990,2991,2991,2991,2992,2992,2992,2992,2993,2993,2993,2993,2993,2994,2994,2994,2994,2994,2994,2995,2995,2995,2995,2995,2996,2996,2996,2996,2996,2997,2997,2997,2998,2998,2998,2998,2998,2999,2999,2999,2999,2999,2999,3000,3000,3000,3000,3000,3000,3001,3001,3001,3001,3001,3002,3002,3002,3002,3002,3003,3003,3003,3003,3003,3004,3004,3004,3004,3004,3005,3005,3005,3005,3006,3006,3006,3006,3007,3007,3007,3008,3008,3008,3008,3009,3009,3009,3009,3009,3010,3010,3010,3010,3011,3011,3011,3011,3012,3012,3012,3012,3013,3013,3013,3013,3014,3014,3014,3014,3014,3015,3015,3015,3015,3015,3016,3016,3016,3016,3016,3017,3017,3017,3017,3017,3018,3018,3018,3018,3018,3019,3019,3019,3019,3019,3020,3020,3020,3020,3020,3021,3021,3021,3021,3021,3022,3022,3022,3022,3022,3023,3023,3023,3023,3023,3023,3024,3024,3024,3024,3024,3025,3025,3025,3025,3025,3026,3026,3026,3027,3027,3027,3028,3028,3028,3028,3028,3029,3029,3029,3029,3029,3030,3030,3030,3030,3030,3031,3031,3031,3031,3031,3032,3032,3032,3032,3032,3033,3033,3033,3033,3033,3034,3034,3034,3034,3034,3035,3035,3035,3035,3035,3036,3036,3036,3037,3037,3037,3038,3038,3038,3039,3039,3039,3039,3040,3040,3040,3040,3041,3041,3041,3041,3042,3042,3042,3043,3043,3043,3044,3044,3044,3045,3045,3045,3045,3046,3046,3046,3046,3046,3047,3047,3047,3047,3047,3048,3048,3048,3048,3048,3049,3049,3049,3049,3050,3050,3050,3050,3050,3050,3051,3051,3051,3051,3051,3051,3052,3052,3052,3052,3052,3052,3053,3053,3053,3053,3053,3053,3054,3054,3054,3054,3054,3054,3055,3055,3055,3055,3055,3055,3056,3056,3056,3056,3056,3057,3057,3057,3057,3058,3058,3058,3058,3058,3059,3059,3059,3059,3060,3060,3060,3060,3061,3061,3061,3061,3062,3062,3062,3062,3063,3063,3063,3063,3063,3064,3064,3064,3064,3065,3065,3065,3065,3066,3066,3066,3066,3067,3067,3068,3068,3068,3068,3068,3069,3069,3069,3069,3069,3069,3070,3070,3070,3070,3070,3071,3071,3071,3071,3071,3071,3072,3072,3072,3072,3072,3073,3073,3073,3073,3073,3074,3074,3074,3074,3074,3075,3075,3075,3075,3075,3076,3076,3076,3076,3076,3076,3077,3077,3077,3077,3077,3078,3078,3078,3078,3078,3079,3079,3079,3080,3080,3080,3081,3081,3081,3081,3081,3082,3082,3082,3082,3082,3083,3083,3083,3083,3083,3084,3084,3084,3084,3084,3085,3085,3085,3085,3085,3086,3086,3086,3086,3086,3087,3087,3087,3088,3088,3088,3089,3089,3089,3090,3090,3090,3091,3091,3091,3092,3092,3092,3092,3092,3093,3093,3093,3093,3093,3094,3094,3094,3094,3095,3095,3095,3095,3095,3096,3096,3096,3096,3096,3096,3097,3097,3097,3097,3097,3098,3098,3098,3098,3098,3099,3099,3099,3099,3099,3100,3100,3100,3100,3100,3100,3101,3101,3101,3101,3101,3102,3102,3102,3102,3102,3103,3103,3103,3103,3103,3104,3104,3104,3104,3104,3105,3105,3105,3105,3106,3106,3106,3106,3107,3107,3107,3107,3107,3108,3108,3108,3108,3109,3109,3109,3109,3110,3110,3110,3110,3111,3111,3112,3112,3112,3112,3112,3113,3113,3113,3113,3113,3114,3114,3114,3114,3114,3115,3115,3115,3115,3115,3116,3116,3116,3116,3116,3117,3117,3117,3117,3117,3118,3118,3118,3118,3118,3119,3119,3119,3119,3119,3120,3120,3120,3120,3121,3121,3121,3121,3121,3122,3122,3122,3122,3122,3123,3123,3123,3123,3123,3124,3124,3124,3125,3125,3125,3125,3125,3126,3126,3126,3126,3126,3127,3127,3127,3127,3127,3128,3128,3128,3128,3128,3129,3129,3129,3129,3129,3130,3130,3130,3130,3130,3131,3131,3131,3131,3131,3131,3132,3132,3132,3132,3132,3132,3133,3133,3133,3133,3133,3134,3134,3134,3135,3135,3135,3136,3136,3137,3137,3137,3138,3138,3138,3139,3139,3139,3139,3140,3140,3140,3140,3140,3140,3141,3141,3141,3141,3141,3142,3142,3142,3142,3142,3143,3143,3143,3143,3144,3144,3144,3144,3144,3145,3145,3145,3145,3145,3146,3146,3146,3146,3146,3147,3147,3147,3147,3147,3148,3148,3148,3148,3148,3148,3149,3149,3149,3149,3149,3150,3150,3150,3150,3150,3151,3151,3151,3151,3151,3152,3152,3152,3152,3153,3153,3153,3153,3154,3154,3154,3154,3155,3155,3155,3155,3155,3156,3156,3156,3156,3157,3157,3157,3157,3158,3158,3158,3158,3159,3159,3160,3160,3160,3160,3160,3161,3161,3161,3161,3161,3161,3162,3162,3162,3162,3162,3163,3163,3163,3163,3164,3164,3164,3164,3164,3165,3165,3165,3165,3165,3166,3166,3166,3166,3166,3167,3167,3167,3167,3167,3168,3168,3168,3168,3168,3169,3169,3169,3169,3169,3169,3170,3170,3170,3170,3170,3171,3171,3171,3171,3171,3172,3172,3172,3173,3173,3173,3174,3174,3174,3175,3175,3175,3175,3175,3176,3176,3176,3176,3176,3177,3177,3177,3177,3177,3178,3178,3178,3178,3178,3178,3179,3179,3179,3179,3179,3180,3180,3180,3180,3180,3181,3181,3181,3181,3182,3182,3182,3183,3183,3183,3184,3184,3184,3185,3185,3185,3185,3185,3186,3186,3186,3186,3187,3187,3187,3187,3188,3188,3188,3188,3188,3189,3189,3189,3189,3189,3189,3190,3190,3190,3190,3190,3190,3191,3191,3191,3191,3191,3192,3192,3192,3192,3192,3193,3193,3193,3194,3194,3194,3194,3194,3195,3195,3195,3196,3196,3196,3196,3196,3196,3197,3197,3197,3197,3197,3197,3198,3198,3198,3198,3198,3198,3199,3199,3199,3199,3199,3199,3200,3200,3200,3200,3200,3200,3201,3201,3201,3201,3201,3202,3202,3202,3202,3202,3202,3203,3203,3203,3203,3203,3204,3204,3204,3204,3205,3205,3205,3205,3205,3206,3206,3206,3206,3207,3207,3207,3208,3208,3208,3208,3209,3209,3209,3209,3210,3210,3210,3210,3211,3211,3211,3211,3212,3212,3212,3212,3213,3213,3213,3214,3214,3214,3214,3214,3215,3215,3215,3215,3215,3216,3216,3216,3216,3216,3217,3217,3217,3217,3217,3218,3218,3218,3218,3218,3219,3219,3219,3219,3219,3220,3220,3220,3220,3220,3220,3221,3221,3221,3221,3221,3222,3222,3222,3222,3222,3223,3223,3223,3223,3223,3224,3224,3224,3225,3225,3225,3225,3225,3226,3226,3226,3226,3226,3227,3227,3227,3227,3227,3228,3228,3228,3228,3228,3229,3229,3229,3229,3229,3230,3230,3230,3230,3230,3231,3231,3231,3232,3232,3232,3232,3233,3233,3233,3234,3234,3234,3235,3235,3235,3236,3236,3236,3237,3237,3237,3237,3238,3238,3238,3238,3239,3239,3239,3239,3240,3240,3240,3241,3241,3241,3241,3241,3242,3242,3242,3242,3242,3242,3243,3243,3243,3243,3243,3244,3244,3244,3244,3245,3245,3245,3245,3245,3246,3246,3246,3246,3246,3247,3247,3247,3247,3248,3248,3248,3249,3249,3249,3249,3250,3250,3250,3250,3250,3251,3251,3251,3251,3252,3252,3252,3252,3253,3253,3253,3253,3254,3254,3254,3254,3254,3255,3255,3255,3255,3256,3256,3256,3256,3257,3257,3257,3257,3258,3258,3259,3259,3259,3259,3259,3260,3260,3260,3260,3260,3261,3261,3261,3261,3261,3261,3262,3262,3262,3262,3262,3263,3263,3263,3263,3263,3264,3264,3264,3264,3264,3265,3265,3265,3265,3265,3266,3266,3266,3266,3266,3267,3267,3267,3267,3268,3268,3268,3268,3269,3269,3269,3269,3269,3270,3270,3270,3271,3271,3271,3271,3271,3272,3272,3272,3272,3272,3273,3273,3273,3273,3273,3274,3274,3274,3274,3274,3275,3275,3275,3275,3275,3275,3276,3276,3276,3276,3276,3277,3277,3277,3277,3277,3278,3278,3278,3279,3279,3279,3280,3280,3280,3280,3280,3280,3280,3281,3281,3281,3282,3282,3282,3282,3282,3283,3283,3283,3283,3283,3284,3284,3284,3285,3285,3285,3285,3285,3285,3286,3286,3286,3286,3286,3286,3287,3287,3287,3287,3287,3287,3288,3288,3288,3288,3288,3289,3289,3289,3289,3289,3290,3290,3290,3290,3290,3291,3291,3291,3291,3291,3291,3292,3292,3292,3292,3293,3293,3293,3293,3293,3294,3294,3294,3294,3294,3295,3295,3295,3295,3296,3296,3296,3296,3296,3297,3297,3297,3297,3298,3298,3298,3298,3299,3299,3300,3300,3300,3300,3301,3301,3301,3301,3302,3302,3302,3302,3303,3303,3303,3303,3304,3304,3304,3304,3305,3305,3306,3306,3306,3306,3306,3307,3307,3307,3307,3307,3308,3308,3308,3308,3308,3309,3309,3309,3309,3309,3310,3310,3310,3310,3310,3311,3311,3311,3311,3311,3311,3312,3312,3312,3312,3312,3313,3313,3313,3313,3313,3314,3314,3314,3314,3314,3315,3315,3315,3315,3315,3316,3316,3316,3316,3316,3317,3317,3317,3318,3318,3318,3318,3318,3319,3319,3319,3319,3319,3320,3320,3320,3320,3320,3321,3321,3321,3321,3321,3322,3322,3322,3322,3322,3322,3323,3323,3323,3323,3323,3323,3324,3324,3324,3324,3324,3325,3325,3325,3326,3326,3326,3327,3327,3327,3328,3328,3328,3329,3329,3329,3329,3330,3330,3330,3330,3331,3331,3331,3331,3332,3332,3332,3333,3333,3333,3333,3333,3333,3334,3334,3334,3335,3335,3335,3335,3335,3336,3336,3336,3336,3336,3337,3337,3337,3337,3337,3337,3338,3338,3338,3338,3338,3339,3339,3339,3339,3339,3340,3340,3340,3340,3340,3341,3341,3341,3341,3341,3342,3342,3342,3342,3343,3343,3343,3343,3344,3344,3344,3344,3344,3344,3345,3345,3345,3345,3346,3346,3346,3346,3347,3347,3347,3347,3348,3348,3348,3348,3349,3349,3349,3349,3350,3350,3350,3350,3351,3351,3351,3351,3352,3352,3352,3353,3353,3353,3353,3353,3354,3354,3354,3354,3354,3355,3355,3355,3355,3355,3355,3356,3356,3356,3356,3356,3357,3357,3357,3357,3357,3358,3358,3358,3358,3358,3359,3359,3359,3359,3359,3360,3360,3360,3360,3360,3361,3361,3361,3361,3361,3361,3361,3362,3362,3362,3362,3362,3362,3362,3363,3363,3363,3363,3363,3364,3364,3364,3364,3364,3365,3365,3365,3366,3366,3366,3367,3367,3367,3367,3367,3368,3368,3368,3368,3368,3369,3369,3369,3369,3369,3370,3370,3370,3370,3370,3371,3371,3371,3371,3371,3372,3372,3372,3372,3372,3373,3373,3373,3373,3374,3374,3374,3375,3375,3375,3376,3376,3376,3377,3377,3377,3378,3378,3378,3378,3379,3379,3379,3379,3379,3380,3380,3380,3380,3380,3381,3381,3381,3381,3381,3382,3382,3382,3382,3382,3383,3383,3383,3383,3383,3384,3384,3384,3384,3384,3385,3385,3385,3385,3386,3386,3386,3386,3386,3387,3387,3387,3387,3387,3388,3388,3388,3388,3388,3389,3389,3389,3389,3389,3390,3390,3390,3390,3391,3391,3391,3391,3391,3392,3392,3392,3392,3392,3393,3393,3393,3393,3393,3394,3394,3394,3394,3395,3395,3395,3396,3396,3396,3396,3397,3397,3397,3397,3397,3398,3398,3398,3398,3399,3399,3399,3399,3400,3400,3400,3400,3401,3401,3401,3401,3402,3402,3402,3402,3403,3403,3403,3403,3403,3403,3404,3404,3404,3404,3404,3405,3405,3405,3405,3405,3405,3406,3406,3406,3406,3406,3407,3407,3407,3407,3407,3408,3408,3408,3408,3408,3409,3409,3409,3409,3409,3410,3410,3410,3410,3410,3410,3411,3411,3411,3411,3411,3412,3412,3412,3412,3412,3413,3413,3413,3413,3413,3414,3414,3414,3414,3414,3415,3415,3415,3415,3416,3416,3416,3416,3416,3417,3417,3417,3418,3418,3418,3419,3419,3419,3419,3419,3420,3420,3420,3420,3420,3421,3421,3421,3421,3421,3422,3422,3422,3422,3422,3423,3423,3423,3423,3423,3424,3424,3424,3424,3424,3425,3425,3425,3425,3425,3425,3426,3426,3426,3426,3426,3426,3427,3427,3427,3427,3428,3428,3428,3429,3429,3429,3430,3430,3430,3431,3431,3431,3431,3432,3432,3432,3432,3432,3433,3433,3433,3433,3434,3434,3434,3435,3435,3435,3435,3435,3436,3436,3436,3436,3436,3436,3437,3437,3437,3437,3437,3438,3438,3438,3438,3438,3439,3439,3439,3439,3439,3440,3440,3440,3440,3440,3441,3441,3441,3441,3441,3442,3442,3442,3442,3442,3442,3442,3443,3443,3443,3444,3444,3444,3444,3444,3445,3445,3445,3445,3446,3446,3446,3446,3447,3447,3447,3447,3448,3448,3448,3448,3449,3449,3449,3449,3450,3450,3450,3450,3450,3451,3451,3451,3451,3452,3452,3452,3452,3452,3453,3453,3453,3453,3453,3454,3454,3454,3454,3454,3455,3455,3455,3455,3455,3456,3456,3456,3456,3456,3457,3457,3457,3457,3457,3458,3458,3458,3458,3458,3459,3459,3459,3459,3459,3460,3460,3460,3460,3460,3461,3461,3461,3461,3461,3462,3462,3462,3462,3462,3463,3463,3463,3463,3463,3464,3464,3464,3464,3464,3465,3465,3465,3466,3466,3466,3467,3467,3467,3467,3467,3468,3468,3468,3468,3468,3469,3469,3469,3469,3469,3470,3470,3470,3470,3470,3471,3471,3471,3471,3471,3472,3472,3472,3472,3472,3472,3473,3473,3473,3473,3473,3474,3474,3474,3475,3475,3475,3476,3476,3476,3477,3477,3477,3478,3478,3478,3478,3479,3479,3479,3479,3479,3480,3480,3480,3480,3481,3481,3481,3481,3481,3482,3482,3482,3482,3482,3482,3483,3483,3483,3483,3483,3483,3484,3484,3484,3484,3484,3484,3485,3485,3485,3485,3485,3486,3486,3486,3487,3487,3487,3487,3487,3488,3488,3488,3488,3488,3489,3489,3489,3489,3489,3489,3489,3490,3490,3490,3490,3491,3491,3491,3491,3491,3492,3492,3492,3492,3492,3493,3493,3493,3493,3493,3494,3494,3494,3494,3495,3495,3495,3495,3496,3496,3496,3496,3497,3497,3497,3497,3498,3498,3498,3498,3499,3499,3499,3499,3500,3500,3500,3500,3501,3501,3501,3501,3502,3502,3502,3502,3502,3503,3503,3503,3503,3503,3504,3504,3504,3504,3504,3505,3505,3505,3505,3506,3506,3506,3506,3506,3507,3507,3507,3507,3507,3508,3508,3508,3508,3508,3508,3509,3509,3509,3509,3509,3510,3510,3510,3510,3510,3511,3511,3511,3511,3511,3512,3512,3512,3512,3512,3513,3513,3513,3513,3513,3514,3514,3514,3514,3514,3515,3515,3515,3516,3516,3516,3516,3516,3517,3517,3517,3517,3517,3518,3518,3518,3518,3518,3519,3519,3519,3519,3519,3520,3520,3520,3520,3520,3521,3521,3521,3521,3521,3521,3522,3522,3522,3522,3522,3523,3523,3523,3524,3524,3524,3525,3525,3526,3526,3526,3527,3527,3527,3528,3528,3528,3528,3529,3529,3529,3529,3529,3530,3530,3530,3530,3530,3531,3531,3531,3531,3531,3531,3532,3532,3532,3533,3533,3533,3533,3533,3534,3534,3534,3534,3534,3535,3535,3535,3535,3535,3536,3536,3536,3536,3536,3536,3537,3537,3537,3538,3538,3538,3538,3538,3539,3539,3539,3539,3540,3540,3540,3540,3541,3541,3541,3541,3542,3542,3542,3542,3543,3543,3543,3543,3543,3544,3544,3544,3544,3545,3545,3545,3545,3546,3546,3546,3546,3547,3547,3547,3547,3548,3548,3548,3548,3549,3549,3550,3550,3550,3550,3550,3551,3551,3551,3551,3551,3552,3552,3552,3553,3553,3553,3553,3553,3554,3554,3554,3554,3554,3555,3555,3555,3555,3555,3556,3556,3556,3556,3556,3557,3557,3557,3557,3557,3558,3558,3558,3559,3559,3559,3559,3559,3559,3560,3560,3560,3560,3560,3561,3561,3561,3561,3561,3562,3562,3562,3563,3563,3563,3564,3564,3564,3564,3564,3565,3565,3565,3565,3565,3565,3566,3566,3566,3566,3566,3567,3567,3567,3567,3567,3568,3568,3568,3568,3568,3569,3569,3569,3569,3569,3570,3570,3570,3570,3570,3571,3571,3571,3572,3572,3572,3573,3573,3573,3574,3574,3575,3575,3575,3575,3576,3576,3576,3576,3576,3577,3577,3577,3577,3578,3578,3578,3578,3578,3579,3579,3579,3579,3579,3580,3580,3580,3580,3580,3581,3581,3581,3581,3581,3582,3582,3582,3582,3582,3583,3583,3583,3583,3583,3584,3584,3584,3584,3584,3585,3585,3585,3585,3585,3586,3586,3586,3586,3586,3587,3587,3587,3587,3587,3588,3588,3588,3588,3588,3589,3589,3589,3590,3590,3590,3591,3591,3591,3591,3591,3592,3592,3592,3592,3592,3592,3593,3593,3593,3593,3593,3594,3594,3594,3594,3595,3595,3595,3595,3596,3596,3596,3596,3597,3597,3597,3597,3598,3598,3598,3598,3599,3599,3599,3599,3600,3600,3600,3600,3601,3601,3601,3602,3602,3602,3602,3602,3603,3603,3603,3603,3603,3604,3604,3604,3604,3605,3605,3605,3605,3605,3606,3606,3606,3606,3606,3607,3607,3607,3607,3607,3608,3608,3608,3608,3608,3609,3609,3609,3609,3609,3610,3610,3610,3610,3610,3611,3611,3611,3611,3611,3612,3612,3612,3612,3613,3613,3613,3614,3614,3614,3614,3614,3615,3615,3615,3615,3615,3616,3616,3616,3616,3616,3617,3617,3617,3617,3617,3618,3618,3618,3618,3618,3619,3619,3619,3619,3619,3620,3620,3620,3620,3620,3620,3621,3621,3621,3621,3621,3621,3622,3622,3622,3623,3623,3623,3624,3624,3625,3625,3625,3626,3626,3626,3627,3627,3627,3627,3628,3628,3628,3628,3628,3629,3629,3629,3629,3629,3630,3630,3630,3630,3630,3630,3631,3631,3631,3631,3631,3631,3632,3632,3632,3632,3632,3633,3633,3633,3633,3633,3633,3634,3634,3634,3634,3634,3635,3635,3635,3635,3636,3636,3636,3636,3636,3637,3637,3637,3637,3638,3638,3638,3638,3638,3639,3639,3639,3639,3640,3640,3640,3640,3640,3641,3641,3641,3641,3642,3642,3642,3642,3642,3643,3643,3643,3643,3644,3644,3644,3644,3645,3645,3645,3645,3646,3646,3646,3646,3647,3647,3647,3647,3647,3648,3648,3648,3648,3648,3649,3649,3649,3649,3649,3650,3650,3650,3650,3651,3651,3651,3651,3651,3652,3652,3652,3652,3652,3653,3653,3653,3653,3653,3654,3654,3654,3654,3654,3655,3655,3655,3655,3655,3656,3656,3656,3656,3656,3657,3657,3657,3657,3657,3658,3658,3658,3658,3658,3659,3659,3660,3660,3660,3661,3661,3661,3662,3662,3662,3662,3662,3663,3663,3663,3663,3663,3663,3664,3664,3664,3664,3664,3665,3665,3665,3665,3665,3666,3666,3666,3666,3666,3667,3667,3667,3667,3667,3668,3668,3668,3668,3668,3669,3669,3669,3670,3670,3670,3671,3671,3671,3672,3672,3672,3673,3673,3673,3674,3674,3674,3674,3675,3675,3675,3675,3675,3676,3676,3676,3676,3676,3677,3677,3677,3678,3678,3678,3678,3678,3679,3679,3679,3679,3679,3680,3680,3680,3680,3680,3681,3681,3681,3681,3681,3682,3682,3682,3682,3682,3683,3683,3683,3683,3683,3684,3684,3684,3684,3684,3685,3685,3685,3686,3686,3686,3686,3686,3686,3686,3687,3687,3687,3687,3687,3687,3687,3688,3688,3688,3688,3688,3688,3688,3689,3689,3689,3689,3689,3689,3689,3690,3690,3690,3690,3690,3690,3690,3691,3691,3691,3691,3692,3692,3692,3692,3693,3693,3693,3693,3694,3694,3694,3694,3695,3695,3695,3695,3696,3696,3696,3696,3697,3697,3697,3697,3698,3698,3698,3698,3698,3698,3699,3699,3699,3699,3699,3700,3700,3700,3700,3700,3701,3701,3701,3701,3701,3702,3702,3702,3702,3702,3703,3703,3703,3703,3703,3704,3704,3704,3704,3704,3705,3705,3705,3705,3705,3706,3706,3706,3706,3706,3707,3707,3707,3707,3707,3708,3708,3708,3708,3708,3708,3709,3709,3709,3709,3709,3710,3710,3710,3711,3711,3711,3711,3711,3712,3712,3712,3712,3712,3713,3713,3713,3713,3713,3714,3714,3714,3714,3714,3715,3715,3715,3715,3715,3716,3716,3716,3716,3716,3717,3717,3717,3717,3718,3718,3718,3718,3719,3719,3719,3720,3720,3720,3721,3721,3721,3722,3722,3722,3723,3723,3723,3723,3724,3724,3724,3724,3725,3725,3725,3725,3726,3726,3726,3726,3727,3727,3727,3727,3727,3728,3728,3728,3728,3728,3728,3728,3729,3729,3729,3729,3729,3730,3730,3730,3730,3730,3731,3731,3731,3731,3731,3732,3732,3732,3732,3732,3733,3733,3733,3733,3734,3734,3734,3734,3735,3735,3735,3735,3735,3736,3736,3736,3736,3737,3737,3737,3737,3738,3738,3738,3738,3739,3739,3739,3739,3740,3740,3740,3740,3741,3741,3741,3741,3741,3742,3742,3742,3742,3743,3743,3743,3743,3744,3744,3744,3744,3745,3745,3745,3745,3745,3746,3746,3746,3746,3746,3747,3747,3747,3747,3747,3748,3748,3748,3748,3748,3749,3749,3749,3749,3749,3750,3750,3750,3750,3750,3751,3751,3751,3751,3751,3752,3752,3752,3752,3752,3753,3753,3753,3753,3753,3754,3754,3754,3754,3754,3755,3755,3755,3756,3756,3756,3757,3757,3757,3757,3757,3758,3758,3758,3758,3758,3759,3759,3759,3759,3759,3760,3760,3760,3760,3760,3761,3761,3761,3761,3761,3762,3762,3762,3762,3762,3763,3763,3763,3763,3764,3764,3764,3765,3765,3765,3766,3766,3766,3767,3767,3767,3767,3767,3768,3768,3768,3768,3768,3768,3769,3769,3769,3770,3770,3770,3770,3770,3771,3771,3771,3771,3771,3772,3772,3772,3772,3772,3773,3773,3773,3773,3773,3773,3774,3774,3774,3774,3774,3774,3775,3775,3775,3776,3776,3776,3776,3776,3776,3777,3777,3777,3777,3777,3778,3778,3778,3778,3778,3779,3779,3779,3779,3779,3779,3779,3780,3780,3780,3780,3780,3781,3781,3781,3781,3781,3782,3782,3782,3782,3783,3783,3783,3783,3784,3784,3784,3784,3785,3785,3785,3785,3786,3786,3786,3786,3787,3787,3787,3787,3788,3788,3788,3788,3788,3789,3789,3789,3789,3790,3790,3790,3790,3791,3791,3791,3791,3791,3792,3792,3792,3792,3792,3792,3793,3793,3793,3793,3793,3794,3794,3794,3794,3794,3795,3795,3795,3795,3795,3796,3796,3796,3796,3796,3797,3797,3797,3797,3797,3798,3798,3798,3798,3798,3799,3799,3799,3799,3799,3800,3800,3800,3800,3800,3801,3801,3801,3801,3801,3802,3802,3802,3802,3802,3803,3803,3803,3804,3804,3804,3804,3804,3805,3805,3805,3805,3805,3806,3806,3806,3806,3806,3807,3807,3807,3807,3807,3808,3808,3808,3808,3808,3809,3809,3809,3809,3809,3810,3810,3810,3811,3811,3811,3811,3811,3812,3812,3812,3813,3813,3813,3814,3814,3815,3815,3815,3815,3816,3816,3816,3816,3816,3817,3817,3817,3817,3818,3818,3818,3818,3818,3819,3819,3819,3820,3820,3820,3820,3820,3821,3821,3821,3822,3822,3822,3822,3822,3823,3823,3823,3823,3823,3823,3824,3824,3824,3824,3824,3825,3825,3825,3825,3826,3826,3826,3827,3827,3827,3827,3827,3828,3828,3828,3828,3829,3829,3829,3829,3829,3829,3830,3830,3830,3830,3831,3831,3831,3831,3832,3832,3832,3832,3833,3833,3833,3833,3833,3834,3834,3834,3834,3835,3835,3835,3835,3836,3836,3836,3836,3837,3837,3838,3838,3838,3838,3838,3839,3839,3839,3839,3839,3839,3840,3840,3840,3840,3840,3841,3841,3841,3841,3841,3842,3842,3842,3842,3842,3843,3843,3843,3843,3843,3844,3844,3844,3844,3844,3845,3845,3845,3845,3845,3846,3846,3846,3846,3846,3847,3847,3847,3847,3847,3848,3848,3848,3848,3848,3849,3849,3849,3850,3850,3850,3851,3851,3851,3851,3851,3852,3852,3852,3852,3852,3853,3853,3853,3853,3853,3854,3854,3854,3854,3854,3855,3855,3855,3855,3855,3856,3856,3856,3856,3856,3857,3857,3857,3857,3857,3858,3858,3858,3859,3859,3859,3860,3860,3860,3860,3861,3861,3861,3861,3862,3862,3862,3863,3863,3863,3863,3863,3864,3864,3864,3864,3864,3864,3865,3865,3865,3865,3865,3865,3866,3866,3866,3866,3866,3866,3867,3867,3867,3867,3867,3867,3868,3868,3868,3869,3869,3869,3869,3869,3870,3870,3870,3870,3870,3871,3871,3871,3871,3871,3872,3872,3872,3872,3872,3873,3873,3873,3873,3873,3873,3874,3874,3874,3874,3874,3875,3875,3875,3875,3875,3876,3876,3876,3876,3876,3877,3877,3877,3877,3878,3878,3878,3878,3879,3879,3879,3879,3879,3880,3880,3880,3880,3881,3881,3881,3881,3882,3882,3882,3882,3883,3883,3883,3883,3884,3884,3884,3884,3885,3885,3885,3885,3886,3886,3886,3886,3887,3887,3887,3887,3887,3888,3888,3888,3888,3888,3889,3889,3889,3889,3889,3890,3890,3890,3890,3890,3891,3891,3891,3891,3891,3892,3892,3892,3892,3892,3893,3893,3893,3893,3893,3894,3894,3894,3894,3894,3895,3895,3895,3895,3895,3896,3896,3896,3896,3896,3897,3897,3897,3897,3897,3898,3898,3898,3898,3898,3899,3899,3899,3900,3900,3900,3901,3901,3901,3901,3901,3902,3902,3902,3902,3902,3903,3903,3903,3903,3903,3904,3904,3904,3904,3904,3905,3905,3905,3905,3905,3906,3906,3906,3906,3906,3907,3907,3907,3907,3907,3907,3908,3908,3908,3908,3908,3908,3909,3909,3909,3910,3910,3910,3911,3911,3912,3912,3912,3912,3913,3913,3913,3913,3913,3914,3914,3914,3914,3915,3915,3915,3915,3915,3916,3916,3916,3916,3916,3917,3917,3917,3917,3917,3917,3918,3918,3918,3919,3919,3919,3919,3919,3920,3920,3920,3920,3920,3921,3921,3921,3921,3921,3922,3922,3922,3922,3922,3922,3923,3923,3923,3923,3923,3924,3924,3924,3924,3925,3925,3925,3925,3925,3926,3926,3926,3926,3927,3927,3927,3927,3928,3928,3928,3928,3929,3929,3929,3929,3929,3930,3930,3930,3930,3931,3931,3931,3931,3932,3932,3932,3932,3933,3933,3933,3933,3934,3934,3934,3935,3935,3935,3935,3935,3936,3936,3936,3936,3936,3937,3937,3937,3937,3937,3938,3938,3938,3938,3938,3938,3939,3939,3939,3939,3939,3940,3940,3940,3940,3940,3941,3941,3941,3941,3941,3942,3942,3942,3942,3942,3943,3943,3943,3943,3943,3944,3944,3944,3944,3944,3945,3945,3945,3945,3945,3946,3946,3946,3946,3946,3947,3947,3947,3948,3948,3948,3949,3949,3949,3949,3949,3950,3950,3950,3950,3950,3951,3951,3951,3951,3951,3951,3952,3952,3952,3952,3952,3953,3953,3953,3953,3953,3954,3954,3954,3954,3954,3955,3955,3955,3955,3955,3956,3956,3956,3957,3957,3957,3958,3958,3958,3959,3959,3960,3960,3960,3961,3961,3961,3961,3961,3962,3962,3962,3962,3963,3963,3963,3963,3963,3963,3964,3964,3964,3964,3964,3964,3965,3965,3965,3965,3965,3965,3966,3966,3966,3966,3966,3967,3967,3967,3968,3968,3968,3968,3968,3969,3969,3969,3969,3969,3970,3970,3970,3970,3970,3971,3971,3971,3971,3971,3972,3972,3972,3972,3972,3973,3973,3973,3973,3973,3974,3974,3974,3974,3975,3975,3975,3975,3975,3975,3975,3976,3976,3976,3976,3977,3977,3977,3977,3978,3978,3978,3978,3979,3979,3979,3979,3980,3980,3980,3980,3981,3981,3981,3981,3982,3982,3982,3982,3983,3983,3984,3984,3984,3984,3984,3985,3985,3985,3985,3985,3986,3986,3986,3986,3986,3987,3987,3987,3987,3987,3988,3988,3988,3988,3988,3989,3989,3989,3989,3989,3990,3990,3990,3990,3990,3991,3991,3991,3991,3991,3992,3992,3992,3992,3992,3993,3993,3993,3993,3993,3994,3994,3994,3994,3994,3995,3995,3995,3996,3996,3996,3996,3996,3997,3997,3997,3997,3997,3998,3998,3998,3998,3998,3998,3999,3999,3999,3999,3999,4000,4000,4000,4000,4000,4001,4001,4001,4001,4001,4002,4002,4002,4002,4002,4003,4003,4003,4003,4003,4004,4004,4004,4005,4005,4005,4006,4006,4006,4007,4007,4007,4008,4008,4008,4008,4009,4009,4009,4009,4009,4009,4010,4010,4010,4011,4011,4011,4011,4011,4012,4012,4012,4012,4012,4013,4013,4013,4014,4014,4014,4014,4014,4015,4015,4015,4015,4015,4016,4016,4016,4016,4016,4017,4017,4017,4017,4017,4018,4018,4018,4018,4018,4019,4019,4019,4019,4019,4020,4020,4020,4020,4020,4021,4021,4021,4021,4021,4022,4022,4022,4022,4022,4023,4023,4023,4023,4023,4024,4024,4024,4025,4025,4025,4025,4025,4025,4026,4026,4026,4026,4027,4027,4027,4027,4027,4028,4028,4028,4028,4029,4029,4029,4029,4030,4030,4030,4030,4031,4031,4031,4031,4032,4032,4032,4032,4033,4033,4033,4033,4034,4034,4034,4034,4035,4035,4035,4035,4035,4036,4036,4036,4036,4036,4037,4037,4037,4038,4038,4038,4038,4038,4039,4039,4039,4039,4039,4040,4040,4040,4040,4040,4041,4041,4041,4041,4041,4042,4042,4042,4042,4042,4043,4043,4043,4043,4043,4044,4044,4044,4044,4044,4045,4045,4045,4045,4046,4046,4046,4046,4046,4046,4047,4047,4047,4047,4047,4048,4048,4048,4048,4048,4049,4049,4049,4049,4049,4050,4050,4050,4051,4051,4051,4052,4052,4052,4052,4052,4053,4053,4053,4053,4053,4054,4054,4054,4054,4054,4055,4055,4055,4055,4055,4056,4056,4056,4056,4056,4057,4057,4057,4057,4057,4058,4058,4058,4059,4059,4059,4060,4060,4061,4061,4061,4061,4062,4062,4062,4063,4063,4063,4063,4063,4064,4064,4064,4064,4065,4065,4065,4065,4065,4066,4066,4066,4067,4067,4067,4067,4067,4068,4068,4068,4068,4069,4069,4069,4070,4070,4070,4070,4070,4071,4071,4071,4071,4071,4072,4072,4072,4072,4072,4072,4073,4073,4073,4073,4073,4074,4074,4074,4074,4075,4075,4075,4075,4075,4076,4076,4076,4076,4077,4077,4077,4077,4077,4078,4078,4078,4078,4079,4079,4079,4079,4080,4080,4080,4080,4080,4081,4081,4081,4081,4082,4082,4082,4082,4083,4083,4083,4083,4084,4084,4084,4084,4085,4085,4085,4085,4086,4086,4086,4086,4086,4087,4087,4087,4087,4087,4088,4088,4088,4088,4088,4089,4089,4089,4089,4089,4090,4090,4090,4090,4090,4091,4091,4091,4091,4091,4092,4092,4092,4092,4092,4093,4093,4093,4093,4093,4094,4094,4094,4094,4094,4095,4095,4095,4095,4095,4096,4096,4096,4096,4096,4097,4097,4097,4098,4098,4098,4099,4099,4099,4099,4099,4100,4100,4100,4100,4100,4101,4101,4101,4101,4101,4102,4102,4102,4102,4102,4103,4103,4103,4103,4103,4104,4104,4104,4104,4104,4105,4105,4105,4105,4105,4105,4106,4106,4106,4106,4107,4107,4107,4108,4108,4108,4109,4109,4109,4110,4110,4110,4110,4111,4111,4111,4111,4112,4112,4112,4112,4113,4113,4113,4113,4113,4114,4114,4114,4114,4114,4114,4115,4115,4115,4115,4115,4116,4116,4116,4116,4116,4117,4117,4117,4117,4117,4118,4118,4118,4118,4118,4119,4119,4119,4119,4120,4120,4120,4120,4121,4121,4121,4121,4121,4122,4122,4122,4122,4122,4123,4123,4123,4123,4123,4124,4124,4124,4124,4125,4125,4125,4125,4125,4126,4126,4126,4126,4127,4127,4127,4127,4128,4128,4128,4129,4129,4129,4129,4130,4130,4130,4130,4131,4131,4131,4131,4132,4132,4132,4132,4133,4133,4133,4133,4134,4134,4134,4134,4135,4135,4136,4136,4136,4136,4136,4137,4137,4137,4137,4137,4138,4138,4138,4138,4138,4138,4139,4139,4139,4139,4139,4140,4140,4140,4140,4140,4141,4141,4141,4141,4141,4142,4142,4142,4142,4142,4143,4143,4143,4143,4143,4144,4144,4144,4144,4144,4145,4145,4145,4145,4145,4146,4146,4146,4146,4146,4147,4147,4147,4147,4147,4148,4148,4148,4149,4149,4149,4150,4150,4150,4150,4150,4151,4151,4151,4151,4151,4152,4152,4152,4152,4152,4152,4153,4153,4153,4153,4153,4154,4154,4154,4154,4154,4155,4155,4155,4155,4155,4156,4156,4156,4156,4156,4157,4157,4157,4158,4158,4158,4159,4159,4160,4160,4160,4160,4161,4161,4161,4161,4161,4162,4162,4162,4162,4162,4162,4163,4163,4163,4164,4164,4164,4164,4164,4165,4165,4165,4165,4165,4166,4166,4166,4167,4167,4167,4167,4167,4167,4168,4168,4168,4168,4168,4168,4169,4169,4169,4169,4169,4170,4170,4170,4171,4171,4171,4172,4172,4172,4172,4172,4172,4173,4173,4173,4173,4173,4173,4174,4174,4174,4174,4174,4175,4175,4175,4175,4176,4176,4176,4176,4177,4177,4177,4177,4178,4178,4178,4178,4179,4179,4179,4179,4180,4180,4180,4180,4181,4181,4181,4181,4182,4182,4182,4182,4183,4183,4183,4183,4183,4183,4184,4184,4184,4184,4184,4184,4184,4185,4185,4185,4185,4185,4186,4186,4186,4186,4186,4187,4187,4187,4187,4187,4188,4188,4188,4188,4188,4189,4189,4189,4189,4189,4190,4190,4190,4190,4190,4191,4191,4191,4191,4191,4192,4192,4192,4192,4192,4193,4193,4193,4193,4193,4194,4194,4194,4194,4194,4195,4195,4196,4196,4196,4197,4197,4197,4197,4197,4198,4198,4198,4198,4198,4199,4199,4199,4199,4199,4200,4200,4200,4200,4200,4201,4201,4201,4201,4201,4202,4202,4202,4202,4202,4203,4203,4203,4203,4203,4203,4204,4204,4204,4205,4205,4205,4206,4206,4207,4207,4207,4207,4208,4208,4208,4208,4209,4209,4209,4209,4210,4210,4210,4210,4211,4211,4211,4211,4212,4212,4212,4213,4213,4213,4213,4213,4214,4214,4214,4214,4214,4215,4215,4215,4215,4215,4216,4216,4216,4216,4216,4217,4217,4217,4218,4218,4218,4218,4218,4218,4219,4219,4219,4219,4219,4220,4220,4220,4220,4220,4221,4221,4221,4221,4221,4222,4222,4222,4222,4222,4223,4223,4223,4223,4223,4224,4224,4224,4225,4225,4225,4225,4225,4226,4226,4226,4226,4227,4227,4227,4227,4227,4228,4228,4228,4228,4229,4229,4229,4229,4230,4230,4230,4230,4231,4231,4231,4231,4232,4232,4232,4232,4232,4233,4233,4233,4233,4234,4234,4234,4234,4235,4235,4236,4236,4236,4236,4236,4237,4237,4237,4237,4237,4237,4238,4238,4238,4238,4238,4239,4239,4239,4239,4239,4240,4240,4240,4240,4240,4241,4241,4241,4241,4241,4242,4242,4242,4242,4242,4243,4243,4243,4243,4243,4244,4244,4244,4244,4244,4245,4245,4245,4245,4245,4246,4246,4247,4247,4247,4248,4248,4248,4248,4248,4249,4249,4249,4249,4249,4250,4250,4250,4250,4250,4251,4251,4251,4251,4251,4252,4252,4252,4252,4252,4253,4253,4253,4253,4253,4254,4254,4254,4255,4255,4255,4256,4256,4256,4257,4257,4257,4258,4258,4259,4259,4259,4260,4260,4260,4260,4260,4261,4261,4261,4261,4262,4262,4262,4263,4263,4263,4263,4263,4264,4264,4264,4264,4264,4264,4265,4265,4265,4265,4265,4266,4266,4266,4266,4266,4267,4267,4267,4267,4267,4268,4268,4268,4268,4268,4269,4269,4269,4269,4270,4270,4270,4271,4271,4271,4272,4272,4272,4272,4273,4273,4273,4273,4274,4274,4274,4274,4275,4275,4275,4275,4276,4276,4276,4276,4277,4277,4277,4277,4277,4278,4278,4278,4278,4279,4279,4279,4279,4280,4280,4280,4280,4280,4281,4281,4281,4281,4281,4282,4282,4282,4282,4282,4283,4283,4283,4283,4283,4284,4284,4284,4284,4284,4285,4285,4285,4285,4285,4286,4286,4286,4286,4286,4287,4287,4287,4287,4287,4288,4288,4288,4288,4288,4289,4289,4289,4289,4289,4290,4290,4290,4290,4290,4291,4291,4291,4291,4291,4292,4292,4292,4293,4293,4293,4294,4294,4294,4294,4294,4295,4295,4295,4295,4295,4296,4296,4296,4296,4296,4297,4297,4297,4297,4297,4298,4298,4298,4298,4298,4299,4299,4299,4299,4299,4300,4300,4300,4300,4300,4301,4301,4301,4302,4302,4302,4303,4303,4303,4304,4304,4304,4305,4305,4305,4305,4306,4306,4306,4306,4307,4307,4307,4307,4308,4308,4308,4308,4308,4309,4309,4309,4309,4309,4310,4310,4310,4310,4310,4311,4311,4311,4311,4311,4312,4312,4312,4312,4312,4313,4313,4313,4313,4313,4314,4314,4314,4314,4314,4315,4315,4315,4315,4315,4316,4316,4316,4316,4316,4316,4317,4317,4317,4317,4317,4317,4318,4318,4318,4318,4318,4318,4319,4319,4319,4319,4319,4320,4320,4320,4320,4321,4321,4321,4321,4321,4321,4322,4322,4322,4322,4323,4323,4323,4323,4324,4324,4324,4324,4325,4325,4325,4325,4326,4326,4326,4326,4327,4327,4327,4327,4328,4328,4328,4328,4328,4329,4329,4329,4329,4330,4330,4330,4330,4331,4331,4331,4331,4332,4332,4333,4333,4333,4333,4333,4334,4334,4334,4334,4334,4335,4335,4335,4335,4335,4336,4336,4336,4336,4336,4337,4337,4337,4337,4337,4338,4338,4338,4338,4338,4339,4339,4339,4339,4339,4340,4340,4340,4340,4340,4341,4341,4341,4341,4341,4341,4342,4342,4342,4342,4342,4343,4343,4343,4343,4343,4344,4344,4344,4344,4344,4345,4345,4345,4346,4346,4346,4347,4347,4347,4347,4347,4348,4348,4348,4348,4348,4349,4349,4349,4349,4349,4349,4350,4350,4350,4350,4350,4351,4351,4351,4351,4351,4352,4352,4352,4352,4352,4353,4353,4353,4353,4353,4354,4354,4354,4355,4355,4355,4356,4356,4356,4357,4357,4357,4357,4358,4358,4358,4358,4359,4359,4359,4359,4359,4360,4360,4360,4360,4360,4361,4361,4361,4361,4362,4362,4362,4362,4363,4363,4363,4363,4364,4364,4364,4364,4365,4365,4365,4365,4366,4366,4366,4367,4367,4367,4367,4367,4368,4368,4368,4368,4368,4369,4369,4369,4369,4369,4370,4370,4370,4370,4371,4371,4371,4371,4371,4372,4372,4372,4372,4372,4373,4373,4373,4373,4373,4374,4374,4374,4374,4375,4375,4375,4375,4376,4376,4376,4377,4377,4377,4377,4378,4378,4378,4378,4379,4379,4379,4379,4380,4380,4380,4380,4381,4381,4381,4381,4382,4382,4382,4382,4383,4383,4383,4383,4384,4384,4384,4384,4385,4385,4385,4385,4386,4386,4386,4387,4387,4387,4387,4387,4388,4388,4388,4388,4388,4389,4389,4389,4389,4390,4390,4390,4390,4390,4391,4391,4391,4391,4391,4392,4392,4392,4392,4392,4392,4393,4393,4393,4393,4393,4394,4394,4394,4394,4394,4395,4395,4395,4395,4395,4396,4396,4396,4396,4396,4396,4397,4397,4397,4397,4397,4398,4398,4398,4398,4398,4399,4399,4399,4399,4399,4400,4400,4400,4401,4401,4401,4401,4401,4402,4402,4402,4402,4402,4403,4403,4403,4403,4403,4404,4404,4404,4404,4404,4405,4405,4405,4405,4405,4406,4406,4406,4406,4406,4406,4407,4407,4407,4407,4407,4407,4408,4408,4408,4408,4408,4409,4409,4409,4410,4410,4410,4411,4411,4411,4411,4411,4411,4411,4412,4412,4412,4413,4413,4413,4413,4413,4414,4414,4414,4414,4415,4415,4415,4415,4415,4416,4416,4416,4416,4416,4417,4417,4417,4417,4417,4417,4417,4418,4418,4418,4418,4418,4419,4419,4419,4419,4419,4419,4420,4420,4420,4420,4420,4421,4421,4421,4421,4421,4422,4422,4422,4422,4422,4423,4423,4423,4423,4424,4424,4424,4424,4425,4425,4425,4425,4425,4426,4426,4426,4426,4427,4427,4427,4427,4428,4428,4428,4428,4428,4429,4429,4429,4429,4430,4430,4430,4430,4431,4431,4431,4431,4432,4432,4432,4432,4433,4433,4433,4433,4434,4434,4434,4434,4434,4435,4435,4435,4435,4435,4436,4436,4436,4436,4436,4437,4437,4437,4438,4438,4438,4438,4438,4439,4439,4439,4439,4439,4440,4440,4440,4440,4440,4441,4441,4441,4441,4441,4442,4442,4442,4442,4442,4443,4443,4443,4443,4443,4444,4444,4444,4444,4444,4445,4445,4445,4445,4445,4446,4446,4446,4446,4446,4447,4447,4447,4448,4448,4448,4448,4448,4449,4449,4449,4449,4449,4449,4450,4450,4450,4450,4450,4451,4451,4451,4451,4451,4452,4452,4452,4452,4452,4453,4453,4453,4453,4453,4454,4454,4454,4454,4454,4455,4455,4455,4456,4456,4456,4457,4457,4457,4458,4458,4458,4459,4459,4459,4460,4460,4460,4461,4461,4461,4461,4461,4461,4462,4462,4462,4462,4462,4462,4463,4463,4463,4463,4463,4463,4464,4464,4464,4464,4464,4465,4465,4465,4465,4465,4466,4466,4466,4466,4466,4467,4467,4467,4467,4467,4468,4468,4468,4468,4468,4468,4469,4469,4469,4470,4470,4470,4470,4470,4471,4471,4471,4471,4471,4472,4472,4472,4472,4473,4473,4473,4473,4474,4474,4474,4474,4475,4475,4475,4475,4476,4476,4476,4476,4477,4477,4477,4477,4478,4478,4478,4478,4479,4479,4479,4479,4480,4480,4480,4480,4481,4481,4481,4481,4482,4482,4483,4483,4483,4483,4483,4484,4484,4484,4484,4484,4485,4485,4485,4485,4486,4486,4486,4486,4486,4487,4487,4487,4487,4487,4488,4488,4488,4488,4488,4489,4489,4489,4489,4489,4490,4490,4490,4490,4490,4491,4491,4491,4491,4491,4492,4492,4492,4492,4492,4493,4493,4493,4493,4493,4494,4494,4494,4494,4494,4495,4495,4495,4495,4495,4495,4496,4496,4496,4496,4496,4496,4497,4497,4497,4498,4498,4498,4499,4499,4499,4499,4499,4500,4500,4500,4500,4500,4501,4501,4501,4501,4501,4502,4502,4502,4502,4502,4503,4503,4503,4503,4503,4504,4504,4504,4504,4504,4505,4505,4505,4506,4506,4506,4507,4507,4507,4508,4508,4509,4509,4509,4510,4510,4510,4510,4511,4511,4511,4511,4511,4512,4512,4512,4512,4513,4513,4513,4513,4513,4514,4514,4514,4514,4514,4515,4515,4515,4515,4515,4515,4516,4516,4516,4516,4516,4516,4517,4517,4517,4517,4517,4518,4518,4518,4518,4518,4519,4519,4519,4519,4519,4520,4520,4520,4520,4520,4521,4521,4521,4521,4521,4521,4521,4522,4522,4522,4522,4522,4523,4523,4523,4523,4524,4524,4524,4524,4524,4525,4525,4525,4525,4526,4526,4526,4526,4527,4527,4527,4527,4528,4528,4528,4528,4529,4529,4529,4529,4530,4530,4530,4530,4530,4531,4531,4531,4531,4531,4532,4532,4532,4532,4532,4533,4533,4533,4533,4534,4534,4534,4534,4535,4535,4535,4535,4536,4536,4536,4536,4536,4537,4537,4537,4537,4537,4538,4538,4538,4538,4538,4539,4539,4539,4539,4540,4540,4540,4540,4540,4541,4541,4541,4541,4541,4542,4542,4542,4542,4542,4543,4543,4543,4543,4543,4544,4544,4544,4545,4545,4545,4545,4545,4546,4546,4546,4546,4546,4547,4547,4547,4547,4547,4548,4548,4548,4548,4548,4549,4549,4549,4550,4550,4550,4550,4550,4551,4551,4551,4551,4551,4552,4552,4552,4552,4552,4553,4553,4553,4553,4553,4554,4554,4554,4554,4554,4555,4555,4555,4555,4555,4556,4556,4556,4556,4556,4557,4557,4557,4558,4558,4558,4559,4559,4559,4560,4560,4561,4561,4561,4562,4562,4562,4562,4562,4563,4563,4563,4563,4564,4564,4564,4564,4564,4565,4565,4565,4565,4565,4566,4566,4566,4566,4566,4566,4567,4567,4567,4567,4567,4567,4568,4568,4568,4568,4568,4568,4569,4569,4569,4569,4569,4569,4570,4570,4570,4570,4570,4570,4571,4571,4571,4572,4572,4572,4572,4572,4573,4573,4573,4573,4573,4573,4574,4574,4574,4574,4574,4575,4575,4575,4575,4575,4575,4575,4576,4576,4576,4576,4576,4577,4577,4577,4577,4578,4578,4578,4578,4579,4579,4579,4579,4579,4580,4580,4580,4580,4581,4581,4581,4581,4582,4582,4582,4582,4583,4583,4583,4583,4583,4584,4584,4584,4584,4585,4585,4585,4585,4586,4586,4586,4586,4587,4587,4588,4588,4588,4588,4588,4589,4589,4589,4589,4589,4590,4590,4590,4590,4590,4591,4591,4591,4591,4591,4592,4592,4592,4592,4592,4593,4593,4593,4593,4593,4594,4594,4594,4594,4594,4595,4595,4595,4595,4595,4596,4596,4596,4596,4596,4597,4597,4597,4597,4597,4598,4598,4598,4598,4598,4599,4599,4599,4599,4599,4600,4600,4600,4601,4601,4601,4601,4601,4602,4602,4602,4602,4602,4603,4603,4603,4603,4603,4604,4604,4604,4604,4604,4605,4605,4605,4605,4605,4606,4606,4606,4606,4606,4607,4607,4607,4608,4608,4608,4609,4609,4609,4609,4610,4610,4610,4611,4611,4611,4611,4611,4611,4612,4612,4612,4613,4613,4613,4613,4613,4614,4614,4614,4614,4615,4615,4615,4616,4616,4616,4616,4616,4617,4617,4617,4617,4617,4617,4618,4618,4618,4618,4618,4619,4619,4619,4619,4619,4620,4620,4620,4620,4620,4621,4621,4621,4621,4622,4622,4622,4623,4623,4623,4623,4624,4624,4624,4624,4624,4625,4625,4625,4625,4626,4626,4626,4626,4627,4627,4627,4627,4628,4628,4628,4628,4629,4629,4629,4629,4629,4630,4630,4630,4630,4631,4631,4631,4631,4632,4632,4632,4632,4633,4633,4634,4634,4634,4634,4634,4635,4635,4635,4635,4635,4636,4636,4636,4636,4636,4637,4637,4637,4637,4637,4638,4638,4638,4638,4638,4639,4639,4639,4639,4639,4639,4640,4640,4640,4640,4640,4641,4641,4641,4641,4641,4642,4642,4642,4642,4642,4643,4643,4643,4643,4643,4644,4644,4644,4644,4644,4645,4645,4645,4645,4645,4646,4646,4646,4647,4647,4647,4648,4648,4648,4648,4648,4649,4649,4649,4649,4649,4650,4650,4650,4650,4650,4651,4651,4651,4651,4651,4651,4652,4652,4652,4652,4652,4653,4653,4653,4653,4653,4654,4654,4654,4654,4654,4655,4655,4655,4655,4656,4656,4656,4657,4657,4657,4658,4658,4659,4659,4659,4660,4660,4660,4660,4660,4660,4661,4661,4661,4661,4661,4662,4662,4662,4662,4662,4663,4663,4663,4663,4663,4664,4664,4664,4664,4664,4664,4664,4665,4665,4665,4665,4665,4665,4665,4666,4666,4666,4666,4666,4667,4667,4667,4667,4667,4668,4668,4668,4668,4668,4669,4669,4669,4669,4669,4670,4670,4670,4670,4670,4670,4671,4671,4671,4672,4672,4672,4672,4673,4673,4673,4673,4673,4674,4674,4674,4674,4675,4675,4675,4675,4676,4676,4676,4676,4677,4677,4677,4677,4678,4678,4678,4678,4679,4679,4679,4679,4679,4680,4680,4680,4680,4681,4681,4681,4681,4682,4682,4682,4682,4683,4683,4683,4683,4684,4684,4684,4684,4684,4685,4685,4685,4685,4685,4686,4686,4686,4686,4686,4687,4687,4687,4687,4687,4688,4688,4688,4688,4688,4689,4689,4689,4689,4689,4690,4690,4690,4690,4690,4691,4691,4691,4691,4691,4692,4692,4692,4692,4692,4693,4693,4693,4693,4694,4694,4694,4694,4694,4695,4695,4695,4695,4695,4696,4696,4696,4696,4696,4697,4697,4697,4698,4698,4698,4699,4699,4699,4699,4699,4700,4700,4700,4700,4700,4701,4701,4701,4701,4701,4702,4702,4702,4702,4702,4703,4703,4703,4703,4703,4704,4704,4704,4704,4704,4705,4705,4705,4705,4705,4706,4706,4706,4707,4707,4707,4708,4708,4708,4709,4709,4709,4710,4710,4710,4710,4711,4711,4711,4712,4712,4712,4712,4713,4713,4713,4713,4713,4714,4714,4714,4715,4715,4715,4715,4715,4716,4716,4716,4716,4716,4716,4716,4717,4717,4717,4717,4717,4718,4718,4718,4718,4718,4719,4719,4719,4719,4719,4720,4720,4720,4721,4721,4721,4721,4721,4721,4721,4722,4722,4722,4722,4722,4722,4722,4723,4723,4723,4723,4723,4723,4723,4724,4724,4724,4724,4724,4724,4724,4725,4725,4725,4725,4725,4725,4725,4726,4726,4726,4726,4726,4726,4726,4727,4727,4727,4727,4727,4728,4728,4728,4728,4728,4729,4729,4729,4729,4730,4730,4730,4730,4731,4731,4731,4731,4732,4732,4732,4733,4733,4733,4733,4734,4734,4734,4734,4735,4735,4735,4735,4736,4736,4736,4736,4736,4737,4737,4737,4737,4738,4738,4738,4738,4739,4739,4739,4739,4740,4740,4741,4741,4741,4741,4741,4742,4742,4742,4742,4742,4743,4743,4743,4743,4743,4744,4744,4744,4744,4744,4745,4745,4745,4745,4745,4746,4746,4746,4746,4746,4747,4747,4747,4747,4747,4748,4748,4748,4748,4748,4748,4749,4749,4749,4749,4749,4750,4750,4750,4750,4750,4751,4751,4751,4751,4751,4752,4752,4752,4753,4753,4753,4754,4754,4754,4754,4754,4755,4755,4755,4755,4755,4756,4756,4756,4756,4756,4757,4757,4757,4757,4757,4758,4758,4758,4758,4758,4759,4759,4759,4760,4760,4760,4761,4761,4761,4761,4762,4762,4762,4763,4763,4763,4764,4764,4764,4765,4765,4765,4765,4765,4766,4766,4766,4767,4767,4767,4767,4767,4768,4768,4768,4769,4769,4769,4769,4769,4769,4769,4770,4770,4770,4770,4770,4771,4771,4771,4771,4771,4772,4772,4772,4773,4773,4773,4773,4773,4774,4774,4774,4774,4774,4774,4774,4775,4775,4775,4775,4775,4776,4776,4776,4776,4776,4777,4777,4777,4777,4778,4778,4778,4778,4779,4779,4779,4779,4780,4780,4780,4780,4781,4781,4781,4781,4781,4782,4782,4782,4782,4783,4783,4783,4783,4784,4784,4784,4784,4785,4785,4785,4785,4786,4786,4787,4787,4787,4787,4787,4788,4788,4788,4788,4788,4789,4789,4789,4789,4789,4790,4790,4790,4790,4790,4791,4791,4791,4791,4791,4792,4792,4792,4792,4792,4793,4793,4793,4793,4793,4794,4794,4794,4794,4794,4795,4795,4795,4795,4795,4796,4796,4796,4796,4796,4797,4797,4797,4797,4797,4798,4798,4798,4799,4799,4799,4800,4800,4800,4800,4800,4801,4801,4801,4801,4801,4802,4802,4802,4802,4802,4803,4803,4803,4803,4803,4803,4804,4804,4804,4804,4804,4805,4805,4805,4805,4805,4806,4806,4806,4806,4806,4807,4807,4807,4808,4808,4808,4809,4809,4809,4810,4810,4810,4811,4811,4811,4811,4812,4812,4812,4812,4812,4813,4813,4813,4813,4814,4814,4814,4814,4814,4815,4815,4815,4815,4815,4815,4816,4816,4816,4816,4816,4816,4817,4817,4817,4817,4817,4818,4818,4818,4818,4818,4819,4819,4819,4820,4820,4820,4820,4820,4821,4821,4821,4821,4821,4822,4822,4822,4822,4822,4823,4823,4823,4823,4823,4824,4824,4824,4824,4824,4825,4825,4825,4825,4826,4826,4826,4826,4826,4827,4827,4827,4827,4828,4828,4828,4828,4828,4829,4829,4829,4830,4830,4830,4830,4831,4831,4831,4831,4832,4832,4832,4832,4833,4833,4833,4833,4834,4834,4834,4834,4835,4835,4835,4835,4836,4836,4837,4837,4837,4837,4837,4838,4838,4838,4838,4838,4839,4839,4839,4839,4839,4840,4840,4840,4840,4840,4841,4841,4841,4841,4841,4842,4842,4842,4842,4842,4843,4843,4843,4843,4843,4844,4844,4844,4844,4844,4845,4845,4845,4845,4845,4846,4846,4846,4846,4846,4847,4847,4847,4847,4847,4848,4848,4848,4849,4849,4849,4849,4849,4850,4850,4850,4850,4850,4851,4851,4851,4851,4851,4851,4852,4852,4852,4852,4852,4852,4853,4853,4853,4853,4853,4854,4854,4854,4854,4854,4855,4855,4855,4855,4855,4856,4856,4856,4856,4856,4857,4857,4857,4858,4858,4858,4859,4859,4859,4860,4860,4860,4861,4861,4861,4861,4862,4862,4862,4862,4863,4863,4863,4863,4863,4864,4864,4864,4864,4864,4865,4865,4865,4865,4865,4866,4866,4866,4866,4866,4867,4867,4867,4867,4868,4868,4868,4868,4868,4869,4869,4869,4870,4870,4870,4870,4870,4871,4871,4871,4872,4872,4872,4872,4872,4872,4873,4873,4873,4873,4874,4874,4874,4874,4874,4875,4875,4875,4875,4876,4876,4876,4876,4876,4877,4877,4877,4877,4878,4878,4878,4878,4879,4879,4879,4879,4880,4880,4880,4880,4880,4881,4881,4881,4881,4882,4882,4882,4882,4883,4883,4883,4883,4884,4884,4884,4884,4885,4885,4885,4885,4886,4886,4886,4886,4886,4887,4887,4887,4887,4887,4888,4888,4888,4888,4888,4889,4889,4889,4889,4889,4890,4890,4890,4890,4890,4891,4891,4891,4891,4891,4892,4892,4892,4892,4892,4893,4893,4893,4893,4893,4894,4894,4894,4894,4894,4895,4895,4895,4895,4895,4896,4896,4896,4896,4896,4897,4897,4897,4898,4898,4898,4899,4899,4899,4900,4900,4900,4900,4900,4900,4901,4901,4901,4901,4901,4902,4902,4902,4902,4902,4903,4903,4903,4903,4903,4904,4904,4904,4904,4904,4905,4905,4905,4905,4905,4906,4906,4906,4906,4906,4907,4907,4907,4908,4908,4908,4908,4909,4909,4909,4909,4910,4910,4910,4911,4911,4912,4912,4912,4913,4913,4913,4913,4913,4914,4914,4914,4914,4914,4914,4915,4915,4915,4915,4915,4915,4916,4916,4916,4916,4916,4916,4917,4917,4917,4917,4917,4917,4918,4918,4918,4918,4918,4918,4919,4919,4919,4920,4920,4920,4920,4920,4921,4921,4921,4922,4922,4922,4922,4922,4923,4923,4923,4923,4923,4923,4924,4924,4924,4924,4924,4925,4925,4925,4925,4925,4926,4926,4926,4926,4926,4927,4927,4927,4927,4927,4928,4928,4928,4928,4928,4928,4929,4929,4929,4929,4929,4930,4930,4930,4930,4931,4931,4931,4931,4932,4932,4932,4932,4933,4933,4933,4933,4934,4934,4934,4934,4935,4935,4935,4935,4936,4936,4936,4936,4937,4937,4937,4937,4938,4938,4939,4939,4939,4939,4939,4940,4940,4940,4940,4940,4941,4941,4941,4941,4941,4942,4942,4942,4942,4942,4943,4943,4943,4943,4943,4944,4944,4944,4944,4944,4944,4945,4945,4945,4945,4945,4946,4946,4946,4946,4946,4947,4947,4947,4947,4947,4948,4948,4948,4948,4948,4949,4949,4949,4949,4949,4950,4950,4950,4951,4951,4951,4952,4952,4952,4952,4952,4953,4953,4953,4953,4953,4954,4954,4954,4954,4954,4955,4955,4955,4955,4955,4956,4956,4956,4956,4956,4957,4957,4957,4957,4957,4957,4958,4958,4958,4958,4958,4959,4959,4959,4959,4960,4960,4960,4961,4961,4961,4962,4962,4962,4963,4963,4963,4963,4964,4964,4964,4964,4965,4965,4965,4965,4966,4966,4966,4966,4966,4966,4967,4967,4967,4967,4967,4968,4968,4968,4968,4968,4968,4969,4969,4969,4969,4969,4970,4970,4970,4970,4970,4971,4971,4971,4971,4971,4972,4972,4972,4972,4972,4973,4973,4973,4973,4973,4973,4973,4974,4974,4974,4974,4974,4975,4975,4975,4975,4976,4976,4976,4976,4976,4977,4977,4977,4977,4978,4978,4978,4978,4979,4979,4979,4979,4980,4980,4980,4980,4981,4981,4981,4981,4981,4982,4982,4982,4982,4983,4983,4983,4983,4984,4984,4984,4984,4985,4985,4985,4985,4986,4986,4986,4986,4987,4987,4988,4988,4988,4988,4988,4989,4989,4989,4989,4989,4990,4990,4990,4990,4990,4991,4991,4991,4991,4991,4992,4992,4992,4992,4992,4993,4993,4993,4993,4993,4994,4994,4994,4994,4994,4995,4995,4995,4995,4995,4996,4996,4996,4996,4996,4997,4997,4997,4997,4997,4997,4998,4998,4998,4998,4998,4999,4999,4999,4999,4999,5000,5000,5000,5000,5000,5000,5001,5001,5001,5002,5002,5002,5003,5003,5003,5003,5003,5004,5004,5004,5004,5004,5005,5005,5005,5005,5005,5006,5006,5006,5006,5006,5007,5007,5007,5007,5007,5008,5008,5008,5008,5008,5009,5009,5009,5010,5010,5010,5011,5011,5011,5012,5012,5012,5012,5012,5012,5013,5013,5013,5014,5014,5014,5014,5014,5015,5015,5015,5015,5016,5016,5016,5016,5016,5016,5017,5017,5017,5017,5017,5017,5018,5018,5018,5018,5018,5018,5019,5019,5019,5020,5020,5020,5021,5021,5021,5021,5021,5022,5022,5022,5022,5022,5023,5023,5023,5023,5023,5024,5024,5024,5024,5024,5024,5025,5025,5025,5025,5025,5026,5026,5026,5027,5027,5027,5027,5027,5028,5028,5028,5028,5029,5029,5029,5029,5029,5030,5030,5030,5030,5030,5031,5031,5031,5031,5032,5032,5032,5032,5033,5033,5033,5033,5034,5034,5034,5034,5035,5035,5035,5035,5036,5036,5036,5036,5037,5037,5037,5037,5038,5038,5038,5038,5039,5039,5039,5039,5039,5039,5040,5040,5040,5040,5040,5041,5041,5041,5041,5041,5042,5042,5042,5042,5042,5043,5043,5043,5043,5044,5044,5044,5044,5044,5045,5045,5045,5045,5045,5046,5046,5046,5046,5046,5047,5047,5047,5047,5047,5048,5048,5048,5048,5048,5049,5049,5049,5049,5049,5050,5050,5050,5050,5050,5051,5051,5051,5051,5051,5052,5052,5052,5052,5052,5053,5053,5053,5053,5053,5054,5054,5054,5054,5054,5055,5055,5055,5055,5055,5056,5056,5056,5057,5057,5057,5057,5057,5058,5058,5058,5058,5058,5059,5059,5059,5059,5059,5060,5060,5060,5060,5060,5061,5061,5061,5061,5061,5062,5062,5062,5062,5062,5063,5063,5063,5064,5064,5064,5065,5065,5065,5066,5066,5066,5067,5067,5067,5068,5068,5068,5068,5068,5068,5069,5069,5069,5070,5070,5070,5070,5071,5071,5071,5071,5071,5072,5072,5072,5072,5072,5073,5073,5073,5073,5073,5074,5074,5074,5074,5074,5074,5074,5075,5075,5075,5075,5075,5076,5076,5076,5076,5076,5077,5077,5077,5078,5078,5078,5078,5078,5079,5079,5079,5079,5080,5080,5080,5080,5080,5081,5081,5081,5081,5081,5082,5082,5082,5082,5083,5083,5083,5083,5083,5084,5084,5084,5084,5085,5085,5085,5085,5086,5086,5086,5086,5086,5087,5087,5087,5087,5087,5088,5088,5088,5088,5088,5089,5089,5089,5089,5089,5090,5090,5090,5090,5090,5091,5091,5091,5091,5092,5092,5092,5092,5093,5093,5093,5093,5094,5094,5094,5094,5095,5095,5095,5095,5096,5096,5096,5096,5097,5097,5097,5097,5097,5098,5098,5098,5098,5098,5099,5099,5099,5099,5099,5100,5100,5100,5100,5100,5101,5101,5101,5101,5101,5102,5102,5102,5102,5102,5103,5103,5103,5103,5103,5104,5104,5104,5104,5104,5105,5105,5105,5105,5105,5106,5106,5106,5106,5106,5107,5107,5107,5107,5107,5108,5108,5108,5108,5108,5109,5109,5109,5110,5110,5110,5110,5110,5111,5111,5111,5111,5111,5112,5112,5112,5112,5112,5113,5113,5113,5113,5113,5114,5114,5114,5114,5114,5115,5115,5115,5115,5115,5116,5116,5116,5117,5117,5117,5118,5118,5118,5118,5119,5119,5119,5120,5120,5120,5121,5121,5121,5122,5122,5122,5122,5123,5123,5123,5123,5123,5124,5124,5124,5124,5124,5125,5125,5125,5125,5126,5126,5126,5126,5126,5127,5127,5127,5127,5127,5128,5128,5128,5128,5128,5129,5129,5129,5129,5129,5130,5130,5130,5130,5130,5131,5131,5131,5132,5132,5132,5132,5132,5133,5133,5133,5133,5134,5134,5134,5134,5135,5135,5135,5135,5136,5136,5136,5136,5137,5137,5137,5137,5138,5138,5138,5138,5139,5139,5139,5139,5139,5140,5140,5140,5140,5141,5141,5141,5141,5142,5142,5142,5142,5143,5143,5143,5143,5144,5144,5144,5144,5144,5145,5145,5145,5145,5145,5146,5146,5146,5146,5147,5147,5147,5147,5147,5148,5148,5148,5148,5148,5149,5149,5149,5149,5149,5150,5150,5150,5150,5150,5151,5151,5151,5151,5151,5152,5152,5152,5152,5152,5153,5153,5153,5153,5153,5154,5154,5154,5154,5154,5155,5155,5155,5155,5155,5156,5156,5156,5157,5157,5157,5158,5158,5158,5158,5158,5159,5159,5159,5159,5159,5160,5160,5160,5160,5160,5161,5161,5161,5161,5161,5162,5162,5162,5162,5162,5163,5163,5163,5163,5163,5163,5164,5164,5164,5164,5164,5165,5165,5165,5166,5166,5166,5167,5167,5167,5168,5168,5168,5168,5168,5168,5168,5169,5169,5169,5170,5170,5170,5170,5171,5171,5171,5171,5171,5172,5172,5172,5173,5173,5173,5173,5174,5174,5174,5174,5174,5175,5175,5175,5175,5175,5175,5176,5176,5176,5176,5176,5176,5177,5177,5177,5177,5177,5177,5178,5178,5178,5178,5178,5179,5179,5179,5179,5179,5180,5180,5180,5180,5180,5181,5181,5181,5181,5181,5182,5182,5182,5182,5182,5183,5183,5183,5183,5183,5183,5183,5184,5184,5184,5184,5185,5185,5185,5186,5186,5186,5186,5187,5187,5187,5187,5187,5188,5188,5188,5188,5189,5189,5189,5189,5190,5190,5190,5190,5191,5191,5191,5191,5192,5192,5192,5192,5192,5193,5193,5193,5193,5193,5194,5194,5194,5194,5195,5195,5196,5196,5196,5196,5196,5197,5197,5197,5197,5197,5198,5198,5198,5198,5198,5199,5199,5199,5199,5199,5200,5200,5200,5200,5200,5201,5201,5201,5201,5201,5202,5202,5202,5202,5202,5203,5203,5203,5203,5203,5204,5204,5204,5204,5204,5205,5205,5205,5205,5205,5206,5206,5206,5206,5206,5207,5207,5207,5207,5207,5208,5208,5209,5209,5209,5210,5210,5210,5210,5210,5211,5211,5211,5211,5211,5212,5212,5212,5212,5212,5213,5213,5213,5213,5213,5214,5214,5214,5214,5214,5215,5215,5215,5215,5215,5216,5216,5216,5216,5216,5216,5217,5217,5217,5217,5218,5218,5218,5219,5219,5219,5220,5220,5221,5221,5221,5222,5222,5222,5223,5223,5223,5224,5224,5224,5225,5225,5225,5225,5225,5226,5226,5226,5226,5226,5226,5227,5227,5227,5227,5227,5228,5228,5228,5228,5228,5229,5229,5229,5229,5229,5230,5230,5230,5230,5230,5231,5231,5231,5231,5231,5231,5232,5232,5232,5232,5232,5232,5233,5233,5233,5233,5233,5234,5234,5234,5234,5234,5235,5235,5235,5236,5236,5236,5236,5237,5237,5237,5237,5238,5238,5238,5238,5238,5239,5239,5239,5239,5240,5240,5240,5240,5240,5241,5241,5241,5241,5242,5242,5242,5242,5243,5243,5243,5243,5244,5244,5244,5244,5245,5245,5245,5245,5246,5246,5246,5246,5247,5247,5248,5248,5248,5248,5248,5249,5249,5249,5249,5249,5250,5250,5250,5250,5250,5251,5251,5251,5251,5251,5252,5252,5252,5252,5252,5253,5253,5253,5253,5253,5254,5254,5254,5254,5254,5255,5255,5255,5255,5255,5256,5256,5256,5256,5256,5257,5257,5257,5257,5257,5258,5258,5258,5258,5258,5259,5259,5259,5259,5259,5260,5260,5260,5260,5260,5261,5261,5261,5261,5261,5262,5262,5262,5263,5263,5263,5263,5263,5264,5264,5264,5264,5264,5265,5265,5265,5265,5265,5266,5266,5266,5266,5266,5267,5267,5267,5267,5267,5268,5268,5268,5268,5268,5269,5269,5269,5270,5270,5270,5270,5271,5271,5271,5272,5272,5272,5273,5273,5273,5274,5274,5274,5274,5275,5275,5275,5275,5275,5275,5275,5276,5276,5276,5276,5276,5276,5276,5277,5277,5277,5277,5277,5278,5278,5278,5278,5278,5279,5279,5279,5279,5279,5280,5280,5280,5280,5280,5281,5281,5281,5281,5281,5282,5282,5282,5282,5283,5283,5283,5283,5284,5284,5284,5284,5285,5285,5285,5285,5286,5286,5286,5286,5287,5287,5287,5287,5287,5288,5288,5288,5288,5288,5289,5289,5289,5290,5290,5290,5291,5291,5291,5291,5291,5292,5292,5292,5292,5292,5292,5293,5293,5293,5293,5294,5294,5294,5294,5294,5295,5295,5295,5295,5296,5296,5296,5296,5296,5297,5297,5297,5297,5298,5298,5298,5298,5299,5299,5299,5299,5300,5300,5300,5300,5301,5301,5301,5301,5302,5302,5302,5302,5303,5303,5303,5303,5303,5304,5304,5304,5304,5304,5305,5305,5305,5306,5306,5306,5306,5306,5307,5307,5307,5307,5307,5308,5308,5308,5309,5309,5309,5309,5309,5310,5310,5310,5310,5310,5311,5311,5311,5311,5311,5312,5312,5312,5312,5312,5313,5313,5313,5313,5313,5314,5314,5314,5314,5314,5315,5315,5315,5315,5315,5316,5316,5316,5316,5316,5317,5317,5318,5318,5318,5319,5319,5319,5319,5319,5320,5320,5320,5320,5320,5321,5321,5321,5321,5321,5322,5322,5322,5322,5322,5323,5323,5323,5323,5323,5324,5324,5324,5324,5324,5325,5325,5325,5326,5326,5326,5327,5327,5327,5328,5328,5328,5329,5329,5329,5330,5330,5330,5330,5330,5331,5331,5331,5331,5331,5332,5332,5332,5332,5332,5333,5333,5333,5333,5333,5334,5334,5334,5335,5335,5335,5335,5335,5335,5336,5336,5336,5336,5336,5337,5337,5337,5337,5337,5338,5338,5338,5338,5338,5339,5339,5339,5339,5340,5340,5340,5340,5340,5341,5341,5341,5341,5341,5341,5342,5342,5342,5342,5342,5343,5343,5343,5343,5344,5344,5344,5344,5345,5345,5345,5345,5346,5346,5346,5346,5347,5347,5347,5347,5347,5348,5348,5348,5348,5349,5349,5349,5349,5350,5350,5350,5350,5351,5351,5351,5351,5352,5352,5352,5352,5353,5353,5353,5354,5354,5354,5354,5354,5355,5355,5355,5355,5355,5356,5356,5356,5356,5356,5357,5357,5357,5357,5357,5357,5358,5358,5358,5358,5358,5359,5359,5359,5359,5359,5360,5360,5360,5360,5360,5360,5361,5361,5361,5361,5361,5362,5362,5362,5362,5362,5363,5363,5363,5363,5363,5364,5364,5364,5365,5365,5365,5365,5365,5366,5366,5366,5366,5366,5367,5367,5367,5367,5368,5368,5368,5368,5368,5369,5369,5369,5370,5370,5370,5371,5371,5371,5371,5371,5372,5372,5372,5372,5372,5373,5373,5373,5373,5373,5374,5374,5374,5374,5374,5374,5375,5375,5375,5375,5375,5376,5376,5376,5376,5376,5377,5377,5377,5378,5378,5378,5379,5379,5379,5380,5380,5380,5381,5381,5381,5381,5382,5382,5382,5382,5382,5383,5383,5383,5383,5383,5384,5384,5384,5384,5384,5385,5385,5385,5385,5385,5386,5386,5386,5386,5386,5387,5387,5387,5388,5388,5388,5388,5388,5388,5389,5389,5389,5389,5389,5389,5390,5390,5390,5390,5390,5390,5391,5391,5391,5391,5391,5392,5392,5392,5392,5392,5393,5393,5393,5394,5394,5394,5395,5395,5395,5395,5396,5396,5396,5396,5396,5397,5397,5397,5397,5398,5398,5398,5398,5399,5399,5399,5399,5400,5400,5400,5400,5401,5401,5401,5401,5402,5402,5402,5402,5403,5403,5403,5403,5404,5404,5404,5404,5405,5405,5405,5405,5406,5406,5406,5406,5406,5406,5407,5407,5407,5407,5407,5408,5408,5408,5408,5408,5409,5409,5409,5409,5409,5410,5410,5410,5410,5410,5411,5411,5411,5411,5411,5412,5412,5412,5412,5413,5413,5413,5413,5413,5414,5414,5414,5414,5414,5415,5415,5415,5415,5415,5416,5416,5416,5416,5416,5417,5417,5417,5417,5417,5418,5418,5418,5418,5419,5419,5419,5419,5419,5420,5420,5420,5421,5421,5421,5422,5422,5422,5423,5423,5423,5423,5423,5424,5424,5424,5424,5424,5425,5425,5425,5425,5425,5426,5426,5426,5426,5426,5427,5427,5427,5427,5427,5428,5428,5428,5428,5428,5429,5429,5429,5430,5430,5430,5431,5431,5431,5432,5432,5432,5433,5433,5433,5434,5434,5434,5434,5434,5435,5435,5435,5435,5436,5436,5436,5436,5436,5437,5437,5437,5438,5438,5438,5438,5438,5439,5439,5439,5439,5439,5439,5440,5440,5440,5440,5440,5441,5441,5441,5441,5441,5442,5442,5442,5442,5442,5443,5443,5443,5443,5443,5444,5444,5444,5444,5445,5445,5445,5445,5445,5446,5446,5446,5446,5446,5447,5447,5447,5447,5447,5448,5448,5448,5448,5449,5449,5449,5449,5450,5450,5450,5450,5450,5451,5451,5451,5451,5452,5452,5452,5452,5453,5453,5453,5453,5454,5454,5454,5454,5454,5455,5455,5455,5455,5456,5456,5456,5456,5457,5457,5457,5457,5458,5458,5458,5458,5459,5459,5459,5460,5460,5460,5460,5460,5461,5461,5461,5461,5461,5462,5462,5462,5462,5462,5462,5463,5463,5463,5463,5463,5464,5464,5464,5464,5464,5465,5465,5465,5465,5465,5466,5466,5466,5466,5466,5467,5467,5467,5467,5467,5468,5468,5468,5468,5468,5469,5469,5469,5469,5469,5470,5470,5470,5471,5471,5471,5471,5471,5472,5472,5472,5473,5473,5473,5473,5473,5474,5474,5474,5474,5474,5474,5475,5475,5475,5475,5475,5476,5476,5476,5476,5476,5477,5477,5477,5477,5477,5478,5478,5478,5478,5478,5479,5479,5479,5479,5479,5480,5480,5480,5481,5481,5481,5482,5482,5482,5483,5483,5483,5484,5484,5484,5485,5485,5485,5486,5486,5486,5487,5487,5487,5488,5488,5488,5489,5489,5489,5490,5490,5490,5490,5490,5491,5491,5491,5491,5491,5492,5492,5492,5492,5492,5492,5493,5493,5493,5493,5493,5494,5494,5494,5494,5494,5495,5495,5495,5495,5495,5495,5495,5496,5496,5496,5496,5496,5496,5497,5497,5497,5497,5497,5498,5498,5498,5498,5498,5499,5499,5499,5499,5499,5500,5500,5500,5500,5500,5500,5501,5501,5501,5501,5501,5502,5502,5502,5502,5502,5503,5503,5503,5503,5504,5504,5504,5504,5504,5505,5505,5505,5505,5506,5506,5506,5506,5507,5507,5507,5507,5508,5508,5508,5508,5509,5509,5509,5509,5510,5510,5510,5510,5510,5511,5511,5511,5511,5512,5512,5512,5512,5513,5513,5514,5514,5514,5514,5514,5515,5515,5515,5515,5515,5516,5516,5516,5516,5516,5517,5517,5517,5517,5517,5518,5518,5518,5518,5518,5519,5519,5519,5519,5519,5520,5520,5520,5520,5520,5521,5521,5521,5521,5521,5522,5522,5522,5522,5522,5523,5523,5523,5523,5523,5524,5524,5524,5524,5524,5525,5525,5525,5526,5526,5526,5526,5526,5527,5527,5527,5527,5527,5528,5528,5528,5528,5528,5529,5529,5529,5529,5529,5530,5530,5530,5530,5530,5531,5531,5531,5531,5531,5532,5532,5532,5533,5533,5533,5534,5534,5534,5534,5535,5535,5535,5536,5536,5537,5537,5537,5537,5538,5538,5538,5538,5538,5539,5539,5539,5539,5540,5540,5540,5540,5540,5541,5541,5541,5541,5541,5542,5542,5542,5542,5543,5543,5543,5543,5543,5544,5544,5544,5544,5544,5545,5545,5545,5546,5546,5546,5546,5546,5547,5547,5547,5547,5547,5548,5548,5548,5548,5548,5549,5549,5549,5550,5550,5550,5550,5550,5551,5551,5551,5551,5552,5552,5552,5552,5553,5553,5553,5553,5554,5554,5554,5554,5555,5555,5555,5555,5555,5556,5556,5556,5556,5557,5557,5557,5557,5558,5558,5558,5558,5559,5559,5559,5559,5560,5560,5560,5560,5561,5561,5561,5561,5561,5562,5562,5562,5562,5562,5563,5563,5563,5563,5563,5563,5564,5564,5564,5564,5564,5565,5565,5565,5566,5566,5566,5566,5566,5567,5567,5567,5567,5567,5568,5568,5568,5568,5568,5569,5569,5569,5569,5569,5570,5570,5570,5570,5570,5571,5571,5571,5571,5571,5572,5572,5572,5572,5572,5573,5573,5573,5573,5573,5574,5574,5574,5575,5575,5575,5575,5576,5576,5576,5576,5577,5577,5577,5577,5577,5578,5578,5578,5578,5578,5579,5579,5579,5579,5579,5580,5580,5580,5580,5580,5581,5581,5581,5581,5581,5582,5582,5582,5583,5583,5583,5584,5584,5584,5585,5585,5585,5585,5585,5585,5585,5586,5586,5586,5587,5587,5587,5587,5587,5588,5588,5588,5588,5589,5589,5589,5590,5590,5590,5590,5590,5591,5591,5591,5591,5591,5591,5592,5592,5592,5592,5592,5592,5593,5593,5593,5593,5593,5594,5594,5594,5594,5594,5595,5595,5595,5595,5595,5596,5596,5596,5596,5596,5597,5597,5597,5597,5598,5598,5598,5598,5598,5599,5599,5599,5599,5599,5600,5600,5600,5600,5600,5601,5601,5601,5601,5602,5602,5602,5602,5602,5603,5603,5603,5603,5604,5604,5604,5604,5605,5605,5605,5605,5606,5606,5606,5606,5606,5607,5607,5607,5607,5608,5608,5608,5608,5609,5609,5609,5609,5610,5610,5610,5610,5610,5611,5611,5611,5611,5611,5612,5612,5612,5612,5612,5613,5613,5613,5613,5613,5614,5614,5614,5614,5614,5614,5615,5615,5615,5615,5615,5616,5616,5616,5616,5616,5617,5617,5617,5617,5617,5618,5618,5618,5618,5618,5619,5619,5619,5619,5619,5620,5620,5620,5620,5620,5621,5621,5621,5621,5621,5622,5622,5622,5622,5622,5623,5623,5624,5624,5624,5625,5625,5625,5625,5625,5626,5626,5626,5626,5626,5627,5627,5627,5627,5627,5628,5628,5628,5628,5628,5629,5629,5629,5629,5629,5630,5630,5630,5630,5630,5630,5631,5631,5631,5631,5631,5632,5632,5632,5633,5633,5633,5634,5634,5635,5635,5635,5636,5636,5636,5637,5637,5637,5637,5638,5638,5638,5638,5638,5639,5639,5639,5640,5640,5640,5640,5640,5641,5641,5641,5641,5641,5642,5642,5642,5642,5642,5642,5643,5643,5643,5643,5643,5643,5644,5644,5644,5644,5644,5644,5645,5645,5645,5646,5646,5646,5646,5646,5647,5647,5647,5647,5647,5648,5648,5648,5648,5648,5649,5649,5649,5649,5649,5649,5650,5650,5650,5650,5651,5651,5651,5651,5652,5652,5652,5652,5653,5653,5653,5653,5654,5654,5654,5654,5655,5655,5655,5655,5656,5656,5656,5656,5657,5657,5657,5657,5658,5658,5658,5658,5659,5659,5659,5659,5660,5660,5661,5661,5661,5661,5662,5662,5662,5662,5663,5663,5663,5663,5663,5664,5664,5664,5664,5664,5665,5665,5665,5665,5665,5666,5666,5666,5666,5666,5667,5667,5667,5667,5667,5668,5668,5668,5668,5668,5669,5669,5669,5669,5669,5670,5670,5670,5670,5670,5671,5671,5671,5671,5671,5672,5672,5672,5672,5672,5673,5673,5673,5673,5674,5674,5674,5674,5674,5675,5675,5675,5676,5676,5676,5677,5677,5677,5677,5677,5678,5678,5678,5678,5678,5679,5679,5679,5679,5679,5680,5680,5680,5680,5680,5681,5681,5681,5681,5681,5682,5682,5682,5682,5682,5682,5683,5683,5683,5683,5683,5683,5684,5684,5684,5684,5684,5685,5685,5685,5686,5686,5686,5687,5687,5688,5688,5688,5688,5689,5689,5689,5689,5690,5690,5690,5690,5691,5691,5691,5691,5692,5692,5692,5692,5693,5693,5693,5693,5694,5694,5694,5694,5694,5695,5695,5695,5695,5695,5696,5696,5696,5696,5696,5696,5697,5697,5697,5697,5697,5698,5698,5698,5698,5698,5699,5699,5699,5699,5699,5700,5700,5700,5700,5700,5700,5700,5701,5701,5701,5701,5701,5702,5702,5702,5702,5702,5703,5703,5703,5703,5704,5704,5704,5704,5704,5705,5705,5705,5705,5706,5706,5706,5706,5707,5707,5707,5707,5708,5708,5708,5708,5709,5709,5709,5709,5710,5710,5710,5710,5710,5711,5711,5711,5711,5712,5712,5712,5712,5713,5713,5713,5713,5713,5714,5714,5714,5714,5714,5715,5715,5715,5715,5715,5716,5716,5716,5716,5717,5717,5717,5717,5717,5718,5718,5718,5718,5718,5719,5719,5719,5719,5719,5720,5720,5720,5720,5720,5721,5721,5721,5721,5721,5721,5722,5722,5722,5722,5722,5723,5723,5723,5723,5723,5724,5724,5724,5725,5725,5725,5726,5726,5726,5726,5726,5727,5727,5727,5727,5727,5728,5728,5728,5728,5728,5729,5729,5729,5729,5729,5730,5730,5730,5730,5730,5731,5731,5731,5731,5731,5732,5732,5732,5732,5733,5733,5733,5734,5734,5734,5735,5735,5735,5736,5736,5736,5737,5737,5737,5737,5738,5738,5738,5738,5739,5739,5739,5739,5739,5740,5740,5740,5740,5740,5741,5741,5741,5741,5741,5741,5742,5742,5742,5742,5742,5743,5743,5743,5743,5743,5744,5744,5744,5744,5744,5745,5745,5745,5745,5745,5745,5746,5746,5746,5746,5746,5747,5747,5747,5747,5748,5748,5748,5748,5748,5749,5749,5749,5749,5750,5750,5750,5750,5750,5751,5751,5751,5751,5752,5752,5752,5752,5753,5753,5753,5753,5753,5754,5754,5754,5754,5755,5755,5755,5755,5756,5756,5756,5756,5757,5757,5757,5757,5758,5758,5758,5758,5759,5759,5759,5759,5759,5759,5760,5760,5760,5760,5760,5761,5761,5761,5761,5761,5761,5762,5762,5762,5762,5762,5763,5763,5763,5763,5763,5764,5764,5764,5764,5764,5765,5765,5765,5765,5765,5766,5766,5766,5766,5766,5767,5767,5767,5767,5767,5768,5768,5768,5768,5768,5769,5769,5769,5769,5769,5770,5770,5770,5770,5770,5771,5771,5771,5772,5772,5772,5772,5772,5773,5773,5773,5773,5773,5774,5774,5774,5774,5774,5775,5775,5775,5775,5775,5776,5776,5776,5776,5776,5776,5777,5777,5777,5777,5777,5778,5778,5778,5778,5778,5779,5779,5779,5780,5780,5780,5781,5781,5782,5782,5782,5783,5783,5783,5783,5784,5784,5784,5784,5785,5785,5785,5785,5785,5785,5786,5786,5786,5786,5786,5787,5787,5787,5788,5788,5788,5788,5788,5789,5789,5789,5789,5789,5790,5790,5790,5790,5791,5791,5791,5791,5792,5792,5792,5792,5792,5792,5793,5793,5793,5793,5793,5794,5794,5794,5795,5795,5795,5795,5795,5796,5796,5796,5796,5796,5797,5797,5797,5797,5798,5798,5798,5798,5798,5799,5799,5799,5799,5800,5800,5800,5800,5801,5801,5801,5801,5802,5802,5802,5802,5803,5803,5803,5803,5804,5804,5804,5804,5805,5805,5805,5805,5806,5806,5806,5806,5807,5807,5807,5807,5808,5808,5808,5808,5808,5809,5809,5809,5809,5809,5810,5810,5810,5810,5810,5811,5811,5811,5811,5811,5812,5812,5812,5812,5812,5813,5813,5813,5813,5813,5814,5814,5814,5814,5814,5815,5815,5815,5815,5815,5816,5816,5816,5816,5816,5817,5817,5817,5817,5817,5818,5818,5818,5818,5818,5819,5819,5819,5819,5819,5820,5820,5820,5821,5821,5821,5821,5821,5822,5822,5822,5822,5822,5822,5823,5823,5823,5823,5823,5823,5824,5824,5824,5824,5824,5825,5825,5825,5825,5825,5826,5826,5826,5826,5826,5827,5827,5827,5827,5827,5828,5828,5828,5828,5828,5829,5829,5829,5830,5830,5830,5831,5831,5831,5832,5832,5832,5832,5833,5833,5833,5833,5833,5834,5834,5834,5834,5834,5834,5835,5835,5835,5835,5835,5836,5836,5836,5837,5837,5837,5837,5837,5838,5838,5838,5838,5838,5839,5839,5839,5839,5839,5840,5840,5840,5840,5840,5841,5841,5841,5841,5841,5842,5842,5842,5842,5842,5843,5843,5843,5843,5843,5844,5844,5844,5844,5844,5845,5845,5845,5845,5845,5846,5846,5846,5847,5847,5847,5847,5847,5848,5848,5848,5848,5848,5848,5849,5849,5849,5850,5850,5850,5850,5851,5851,5851,5851,5852,5852,5852,5852,5853,5853,5853,5853,5854,5854,5854,5854,5855,5855,5855,5855,5856,5856,5856,5856,5857,5857,5857,5857,5858,5858,5859,5859,5859,5859,5859,5860,5860,5860,5860,5860,5861,5861,5861,5861,5862,5862,5862,5862,5862,5863,5863,5863,5863,5863,5864,5864,5864,5864,5864,5865,5865,5865,5865,5865,5866,5866,5866,5866,5866,5866,5867,5867,5867,5867,5867,5868,5868,5868,5868,5868,5869,5869,5869,5869,5869,5870,5870,5870,5871,5871,5871,5871,5871,5872,5872,5872,5872,5872,5873,5873,5873,5873,5873,5874,5874,5874,5874,5874,5875,5875,5875,5875,5875,5875,5876,5876,5876,5876,5876,5876,5877,5877,5877,5877,5877,5878,5878,5878,5879,5879,5879,5880,5880,5880,5880,5880,5880,5880,5881,5881,5881,5882,5882,5882,5882,5882,5883,5883,5883,5883,5883,5884,5884,5884,5885,5885,5885,5885,5885,5886,5886,5886,5886,5886,5886,5887,5887,5887,5887,5887,5888,5888,5888,5889,5889,5889,5889,5889,5890,5890,5890,5890,5890,5891,5891,5891,5891,5891,5891,5891,5892,5892,5892,5892,5892,5893,5893,5893,5893,5893,5894,5894,5894,5895,5895,5895,5895,5896,5896,5896,5896,5897,5897,5897,5897,5898,5898,5898,5898,5899,5899,5899,5899,5899,5900,5900,5900,5900,5901,5901,5901,5901,5902,5902,5902,5902,5903,5903,5903,5903,5904,5904,5904,5904,5905,5905,5906,5906,5906,5906,5906,5907,5907,5907,5907,5907,5908,5908,5908,5908,5908,5909,5909,5909,5909,5910,5910,5910,5910,5910,5911,5911,5911,5911,5911,5912,5912,5912,5912,5912,5913,5913,5913,5913,5913,5914,5914,5914,5914,5914,5915,5915,5915,5915,5915,5915,5916,5916,5916,5916,5916,5917,5917,5917,5917,5917,5918,5918,5918,5918,5918,5919,5919,5919,5919,5919,5920,5920,5920,5921,5921,5921,5922,5922,5922,5922,5922,5923,5923,5923,5923,5923,5924,5924,5924,5924,5924,5925,5925,5925,5925,5925,5926,5926,5926,5926,5926,5927,5927,5927,5927,5927,5928,5928,5928,5929,5929,5929,5930,5930,5930,5931,5931,5932,5932,5933,5933,5933,5933,5934,5934,5934,5934,5934,5934,5935,5935,5935,5935,5936,5936,5936,5937,5937,5937,5937,5937,5938,5938,5938,5938,5939,5939,5939,5939,5940,5940,5940,5940,5941,5941,5941,5941,5941,5942,5942,5942,5943,5943,5943,5943,5943,5944,5944,5944,5944,5944,5944,5945,5945,5945,5945,5946,5946,5946,5946,5946,5947,5947,5947,5947,5948,5948,5948,5948,5948,5949,5949,5949,5949,5950,5950,5950,5950,5951,5951,5951,5951,5952,5952,5952,5952,5953,5953,5953,5953,5954,5954,5954,5954,5954,5955,5955,5955,5955,5956,5956,5956,5956,5957,5957,5957,5957,5958,5958,5958,5958,5959,5959,5959,5959,5959,5960,5960,5960,5960,5960,5961,5961,5961,5961,5961,5962,5962,5962,5962,5962,5963,5963,5963,5963,5963,5964,5964,5964,5964,5964,5965,5965,5965,5965,5965,5966,5966,5966,5966,5966,5967,5967,5967,5968,5968,5968,5968,5968,5969,5969,5969,5969,5969,5970,5970,5970,5970,5970,5971,5971,5971,5972,5972,5972,5973,5973,5973,5973,5973,5974,5974,5974,5974,5974,5975,5975,5975,5975,5975,5976,5976,5976,5976,5976,5977,5977,5977,5977,5977,5978,5978,5978,5978,5978,5979,5979,5979,5979,5979,5979,5980,5980,5980,5981,5981,5981,5982,5982,5983,5983,5983,5983,5984,5984,5984,5984,5984,5985,5985,5985,5985,5986,5986,5986,5987,5987,5987,5987,5987,5988,5988,5988,5988,5988,5989,5989,5989,5989,5989,5989,5990,5990,5990,5990,5990,5991,5991,5991,5991,5991,5992,5992,5992,5992,5992,5993,5993,5993,5993,5993,5994,5994,5994,5994,5995,5995,5995,5995,5996,5996,5996,5997,5997,5997,5997,5997,5998,5998,5998,5998,5999,5999,5999,5999,6000,6000,6000,6001,6001,6001,6001,6002,6002,6002,6002,6003,6003,6003,6003,6003,6004,6004,6004,6004,6005,6005,6005,6005,6006,6006,6006,6006,6007,6007,6007,6007,6008,6008,6008,6008,6009,6009,6010,6010,6010,6010,6010,6011,6011,6011,6011,6011,6011,6012,6012,6012,6012,6012,6013,6013,6013,6013,6013,6014,6014,6014,6014,6014,6015,6015,6015,6015,6015,6016,6016,6016,6016,6016,6017,6017,6017,6017,6017,6017,6018,6018,6018,6018,6018,6019,6019,6019,6019,6019,6020,6020,6020,6021,6021,6021,6022,6022,6022,6022,6022,6023,6023,6023,6023,6023,6023,6024,6024,6024,6024,6024,6025,6025,6025,6025,6025,6026,6026,6026,6026,6026,6027,6027,6027,6027,6027,6028,6028,6028,6028,6028,6029,6029,6029,6030,6030,6030,6031,6031,6031,6032,6032,6032,6033,6033,6033,6034,6034,6034,6034,6034,6035,6035,6035,6035,6035,6036,6036,6036,6036,6036,6037,6037,6037,6037,6037,6037,6038,6038,6038,6038,6038,6039,6039,6039,6039,6039,6040,6040,6040,6040,6040,6041,6041,6041,6041,6041,6042,6042,6042,6042,6043,6043,6043,6043,6044,6044,6044,6044,6045,6045,6045,6045,6046,6046,6046,6046,6047,6047,6047,6047,6048,6048,6048,6048,6048,6049,6049,6049,6049,6049,6050,6050,6050,6050,6050,6051,6051,6051,6051,6052,6052,6052,6052,6053,6053,6053,6053,6054,6054,6054,6054,6055,6055,6055,6055,6055,6056,6056,6056,6056,6057,6057,6057,6057,6058,6058,6058,6058,6059,6059,6059,6059,6060,6060,6060,6060,6061,6061,6061,6061,6062,6062,6062,6062,6063,6063,6063,6063,6064,6064,6064,6064,6065,6065,6065,6065,6065,6066,6066,6066,6066,6066,6067,6067,6067,6067,6068,6068,6068,6068,6068,6069,6069,6069,6069,6069,6070,6070,6070,6070,6070,6071,6071,6071,6071,6071,6072,6072,6072,6072,6072,6072,6073,6073,6073,6073,6074,6074,6074,6074,6074,6075,6075,6075,6076,6076,6076,6077,6077,6077,6077,6077,6078,6078,6078,6078,6078,6079,6079,6079,6079,6079,6080,6080,6080,6080,6080,6081,6081,6081,6081,6081,6082,6082,6082,6082,6082,6083,6083,6083,6083,6083,6084,6084,6084,6084,6084,6084,6085,6085,6085,6085,6085,6085,6086,6086,6086,6087,6087,6087,6088,6088,6089,6089,6089,6090,6090,6090,6090,6090,6091,6091,6091,6091,6092,6092,6092,6093,6093,6093,6093,6093,6094,6094,6094,6094,6095,6095,6095,6096,6096,6096,6096,6096,6097,6097,6097,6098,6098,6098,6098,6098,6099,6099,6099,6099,6099,6099,6100,6100,6100,6100,6100,6101,6101,6101,6101,6102,6102,6102,6102,6102,6103,6103,6103,6103,6104,6104,6104,6104,6105,6105,6105,6105,6106,6106,6106,6106,6107,6107,6107,6107,6107,6108,6108,6108,6108,6109,6109,6109,6109,6110,6110,6110,6110,6111,6111,6111,6111,6112,6112,6112,6112,6113,6113,6113,6113,6114,6114,6114,6114,6114,6115,6115,6115,6115,6115,6115,6116,6116,6116,6116,6116,6117,6117,6117,6117,6117,6118,6118,6118,6118,6118,6119,6119,6119,6119,6119,6120,6120,6120,6120,6120,6121,6121,6121,6121,6121,6121,6122,6122,6122,6122,6122,6123,6123,6123,6123,6123,6124,6124,6124,6125,6125,6125,6126,6126,6126,6126,6126,6127,6127,6127,6127,6127,6128,6128,6128,6128,6128,6129,6129,6129,6129,6129,6129,6130,6130,6130,6130,6130,6131,6131,6131,6131,6131,6132,6132,6132,6132,6132,6133,6133,6133,6134,6134,6134,6135,6135,6136,6136,6136,6136,6137,6137,6137,6137,6137,6138,6138,6138,6138,6138,6139,6139,6139,6140,6140,6140,6141,6141,6141,6141,6141,6142,6142,6142,6142,6142,6143,6143,6143,6143,6144,6144,6144,6144,6145,6145,6145,6145,6145,6146,6146,6146,6147,6147,6147,6147,6147,6148,6148,6148,6148,6148,6149,6149,6149,6149,6150,6150,6150,6150,6151,6151,6151,6151,6151,6152,6152,6152,6152,6153,6153,6153,6153,6154,6154,6154,6154,6155,6155,6155,6155,6156,6156,6156,6156,6157,6157,6157,6157,6158,6158,6158,6158,6159,6159,6159,6159,6160,6160,6160,6160,6160,6161,6161,6161,6161,6162,6162,6162,6162,6163,6163,6164,6164,6164,6164,6164,6165,6165,6165,6165,6165,6166,6166,6166,6166,6166,6167,6167,6167,6167,6167,6168,6168,6168,6168,6168,6169,6169,6169,6169,6169,6170,6170,6170,6170,6170,6171,6171,6171,6171,6171,6172,6172,6172,6172,6172,6173,6173,6173,6173,6173,6174,6174,6174,6175,6175,6175,6176,6176,6176,6176,6176,6177,6177,6177,6177,6177,6178,6178,6178,6178,6178,6179,6179,6179,6179,6179,6180,6180,6180,6180,6180,6181,6181,6181,6181,6181,6182,6182,6182,6183,6183,6183,6183,6184,6184,6184,6185,6185,6185,6186,6186,6186,6187,6187,6187,6187,6187,6188,6188,6188,6188,6188,6189,6189,6189,6189,6189,6190,6190,6190,6190,6190,6191,6191,6191,6191,6191,6191,6192,6192,6192,6192,6192,6193,6193,6193,6193,6193,6194,6194,6194,6195,6195,6195,6196,6196,6196,6196,6196,6196,6196,6197,6197,6197,6197,6197,6197,6197,6198,6198,6198,6198,6198,6198,6198,6199,6199,6199,6199,6199,6199,6199,6200,6200,6200,6200,6200,6200,6200,6201,6201,6201,6201,6201,6201,6201,6202,6202,6202,6202,6202,6202,6202,6203,6203,6203,6203,6203,6204,6204,6204,6204,6204,6205,6205,6205,6206,6206,6206,6206,6207,6207,6207,6207,6208,6208,6208,6208,6209,6209,6209,6209,6210,6210,6210,6210,6210,6211,6211,6211,6211,6212,6212,6212,6212,6213,6213,6213,6213,6214,6214,6214,6214,6215,6215,6215,6215,6216,6216,6216,6216,6217,6217,6218,6218,6218,6218,6218,6219,6219,6219,6219,6219,6219,6220,6220,6220,6220,6220,6221,6221,6221,6221,6221,6222,6222,6222,6222,6222,6223,6223,6223,6223,6223,6224,6224,6224,6224,6224,6225,6225,6225,6225,6226,6226,6226,6226,6226,6227,6227,6227,6227,6227,6228,6228,6228,6229,6229,6229,6230,6230,6230,6230,6230,6231,6231,6231,6231,6231,6232,6232,6232,6232,6232,6233,6233,6233,6233,6233,6234,6234,6234,6234,6234,6235,6235,6235,6235,6235,6236,6236,6236,6236,6237,6237,6237,6237,6238,6238,6238,6238,6239,6239,6239,6240,6240,6241,6241,6241,6241,6242,6242,6242,6242,6242,6243,6243,6243,6243,6244,6244,6244,6244,6244,6245,6245,6245,6245,6245,6246,6246,6246,6246,6246,6246,6247,6247,6247,6247,6247,6247,6248,6248,6248,6248,6248,6249,6249,6249,6249,6249,6250,6250,6250,6250,6250,6251,6251,6251,6251,6251,6251,6251,6252,6252,6252,6252,6252,6253,6253,6253,6253,6253,6254,6254,6254,6254,6255,6255,6255,6255,6255,6255,6256,6256,6256,6256,6257,6257,6257,6257,6258,6258,6258,6258,6259,6259,6259,6259,6259,6260,6260,6260,6260,6261,6261,6261,6261,6262,6262,6262,6262,6263,6263,6263,6263,6264,6264,6264,6264,6265,6265,6265,6266,6266,6266,6266,6266,6267,6267,6267,6267,6267,6268,6268,6268,6268,6268,6268,6269,6269,6269,6269,6269,6270,6270,6270,6270,6270,6271,6271,6271,6271,6271,6272,6272,6272,6272,6272,6273,6273,6273,6273,6273,6273,6274,6274,6274,6274,6274,6275,6275,6275,6275,6275,6276,6276,6276,6277,6277,6277,6278,6278,6278,6278,6278,6279,6279,6279,6279,6279,6280,6280,6280,6280,6280,6281,6281,6281,6281,6281,6282,6282,6282,6282,6282,6283,6283,6283,6283,6283,6284,6284,6284,6284,6284,6284,6285,6285,6285,6286,6286,6286,6287,6287,6287,6288,6288,6288,6289,6289,6289,6289,6289,6290,6290,6290,6290,6290,6291,6291,6291,6291,6291,6292,6292,6292,6292,6292,6293,6293,6293,6293,6293,6293,6294,6294,6294,6294,6294,6295,6295,6295,6295,6295,6296,6296,6296,6296,6296,6297,6297,6297,6297,6297,6297,6298,6298,6298,6298,6298,6298,6299,6299,6299,6299,6299,6300,6300,6300,6300,6300,6301,6301,6301,6301,6301,6302,6302,6302,6302,6303,6303,6303,6304,6304,6304,6304,6304,6305,6305,6305,6305,6306,6306,6306,6306,6307,6307,6307,6307,6308,6308,6308,6308,6309,6309,6309,6309,6310,6310,6310,6310,6311,6311,6311,6311,6312,6312,6312,6312,6313,6313,6314,6314,6314,6314,6314,6315,6315,6315,6315,6315,6316,6316,6316,6316,6316,6317,6317,6317,6317,6317,6318,6318,6318,6318,6318,6318,6319,6319,6319,6319,6319,6320,6320,6320,6320,6321,6321,6321,6321,6321,6321,6322,6322,6322,6322,6322,6323,6323,6323,6323,6323,6324,6324,6324,6324,6324,6325,6325,6325,6325,6325,6326,6326,6326,6327,6327,6327,6327,6327,6328,6328,6328,6328,6328,6329,6329,6329,6329,6329,6330,6330,6330,6330,6330,6331,6331,6331,6331,6331,6332,6332,6332,6332,6332,6333,6333,6333,6334,6334,6334,6335,6335,6335,6336,6336,6336,6337,6337,6337,6338,6338,6338,6338,6338,6339,6339,6339,6339,6339,6340,6340,6340,6340,6340,6341,6341,6341,6341,6341,6342,6342,6342,6342,6342,6343,6343,6343,6343,6343,6344,6344,6344,6344,6344,6345,6345,6345,6345,6345,6346,6346,6346,6347,6347,6347,6347,6348,6348,6348,6348,6349,6349,6349,6349,6350,6350,6350,6350,6351,6351,6351,6351,6352,6352,6352,6352,6353,6353,6353,6353,6354,6354,6354,6354,6354,6355,6355,6355,6355,6355,6355,6356,6356,6356,6356,6356,6357,6357,6357,6357,6357,6358,6358,6358,6358,6359,6359,6359,6359,6360,6360,6360,6360,6361,6361,6361,6361,6362,6362,6362,6362,6363,6363,6363,6363,6364,6364,6364,6364,6365,6365,6365,6365,6366,6366,6366,6366,6367,6367,6367,6367,6368,6368,6368,6368,6369,6369,6370,6370,6370,6370,6370,6371,6371,6371,6371,6371,6372,6372,6372,6372,6372,6373,6373,6373,6373,6373,6374,6374,6374,6374,6374,6375,6375,6375,6375,6375,6376,6376,6376,6376,6377,6377,6377,6377,6377,6378,6378,6378,6378,6378,6379,6379,6379,6380,6380,6380,6381,6381,6381,6381,6381,6382,6382,6382,6382,6382,6383,6383,6383,6383,6383,6384,6384,6384,6384,6384,6385,6385,6385,6385,6385,6386,6386,6386,6387,6387,6387,6388,6388,6388,6388,6389,6389,6389,6390,6390,6390,6391,6391,6391,6392,6392,6392,6393,6393,6393,6393,6393,6394,6394,6394,6394,6394,6395,6395,6395,6395,6395,6396,6396,6396,6396,6396,6396,6397,6397,6397,6398,6398,6398,6398,6398,6399,6399,6399,6399,6399,6400,6400,6400,6400,6400,6401,6401,6401,6401,6401,6401,6402,6402,6402,6402,6402,6402,6403,6403,6403,6403,6403,6404,6404,6404,6404,6404,6405,6405,6405,6405,6405,6406,6406,6406,6406,6407,6407,6407,6407,6408,6408,6408,6408,6409,6409,6409,6409,6410,6410,6410,6410,6410,6411,6411,6411,6411,6412,6412,6412,6412,6413,6413,6413,6413,6414,6414,6414,6414,6415,6415,6415,6415,6416,6416,6417,6417,6417,6417,6417,6418,6418,6418,6418,6418,6419,6419,6419,6419,6419,6420,6420,6420,6420,6420,6421,6421,6421,6421,6421,6422,6422,6422,6422,6422,6423,6423,6423,6423,6423,6423,6424,6424,6424,6424,6425,6425,6425,6425,6425,6426,6426,6426,6427,6427,6427,6428,6428,6428,6428,6428,6429,6429,6429,6429,6429,6430,6430,6430,6430,6430,6431,6431,6431,6431,6431,6432,6432,6432,6432,6432,6433,6433,6433,6433,6433,6433,6434,6434,6434,6434,6434,6435,6435,6435,6436,6436,6436,6437,6437,6437,6438,6438,6438,6439,6439,6439,6439,6440,6440,6440,6440,6440,6441,6441,6441,6441,6442,6442,6442,6442,6442,6443,6443,6443,6443,6443,6443,6444,6444,6444,6444,6444,6445,6445,6445,6445,6445,6446,6446,6446,6446,6446,6447,6447,6447,6447,6447,6448,6448,6448,6448,6448,6448,6448,6449,6449,6449,6449,6449,6450,6450,6450,6450,6450,6451,6451,6451,6452,6452,6452,6452,6453,6453,6453,6453,6453,6453,6454,6454,6454,6454,6454,6455,6455,6455,6455,6456,6456,6456,6456,6457,6457,6457,6457,6458,6458,6458,6458,6459,6459,6459,6459,6460,6460,6460,6460,6461,6461,6461,6461,6462,6462,6462,6462,6462,6462,6463,6463,6463,6463,6463,6464,6464,6464,6464,6464,6464,6465,6465,6465,6465,6465,6466,6466,6466,6466,6466,6467,6467,6467,6467,6467,6468,6468,6468,6468,6468,6469,6469,6469,6469,6469,6470,6470,6470,6470,6470,6470,6471,6471,6471,6471,6471,6472,6472,6472,6472,6472,6473,6473,6473,6474,6474,6474,6475,6475,6475,6475,6475,6476,6476,6476,6476,6476,6477,6477,6477,6477,6477,6478,6478,6478,6478,6478,6479,6479,6479,6479,6479,6479,6480,6480,6480,6480,6480,6480,6481,6481,6481,6481,6481,6482,6482,6482,6483,6483,6483,6484,6484,6484,6485,6485,6485,6486,6486,6486,6486,6487,6487,6487,6487,6488,6488,6488,6488,6489,6489,6489,6489,6489,6490,6490,6490,6490,6490,6491,6491,6491,6491,6491,6491,6492,6492,6492,6493,6493,6493,6493,6493,6494,6494,6494,6495,6495,6495,6495,6495,6496,6496,6496,6496,6496,6496,6496,6497,6497,6497,6497,6497,6497,6497,6498,6498,6498,6498,6498,6499,6499,6499,6499,6499,6500,6500,6500,6500,6500,6501,6501,6501,6501,6502,6502,6502,6502,6502,6503,6503,6503,6503,6503,6504,6504,6504,6504,6505,6505,6505,6505,6506,6506,6506,6506,6507,6507,6507,6507,6508,6508,6508,6508,6509,6509,6509,6509,6510,6510,6510,6510,6511,6511,6511,6511,6512,6512,6512,6512,6512,6512,6513,6513,6513,6513,6513,6514,6514,6514,6514,6514,6515,6515,6515,6515,6515,6516,6516,6516,6516,6516,6517,6517,6517,6517,6517,6518,6518,6518,6518,6518,6519,6519,6519,6519,6519,6520,6520,6520,6520,6520,6520,6521,6521,6521,6521,6521,6522,6522,6522,6522,6522,6523,6523,6523,6523,6523,6524,6524,6524,6524,6524,6525,6525,6525,6526,6526,6526,6526,6526,6527,6527,6527,6527,6527,6528,6528,6528,6528,6528,6529,6529,6529,6529,6529,6530,6530,6530,6530,6530,6531,6531,6531,6531,6531,6532,6532,6532,6532,6532,6533,6533,6533,6534,6534,6534,6535,6535,6535,6536,6536,6536,6537,6537,6537,6537,6537,6537,6538,6538,6538,6538,6539,6539,6539,6539,6539,6540,6540,6540,6541,6541,6541,6541,6541,6541,6542,6542,6542,6542,6542,6542,6543,6543,6543,6543,6543,6543,6544,6544,6544,6544,6544,6544,6545,6545,6545,6545,6545,6546,6546,6546,6546,6546,6547,6547,6547,6547,6547,6548,6548,6548,6548,6548,6549,6549,6549,6549,6549,6549,6550,6550,6550,6550,6550,6551,6551,6551,6551,6551,6552,6552,6552,6553,6553,6553,6553,6554,6554,6554,6554,6555,6555,6555,6555,6556,6556,6556,6556,6557,6557,6557,6557,6557,6558,6558,6558,6558,6558,6559,6559,6559,6559,6559,6560,6560,6560,6560,6561,6561,6561,6561,6562,6562,6562,6562,6563,6563,6563,6563,6564,6564,6564,6564,6565,6565,6565,6565,6565,6565,6565,6565,6566,6566,6566,6566,6566,6567,6567,6567,6567,6567,6568,6568,6568,6568,6568,6569,6569,6569,6569,6569,6570,6570,6570,6570,6570,6571,6571,6571,6571,6571,6572,6572,6572,6572,6572,6573,6573,6573,6573,6573,6574,6574,6574,6574,6574,6575,6575,6575,6575,6575,6576,6576,6576,6576,6576,6577,6577,6577,6578,6578,6578,6579,6579,6579,6579,6579,6580,6580,6580,6580,6580,6581,6581,6581,6581,6581,6582,6582,6582,6582,6582,6583,6583,6583,6583,6583,6584,6584,6584,6584,6584,6585,6585,6585,6586,6586,6586,6587,6587,6587,6588,6588,6588,6589,6589,6589,6590,6590,6590,6590,6591,6591,6591,6592,6592,6592,6592,6592,6593,6593,6593,6593,6593,6594,6594,6594,6594,6594,6595,6595,6595,6595,6595,6596,6596,6596,6596,6597,6597,6597,6597,6597,6598,6598,6598,6598,6598,6599,6599,6599,6599,6599,6599,6600,6600,6600,6600,6600,6600,6601,6601,6601,6601,6602,6602,6602,6602,6602,6602,6603,6603,6603,6603,6604,6604,6604,6604,6604,6605,6605,6605,6605,6606,6606,6606,6606,6607,6607,6607,6607,6608,6608,6608,6608,6609,6609,6609,6609,6610,6610,6610,6610,6611,6611,6611,6611,6611,6612,6612,6612,6612,6612,6613,6613,6613,6613,6614,6614,6614,6614,6615,6615,6616,6616,6616,6616,6616,6617,6617,6617,6617,6617,6618,6618,6618,6618,6618,6619,6619,6619,6619,6619,6620,6620,6620,6620,6620,6621,6621,6621,6621,6621,6622,6622,6622,6622,6622,6623,6623,6623,6623,6623,6624,6624,6624,6624,6624,6624,6625,6625,6625,6625,6625,6626,6626,6626,6626,6626,6627,6627,6627,6628,6628,6628,6629,6629,6629,6629,6629,6630,6630,6630,6630,6630,6631,6631,6631,6631,6631,6632,6632,6632,6632,6632,6633,6633,6633,6633,6633,6634,6634,6634,6635,6635,6635,6636,6636,6636,6637,6637,6637,6638,6638,6638,6639,6639,6639,6639,6640,6640,6640,6640,6641,6641,6641,6641,6641,6642,6642,6642,6642,6642,6643,6643,6643,6643,6643,6643,6643,6644,6644,6644,6644,6644,6645,6645,6645,6645,6645,6646,6646,6646,6646,6646,6646,6647,6647,6647,6647,6647,6648,6648,6648,6648,6649,6649,6649,6649,6649,6650,6650,6650,6651,6651,6651,6651,6652,6652,6652,6652,6653,6653,6653,6653,6654,6654,6654,6654,6655,6655,6655,6655,6655,6656,6656,6656,6656,6657,6657,6657,6657,6658,6658,6658,6658,6659,6659,6659,6659,6660,6660,6660,6660,6661,6661,6662,6662,6662,6662,6662,6663,6663,6663,6663,6663,6664,6664,6664,6664,6664,6665,6665,6665,6665,6665,6666,6666,6666,6666,6666,6667,6667,6667,6667,6667,6668,6668,6668,6668,6668,6669,6669,6669,6669,6669,6669,6670,6670,6670,6670,6670,6671,6671,6671,6671,6671,6672,6672,6672,6673,6673,6673,6674,6674,6674,6675,6675,6675,6675,6675,6676,6676,6676,6676,6676,6677,6677,6677,6677,6677,6678,6678,6678,6678,6678,6678,6679,6679,6679,6679,6679,6680,6680,6680,6680,6680,6681,6681,6681,6682,6682,6682,6683,6683,6684,6684,6684,6684,6685,6685,6685,6685,6685,6686,6686,6686,6686,6686,6686,6687,6687,6687,6687,6687,6688,6688,6688,6688,6688,6689,6689,6689,6689,6689,6690,6690,6690,6690,6690,6691,6691,6691,6691,6691,6691,6692,6692,6692,6692,6692,6692,6693,6693,6693,6693,6693,6694,6694,6694,6694,6694,6695,6695,6695,6695,6695,6696,6696,6696,6696,6696,6697,6697,6697,6697,6697,6698,6698,6698,6698,6698,6698,6699,6699,6699,6700,6700,6700,6700,6701,6701,6701,6702,6702,6702,6702,6703,6703,6703,6703,6704,6704,6704,6704,6705,6705,6705,6705,6706,6706,6706,6706,6707,6707,6707,6707,6708,6708,6708,6708,6709,6709,6709,6709,6710,6710,6710,6710,6711,6711,6711,6711,6711,6712,6712,6712,6712,6712,6713,6713,6713,6713,6713,6714,6714,6714,6714,6715,6715,6715,6715,6715,6716,6716,6716,6716,6716,6717,6717,6717,6717,6717,6718,6718,6718,6718,6718,6719,6719,6719,6719,6719,6719,6720,6720,6720,6720,6720,6721,6721,6721,6721,6721,6722,6722,6722,6723,6723,6723,6724,6724,6724,6724,6724,6725,6725,6725,6725,6725,6725,6726,6726,6726,6726,6726,6726,6727,6727,6727,6727,6727,6728,6728,6728,6728,6728,6729,6729,6729,6729,6729,6730,6730,6730,6730,6730,6731,6731,6731,6732,6732,6732,6733,6733,6733,6734,6734,6734,6734,6735,6735,6735,6735,6736,6736,6736,6736,6737,6737,6737,6737,6737,6738,6738,6738,6738,6738,6739,6739,6739,6739,6740,6740,6740,6740,6740,6741,6741,6741,6741,6741,6742,6742,6742,6742,6742,6743,6743,6743,6743,6743,6744,6744,6744,6744,6744,6745,6745,6745,6745,6745,6746,6746,6746,6746,6746,6747,6747,6747,6747,6748,6748,6748,6748,6748,6749,6749,6749,6749,6750,6750,6750,6750,6750,6751,6751,6751,6751,6752,6752,6752,6752,6753,6753,6753,6753,6753,6754,6754,6754,6754,6755,6755,6755,6755,6756,6756,6756,6756,6757,6757,6757,6757,6758,6758,6758,6758,6759,6759,6759,6759,6760,6760,6761,6761,6761,6761,6761,6762,6762,6762,6762,6762,6762,6763,6763,6763,6763,6763,6764,6764,6764,6765,6765,6765,6765,6765,6766,6766,6766,6766,6766,6767,6767,6767,6767,6767,6768,6768,6768,6768,6768,6769,6769,6769,6769,6769,6769,6770,6770,6770,6770,6770,6771,6771,6771,6771,6771,6772,6772,6772,6772,6772,6773,6773,6773,6774,6774,6774,6775,6775,6775,6775,6775,6776,6776,6776,6776,6776,6777,6777,6777,6777,6777,6778,6778,6778,6778,6778,6779,6779,6779,6779,6779,6780,6780,6780,6780,6780,6781,6781,6781,6782,6782,6782,6783,6783,6783,6784,6784,6784,6785,6785,6785,6786,6786,6786,6786,6787,6787,6787,6787,6788,6788,6788,6788,6788,6789,6789,6789,6789,6789,6790,6790,6790,6790,6791,6791,6791,6791,6791,6792,6792,6792,6792,6792,6793,6793,6793,6793,6793,6794,6794,6794,6794,6795,6795,6795,6795,6796,6796,6796,6796,6796,6797,6797,6797,6797,6797,6798,6798,6798,6798,6799,6799,6799,6799,6800,6800,6800,6800,6801,6801,6801,6801,6802,6802,6802,6802,6803,6803,6803,6803,6804,6804,6804,6804,6805,6805,6805,6805,6806,6806,6806,6806,6806,6807,6807,6807,6807,6808,6808,6808,6808,6809,6809,6809,6809,6810,6810,6810,6810,6810,6811,6811,6811,6811,6811,6812,6812,6812,6812,6812,6813,6813,6813,6813,6813,6814,6814,6814,6814,6814,6815,6815,6815,6815,6815,6816,6816,6816,6817,6817,6817,6817,6817,6818,6818,6818,6818,6818,6819,6819,6819,6819,6819,6820,6820,6820,6820,6820,6821,6821,6821,6821,6821,6822,6822,6822,6823,6823,6823,6824,6824,6824,6824,6824,6825,6825,6825,6825,6825,6826,6826,6826,6826,6826,6827,6827,6827,6827,6827,6828,6828,6828,6828,6828,6829,6829,6829,6829,6829,6830,6830,6830,6831,6831,6831,6832,6832,6832,6833,6833,6833,6833,6834,6834,6834,6834,6834,6835,6835,6835,6835,6835,6836,6836,6836,6836,6836,6837,6837,6837,6838,6838,6838,6839,6839,6839,6839,6839,6840,6840,6840,6840,6841,6841,6841,6841,6842,6842,6842,6842,6843,6843,6843,6843,6844,6844,6844,6844,6845,6845,6845,6845,6846,6846,6846,6846,6846,6847,6847,6847,6847,6847,6848,6848,6848,6849,6849,6849,6849,6849,6850,6850,6850,6850,6851,6851,6851,6851,6851,6852,6852,6852,6852,6853,6853,6853,6853,6853,6854,6854,6854,6854,6855,6855,6855,6855,6856,6856,6856,6856,6857,6857,6857,6857,6858,6858,6858,6858,6859,6859,6859,6859,6860,6860,6860,6860,6861,6861,6861,6861,6862,6862,6862,6862,6863,6863,6863,6863,6864,6864,6864,6865,6865,6865,6865,6865,6866,6866,6866,6866,6866,6867,6867,6867,6867,6867,6868,6868,6868,6868,6868,6869,6869,6869,6869,6869,6870,6870,6870,6870,6870,6871,6871,6871,6871,6871,6872,6872,6872,6872,6872,6873,6873,6873,6873,6873,6874,6874,6874,6874,6874,6875,6875,6875,6875,6875,6876,6876,6876,6876,6876,6877,6877,6877,6878,6878,6878,6879,6879,6879,6879,6879,6880,6880,6880,6880,6880,6881,6881,6881,6881,6881,6882,6882,6882,6882,6882,6883,6883,6883,6883,6883,6884,6884,6884,6884,6884,6885,6885,6885,6885,6885,6885,6886,6886,6886,6886,6886,6886,6887,6887,6887,6888,6888,6888,6889,6889,6889,6890,6890,6890,6891,6891,6891,6891,6892,6892,6892,6892,6893,6893,6893,6893,6894,6894,6894,6894,6894,6895,6895,6895,6895,6895,6896,6896,6896,6896,6896,6896,6896,6897,6897,6897,6898,6898,6898,6899,6899,6899,6899,6899,6900,6900,6900,6900,6900,6901,6901,6901,6901,6901,6901,6902,6902,6902,6902,6902,6903,6903,6903,6903,6903,6903,6904,6904,6904,6904,6905,6905,6905,6905,6905,6906,6906,6906,6906,6907,6907,6907,6907,6908,6908,6908,6908,6909,6909,6909,6909,6910,6910,6910,6910,6911,6911,6911,6911,6911,6912,6912,6912,6912,6912,6913,6913,6913,6913,6914,6914,6914,6914,6915,6915,6915,6915,6916,6916,6916,6916,6916,6917,6917,6917,6917,6917,6918,6918,6918,6918,6918,6919,6919,6919,6919,6919,6920,6920,6920,6920,6920,6921,6921,6921,6921,6921,6922,6922,6922,6922,6922,6923,6923,6923,6923,6923,6923,6924,6924,6924,6924,6924,6925,6925,6925,6925,6925,6926,6926,6926,6927,6927,6927,6928,6928,6928,6929,6929,6929,6929,6929,6930,6930,6930,6930,6930,6931,6931,6931,6931,6931,6932,6932,6932,6932,6932,6933,6933,6933,6933,6933,6934,6934,6934,6934,6934,6935,6935,6935,6935,6935,6936,6936,6936,6937,6937,6937,6938,6938,6938,6939,6939,6939,6939,6940,6940,6940,6940,6940,6941,6941,6941,6941,6942,6942,6942,6942,6942,6943,6943,6943,6943,6943,6943,6944,6944,6944,6945,6945,6945,6945,6945,6946,6946,6946,6946,6946,6947,6947,6947,6948,6948,6948,6948,6948,6948,6948,6949,6949,6949,6949,6949,6949,6949,6950,6950,6950,6950,6950,6950,6950,6951,6951,6951,6951,6951,6951,6951,6952,6952,6952,6952,6952,6952,6952,6953,6953,6953,6953,6953,6953,6953,6954,6954,6954,6954,6954,6954,6954,6955,6955,6955,6955,6955,6956,6956,6956,6956,6956,6957,6957,6957,6957,6957,6958,6958,6958,6958,6958,6959,6959,6959,6959,6960,6960,6960,6960,6961,6961,6961,6961,6961,6962,6962,6962,6962,6963,6963,6963,6963,6964,6964,6964,6964,6965,6965,6965,6965,6966,6966,6966,6966,6967,6967,6967,6967,6968,6968,6968,6968,6969,6969,6969,6969,6970,6970,6970,6970,6970,6971,6971,6971,6971,6971,6972,6972,6972,6972,6972,6973,6973,6973,6973,6973,6974,6974,6974,6974,6974,6975,6975,6975,6975,6975,6976,6976,6976,6976,6976,6977,6977,6977,6977,6977,6978,6978,6978,6978,6978,6979,6979,6979,6979,6979,6979,6980,6980,6980,6980,6980,6981,6981,6981,6981,6981,6982,6982,6982,6982,6982,6983,6983,6983,6984,6984,6984,6984,6984,6985,6985,6985,6985,6985,6986,6986,6986,6986,6986,6987,6987,6987,6987,6987,6988,6988,6988,6988,6988,6989,6989,6989,6989,6989,6990,6990,6990,6991,6991,6991,6991,6992,6992,6992,6993,6993,6993,6994,6994,6994,6994,6994,6994,6994,6995,6995,6995,6996,6996,6996,6996,6996,6997,6997,6997,6998,6998,6998,6999,6999,6999,6999,6999,7000,7000,7000,7000,7000,7000,7001,7001,7001,7001,7001,7001,7002,7002,7002,7002,7002,7003,7003,7003,7003,7003,7004,7004,7004,7004,7004,7005,7005,7005,7005,7005,7005,7006,7006,7006,7006,7006,7007,7007,7007,7007,7008,7008,7008,7008,7009,7009,7009,7010,7010,7010,7010,7011,7011,7011,7011,7012,7012,7012,7012,7013,7013,7013,7013,7013,7014,7014,7014,7014,7015,7015,7015,7015,7016,7016,7016,7016,7017,7017,7017,7017,7018,7018,7018,7018,7019,7019,7019,7019,7020,7020,7020,7020,7020,7020,7021,7021,7021,7021,7021,7022,7022,7022,7022,7022,7023,7023,7023,7023,7023,7024,7024,7024,7024,7024,7025,7025,7025,7025,7025,7026,7026,7026,7026,7026,7027,7027,7027,7027,7027,7028,7028,7028,7028,7028,7028,7029,7029,7029,7029,7029,7030,7030,7030,7030,7030,7031,7031,7031,7031,7031,7032,7032,7032,7033,7033,7033,7033,7033,7034,7034,7034,7034,7034,7035,7035,7035,7036,7036,7036,7036,7036,7036,7037,7037,7037,7037,7037,7038,7038,7038,7038,7038,7039,7039,7039,7039,7039,7040,7040,7040,7041,7041,7041,7042,7042,7042,7043,7043,7043,7044,7044,7044,7044,7045,7045,7045,7045,7045,7046,7046,7046,7046,7046,7047,7047,7047,7048,7048,7048,7048,7048,7049,7049,7049,7050,7050,7050,7050,7050,7051,7051,7051,7051,7052,7052,7052,7052,7053,7053,7053,7053,7053,7053,7054,7054,7054,7055,7055,7055,7055,7055,7056,7056,7056,7056,7056,7057,7057,7057,7057,7057,7057,7058,7058,7058,7058,7058,7059,7059,7059,7059,7060,7060,7060,7060,7060,7061,7061,7061,7061,7062,7062,7062,7062,7063,7063,7063,7063,7064,7064,7064,7064,7065,7065,7065,7065,7066,7066,7066,7066,7067,7067,7067,7067,7068,7068,7068,7068,7069,7069,7069,7069,7070,7070,7070,7071,7071,7071,7071,7071,7072,7072,7072,7072,7072,7072,7073,7073,7073,7073,7073,7074,7074,7074,7074,7075,7075,7075,7075,7075,7076,7076,7076,7076,7076,7077,7077,7077,7077,7077,7078,7078,7078,7078,7078,7079,7079,7079,7079,7079,7079,7079,7080,7080,7080,7080,7080,7080,7080,7081,7081,7081,7081,7081,7082,7082,7082,7082,7082,7083,7083,7083,7083,7083,7084,7084,7085,7085,7085,7086,7086,7086,7086,7086,7087,7087,7087,7087,7087,7088,7088,7088,7088,7088,7089,7089,7089,7089,7089,7090,7090,7090,7090,7090,7091,7091,7091,7091,7091,7092,7092,7092,7093,7093,7093,7094,7094,7094,7095,7095,7095,7095,7096,7096,7096,7096,7096,7096,7097,7097,7097,7098,7098,7098,7099,7099,7099,7099,7099,7100,7100,7100,7100,7100,7101,7101,7101,7101,7101,7101,7102,7102,7102,7103,7103,7103,7103,7103,7104,7104,7104,7104,7104,7105,7105,7105,7105,7105,7106,7106,7106,7106,7106,7106,7107,7107,7107,7107,7107,7108,7108,7108,7108,7109,7109,7109,7109,7109,7110,7110,7110,7110,7111,7111,7111,7111,7111,7112,7112,7112,7112,7113,7113,7113,7113,7114,7114,7114,7114,7115,7115,7115,7115,7115,7116,7116,7116,7116,7117,7117,7117,7117,7118,7118,7118,7118,7119,7119,7119,7119,7120,7120,7120,7120,7121,7121,7121,7121,7122,7122,7122,7122,7123,7123,7123,7123,7123,7124,7124,7124,7124,7124,7125,7125,7125,7125,7125,7126,7126,7126,7126,7126,7127,7127,7127,7127,7127,7128,7128,7128,7128,7128,7129,7129,7129,7129,7129,7130,7130,7130,7130,7130,7131,7131,7131,7131,7131,7132,7132,7132,7132,7132,7133,7133,7133,7133,7133,7134,7134,7134,7135,7135,7135,7136,7136,7136,7136,7136,7137,7137,7137,7137,7137,7137,7138,7138,7138,7138,7138,7139,7139,7139,7139,7139,7140,7140,7140,7140,7140,7141,7141,7141,7141,7141,7142,7142,7142,7142,7142,7143,7143,7143,7144,7144,7144,7145,7145,7145,7146,7146,7146,7146,7147,7147,7147,7147,7148,7148,7148,7148,7149,7149,7149,7149,7149,7150,7150,7150,7150,7151,7151,7151,7151,7151,7152,7152,7152,7152,7152,7153,7153,7153,7154,7154,7154,7154,7154,7155,7155,7155,7155,7155,7156,7156,7156,7156,7156,7156,7157,7157,7157,7157,7157,7158,7158,7158,7158,7159,7159,7159,7160,7160,7160,7160,7160,7161,7161,7161,7161,7161,7162,7162,7162,7162,7163,7163,7163,7163,7164,7164,7164,7165,7165,7165,7165,7166,7166,7166,7166,7167,7167,7167,7167,7167,7168,7168,7168,7168,7169,7169,7169,7169,7170,7170,7170,7170,7171,7171,7171,7171,7172,7172,7172,7172,7173,7173,7173,7173,7174,7174,7175,7175,7175,7175,7175,7176,7176,7176,7176,7176,7177,7177,7177,7177,7177,7178,7178,7178,7178,7178,7179,7179,7179,7179,7179,7180,7180,7180,7180,7180,7181,7181,7181,7181,7181,7182,7182,7182,7182,7182,7183,7183,7183,7183,7183,7184,7184,7184,7184,7184,7185,7185,7185,7185,7185,7186,7186,7186,7186,7186,7187,7187,7187,7187,7187,7187,7188,7188,7188,7188,7188,7188,7189,7189,7189,7190,7190,7190,7191,7191,7191,7191,7191,7192,7192,7192,7192,7192,7193,7193,7193,7194,7194,7194,7194,7194,7195,7195,7195,7195,7195,7196,7196,7196,7196,7196,7197,7197,7197,7197,7198,7198,7198,7199,7199,7199,7200,7200,7200,7200,7201,7201,7201,7201,7202,7202,7202,7202,7202,7203,7203,7203,7203,7203,7204,7204,7204,7204,7204,7205,7205,7205,7205,7205,7206,7206,7206,7206,7206,7206,7207,7207,7207,7207,7207,7208,7208,7208,7208,7208,7209,7209,7209,7210,7210,7210,7210,7210,7210,7211,7211,7211,7211,7211,7212,7212,7212,7212,7213,7213,7213,7213,7214,7214,7214,7214,7215,7215,7215,7215,7216,7216,7216,7216,7217,7217,7217,7217,7218,7218,7218,7218,7218,7219,7219,7219,7219,7220,7220,7220,7220,7220,7221,7221,7221,7221,7222,7222,7222,7222,7222,7223,7223,7223,7223,7224,7224,7224,7224,7225,7225,7225,7225,7225,7226,7226,7226,7226,7227,7227,7227,7227,7228,7228,7228,7228,7229,7229,7229,7229,7230,7230,7230,7230,7231,7231,7231,7231,7231,7232,7232,7232,7232,7232,7233,7233,7233,7233,7233,7234,7234,7234,7234,7234,7235,7235,7235,7235,7235,7236,7236,7236,7236,7236,7237,7237,7237,7237,7237,7238,7238,7238,7238,7238,7239,7239,7239,7239,7239,7240,7240,7240,7240,7240,7240,7241,7241,7241,7241,7241,7242,7242,7242,7242,7242,7243,7243,7243,7243,7243,7244,7244,7244,7245,7245,7245,7246,7246,7246,7246,7246,7247,7247,7247,7247,7247,7248,7248,7248,7248,7248,7249,7249,7249,7249,7249,7250,7250,7250,7250,7250,7251,7251,7251,7252,7252,7252,7253,7253,7253,7253,7254,7254,7254,7254,7255,7255,7255,7256,7256,7256,7256,7256,7257,7257,7257,7257,7258,7258,7258,7259,7259,7259,7259,7259,7260,7260,7260,7260,7261,7261,7261,7262,7262,7262,7262,7262,7263,7263,7263,7263,7263,7264,7264,7264,7264,7264,7264,7264,7265,7265,7265,7266,7266,7266,7266,7266,7267,7267,7267,7267,7267,7268,7268,7268,7268,7269,7269,7269,7269,7269,7270,7270,7270,7270,7271,7271,7271,7271,7272,7272,7272,7272,7272,7273,7273,7273,7273,7274,7274,7274,7274,7275,7275,7275,7275,7276,7276,7276,7276,7277,7277,7277,7277,7278,7278,7278,7278,7279,7279,7279,7279,7279,7280,7280,7280,7280,7280,7281,7281,7281,7281,7281,7282,7282,7282,7282,7282,7283,7283,7283,7283,7283,7284,7284,7284,7284,7284,7285,7285,7285,7285,7285,7286,7286,7286,7286,7286,7287,7287,7287,7287,7287,7287,7288,7288,7288,7288,7289,7289,7289,7289,7289,7290,7290,7290,7290,7290,7291,7291,7291,7292,7292,7292,7293,7293,7293,7293,7293,7294,7294,7294,7294,7294,7295,7295,7295,7295,7295,7296,7296,7296,7296,7296,7296,7297,7297,7297,7297,7297,7298,7298,7298,7298,7298,7299,7299,7299,7300,7300,7300,7301,7301,7302,7302,7302,7303,7303,7303,7304,7304,7304,7304,7304,7305,7305,7305,7305,7305,7306,7306,7306,7306,7306,7306,7307,7307,7307,7307,7307,7308,7308,7308,7308,7308,7309,7309,7309,7309,7309,7310,7310,7310,7310,7310,7311,7311,7311,7311,7311,7311,7312,7312,7312,7312,7312,7312,7313,7313,7313,7313,7313,7314,7314,7314,7314,7315,7315,7315,7316,7316,7316,7316,7316,7317,7317,7317,7317,7317,7318,7318,7318,7318,7319,7319,7319,7319,7320,7320,7320,7320,7321,7321,7321,7321,7322,7322,7322,7322,7323,7323,7323,7323,7324,7324,7324,7324,7325,7325,7325,7325,7326,7326,7326,7326,7327,7327,7327,7327,7328,7328,7329,7329,7329,7329,7329,7330,7330,7330,7330,7330,7331,7331,7331,7331,7331,7332,7332,7332,7332,7332,7333,7333,7333,7333,7333,7334,7334,7334,7334,7334,7335,7335,7335,7335,7335,7336,7336,7336,7336,7336,7336,7337,7337,7337,7337,7337,7338,7338,7338,7338,7338,7339,7339,7339,7339,7339,7340,7340,7340,7341,7341,7341,7342,7342,7342,7342,7342,7342,7343,7343,7343,7343,7343,7343,7344,7344,7344,7344,7344,7345,7345,7345,7345,7345,7346,7346,7346,7346,7346,7347,7347,7347,7347,7347,7348,7348,7348,7348,7348,7349,7349,7349,7350,7350,7350,7351,7351,7351,7352,7352,7352,7352,7353,7353,7353,7353,7354,7354,7354,7354,7355,7355,7355,7356,7356,7356,7356,7356,7356,7357,7357,7357,7358,7358,7358,7359,7359,7359,7359,7359,7360,7360,7360,7360,7360,7361,7361,7361,7361,7361,7361,7362,7362,7362,7362,7362,7362,7363,7363,7363,7363,7363,7363,7364,7364,7364,7364,7364,7365,7365,7365,7365,7365,7366,7366,7366,7367,7367,7367,7367,7367,7367,7368,7368,7368,7368,7368,7368,7369,7369,7369,7369,7370,7370,7370,7371,7371,7371,7371,7372,7372,7372,7372,7373,7373,7373,7373,7374,7374,7374,7374,7375,7375,7375,7375,7376,7376,7376,7376,7377,7377,7377,7377,7378,7378,7378,7378,7379,7379,7379,7379,7380,7380,7380,7380,7381,7381,7381,7381,7381,7382,7382,7382,7382,7382,7383,7383,7383,7383,7383,7384,7384,7384,7384,7384,7385,7385,7385,7385,7385,7385,7386,7386,7386,7386,7386,7387,7387,7387,7387,7387,7388,7388,7388,7388,7388,7389,7389,7389,7389,7389,7390,7390,7390,7390,7390,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7391,7392,7392,7392,7393,7393,7393,7393,7393,7394,7394,7394,7395,7395,7395,7395,7395,7396,7396,7396,7396,7396,7397,7397,7397,7397,7397,7398,7398,7398,7398,7398,7399,7399,7399,7399,7399,7400,7400,7400,7400,7400,7401,7401,7401,7402,7402,7402,7403,7403,7403,7404,7404,7404,7405,7405,7405,7405,7405,7406,7406,7406,7406,7407,7407,7407,7407,7407,7408,7408,7408,7408,7408,7409,7409,7409,7409,7409,7409,7410,7410,7410,7410,7410,7410,7411,7411,7411,7411,7411,7411,7412,7412,7412,7412,7412,7412,7413,7413,7413,7413,7413,7413,7414,7414,7414,7414,7414,7414,7415,7415,7415,7415,7415,7416,7416,7416,7416,7416,7417,7417,7417,7417,7417,7418,7418,7418,7418,7418,7418,7419,7419,7419,7419,7419,7419,7420,7420,7420,7420,7420,7421,7421,7421,7421,7422,7422,7422,7422,7423,7423,7423,7423,7424,7424,7424,7424,7425,7425,7425,7425,7426,7426,7426,7426,7427,7427,7427,7427,7428,7428,7428,7428,7429,7429,7429,7429,7430,7430,7430,7430,7431,7431,7431,7431,7432,7432,7433,7433,7433,7433,7433,7434,7434,7434,7434,7434,7435,7435,7435,7435,7435,7436,7436,7436,7436,7436,7437,7437,7437,7437,7437,7438,7438,7438,7438,7438,7439,7439,7439,7439,7439,7440,7440,7440,7440,7440,7441,7441,7441,7441,7441,7442,7442,7442,7442,7442,7443,7443,7443,7443,7443,7444,7444,7444,7444,7444,7445,7445,7445,7446,7446,7446,7447,7447,7447,7447,7447,7448,7448,7448,7448,7448,7449,7449,7449,7449,7449,7450,7450,7450,7450,7450,7451,7451,7451,7451,7451,7452,7452,7452,7452,7452,7453,7453,7453,7454,7454,7454,7455,7455,7455,7456,7456,7456,7457,7457,7457,7458,7458,7458,7459,7459,7459,7459,7459,7460,7460,7460,7460,7460,7461,7461,7461,7461,7462,7462,7462,7462,7462,7463,7463,7463,7463,7463,7464,7464,7464,7464,7464,7464,7465,7465,7465,7465,7465,7466,7466,7466,7466,7466,7467,7467,7467,7467,7467,7468,7468,7468,7468,7468,7468,7468,7469,7469,7469,7470,7470,7470,7470,7470,7471,7471,7471,7471,7472,7472,7472,7472,7473,7473,7473,7473,7474,7474,7474,7474,7475,7475,7475,7475,7476,7476,7476,7476,7477,7477,7477,7477,7478,7478,7478,7478,7478,7479,7479,7479,7479,7480,7480,7480,7480,7481,7481,7481,7481,7482,7482,7483,7483,7483,7483,7483,7484,7484,7484,7484,7484,7485,7485,7485,7485,7485,7486,7486,7486,7486,7486,7487,7487,7487,7487,7487,7488,7488,7488,7488,7488,7489,7489,7489,7489,7489,7490,7490,7490,7490,7490,7491,7491,7491,7491,7491,7492,7492,7492,7492,7492,7493,7493,7493,7494,7494,7494,7495,7495,7495,7495,7495,7496,7496,7496,7496,7496,7497,7497,7497,7497,7497,7498,7498,7498,7498,7498,7499,7499,7499,7499,7499,7500,7500,7500,7500,7500,7501,7501,7501,7502,7502,7502,7503,7503,7503,7503,7504,7504,7505,7505,7505,7505,7506,7506,7506,7506,7507,7507,7507,7507,7508,7508,7508,7508,7508,7509,7509,7509,7509,7509,7510,7510,7510,7510,7510,7511,7511,7511,7511,7511,7512,7512,7512,7512,7512,7513,7513,7513,7513,7513,7514,7514,7514,7514,7514,7515,7515,7515,7515,7515,7516,7516,7516,7516,7516,7517,7517,7517,7517,7517,7518,7518,7518,7518,7518,7519,7519,7519,7519,7519,7520,7520,7520,7520,7520,7521,7521,7521,7521,7521,7522,7522,7522,7522,7522,7523,7523,7523,7523,7523,7524,7524,7524,7524,7524,7524,7525,7525,7525,7526,7526,7526,7526,7526,7527,7527,7527,7527,7527,7527,7528,7528,7528,7528,7529,7529,7529,7529,7529,7530,7530,7530,7530,7531,7531,7531,7531,7532,7532,7532,7532,7533,7533,7533,7533,7534,7534,7534,7534,7534,7535,7535,7535,7535,7536,7536,7536,7536,7537,7537,7537,7537,7538,7538,7538,7538,7539,7539,7539,7539,7540,7540,7540,7540,7541,7541,7541,7541,7541,7542,7542,7542,7542,7542,7543,7543,7543,7543,7543,7544,7544,7544,7544,7544,7545,7545,7545,7545,7545,7546,7546,7546,7546,7546,7547,7547,7547,7547,7547,7548,7548,7548,7548,7548,7549,7549,7549,7549,7549,7549,7550,7550,7550,7550,7550,7551,7551,7551,7551,7551,7552,7552,7552,7552,7552,7552,7553,7553,7553,7553,7553,7554,7554,7554,7555,7555,7555,7556,7556,7556,7556,7556,7557,7557,7557,7557,7557,7558,7558,7558,7558,7558,7559,7559,7559,7559,7559,7560,7560,7560,7560,7560,7561,7561,7561,7561,7561,7562,7562,7562,7562,7563,7563,7563,7564,7564,7564,7565,7565,7566,7566,7566,7566,7567,7567,7567,7567,7567,7568,7568,7568,7568,7568,7569,7569,7569,7569,7569,7570,7570,7570,7570,7570,7570,7571,7571,7571,7571,7571,7572,7572,7572,7572,7572,7573,7573,7573,7573,7573,7574,7574,7574,7574,7574,7575,7575,7575,7575,7575,7576,7576,7576,7576,7576,7576,7577,7577,7577,7577,7577,7578,7578,7578,7578,7578,7579,7579,7579,7579,7579,7580,7580,7580,7580,7580,7580,7581,7581,7581,7581,7582,7582,7582,7582,7582,7582,7583,7583,7583,7583,7584,7584,7584,7584,7585,7585,7585,7585,7586,7586,7586,7586,7587,7587,7587,7587,7588,7588,7588,7588,7589,7589,7589,7589,7590,7590,7590,7590,7591,7591,7591,7591,7592,7592,7592,7592,7593,7593,7594,7594,7594,7594,7594,7595,7595,7595,7595,7595,7596,7596,7596,7596,7596,7597,7597,7597,7597,7597,7598,7598,7598,7598,7598,7599,7599,7599,7599,7599,7600,7600,7600,7600,7600,7601,7601,7601,7601,7601,7602,7602,7602,7602,7602,7603,7603,7603,7603,7603,7604,7604,7604,7604,7604,7605,7605,7605,7606,7606,7606,7607,7607,7607,7607,7607,7608,7608,7608,7608,7608,7609,7609,7609,7609,7609,7610,7610,7610,7610,7610,7610,7611,7611,7611,7611,7611,7611,7612,7612,7612,7612,7612,7613,7613,7613,7613,7613,7614,7614,7614,7614,7614,7615,7615,7615,7616,7616,7616,7617,7617,7617,7618,7618,7618,7618,7619,7619,7619,7619,7620,7620,7620,7620,7621,7621,7621,7621,7621,7622,7622,7622,7622,7622,7623,7623,7623,7623,7624,7624,7624,7624,7624,7625,7625,7625,7625,7626,7626,7626,7626,7626,7627,7627,7627,7627,7627,7628,7628,7628,7628,7629,7629,7629,7629,7629,7630,7630,7630,7630,7630,7630,7631,7631,7631,7631,7631,7632,7632,7632,7632,7633,7633,7633,7633,7633,7634,7634,7634,7634,7635,7635,7635,7635,7636,7636,7636,7636,7636,7637,7637,7637,7637,7638,7638,7638,7638,7639,7639,7639,7639,7640,7640,7640,7640,7641,7641,7641,7641,7642,7642,7642,7642,7643,7643,7643,7643,7643,7644,7644,7644,7644,7644,7645,7645,7645,7645,7645,7646,7646,7646,7646,7646,7647,7647,7647,7647,7647,7648,7648,7648,7648,7648,7649,7649,7649,7649,7649,7650,7650,7650,7650,7650,7651,7651,7651,7651,7651,7651,7652,7652,7652,7652,7653,7653,7653,7653,7653,7654,7654,7654,7654,7654,7655,7655,7655,7655,7655,7656,7656,7656,7656,7656,7657,7657,7657,7658,7658,7658,7659,7659,7659,7660,7660,7660,7660,7660,7661,7661,7661,7661,7661,7662,7662,7662,7662,7662,7663,7663,7663,7663,7663,7664,7664,7664,7664,7664,7665,7665,7665,7665,7665,7666,7666,7666,7667,7667,7667,7668,7668,7668,7669,7669,7670,7670,7670,7671,7671,7671,7672,7672,7672,7673,7673,7673,7673,7674,7674,7674,7674,7674,7675,7675,7675,7675,7675,7676,7676,7676,7676,7676,7677,7677,7677,7677,7677,7677,7678,7678,7678,7678,7678,7679,7679,7679,7679,7679,7679,7680,7680,7680,7680,7680,7681,7681,7681,7682,7682,7682,7682,7682,7682,7682,7683,7683,7683,7683,7683,7683,7684,7684,7684,7684,7685,7685,7685,7686,7686,7686,7686,7687,7687,7687,7687,7688,7688,7688,7688,7689,7689,7689,7689,7690,7690,7690,7690,7691,7691,7691,7691,7692,7692,7692,7692,7693,7693,7693,7693,7693,7694,7694,7694,7694,7694,7695,7695,7695,7695,7696,7696,7696,7696,7697,7697,7697,7697,7698,7698,7699,7699,7699,7699,7699,7700,7700,7700,7700,7700,7701,7701,7701,7701,7701,7702,7702,7702,7702,7702,7703,7703,7703,7703,7703,7704,7704,7704,7704,7704,7705,7705,7705,7705,7705,7706,7706,7706,7706,7706,7707,7707,7707,7707,7707,7708,7708,7708,7708,7708,7709,7709,7709,7709,7709,7710,7710,7710,7711,7711,7711,7712,7712,7712,7712,7712,7713,7713,7713,7713,7713,7714,7714,7714,7714,7714,7714,7715,7715,7715,7715,7715,7716,7716,7716,7716,7716,7717,7717,7717,7717,7717,7718,7718,7718,7718,7718,7719,7719,7719,7720,7720,7720,7721,7721,7721,7722,7722,7722,7723,7723,7723,7724,7724,7724,7725,7725,7725,7725,7725,7726,7726,7726,7726,7726,7727,7727,7727,7727,7727,7727,7728,7728,7728,7728,7728,7729,7729,7729,7729,7729,7729,7730,7730,7730,7730,7730,7730,7731,7731,7731,7731,7731,7731,7732,7732,7732,7732,7732,7732,7733,7733,7733,7733,7733,7734,7734,7734,7734,7734,7734,7735,7735,7735,7735,7735,7736,7736,7736,7736,7736,7737,7737,7737,7737,7738,7738,7738,7738,7738,7739,7739,7739,7739,7740,7740,7740,7740,7740,7741,7741,7741,7741,7742,7742,7742,7742,7743,7743,7743,7743,7744,7744,7744,7744,7745,7745,7745,7745,7746,7746,7746,7746,7747,7747,7747,7747,7748,7748,7748,7748,7748,7749,7749,7749,7749,7749,7750,7750,7750,7750,7750,7751,7751,7751,7751,7751,7752,7752,7752,7752,7752,7753,7753,7753,7753,7754,7754,7754,7754,7755,7755,7755,7755,7756,7756,7756,7756,7757,7757,7758,7758,7758,7758,7758,7759,7759,7759,7759,7759,7760,7760,7760,7760,7760,7761,7761,7761,7761,7761,7762,7762,7762,7762,7762,7763,7763,7763,7763,7763,7763,7764,7764,7764,7764,7764,7765,7765,7765,7765,7765,7765,7766,7766,7766,7766,7766,7767,7767,7767,7768,7768,7768,7769,7769,7769,7769,7769,7770,7770,7770,7770,7770,7771,7771,7771,7771,7771,7772,7772,7772,7772,7772,7773,7773,7773,7773,7773,7774,7774,7774,7774,7774,7775,7775,7775,7776,7776,7776,7777,7777,7777,7778,7778,7778,7779,7779,7779,7779,7780,7780,7780,7780,7780,7781,7781,7781,7781,7782,7782,7782,7783,7783,7783,7783,7783,7784,7784,7784,7784,7784,7785,7785,7785,7785,7785,7786,7786,7786,7786,7786,7786,7787,7787,7787,7787,7787,7788,7788,7788,7788,7788,7789,7789,7789,7789,7789,7790,7790,7790,7790,7790,7790,7791,7791,7791,7791,7792,7792,7792,7792,7792,7793,7793,7793,7793,7794,7794,7794,7794,7795,7795,7795,7795,7796,7796,7796,7796,7797,7797,7797,7797,7798,7798,7798,7798,7799,7799,7799,7799,7800,7800,7800,7800,7801,7801,7801,7801,7801,7802,7802,7802,7802,7803,7803,7803,7803,7804,7804,7804,7804,7805,7805,7805,7806,7806,7806,7806,7806,7807,7807,7807,7807,7807,7808,7808,7808,7808,7808,7809,7809,7809,7809,7809,7810,7810,7810,7810,7810,7811,7811,7811,7811,7811,7812,7812,7812,7812,7812,7813,7813,7813,7813,7813,7814,7814,7814,7814,7814,7815,7815,7815,7815,7815,7816,7816,7816,7817,7817,7817,7817,7817,7818,7818,7818,7818,7818,7819,7819,7819,7819,7819,7820,7820,7820,7820,7820,7821,7821,7821,7821,7821,7822,7822,7822,7822,7822,7823,7823,7823,7824,7824,7824,7824,7825,7825,7825,7826,7826,7826,7827,7827,7827,7827,7828,7828,7828,7828,7829,7829,7829,7829,7830,7830,7830,7830,7830,7831,7831,7831,7831,7831,7831,7832,7832,7832,7832,7832,7833,7833,7833,7833,7833,7834,7834,7834,7835,7835,7835,7836,7836,7836,7836,7836,7837,7837,7837,7837,7837,7837,7838,7838,7838,7838,7838,7838,7839,7839,7839,7840,7840,7840,7840,7840,7841,7841,7841,7842,7842,7842,7842,7843,7843,7843,7843,7844,7844,7844,7844,7845,7845,7845,7845,7846,7846,7846,7846,7846,7847,7847,7847,7847,7848,7848,7848,7848,7849,7849,7849,7849,7850,7850,7850,7850,7851,7851,7851,7851,7852,7852,7852,7852,7853,7853,7853,7853,7853,7853,7854,7854,7854,7854,7854,7855,7855,7855,7855,7855,7856,7856,7856,7856,7856,7857,7857,7857,7857,7857,7858,7858,7858,7858,7858,7859,7859,7859,7859,7859,7860,7860,7860,7860,7860,7861,7861,7861,7861,7861,7862,7862,7862,7862,7862,7863,7863,7863,7863,7863,7864,7864,7864,7864,7864,7864,7865,7865,7865,7866,7866,7866,7867,7867,7867,7867,7867,7868,7868,7868,7868,7868,7869,7869,7869,7869,7869,7870,7870,7870,7870,7870,7871,7871,7871,7871,7871,7872,7872,7872,7872,7872,7873,7873,7873,7874,7874,7874,7875,7875,7875,7875,7876,7876,7876,7877,7877,7877,7877,7877,7877,7877,7878,7878,7878,7879,7879,7879,7879,7879,7880,7880,7880,7880,7880,7881,7881,7881,7881,7881,7882,7882,7882,7882,7882,7883,7883,7883,7883,7883,7883,7883,7884,7884,7884,7885,7885,7885,7885,7885,7885,7886,7886,7886,7886,7886,7887,7887,7887,7887,7887,7888,7888,7888,7888,7889,7889,7889,7889,7890,7890,7890,7891,7891,7891,7891,7892,7892,7892,7892,7892,7893,7893,7893,7893,7894,7894,7894,7894,7895,7895,7895,7895,7896,7896,7896,7896,7897,7897,7897,7897,7898,7898,7898,7898,7899,7899,7899,7899,7899,7900,7900,7900,7900,7901,7901,7901,7901,7902,7902,7902,7902,7903,7903,7903,7903,7903,7903,7904,7904,7904,7904,7904,7905,7905,7905,7905,7905,7906,7906,7906,7906,7906,7907,7907,7907,7907,7907,7908,7908,7908,7908,7908,7909,7909,7909,7909,7909,7910,7910,7910,7910,7910,7911,7911,7911,7911,7911,7912,7912,7912,7913,7913,7913,7913,7913,7914,7914,7914,7914,7914,7915,7915,7915,7915,7915,7916,7916,7916,7917,7917,7917,7918,7918,7918,7918,7918,7919,7919,7919,7919,7919,7920,7920,7920,7920,7920,7921,7921,7921,7921,7921,7921,7922,7922,7922,7922,7922,7923,7923,7923,7923,7923,7924,7924,7924,7924,7924,7925,7925,7925,7926,7926,7926,7927,7927,7927,7927,7927,7927,7927,7928,7928,7928,7929,7929,7929,7929,7930,7930,7930,7930,7931,7931,7931,7931,7932,7932,7932,7932,7933,7933,7933,7934,7934,7934,7934,7934,7935,7935,7935,7935,7935,7936,7936,7936,7936,7937,7937,7937,7938,7938,7938,7938,7938,7939,7939,7939,7939,7939,7940,7940,7940,7940,7940,7941,7941,7941,7941,7941,7941,7941,7942,7942,7942,7942,7943,7943,7943,7943,7943,7944,7944,7944,7944,7945,7945,7945,7945,7946,7946,7946,7946,7947,7947,7947,7947,7948,7948,7948,7948,7949,7949,7949,7949,7950,7950,7950,7950,7951,7951,7951,7951,7951,7952,7952,7952,7952,7952,7953,7953,7953,7953,7954,7954,7954,7954,7955,7955,7955,7955,7956,7956,7956,7956,7956,7957,7957,7957,7957,7957,7958,7958,7958,7958,7958,7959,7959,7959,7959,7959,7960,7960,7960,7960,7960,7961,7961,7961,7961,7961,7962,7962,7962,7962,7962,7963,7963,7963,7963,7963,7964,7964,7964,7964,7964,7965,7965,7965,7965,7965,7966,7966,7966,7966,7966,7967,7967,7967,7967,7967,7968,7968,7968,7969,7969,7969,7970,7970,7970,7970,7970,7971,7971,7971,7971,7971,7972,7972,7972,7973,7973,7973,7973,7973,7974,7974,7974,7974,7974,7975,7975,7975,7975,7975,7976,7976,7976,7976,7976,7977,7977,7977,7978,7978,7978,7979,7979,7979,7980,7980,7980,7980,7981,7981,7981,7981,7981,7981,7982,7982,7982,7983,7983,7983,7983,7983,7984,7984,7984,7985,7985,7985,7986,7986,7986,7986,7987,7987,7987,7987,7987,7988,7988,7988,7988,7988,7989,7989,7989,7989,7989,7990,7990,7990,7990,7990,7991,7991,7991,7991,7992,7992,7992,7992,7993,7993,7993,7993,7994,7994,7994,7994,7995,7995,7995,7995,7996,7996,7996,7996,7996,7997,7997,7997,7997,7997,7998,7998,7998,7998,7999,7999,7999,7999,7999,7999,8000,8000,8000,8000,8001,8001,8001,8001,8002,8002,8002,8002,8003,8003,8003,8003,8004,8004,8004,8004,8005,8005,8005,8005,8006,8006,8006,8006,8007,8007,8007,8007,8008,8008,8008,8008,8009,8009,8009,8009,8009,8010,8010,8010,8010,8010,8011,8011,8011,8011,8012,8012,8013,8013,8013,8013,8013,8014,8014,8014,8014,8014,8015,8015,8015,8015,8015,8016,8016,8016,8016,8016,8017,8017,8017,8017,8017,8018,8018,8018,8018,8018,8019,8019,8019,8019,8019,8020,8020,8020,8020,8020,8021,8021,8021,8021,8021,8022,8022,8022,8022,8022,8023,8023,8023,8024,8024,8024,8025,8025,8025,8025,8025,8026,8026,8026,8026,8026,8027,8027,8027,8027,8027,8028,8028,8028,8028,8028,8029,8029,8029,8029,8029,8030,8030,8030,8030,8030,8031,8031,8031,8032,8032,8032,8033,8033,8033,8034,8034,8034,8035,8035,8035,8035,8036,8036,8036,8036,8036,8036,8037,8037,8037,8037,8037,8038,8038,8038,8038,8038,8039,8039,8039,8039,8039,8039,8040,8040,8040,8040,8040,8041,8041,8041,8041,8041,8041,8042,8042,8042,8042,8042,8043,8043,8043,8043,8043,8044,8044,8044,8044,8044,8045,8045,8045,8045,8045,8046,8046,8046,8046,8046,8046,8046,8047,8047,8047,8047,8047,8048,8048,8048,8049,8049,8049,8049,8050,8050,8050,8050,8051,8051,8051,8051,8052,8052,8052,8052,8053,8053,8053,8053,8054,8054,8054,8054,8055,8055,8055,8055,8056,8056,8056,8056,8056,8057,8057,8057,8057,8057,8058,8058,8058,8058,8059,8059,8059,8059,8060,8060,8060,8060,8061,8061,8061,8061,8061,8062,8062,8062,8062,8062,8063,8063,8063,8063,8063,8064,8064,8064,8064,8064,8065,8065,8065,8065,8065,8066,8066,8066,8066,8066,8067,8067,8067,8067,8067,8068,8068,8068,8068,8068,8069,8069,8069,8069,8069,8070,8070,8070,8070,8071,8071,8071,8071,8071,8072,8072,8072,8072,8072,8073,8073,8073,8073,8073,8074,8074,8074,8075,8075,8075,8075,8075,8076,8076,8076,8076,8076,8077,8077,8077,8077,8077,8078,8078,8078,8078,8078,8079,8079,8079,8079,8080,8080,8080,8080,8080,8081,8081,8081,8081,8081,8082,8082,8082,8082,8082,8083,8083,8083,8084,8084,8084,8085,8085,8085,8085,8085,8085,8085,8086,8086,8086,8087,8087,8087,8088,8088,8088,8088,8089,8089,8089,8089,8089,8090,8090,8090,8091,8091,8091,8091,8091,8091,8092,8092,8092,8093,8093,8093,8093,8093,8094,8094,8094,8094,8094,8095,8095,8095,8095,8095,8096,8096,8096,8096,8096,8097,8097,8097,8097,8098,8098,8098,8098,8099,8099,8099,8099,8099,8100,8100,8100,8100,8100,8101,8101,8101,8101,8101,8102,8102,8102,8102,8103,8103,8103,8103,8104,8104,8104,8104,8105,8105,8105,8105,8105,8106,8106,8106,8106,8107,8107,8107,8107,8108,8108,8108,8108,8109,8109,8109,8109,8110,8110,8110,8110,8111,8111,8111,8111,8112,8112,8112,8112,8113,8113,8113,8113,8114,8114,8114,8114,8115,8115,8115,8115,8115,8115,8116,8116,8116,8116,8116,8117,8117,8117,8117,8117,8118,8118,8118,8118,8118,8119,8119,8119,8119,8119,8120,8120,8120,8120,8120,8121,8121,8121,8121,8121,8122,8122,8122,8122,8122,8123,8123,8123,8123,8124,8124,8124,8124,8124,8125,8125,8125,8125,8125,8126,8126,8126,8126,8126,8126,8127,8127,8127,8127,8127,8128,8128,8128,8128,8128,8129,8129,8129,8130,8130,8130,8131,8131,8131,8131,8131,8132,8132,8132,8132,8132,8133,8133,8133,8133,8133,8134,8134,8134,8134,8134,8135,8135,8135,8135,8135,8136,8136,8136,8136,8136,8137,8137,8137,8137,8138,8138,8138,8138,8139,8139,8139,8140,8140,8140,8141,8141,8141,8141,8141,8142,8142,8142,8142,8143,8143,8143,8143,8143,8144,8144,8144,8144,8144,8145,8145,8145,8145,8145,8145,8146,8146,8146,8146,8146,8146,8147,8147,8147,8147,8147,8147,8148,8148,8148,8148,8148,8148,8149,8149,8149,8149,8149,8150,8150,8150,8150,8150,8151,8151,8151,8151,8151,8151,8152,8152,8152,8152,8152,8153,8153,8153,8153,8153,8153,8154,8154,8154,8154,8154,8155,8155,8155,8155,8156,8156,8156,8156,8157,8157,8157,8157,8157,8158,8158,8158,8158,8159,8159,8159,8159,8160,8160,8160,8160,8161,8161,8161,8161,8161,8162,8162,8162,8162,8163,8163,8163,8163,8164,8164,8164,8164,8165,8165,8165,8165,8166,8166,8166,8166,8167,8167,8167,8167,8168,8168,8168,8168,8168,8168,8169,8169,8169,8169,8169,8170,8170,8170,8170,8170,8171,8171,8171,8171,8171,8172,8172,8172,8172,8172,8173,8173,8173,8173,8173,8174,8174,8174,8174,8174,8175,8175,8175,8175,8175,8176,8176,8176,8176,8176,8177,8177,8177,8177,8178,8178,8178,8178,8178,8179,8179,8179,8179,8179,8180,8180,8181,8181,8181,8182,8182,8182,8182,8182,8183,8183,8183,8183,8183,8184,8184,8184,8184,8184,8185,8185,8185,8185,8185,8186,8186,8186,8186,8186,8187,8187,8187,8187,8187,8188,8188,8188,8189,8189,8189,8190,8190,8190,8190,8191,8191,8191,8192,8192,8192,8193,8193,8193,8194,8194,8194,8194,8194,8195,8195,8195,8195,8196,8196,8196,8196,8196,8197,8197,8197,8197,8197,8198,8198,8198,8199,8199,8199,8199,8199,8199,8200,8200,8200,8200,8200,8201,8201,8201,8201,8201,8202,8202,8202,8202,8202,8203,8203,8203,8203,8203,8204,8204,8204,8204,8204,8204,8205,8205,8205,8205,8205,8206,8206,8206,8206,8206,8207,8207,8207,8207,8208,8208,8208,8208,8209,8209,8209,8209,8210,8210,8210,8210,8211,8211,8211,8211,8212,8212,8212,8212,8212,8213,8213,8213,8213,8214,8214,8214,8214,8215,8215,8215,8215,8216,8216,8216,8216,8217,8217,8217,8217,8218,8218,8218,8218,8219,8219,8219,8219,8220,8220,8220,8220,8220,8221,8221,8221,8221,8221,8222,8222,8222,8222,8222,8223,8223,8223,8223,8223,8224,8224,8224,8224,8224,8225,8225,8225,8225,8225,8225,8226,8226,8226,8226,8226,8227,8227,8227,8227,8227,8228,8228,8228,8228,8228,8229,8229,8229,8229,8229,8230,8230,8230,8230,8230,8231,8231,8231,8232,8232,8232,8233,8233,8233,8234,8234,8234,8234,8234,8235,8235,8235,8235,8235,8236,8236,8236,8236,8237,8237,8237,8237,8237,8238,8238,8238,8238,8238,8239,8239,8239,8239,8239,8240,8240,8240,8240,8240,8241,8241,8241,8242,8242,8242,8243,8243,8244,8244,8244,8245,8245,8245,8245,8245,8246,8246,8246,8246,8246,8246,8247,8247,8247,8248,8248,8248,8249,8249,8249,8249,8249,8250,8250,8250,8250,8250,8251,8251,8251,8251,8251,8251,8252,8252,8252,8252,8252,8252,8253,8253,8253,8253,8253,8253,8254,8254,8254,8255,8255,8255,8255,8255,8256,8256,8256,8256,8257,8257,8257,8257,8257,8257,8258,8258,8258,8258,8259,8259,8259,8259,8259,8260,8260,8260,8260,8261,8261,8261,8261,8261,8262,8262,8262,8262,8263,8263,8263,8263,8264,8264,8264,8264,8265,8265,8265,8265,8266,8266,8266,8266,8267,8267,8267,8267,8268,8268,8268,8268,8269,8269,8269,8269,8270,8270,8270,8270,8271,8271,8271,8271,8272,8272,8272,8272,8272,8273,8273,8273,8273,8273,8274,8274,8274,8274,8274,8275,8275,8275,8275,8275,8276,8276,8276,8276,8276,8276,8277,8277,8277,8277,8277,8278,8278,8278,8278,8278,8279,8279,8279,8279,8279,8280,8280,8280,8280,8280,8281,8281,8281,8281,8281,8282,8282,8282,8282,8282,8283,8283,8283,8283,8283,8284,8284,8284,8284,8284,8285,8285,8285,8286,8286,8286,8287,8287,8287,8287,8287,8288,8288,8288,8288,8288,8289,8289,8289,8289,8289,8290,8290,8290,8290,8290,8291,8291,8291,8291,8291,8292,8292,8292,8292,8292,8293,8293,8293,8293,8293,8294,8294,8294,8295,8295,8295,8296,8296,8297,8297,8297,8298,8298,8298,8298,8298,8299,8299,8299,8299,8299,8300,8300,8300,8301,8301,8301,8301,8301,8302,8302,8302,8302,8302,8302,8303,8303,8303,8304,8304,8304,8304,8304,8305,8305,8305,8305,8305,8306,8306,8306,8306,8306,8307,8307,8307,8307,8307,8308,8308,8308,8308,8308,8309,8309,8309,8309,8309,8310,8310,8310,8310,8311,8311,8311,8311,8311,8312,8312,8312,8312,8312,8313,8313,8313,8313,8314,8314,8314,8314,8315,8315,8315,8315,8316,8316,8316,8316,8317,8317,8317,8317,8318,8318,8318,8318,8319,8319,8319,8319,8320,8320,8320,8320,8321,8321,8321,8321,8322,8322,8322,8322,8323,8323,8323,8323,8323,8324,8324,8324,8324,8324,8325,8325,8325,8325,8326,8326,8327,8327,8327,8327,8327,8328,8328,8328,8328,8328,8329,8329,8329,8329,8329,8330,8330,8330,8330,8330,8331,8331,8331,8331,8331,8332,8332,8332,8332,8332,8333,8333,8333,8333,8333,8334,8334,8334,8334,8334,8335,8335,8335,8335,8335,8336,8336,8336,8336,8336,8337,8337,8337,8337,8337,8338,8338,8338,8338,8338,8339,8339,8339,8339,8339,8340,8340,8340,8341,8341,8341,8342,8342,8342,8342,8342,8343,8343,8343,8343,8343,8344,8344,8344,8344,8344,8345,8345,8345,8345,8345,8346,8346,8346,8346,8346,8347,8347,8347,8347,8347,8347,8348,8348,8348,8348,8349,8349,8349,8350,8350,8350,8351,8351,8351,8352,8352,8352,8352,8353,8353,8353,8353,8353,8354,8354,8354,8354,8354,8355,8355,8355,8355,8355,8355,8356,8356,8356,8356,8357,8357,8357,8357,8357,8358,8358,8358,8358,8358,8359,8359,8359,8359,8359,8360,8360,8360,8360,8360,8361,8361,8361,8361,8361,8361,8361,8362,8362,8362,8362,8362,8362,8362,8363,8363,8363,8363,8363,8364,8364,8364,8364,8364,8365,8365,8365,8365,8365,8366,8366,8366,8366,8367,8367,8367,8367,8367,8368,8368,8368,8368,8368,8368,8368,8369,8369,8369,8369,8369,8369,8369,8370,8370,8370,8370,8370,8370,8370,8371,8371,8371,8371,8371,8371,8371,8372,8372,8372,8372,8372,8372,8372,8373,8373,8373,8373,8374,8374,8374,8374,8375,8375,8375,8375,8376,8376,8376,8376,8377,8377,8377,8377,8378,8378,8378,8378,8379,8379,8379,8379,8380,8380,8380,8380,8381,8381,8381,8381,8382,8382,8382,8382,8383,8383,8383,8383,8384,8384,8384,8384,8384,8384,8385,8385,8385,8385,8385,8386,8386,8386,8386,8386,8387,8387,8387,8387,8387,8388,8388,8388,8389,8389,8389,8389,8389,8390,8390,8390,8390,8390,8391,8391,8391,8391,8391,8392,8392,8392,8392,8392,8393,8393,8393,8393,8393,8394,8394,8394,8394,8394,8395,8395,8395,8395,8396,8396,8396,8396,8396,8397,8397,8397,8398,8398,8398,8399,8399,8399,8399,8399,8400,8400,8400,8400,8400,8401,8401,8401,8401,8401,8402,8402,8402,8402,8402,8403,8403,8403,8403,8403,8404,8404,8404,8404,8404,8405,8405,8405,8405,8405,8405,8406,8406,8406,8406,8406,8407,8407,8407,8408,8408,8408,8409,8409,8410,8410,8410,8410,8411,8411,8411,8411,8411,8412,8412,8412,8412,8413,8413,8413,8413,8413,8414,8414,8414,8414,8414,8415,8415,8415,8415,8415,8416,8416,8416,8416,8416,8417,8417,8417,8417,8417,8418,8418,8418,8418,8418,8419,8419,8419,8419,8419,8420,8420,8420,8420,8420,8420,8421,8421,8421,8421,8421,8422,8422,8422,8422,8422,8423,8423,8423,8423,8424,8424,8424,8424,8425,8425,8425,8425,8426,8426,8426,8426,8427,8427,8427,8427,8428,8428,8428,8428,8429,8429,8429,8429,8430,8430,8430,8430,8431,8431,8431,8431,8431,8432,8432,8432,8432,8433,8433,8433,8433,8434,8434,8434,8434,8435,8435,8436,8436,8436,8436,8436,8437,8437,8437,8437,8437,8438,8438,8438,8438,8438,8439,8439,8439,8439,8439,8440,8440,8440,8440,8440,8441,8441,8441,8441,8441,8441,8442,8442,8442,8442,8442,8443,8443,8443,8443,8443,8443,8444,8444,8444,8444,8444,8445,8445,8445,8445,8445,8446,8446,8446,8446,8446,8447,8447,8447,8448,8448,8448,8449,8449,8449,8449,8449,8450,8450,8450,8450,8450,8451,8451,8451,8451,8451,8452,8452,8452,8452,8452,8453,8453,8453,8453,8453,8454,8454,8454,8454,8454,8455,8455,8455,8455,8456,8456,8456,8457,8457,8457,8458,8458,8458,8459,8459,8459,8459,8460,8460,8460,8460,8460,8460,8461,8461,8461,8461,8462,8462,8462,8462,8462,8463,8463,8463,8464,8464,8464,8464,8464,8465,8465,8465,8465,8465,8465,8465,8466,8466,8466,8466,8466,8466,8466,8467,8467,8467,8467,8467,8467,8467,8468,8468,8468,8468,8468,8469,8469,8469,8469,8469,8470,8470,8470,8470,8470,8471,8471,8471,8471,8471,8472,8472,8472,8472,8472,8472,8473,8473,8473,8473,8474,8474,8474,8474,8474,8475,8475,8475,8475,8476,8476,8476,8476,8477,8477,8477,8477,8478,8478,8478,8478,8479,8479,8479,8479,8480,8480,8480,8480,8481,8481,8481,8481,8482,8482,8482,8482,8483,8483,8483,8483,8484,8484,8484,8484,8485,8485,8485,8485,8485,8486,8486,8486,8486,8486,8486,8487,8487,8487,8487,8487,8488,8488,8488,8488,8489,8489,8489,8489,8489,8490,8490,8490,8490,8490,8491,8491,8491,8491,8491,8492,8492,8492,8492,8492,8493,8493,8493,8493,8493,8494,8494,8494,8494,8494,8495,8495,8495,8495,8495,8496,8496,8496,8496,8496,8497,8497,8497,8497,8497,8498,8498,8498,8498,8498,8498,8499,8499,8499,8499,8499,8499,8500,8500,8500,8500,8500,8501,8501,8501,8502,8502,8502,8503,8503,8503,8503,8503,8504,8504,8504,8504,8504,8505,8505,8505,8505,8505,8506,8506,8506,8506,8506,8507,8507,8507,8507,8507,8508,8508,8508,8508,8508,8509,8509,8509,8509,8510,8510,8510,8511,8511,8511,8512,8512,8513,8513,8513,8513,8514,8514,8514,8514,8514,8515,8515,8515,8515,8515,8516,8516,8516,8517,8517,8517,8517,8517,8518,8518,8518,8518,8518,8519,8519,8519,8519,8519,8520,8520,8520,8520,8520,8520,8521,8521,8521,8521,8521,8522,8522,8522,8522,8522,8523,8523,8523,8523,8523,8524,8524,8524,8524,8524,8525,8525,8525,8525,8525,8525,8525,8526,8526,8526,8526,8527,8527,8527,8527,8527,8528,8528,8528,8528,8529,8529,8529,8529,8529,8530,8530,8530,8530,8531,8531,8531,8531,8532,8532,8532,8532,8533,8533,8533,8533,8534,8534,8534,8534,8535,8535,8535,8535,8536,8536,8536,8536,8537,8537,8537,8537,8538,8538,8538,8538,8538,8539,8539,8539,8539,8539,8540,8540,8540,8540,8541,8541,8542,8542,8542,8542,8542,8543,8543,8543,8543,8543,8544,8544,8544,8544,8544,8545,8545,8545,8545,8545,8546,8546,8546,8546,8546,8547,8547,8547,8547,8547,8548,8548,8548,8548,8548,8549,8549,8549,8549,8549,8550,8550,8550,8550,8550,8551,8551,8551,8551,8552,8552,8552,8552,8552,8552,8553,8553,8553,8553,8553,8554,8554,8554,8554,8554,8555,8555,8555,8555,8555,8556,8556,8556,8557,8557,8557,8557,8557,8558,8558,8558,8558,8558,8559,8559,8559,8559,8559,8560,8560,8560,8560,8560,8561,8561,8561,8561,8561,8562,8562,8562,8562,8562,8562,8563,8563,8563,8563,8563,8564,8564,8564,8565,8565,8565,8566,8566,8567,8567,8567,8568,8568,8568,8568,8569,8569,8569,8569,8570,8570,8570,8570,8571,8571,8571,8571,8571,8572,8572,8572,8572,8572,8573,8573,8573,8573,8573,8574,8574,8574,8574,8574,8574,8575,8575,8575,8575,8575,8576,8576,8576,8576,8576,8577,8577,8577,8577,8577,8578,8578,8578,8579,8579,8579,8579,8579,8579,8579,8580,8580,8580,8580,8580,8581,8581,8581,8581,8581,8581,8582,8582,8582,8582,8583,8583,8583,8583,8583,8584,8584,8584,8584,8585,8585,8585,8585,8586,8586,8586,8586,8587,8587,8587,8587,8588,8588,8588,8588,8589,8589,8589,8589,8590,8590,8590,8590,8590,8591,8591,8591,8591,8591,8592,8592,8592,8592,8593,8593,8593,8593,8594,8594,8594,8594,8595,8595,8595,8595,8595,8595,8596,8596,8596,8596,8596,8597,8597,8597,8598,8598,8598,8598,8598,8599,8599,8599,8600,8600,8600,8600,8600,8601,8601,8601,8601,8601,8602,8602,8602,8602,8602,8603,8603,8603,8603,8603,8604,8604,8604,8604,8604,8605,8605,8605,8605,8605,8606,8606,8606,8606,8606,8607,8607,8607,8607,8607,8608,8608,8608,8609,8609,8609,8610,8610,8610,8610,8610,8611,8611,8611,8611,8611,8612,8612,8612,8612,8612,8613,8613,8613,8613,8613,8614,8614,8614,8614,8614,8615,8615,8615,8615,8615,8615,8616,8616,8616,8616,8616,8617,8617,8617,8618,8618,8618,8619,8619,8619,8620,8620,8620,8620,8621,8621,8621,8621,8622,8622,8622,8622,8622,8623,8623,8623,8623,8623,8624,8624,8624,8624,8624,8624,8625,8625,8625,8626,8626,8626,8627,8627,8627,8627,8628,8628,8628,8628,8629,8629,8629,8629,8630,8630,8630,8630,8631,8631,8631,8631,8632,8632,8632,8632,8632,8633,8633,8633,8633,8633,8634,8634,8634,8634,8634,8635,8635,8635,8635,8635,8636,8636,8636,8636,8636,8636,8637,8637,8637,8638,8638,8638,8638,8639,8639,8639,8639,8639,8640,8640,8640,8640,8641,8641,8641,8641,8642,8642,8642,8642,8643,8643,8643,8643,8644,8644,8644,8644,8645,8645,8645,8645,8646,8646,8646,8646,8647,8647,8647,8647,8648,8648,8648,8648,8649,8649,8649,8649,8650,8650,8650,8651,8651,8651,8651,8651,8652,8652,8652,8652,8652,8653,8653,8653,8653,8653,8654,8654,8654,8654,8654,8655,8655,8655,8655,8655,8656,8656,8656,8656,8656,8657,8657,8657,8657,8657,8658,8658,8658,8658,8658,8659,8659,8659,8659,8659,8660,8660,8661,8661,8661,8661,8661,8662,8662,8662,8662,8662,8663,8663,8663,8663,8663,8664,8664,8664,8664,8664,8665,8665,8665,8665,8665,8666,8666,8666,8667,8667,8667,8668,8668,8668,8668,8668,8669,8669,8669,8669,8669,8670,8670,8670,8670,8670,8671,8671,8671,8671,8671,8672,8672,8672,8672,8672,8673,8673,8673,8673,8673,8674,8674,8674,8675,8675,8675,8676,8676,8676,8677,8677,8678,8678,8678,8678,8679,8679,8679,8679,8679,8680,8680,8680,8681,8681,8681,8681,8681,8682,8682,8682,8682,8683,8683,8683,8684,8684,8684,8684,8684,8685,8685,8685,8685,8685,8686,8686,8686,8686,8686,8687,8687,8687,8687,8687,8687,8688,8688,8688,8688,8688,8689,8689,8689,8689,8689,8690,8690,8690,8690,8690,8691,8691,8691,8691,8691,8692,8692,8692,8692,8692,8693,8693,8693,8693,8693,8693,8694,8694,8694,8694,8694,8694,8694,8695,8695,8695,8695,8695,8696,8696,8696,8696,8696,8697,8697,8697,8697,8697,8698,8698,8698,8698,8699,8699,8699,8699,8699,8700,8700,8700,8700,8701,8701,8701,8701,8702,8702,8702,8702,8703,8703,8703,8703,8704,8704,8704,8704,8704,8705,8705,8705,8705,8706,8706,8706,8706,8707,8707,8707,8707,8708,8708,8708,8708,8709,8709,8709,8709,8710,8710,8710,8710,8711,8711,8711,8711,8712,8712,8712,8712,8713,8713,8714,8714,8714,8714,8714,8715,8715,8715,8715,8715,8716,8716,8716,8716,8716,8717,8717,8717,8717,8717,8718,8718,8718,8718,8718,8719,8719,8719,8719,8719,8720,8720,8720,8720,8720,8721,8721,8721,8721,8721,8722,8722,8722,8723,8723,8723,8723,8723,8724,8724,8724,8724,8725,8725,8725,8725,8725,8725,8726,8726,8726,8726,8726,8727,8727,8727,8728,8728,8728,8728,8728,8729,8729,8729,8729,8729,8730,8730,8730,8730,8730,8731,8731,8731,8731,8731,8732,8732,8732,8732,8732,8732,8733,8733,8733,8733,8733,8734,8734,8734,8734,8734,8735,8735,8735,8735,8735,8736,8736,8736,8736,8737,8737,8737,8738,8738,8738,8739,8739,8739,8740,8740,8740,8740,8741,8741,8741,8741,8742,8742,8742,8742,8743,8743,8743,8744,8744,8744,8744,8744,8744,8745,8745,8745,8745,8745,8746,8746,8746,8746,8746,8747,8747,8747,8747,8747,8748,8748,8748,8748,8748,8749,8749,8749,8749,8749,8749,8750,8750,8750,8750,8750,8750,8751,8751,8751,8751,8751,8751,8752,8752,8752,8752,8752,8753,8753,8753,8753,8753,8753,8754,8754,8754,8754,8754,8755,8755,8755,8755,8756,8756,8756,8757,8757,8757,8757,8758,8758,8758,8758,8758,8758,8759,8759,8759,8759,8760,8760,8760,8760,8761,8761,8761,8761,8762,8762,8762,8762,8763,8763,8763,8763,8764,8764,8764,8764,8765,8765,8765,8765,8766,8766,8766,8766,8767,8767,8767,8767,8768,8768,8768,8768,8769,8769,8769,8769,8770,8770,8770,8770,8771,8771,8771,8771,8771,8771,8772,8772,8772,8772,8772,8773,8773,8773,8773,8773,8774,8774,8774,8774,8774,8775,8775,8775,8775,8775,8776,8776,8776,8776,8776,8777,8777,8777,8777,8777,8778,8778,8778,8778,8778,8779,8779,8779,8779,8779,8780,8780,8780,8780,8781,8781,8781,8781,8781,8782,8782,8782,8782,8783,8783,8783,8783,8783,8784,8784,8784,8784,8785,8785,8786,8786,8787,8787,8788,8788,8788,8789,8789,8789,8790,8790,8790,8790,8790,8790,8791,8791,8791,8791,8791,8791,8792,8792,8792,8792,8792,8793,8793,8793,8793,8793,8794,8794,8794,8794,8794,8795,8795,8795,8795,8795,8796,8796,8796,8796,8796,8797,8797,8797,8797,8797,8798,8798,8798,8799,8799,8799,8800,8800,8800,8801,8801,8801,8802,8802,8802,8802,8803,8803,8803,8803,8803,8804,8804,8804,8804,8804,8804,8805,8805,8805,8806,8806,8806,8806,8806,8807,8807,8807,8807,8807,8808,8808,8808,8808,8808,8809,8809,8809,8809,8809,8810,8810,8810,8810,8810,8811,8811,8811,8811,8811,8812,8812,8812,8812,8812,8813,8813,8813,8813,8813,8814,8814,8814,8814,8815,8815,8815,8815,8816,8816,8816,8816,8817,8817,8817,8817,8818,8818,8818,8819,8819,8819,8819,8820,8820,8820,8820,8821,8821,8821,8821,8822,8822,8822,8822,8823,8823,8823,8823,8824,8824,8824,8824,8825,8825,8825,8825,8826,8826,8826,8826,8826,8827,8827,8827,8827,8827,8828,8828,8828,8828,8829,8829,8829,8829,8830,8830,8830,8830,8830,8831,8831,8831,8831,8831,8832,8832,8832,8832,8832,8833,8833,8833,8833,8833,8833,8834,8834,8834,8834,8834,8835,8835,8835,8836,8836,8836,8836,8836,8837,8837,8837,8837,8837,8838,8838,8838,8838,8838,8839,8839,8839,8839,8840,8840,8840,8840,8840,8841,8841,8841,8841,8841,8842,8842,8842,8842,8842,8843,8843,8843,8843,8843,8844,8844,8844,8845,8845,8845,8845,8845,8846,8846,8846,8846,8846,8847,8847,8847,8847,8847,8848,8848,8848,8848,8848,8848,8849,8849,8849,8849,8849,8850,8850,8850,8850,8850,8851,8851,8851,8851,8851,8852,8852,8852,8853,8853,8853,8854,8854,8855,8855,8855,8856,8856,8856,8856,8857,8857,8857,8857,8857,8858,8858,8858,8858,8858,8859,8859,8859,8859,8860,8860,8860,8860,8860,8861,8861,8861,8861,8861,8862,8862,8862,8862,8863,8863,8863,8863,8863,8863,8863,8864,8864,8864,8864,8864,8864,8864,8865,8865,8865,8865,8865,8865,8865,8866,8866,8866,8866,8866,8866,8866,8867,8867,8867,8867,8867,8867,8867,8868,8868,8868,8868,8868,8869,8869,8869,8869,8869,8870,8870,8870,8870,8870,8871,8871,8871,8871,8871,8872,8872,8872,8872,8872,8872,8872,8873,8873,8873,8873,8873,8873,8874,8874,8874,8874,8875,8875,8875,8875,8875,8876,8876,8876,8876,8877,8877,8877,8877,8877,8877,8878,8878,8878,8878,8879,8879,8879,8879,8880,8880,8880,8880,8881,8881,8881,8881,8882,8882,8882,8882,8882,8883,8883,8883,8883,8884,8884,8884,8884,8885,8885,8885,8885,8886,8886,8886,8886,8887,8887,8888,8888,8888,8888,8888,8889,8889,8889,8889,8889,8890,8890,8890,8890,8890,8891,8891,8891,8892,8892,8892,8892,8892,8893,8893,8893,8893,8893,8894,8894,8894,8894,8894,8895,8895,8895,8895,8895,8896,8896,8896,8896,8896,8897,8897,8897,8897,8897,8898,8898,8898,8898,8898,8899,8899,8899,8899,8899,8900,8900,8900,8901,8901,8901,8902,8902,8902,8902,8902,8903,8903,8903,8903,8903,8904,8904,8904,8904,8904,8905,8905,8905,8905,8905,8906,8906,8906,8906,8906,8907,8907,8907,8907,8907,8908,8908,8908,8909,8909,8909,8910,8910,8910,8910,8911,8911,8911,8912,8912,8912,8913,8913,8913,8914,8914,8914,8915,8915,8915,8915,8916,8916,8916,8916,8916,8917,8917,8917,8918,8918,8918,8918,8918,8919,8919,8919,8919,8920,8920,8920,8920,8920,8921,8921,8921,8921,8921,8922,8922,8922,8922,8922,8923,8923,8923,8923,8923,8924,8924,8924,8924,8925,8925,8925,8925,8925,8926,8926,8926,8926,8926,8927,8927,8927,8927,8927,8928,8928,8928,8928,8929,8929,8929,8929,8929,8930,8930,8930,8930,8931,8931,8931,8931,8932,8932,8932,8932,8933,8933,8933,8933,8933,8934,8934,8934,8934,8935,8935,8935,8935,8936,8936,8936,8936,8937,8937,8937,8937,8938,8938,8938,8938,8939,8939,8939,8939,8940,8940,8940,8940,8940,8941,8941,8941,8941,8941,8942,8942,8942,8942,8942,8943,8943,8943,8943,8943,8944,8944,8944,8944,8944,8945,8945,8945,8945,8945,8946,8946,8946,8946,8946,8947,8947,8947,8947,8947,8948,8948,8948,8948,8948,8949,8949,8949,8950,8950,8950,8950,8950,8951,8951,8951,8951,8951,8952,8952,8952,8952,8952,8953,8953,8953,8953,8953,8954,8954,8954,8955,8955,8955,8956,8956,8956,8956,8956,8957,8957,8957,8957,8957,8958,8958,8958,8958,8958,8958,8959,8959,8959,8959,8959,8960,8960,8960,8960,8960,8961,8961,8961,8961,8961,8962,8962,8962,8962,8962,8963,8963,8963,8963,8963,8964,8964,8964,8965,8965,8965,8966,8966,8966,8967,8967,8968,8968,8968,8969,8969,8969,8969,8969,8970,8970,8970,8970,8970,8971,8971,8971,8971,8972,8972,8972,8973,8973,8973,8973,8973,8974,8974,8974,8974,8975,8975,8975,8975,8976,8976,8976,8976,8977,8977,8977,8977,8977,8977,8978,8978,8978,8978,8978,8979,8979,8979,8980,8980,8980,8980,8980,8981,8981,8981,8981,8981,8982,8982,8982,8982,8982,8983,8983,8983,8983,8983,8984,8984,8984,8984,8984,8985,8985,8985,8985,8985,8986,8986,8986,8986,8986,8987,8987,8987,8987,8987,8988,8988,8988,8988,8988,8989,8989,8989,8989,8989,8990,8990,8990,8990,8991,8991,8991,8991,8991,8992,8992,8992,8992,8993,8993,8993,8993,8994,8994,8994,8994,8995,8995,8995,8995,8996,8996,8996,8996,8997,8997,8997,8997,8998,8998,8998,8998,8998,8999,8999,8999,8999,8999,9000,9000,9000,9000,9001,9001,9001,9001,9002,9002,9002,9002,9003,9003,9003,9003,9004,9004,9004,9004,9005,9005,9006,9006,9006,9006,9006,9007,9007,9007,9007,9007,9008,9008,9008,9008,9008,9009,9009,9009,9009,9009,9010,9010,9010,9010,9010,9011,9011,9011,9011,9011,9012,9012,9012,9012,9012,9013,9013,9013,9013,9013,9014,9014,9014,9014,9014,9015,9015,9015,9015,9016,9016,9016,9016,9016,9017,9017,9017,9017,9017,9018,9018,9018,9018,9018,9019,9019,9019,9019,9019,9020,9020,9020,9021,9021,9021,9022,9022,9022,9022,9022,9023,9023,9023,9023,9023,9024,9024,9024,9024,9024,9025,9025,9025,9025,9025,9026,9026,9026,9026,9026,9027,9027,9027,9027,9027,9028,9028,9028,9029,9029,9029,9030,9030,9030,9030,9030,9030,9030,9031,9031,9031,9032,9032,9032,9033,9033,9033,9033,9033,9034,9034,9034,9034,9035,9035,9035,9035,9035,9036,9036,9036,9036,9036,9037,9037,9037,9037,9037,9037,9038,9038,9038,9039,9039,9039,9039,9039,9039,9040,9040,9040,9040,9040,9040,9041,9041,9041,9041,9041,9042,9042,9042,9042,9042,9042,9043,9043,9043,9044,9044,9044,9044,9045,9045,9045,9045,9045,9046,9046,9046,9046,9047,9047,9047,9047,9048,9048,9048,9048,9049,9049,9049,9049,9050,9050,9050,9050,9051,9051,9051,9051,9051,9052,9052,9052,9052,9053,9053,9053,9053,9054,9054,9054,9054,9055,9055,9055,9055,9056,9056,9056,9056,9057,9057,9057,9057,9058,9058,9058,9058,9059,9059,9059,9059,9060,9060,9061,9061,9061,9061,9061,9062,9062,9062,9062,9062,9063,9063,9063,9063,9063,9064,9064,9064,9064,9064,9065,9065,9065,9065,9065,9066,9066,9066,9066,9066,9067,9067,9067,9067,9067,9068,9068,9068,9068,9068,9069,9069,9069,9069,9070,9070,9070,9070,9070,9071,9071,9071,9071,9071,9072,9072,9072,9072,9072,9073,9073,9073,9073,9073,9074,9074,9075,9075,9075,9076,9076,9076,9077,9077,9077,9077,9077,9078,9078,9078,9078,9078,9079,9079,9079,9079,9079,9080,9080,9080,9080,9080,9081,9081,9081,9081,9081,9082,9082,9082,9082,9082,9083,9083,9083,9083,9083,9084,9084,9084,9084,9084,9085,9085,9085,9086,9086,9086,9087,9087,9087,9088,9088,9089,9089,9089,9090,9090,9090,9090,9090,9091,9091,9091,9091,9092,9092,9092,9092,9093,9093,9093,9094,9094,9094,9094,9094,9094,9095,9095,9095,9095,9095,9095,9096,9096,9096,9097,9097,9097,9097,9097,9098,9098,9098,9098,9098,9099,9099,9099,9099,9099,9100,9100,9100,9100,9100,9100,9101,9101,9101,9101,9101,9101,9102,9102,9102,9102,9102,9103,9103,9103,9103,9103,9104,9104,9104,9105,9105,9105,9105,9106,9106,9106,9106,9106,9107,9107,9107,9107,9108,9108,9108,9108,9108,9109,9109,9109,9109,9110,9110,9110,9110,9111,9111,9111,9111,9112,9112,9112,9112,9113,9113,9113,9113,9114,9114,9114,9114,9115,9115,9115,9115,9116,9116,9116,9116,9117,9117,9117,9117,9118,9118,9118,9118,9118,9118,9119,9119,9119,9119,9119,9120,9120,9120,9120,9120,9121,9121,9121,9121,9121,9122,9122,9122,9122,9122,9123,9123,9123,9123,9123,9124,9124,9124,9124,9124,9125,9125,9125,9125,9125,9126,9126,9126,9126,9126,9127,9127,9127,9127,9127,9128,9128,9128,9128,9128,9129,9129,9129,9129,9129,9130,9130,9130,9130,9130,9131,9131,9131,9131,9131,9132,9132,9132,9133,9133,9133,9134,9134,9134,9134,9134,9135,9135,9135,9135,9135,9135,9136,9136,9136,9136,9136,9136,9137,9137,9137,9137,9137,9138,9138,9138,9138,9138,9139,9139,9139,9139,9139,9140,9140,9140,9140,9140,9141,9141,9141,9141,9141,9142,9142,9142,9142,9143,9143,9143,9144,9144,9144,9145,9145,9146,9146,9146,9147,9147,9147,9147,9148,9148,9148,9148,9148,9149,9149,9149,9149,9150,9150,9150,9150,9150,9150,9151,9151,9151,9152,9152,9152,9153,9153,9153,9154,9154,9154,9155,9155,9155,9155,9155,9155,9156,9156,9156,9156,9156,9156,9157,9157,9157,9157,9157,9158,9158,9158,9158,9158,9158,9159,9159,9159,9159,9159,9160,9160,9160,9160,9160,9161,9161,9161,9161,9161,9161,9162,9162,9162,9162,9162,9163,9163,9163,9163,9164,9164,9164,9164,9164,9165,9165,9165,9165,9166,9166,9166,9166,9167,9167,9167,9167,9168,9168,9168,9168,9169,9169,9169,9169,9170,9170,9170,9170,9171,9171,9171,9171,9172,9172,9172,9172,9173,9173,9173,9173,9174,9174,9174,9174,9175,9175,9175,9175,9175,9176,9176,9176,9176,9176,9177,9177,9177,9177,9178,9178,9178,9178,9179,9179,9179,9179,9179,9180,9180,9180,9180,9180,9181,9181,9181,9181,9181,9182,9182,9182,9182,9182,9183,9183,9183,9183,9183,9184,9184,9184,9184,9184,9185,9185,9185,9185,9185,9186,9186,9186,9186,9186,9187,9187,9187,9187,9187,9188,9188,9188,9188,9188,9189,9189,9189,9189,9189,9190,9190,9190,9190,9190,9191,9191,9191,9192,9192,9192,9193,9193,9193,9193,9193,9194,9194,9194,9194,9194,9195,9195,9195,9195,9195,9196,9196,9196,9196,9196,9197,9197,9197,9197,9197,9198,9198,9198,9198,9198,9198,9199,9199,9199,9199,9199,9200,9200,9200,9201,9201,9201,9202,9202,9203,9203,9203,9204,9204,9204,9204,9204,9205,9205,9205,9205,9205,9205,9206,9206,9206,9206,9206,9206,9207,9207,9207,9207,9208,9208,9208,9208,9208,9209,9209,9209,9209,9209,9210,9210,9210,9210,9210,9211,9211,9211,9211,9211,9211,9211,9212,9212,9212,9212,9212,9212,9212,9213,9213,9213,9213,9213,9213,9213,9214,9214,9214,9214,9214,9214,9214,9215,9215,9215,9215,9215,9215,9215,9216,9216,9216,9216,9216,9217,9217,9217,9217,9217,9218,9218,9218,9219,9219,9219,9219,9219,9220,9220,9220,9220,9220,9221,9221,9221,9221,9221,9221,9221,9222,9222,9222,9222,9222,9223,9223,9223,9224,9224,9224,9224,9225,9225,9225,9225,9226,9226,9226,9226,9227,9227,9227,9227,9228,9228,9228,9228,9229,9229,9229,9229,9230,9230,9230,9230,9231,9231,9231,9231,9232,9232,9232,9232,9233,9233,9233,9233,9234,9234,9234,9234,9235,9235,9235,9235,9236,9236,9236,9236,9236,9237,9237,9237,9237,9237,9238,9238,9238,9238,9239,9239,9240,9240,9240,9240,9240,9241,9241,9241,9241,9241,9241,9242,9242,9242,9242,9242,9243,9243,9243,9243,9244,9244,9244,9244,9244,9245,9245,9245,9245,9245,9246,9246,9246,9246,9246,9247,9247,9247,9247,9247,9248,9248,9248,9248,9248,9249,9249,9249,9249,9249,9250,9250,9250,9250,9250,9251,9251,9251,9251,9251,9252,9252,9252,9253,9253,9253,9254,9254,9254,9254,9254,9255,9255,9255,9255,9255,9256,9256,9256,9256,9256,9257,9257,9257,9257,9257,9258,9258,9258,9258,9258,9259,9259,9259,9259,9259,9260,9260,9260,9260,9260,9261,9261,9261,9262,9262,9262,9263,9263,9263,9264,9264,9264,9264,9264,9265,9265,9265,9265,9265,9266,9266,9266,9266,9267,9267,9267,9267,9267,9268,9268,9268,9268,9268,9269,9269,9269,9269,9269,9269,9270,9270,9270,9271,9271,9271,9271,9271,9272,9272,9272,9272,9272,9273,9273,9273,9273,9273,9274,9274,9274,9274,9274,9274,9274,9275,9275,9275,9275,9275,9275,9276,9276,9276,9276,9276,9277,9277,9277,9277,9278,9278,9278,9278,9279,9279,9279,9279,9280,9280,9280,9280,9281,9281,9281,9281,9282,9282,9282,9282,9282,9283,9283,9283,9283,9284,9284,9284,9284,9285,9285,9285,9285,9286,9286,9286,9286,9287,9287,9287,9287,9288,9288,9288,9288,9289,9289,9289,9289,9290,9290,9290,9290,9290,9290,9291,9291,9291,9291,9291,9292,9292,9292,9292,9292,9293,9293,9293,9293,9293,9294,9294,9294,9294,9294,9295,9295,9295,9295,9295,9296,9296,9296,9296,9296,9297,9297,9297,9297,9297,9298,9298,9298,9298,9298,9299,9299,9299,9299,9299,9300,9300,9300,9300,9300,9301,9301,9301,9301,9302,9302,9302,9302,9302,9303,9303,9303,9304,9304,9304,9304,9304,9305,9305,9305,9305,9305,9306,9306,9306,9306,9306,9307,9307,9307,9307,9307,9308,9308,9308,9308,9308,9309,9309,9309,9309,9309,9309,9310,9310,9310,9310,9310,9311,9311,9311,9311,9311,9312,9312,9312,9313,9313,9313,9314,9314,9315,9315,9315,9315,9316,9316,9316,9316,9316,9317,9317,9317,9317,9318,9318,9318,9319,9319,9319,9319,9319,9320,9320,9320,9320,9321,9321,9321,9321,9322,9322,9322,9322,9323,9323,9323,9323,9324,9324,9324,9325,9325,9325,9325,9325,9326,9326,9326,9327,9327,9327,9327,9327,9327,9328,9328,9328,9328,9328,9328,9329,9329,9329,9329,9329,9330,9330,9330,9330,9331,9331,9331,9331,9331,9332,9332,9332,9332,9333,9333,9333,9333,9334,9334,9334,9334,9335,9335,9335,9335,9336,9336,9336,9336,9337,9337,9337,9337,9338,9338,9338,9338,9338,9339,9339,9339,9339,9339,9340,9340,9340,9340,9341,9341,9341,9341,9342,9342,9342,9342,9343,9343,9343,9343,9344,9344,9344,9344,9345,9345,9346,9346,9346,9346,9346,9347,9347,9347,9347,9347,9348,9348,9348,9348,9348,9349,9349,9349,9349,9349,9350,9350,9350,9350,9350,9351,9351,9351,9351,9351,9352,9352,9352,9352,9352,9353,9353,9353,9353,9353,9354,9354,9354,9354,9354,9355,9355,9355,9355,9355,9356,9356,9356,9356,9356,9357,9357,9357,9357,9357,9358,9358,9358,9359,9359,9359,9360,9360,9360,9360,9360,9361,9361,9361,9361,9361,9362,9362,9362,9362,9362,9363,9363,9363,9363,9363,9364,9364,9364,9364,9364,9365,9365,9365,9365,9365,9365,9366,9366,9366,9366,9367,9367,9367,9368,9368,9368,9369,9369,9369,9370,9370,9370,9370,9370,9371,9371,9371,9371,9371,9372,9372,9372,9373,9373,9373,9373,9373,9374,9374,9374,9374,9374,9375,9375,9375,9375,9375,9375,9376,9376,9376,9376,9376,9377,9377,9377,9378,9378,9378,9378,9378,9379,9379,9379,9380,9380,9380,9380,9380,9381,9381,9381,9381,9381,9381,9382,9382,9382,9383,9383,9383,9383,9384,9384,9384,9384,9384,9385,9385,9385,9385,9386,9386,9386,9386,9387,9387,9387,9387,9388,9388,9388,9388,9389,9389,9389,9389,9390,9390,9390,9390,9391,9391,9391,9391,9391,9392,9392,9392,9392,9393,9393,9393,9393,9394,9394,9394,9394,9395,9395,9395,9395,9396,9396,9396,9396,9397,9397,9397,9397,9398,9398,9398,9398,9399,9399,9399,9400,9400,9400,9400,9400,9401,9401,9401,9401,9401,9402,9402,9402,9402,9402,9403,9403,9403,9403,9403,9404,9404,9404,9404,9404,9405,9405,9405,9405,9405,9406,9406,9406,9406,9406,9407,9407,9407,9407,9407,9408,9408,9408,9408,9408,9409,9409,9409,9409,9409,9410,9410,9410,9410,9410,9411,9411,9411,9412,9412,9412,9413,9413,9413,9413,9413,9414,9414,9414,9414,9414,9415,9415,9415,9415,9415,9415,9416,9416,9416,9416,9416,9417,9417,9417,9417,9417,9418,9418,9418,9418,9418,9419,9419,9419,9420,9420,9420,9421,9421,9421,9422,9422,9422,9423,9423,9423,9423,9424,9424,9424,9425,9425,9425,9425,9426,9426,9426,9426,9426,9427,9427,9427,9428,9428,9428,9428,9429,9429,9429,9429,9430,9430,9430,9430,9431,9431,9431,9431,9432,9432,9432,9432,9433,9433,9433,9433,9434,9434,9434,9435,9435,9435,9435,9435,9436,9436,9436,9436,9436,9436,9437,9437,9437,9437,9437,9438,9438,9438,9438,9438,9438,9439,9439,9439,9439,9439,9439,9439,9440,9440,9440,9441,9441,9441,9441,9442,9442,9442,9442,9443,9443,9443,9443,9443,9444,9444,9444,9444,9445,9445,9445,9445,9446,9446,9446,9446,9447,9447,9447,9447,9448,9448,9448,9448,9449,9449,9449,9449,9450,9450,9450,9450,9451,9451,9451,9451,9451,9452,9452,9452,9452,9453,9453,9453,9453,9454,9454,9454,9454,9455,9455,9456,9456,9456,9456,9456,9457,9457,9457,9457,9457,9458,9458,9458,9458,9458,9459,9459,9459,9459,9459,9460,9460,9460,9460,9460,9461,9461,9461,9461,9461,9462,9462,9462,9462,9462,9463,9463,9463,9463,9463,9464,9464,9464,9464,9465,9465,9465,9465,9465,9466,9466,9466,9466,9466,9467,9467,9467,9467,9467,9468,9468,9468,9469,9469,9469,9469,9469,9470,9470,9470,9470,9470,9471,9471,9471,9471,9471,9472,9472,9472,9472,9472,9473,9473,9473,9473,9473,9474,9474,9474,9474,9474,9475,9475,9475,9476,9476,9476,9477,9477,9477,9478,9478,9479,9479,9479,9479,9480,9480,9480,9481,9481,9481,9481,9481,9482,9482,9482,9482,9483,9483,9483,9483,9483,9484,9484,9484,9485,9485,9485,9485,9486,9486,9486,9486,9486,9487,9487,9487,9487,9487,9488,9488,9488,9489,9489,9489,9489,9489,9489,9490,9490,9490,9491,9491,9491,9491,9492,9492,9492,9492,9493,9493,9493,9493,9494,9494,9494,9494,9495,9495,9495,9495,9496,9496,9496,9496,9497,9497,9497,9497,9497,9498,9498,9498,9498,9498,9499,9499,9499,9499,9500,9500,9500,9500,9501,9501,9501,9501,9502,9502,9502,9502,9503,9503,9503,9503,9504,9504,9504,9504,9505,9505,9505,9505,9506,9506,9506,9507,9507,9507,9507,9507,9508,9508,9508,9508,9508,9509,9509,9509,9509,9509,9510,9510,9510,9510,9511,9511,9511,9511,9511,9512,9512,9512,9512,9512,9513,9513,9513,9513,9513,9514,9514,9514,9514,9514,9515,9515,9515,9515,9515,9516,9516,9516,9516,9516,9517,9517,9517,9517,9517,9518,9518,9518,9518,9518,9519,9519,9519,9520,9520,9520,9521,9521,9521,9521,9521,9522,9522,9522,9522,9522,9523,9523,9523,9523,9523,9524,9524,9524,9524,9524,9525,9525,9525,9525,9525,9525,9526,9526,9526,9526,9526,9527,9527,9527,9527,9527,9528,9528,9528,9529,9529,9529,9530,9530,9530,9531,9531,9531,9531,9531,9532,9532,9532,9532,9533,9533,9533,9533,9534,9534,9534,9535,9535,9535,9535,9535,9536,9536,9536,9536,9536,9536,9537,9537,9537,9537,9537,9538,9538,9538,9538,9538,9538,9539,9539,9539,9539,9539,9540,9540,9540,9540,9540,9541,9541,9541,9541,9542,9542,9542,9542,9542,9543,9543,9543,9543,9543,9544,9544,9544,9544,9545,9545,9545,9545,9546,9546,9546,9546,9547,9547,9547,9548,9548,9548,9548,9549,9549,9549,9549,9549,9550,9550,9550,9550,9551,9551,9551,9551,9552,9552,9552,9552,9553,9553,9553,9553,9554,9554,9554,9554,9555,9555,9555,9555,9556,9556,9556,9556,9557,9557,9557,9557,9558,9558,9558,9558,9559,9559,9560,9560,9560,9560,9560,9561,9561,9561,9561,9561,9562,9562,9562,9562,9562,9563,9563,9563,9563,9563,9564,9564,9564,9564,9564,9565,9565,9565,9565,9565,9566,9566,9566,9566,9566,9567,9567,9567,9567,9567,9568,9568,9568,9568,9568,9569,9569,9569,9569,9569,9570,9570,9570,9570,9570,9571,9571,9571,9571,9571,9572,9572,9572,9572,9572,9573,9573,9573,9574,9574,9574,9575,9575,9575,9575,9575,9576,9576,9576,9576,9576,9577,9577,9577,9577,9577,9577,9578,9578,9578,9578,9578,9578,9579,9579,9579,9579,9579,9580,9580,9580,9580,9580,9581,9581,9581,9581,9581,9582,9582,9582,9583,9583,9583,9584,9584,9584,9585,9585,9585,9585,9586,9586,9586,9586,9586,9587,9587,9587,9587,9588,9588,9588,9588,9588,9589,9589,9589,9589,9589,9590,9590,9590,9590,9590,9590,9591,9591,9591,9591,9591,9592,9592,9592,9592,9592,9593,9593,9593,9594,9594,9594,9594,9594,9595,9595,9595,9595,9595,9596,9596,9596,9596,9596,9596,9596,9597,9597,9597,9597,9597,9597,9597,9598,9598,9598,9598,9598,9599,9599,9599,9599,9599,9599,9600,9600,9600,9600,9600,9601,9601,9601,9602,9602,9602,9602,9603,9603,9603,9603,9603,9603,9604,9604,9604,9604,9605,9605,9605,9605,9606,9606,9606,9606,9607,9607,9607,9607,9608,9608,9608,9608,9609,9609,9609,9609,9610,9610,9610,9610,9611,9611,9611,9611,9612,9612,9612,9612,9613,9613,9613,9613,9614,9614,9614,9614,9615,9615,9615,9615,9616,9616,9616,9616,9616,9617,9617,9617,9617,9617,9618,9618,9618,9618,9618,9619,9619,9619,9619,9619,9619,9620,9620,9620,9620,9620,9621,9621,9621,9621,9621,9622,9622,9622,9622,9622,9623,9623,9623,9623,9623,9624,9624,9624,9624,9624,9625,9625,9625,9625,9625,9626,9626,9626,9626,9626,9627,9627,9627,9627,9627],"depth":[3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,2,1,3,2,1,3,2,1,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,8,7,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,8,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,8,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,8,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,2,1,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,7,6,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,6,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,7,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,2,1,4,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,6,5,4,3,2,1,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,5,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,3,2,1,5,4,3,2,1,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,3,2,1,4,3,2,1,6,5,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,6,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1,5,4,3,2,1],"label":[".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","cbind","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","<GC>","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel",".Call","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","c","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>","+","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","cbind","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","[.data.frame","[","t","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","c","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","apply","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","array","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","t","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","row.names.data.frame","row.names","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","t.default","NextMethod","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","array","apply","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","<Anonymous>","mapply","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","<GC>","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","array","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","NextMethod","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","t.default","NextMethod","t.data.frame","t","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel","*","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","array","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","lengths","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","apply","t","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","output$newphiout[index,,] <- para$phi","RunModel","<GC>","output$newphiout[index,,] <- para$phi","RunModel","<GC>","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","apply","t","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","row.names.data.frame","row.names","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","unlist","apply","t","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","c","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","t.default","NextMethod","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","MissData$n_0_reject[] <- 0","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","c","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","cumsum","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.integer","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","apply","UpdateLambda","RunModel","para$lambda <- UpdateLambda(hyper$dHH,hyper$FF,para$G_all,para$HHdata_all)","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","apply","t","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","factor","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","array","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","apply","t","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","c","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","output$newphiout[index,,] <- para$phi","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","array","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","sort","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","MissData$household <- as.data.frame(MissData$household)","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","c","RunModel","<GC>","array","UpdatePhi","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","apply","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","sort.list","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","cbind","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","array","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","[.data.frame","[","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","t.default","NextMethod","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.integer","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","*","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","t.default","NextMethod","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","lengths","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",":","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel","<GC>",".Call","sampleM","RunModel","<GC>",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","NextMethod","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","<GC>","t.default","t","RunModel","<GC>","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","anyDuplicated","[.data.frame","[","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","names","names","[.data.frame","[","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","mapply","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","c","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","/","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","sort","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","+","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","apply","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","row.names.data.frame","row.names","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","sum","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","array","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","<GC>","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","<GC>","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","array","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","array","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","tryCatchOne","tryCatchList","tryCatch","withCallingHandlers","quietly",".rs.getAnywhere","args","print","eval","eval","withVisible","evalVis","capture.output",".rs.getSignature","<Anonymous>","as.integer","as.integer","table","rbind","RunModel","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","NextMethod","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","<GC>","which","table","rbind","RunModel","sort.list","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","rbind","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","levels","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","rbind","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","+","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","NextMethod","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","HHData_extra[[batch.index]] <- checked.households$Households[(p+3): DIM,]",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount1D","UpdatePi","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","rbind","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","sort","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","rbind","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","list.names","table","rbind","RunModel","<GC>","list.names","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel","<GC>","v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])","rbeta","<Anonymous>","mapply","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","<GC>","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","array","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","aperm.default","aperm","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","array","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","rbind","RunModel","==","which","table","rbind","RunModel","<GC>","factor","table","rbind","RunModel","<GC>","factor","table","rbind","RunModel","<GC>","factor","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call","groupcount","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.integer","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel","output$newphiout[index,,] <- para$phi","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","unlist","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","unlist","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","paste","cat","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","sum","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","any","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","<GC>","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.vector","as.data.frame.matrix","as.data.frame","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","<GC>","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","/","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","unlist","as.matrix.data.frame","as.matrix","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","cbind","RunModel","<GC>","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel","output$newphiout[index,,] <- para$phi","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","HHData_extra[[batch.index]] <- checked.households$Households[(p+3): DIM,]",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","+","RunModel","as.character","factor","table","rbind","RunModel","unique.default","unique","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","<GC>",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","+","rgamma","FUN","apply","UpdatePhi","RunModel","+","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","unlist","as.matrix.data.frame","as.matrix","t.data.frame","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","lengths","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","households2individuals",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","/","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","cbind","RunModel","<GC>","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","groupIndex <- SS*(M_all[1,]-1)+M_all[2,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t.default","t","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","is.na","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleG","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<Anonymous>","do.call",".GenerateData","GetImpossibleHouseholds","RunModel","IndividualData_extra <- ImpossibleIndividuals[1:DIM,]","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call","groupcount","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdateOmega","RunModel",".Call","groupcount","UpdateLambda","RunModel","storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","<GC>",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","t","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel",".Call","sampleG","RunModel",".Call","sampleM","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","<GC>",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","samplehouseholds_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel",".Call","checkconstraints_HHhead_at_group_level",".GenerateData","GetImpossibleHouseholds","RunModel","ImpossibleIndividuals[1,] <- n + hh_index","GetImpossibleHouseholds","RunModel","G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]","GetImpossibleHouseholds","RunModel","data = IndividualData_all[individual_variable_index,]","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel",".Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)","groupcount","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","<GC>","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))","rgamma","FUN","apply","UpdatePhi","RunModel","rgamma","FUN","apply","UpdatePhi","RunModel","apply","UpdatePhi","RunModel",".Call","groupcount","UpdateLambda","RunModel","<GC>","rgamma","FUN","apply","UpdateLambda","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel",".Call","SampleMissing_impC","SampleMissing","RunModel","which","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","<GC>","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","as.character","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","match","factor","table","rbind","RunModel","match","factor","table","rbind","RunModel","==","which","table","rbind","RunModel","==","which","table","rbind","RunModel"],"filenum":[1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,null,4,4,2,3,1,4,4,2,3,4,2,3,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,2,3,5,null,5,2,3,1,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,null,5,null,5,2,3,1,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,4,2,3,4,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,2,3,null,2,3,null,2,3,null,2,3,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,null,4,2,3,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,null,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,2,3,null,null,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,2,3,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,4,2,3,4,2,3,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,2,3,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,null,2,3,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,null,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,5,2,3,1,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,1,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,null,null,null,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,null,2,3,1,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,null,null,null,null,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,null,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,null,4,2,3,null,4,2,3,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,null,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,2,3,null,2,3,2,3,2,3,2,3,2,3,2,3,2,3,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,2,3,null,5,2,3,1,5,2,3,null,null,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,null,null,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,null,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,1,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,5,2,3,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,2,3,null,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,2,3,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,1,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,null,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,null,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,null,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,2,3,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,null,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,4,2,3,null,4,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,4,4,2,3,null,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,5,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,null,null,null,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,2,3,null,null,4,4,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,null,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,null,null,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,null,5,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,1,5,2,3,null,1,5,2,3,null,1,5,2,3,5,null,5,2,3,5,2,3,5,5,null,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,null,2,3,null,2,3,null,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,null,1,2,3,null,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,2,3,1,5,2,3,null,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,null,1,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,null,4,2,3,null,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,null,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,1,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,null,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,null,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,3,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,null,4,2,3,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,2,3,null,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,null,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,4,2,3,1,4,4,2,3,null,4,4,2,3,null,null,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,null,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,null,1,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,5,null,5,2,3,null,null,5,2,3,5,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,2,3,2,3,2,3,2,3,1,2,3,1,2,3,null,1,4,4,2,3,null,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,1,5,2,3,1,5,2,3,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,5,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,5,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,null,1,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,null,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,null,null,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,null,null,null,null,null,2,3,null,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,2,3,4,2,3,4,2,3,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,null,5,null,5,2,3,5,2,3,5,2,3,5,2,3,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,null,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,null,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,null,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,null,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,null,5,2,3,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,null,null,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,4,2,3,2,3,null,5,2,3,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,null,5,null,5,2,3,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,null,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,null,4,4,2,3,4,2,3,4,2,3,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,2,3,5,null,5,2,3,5,null,5,2,3,1,5,2,3,1,5,2,3,1,5,2,3,6,2,3,1,6,2,3,null,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,1,2,3,1,2,3,1,4,4,2,3,1,4,4,2,3,null,1,4,4,2,3,null,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,1,4,4,2,3,4,2,3,4,2,3,5,2,3,1,5,2,3,5,null,5,2,3,1,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,null,5,2,3,5,null,5,2,3,5,null,5,2,3,5,2,3,5,null,5,2,3,5,null,5,2,3,null,5,5,null,5,2,3,null,5,5,null,5,2,3,5,null,5,2,3,5,5,null,5,2,3,5,null,5,2,3,5,2,3,1,5,2,3,null,5,null,5,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,1,6,2,3,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3,null,null,null,2,3],"linenum":[33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,116,82,2,4,104,2,8,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,9,null,9,104,2,8,null,8,104,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,null,53,91,82,2,41,17,91,82,2,114,82,2,4,104,2,9,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,109,82,2,97,2,8,null,8,104,2,25,7,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,117,82,2,25,7,104,2,8,null,8,104,2,9,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,null,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,117,82,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,25,33,108,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,5,104,2,null,8,null,8,104,2,25,7,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,117,82,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,91,2,25,7,104,2,8,null,8,104,2,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,null,107,82,2,117,82,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,66,null,66,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,17,27,91,82,2,116,82,2,97,2,null,101,2,null,101,2,null,101,2,101,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,97,2,5,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,8,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,114,82,2,117,82,2,5,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,21,35,91,82,2,21,35,91,82,2,21,35,91,82,2,null,53,91,82,2,116,82,2,null,117,82,2,97,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,4,104,2,8,null,8,104,2,null,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,104,2,null,null,8,null,8,104,2,25,65,113,2,29,91,116,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,114,82,2,91,2,null,5,104,2,null,5,104,2,null,5,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,53,91,82,2,null,114,82,2,116,82,2,97,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,117,82,2,4,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,117,82,2,5,104,2,8,null,8,104,2,null,null,9,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,25,33,108,2,66,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,96,2,null,5,104,2,null,5,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,104,2,null,9,null,9,104,2,8,null,8,104,2,25,65,113,2,29,91,116,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,null,null,null,null,null,97,2,5,104,2,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,107,82,2,116,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,117,82,2,4,104,2,8,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,36,null,36,108,2,66,113,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,117,82,2,5,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,94,82,2,null,107,82,2,116,82,2,117,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,null,null,null,null,null,null,97,2,5,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,8,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,null,null,53,91,82,2,114,82,2,117,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,4,104,2,null,5,104,2,25,7,104,2,25,7,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,117,82,2,4,104,2,null,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,66,null,66,113,2,29,91,116,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,null,null,107,82,2,116,82,2,116,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,3,104,2,25,7,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,35,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,8,null,8,104,2,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,53,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,56,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,97,2,5,104,2,25,7,104,2,9,null,9,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,33,19,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,107,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,null,null,null,97,2,5,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,null,9,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,97,2,5,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,9,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,null,4,104,2,8,null,8,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,56,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,114,82,2,116,82,2,null,4,104,2,4,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,null,53,91,82,2,114,82,2,116,82,2,101,2,null,5,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,29,91,116,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,null,53,91,82,2,114,82,2,116,82,2,null,97,2,25,7,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,116,82,2,101,2,25,7,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,36,null,36,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,null,17,27,91,82,2,null,53,91,82,2,114,82,2,116,82,2,97,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,114,82,2,116,82,2,4,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,null,107,82,2,116,82,2,null,null,null,null,97,2,null,5,104,2,null,5,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,96,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,null,66,113,2,2,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,53,91,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,null,8,104,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,53,91,82,2,114,82,2,117,82,2,97,2,null,5,104,2,null,5,104,2,null,5,104,2,null,5,104,2,null,5,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,3,104,2,null,5,104,2,8,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,9,104,2,null,8,104,2,25,65,113,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,null,117,82,2,null,117,82,2,97,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,166,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,114,82,2,116,82,2,null,4,104,2,null,4,104,2,null,4,104,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,96,2,4,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,9,104,2,null,35,108,2,66,null,66,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,21,35,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,null,4,104,2,8,null,8,104,2,8,8,null,8,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,null,9,104,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,177,2,null,177,2,null,177,2,177,2,177,2,177,2,177,2,177,2,177,2,null,181,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,116,82,2,null,97,2,null,97,2,5,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,9,null,9,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,104,2,null,9,104,2,25,65,113,2,null,null,6,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,67,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,114,82,2,114,82,2,116,82,2,97,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,null,97,2,4,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,56,91,82,2,null,114,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,25,7,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,null,null,107,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,25,65,113,2,null,null,6,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,114,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,null,40,108,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,null,107,82,2,116,82,2,117,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,null,null,6,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,116,82,2,null,97,2,null,97,2,25,7,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,null,107,82,2,114,82,2,116,82,2,91,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,null,8,104,2,25,7,104,2,25,33,108,2,25,65,113,2,29,91,116,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,94,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,117,82,2,null,97,2,null,97,2,5,104,2,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,6,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,96,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,null,9,104,2,25,65,113,2,29,91,116,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,null,53,91,82,2,null,null,107,82,2,114,82,2,116,82,2,97,2,25,7,104,2,9,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,5,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,109,82,2,null,null,109,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,104,2,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,25,65,113,2,29,91,116,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,117,82,2,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,36,null,36,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,null,53,91,82,2,114,82,2,116,82,2,91,2,5,104,2,8,104,2,25,7,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,132,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,45,21,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,null,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,null,114,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,29,91,116,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,8,null,8,104,2,25,65,113,2,null,67,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,114,82,2,116,82,2,117,82,2,4,104,2,9,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,155,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,null,107,82,2,116,82,2,116,82,2,3,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,null,9,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,25,33,108,2,25,65,113,2,null,67,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,117,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,null,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,114,82,2,116,82,2,91,2,5,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,177,2,33,19,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,97,2,5,104,2,8,104,2,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,25,33,108,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,94,82,2,null,94,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,152,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,null,9,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,null,109,82,2,116,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,25,33,108,2,66,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,117,82,2,null,117,82,2,4,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,17,27,91,82,2,null,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,91,2,null,3,104,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,null,53,91,82,2,null,null,56,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,164,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,114,82,2,116,82,2,97,2,null,5,104,2,null,5,104,2,null,5,104,2,null,5,104,2,null,5,104,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,164,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,96,2,101,2,8,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,107,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,8,null,8,104,2,25,33,108,2,25,65,113,2,29,91,116,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,null,3,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,96,2,5,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,null,8,104,2,25,33,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,116,82,2,97,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,97,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,null,9,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,null,116,82,2,116,82,2,null,null,null,null,97,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,116,82,2,97,2,5,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,107,82,2,114,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,7,104,2,25,33,108,2,25,65,113,2,2,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,null,116,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,9,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,45,21,2,null,null,56,91,82,2,41,17,91,82,2,null,53,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,41,17,91,82,2,114,82,2,null,116,82,2,null,116,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,155,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,116,82,2,null,null,null,null,97,2,5,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,117,82,2,4,104,2,null,8,null,8,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,null,116,82,2,116,82,2,4,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,25,7,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,107,82,2,116,82,2,116,82,2,97,2,5,104,2,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,25,33,108,2,25,65,113,2,null,null,6,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,156,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,null,21,35,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,null,25,7,104,2,null,25,7,104,2,null,25,7,104,2,8,null,8,104,2,8,104,2,8,8,null,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,117,82,2,null,97,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,117,82,2,null,97,2,null,97,2,null,97,2,null,97,2,null,97,2,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,null,116,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,null,45,21,2,null,45,21,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,149,2,null,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,null,5,104,2,null,5,104,2,null,5,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,null,97,2,4,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,133,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,5,104,2,25,7,104,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,114,82,2,116,82,2,4,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,36,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,null,null,9,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,91,2,101,2,25,7,104,2,null,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,9,null,9,104,2,25,65,113,2,29,91,116,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,25,65,113,2,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,25,7,104,2,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,152,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,17,27,91,82,2,null,null,53,91,82,2,null,null,53,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,29,91,116,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,null,25,7,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,116,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,9,104,2,null,9,104,2,25,65,113,2,29,91,116,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,null,116,82,2,null,116,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,94,82,2,116,82,2,117,82,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,116,82,2,null,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,29,91,116,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,null,116,82,2,116,82,2,116,82,2,4,104,2,9,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,94,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,25,65,113,2,null,66,null,66,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,null,17,27,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,56,91,82,2,114,82,2,116,82,2,null,97,2,5,104,2,8,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,25,65,113,2,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,null,97,2,null,97,2,25,7,104,2,9,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,116,82,2,null,96,2,4,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,101,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,9,null,9,104,2,8,104,2,25,33,108,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,17,27,91,82,2,null,17,27,91,82,2,41,17,91,82,2,21,35,91,82,2,21,35,91,82,2,17,27,91,82,2,114,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,97,2,null,97,2,5,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,3,104,2,25,7,104,2,8,null,8,104,2,null,25,7,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,17,27,91,82,2,null,17,27,91,82,2,null,17,27,91,82,2,114,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,17,27,91,82,2,41,17,91,82,2,114,82,2,null,114,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,9,104,2,25,33,108,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,133,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,94,82,2,null,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,149,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,155,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,null,53,91,82,2,114,82,2,117,82,2,4,104,2,null,5,104,2,null,5,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,25,65,113,2,8,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,94,82,2,21,35,91,82,2,17,27,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,null,3,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,null,9,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,114,82,2,116,82,2,null,117,82,2,null,117,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,null,null,9,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,null,17,27,91,82,2,null,17,27,91,82,2,41,17,91,82,2,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,104,2,null,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,25,65,113,2,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,153,2,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,116,82,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,117,82,2,null,97,2,null,97,2,null,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,null,117,82,2,97,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,97,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,25,33,108,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,null,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,null,53,91,82,2,114,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,97,2,5,104,2,8,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,8,null,8,104,2,null,9,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,114,82,2,116,82,2,null,97,2,null,97,2,5,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,117,82,2,4,104,2,null,4,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,null,116,82,2,116,82,2,4,104,2,25,7,104,2,null,8,104,2,25,7,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,8,null,8,104,2,8,104,2,8,null,8,104,2,9,104,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,98,82,2,116,82,2,null,116,82,2,116,82,2,null,null,null,null,null,97,2,5,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,4,104,2,null,8,104,2,null,8,104,2,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,41,17,91,82,2,41,17,91,82,2,98,82,2,21,35,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,9,104,2,8,null,8,104,2,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,38,91,82,2,41,17,91,82,2,null,53,91,82,2,null,null,109,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,5,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,29,91,116,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,null,116,82,2,117,82,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,9,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,16,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,98,82,2,114,82,2,null,116,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,152,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,181,2,33,19,2,45,21,2,41,17,91,82,2,17,27,91,82,2,null,98,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,97,2,4,104,2,8,null,8,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,21,35,91,82,2,21,35,91,82,2,null,null,53,91,82,2,null,107,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,null,36,36,null,36,108,2,null,36,36,null,36,108,2,null,36,36,null,36,108,2,null,36,36,null,36,108,2,null,36,36,null,36,108,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,9,null,9,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,null,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,null,153,2,null,null,null,155,2,33,19,2,33,19,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,109,82,2,116,82,2,116,82,2,101,2,25,7,104,2,8,null,8,104,2,null,25,7,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,96,2,3,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,8,null,8,104,2,null,null,9,104,2,8,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,null,17,27,91,82,2,41,17,91,82,2,114,82,2,116,82,2,3,104,2,25,7,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,116,82,2,101,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,21,35,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,25,7,104,2,25,7,104,2,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,25,7,104,2,9,104,2,25,65,113,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,153,2,177,2,177,2,177,2,33,19,2,33,19,2,null,41,17,91,82,2,null,41,17,91,82,2,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,106,82,2,116,82,2,116,82,2,4,104,2,25,7,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,9,104,2,25,33,108,2,25,65,113,2,8,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,155,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,114,82,2,116,82,2,97,2,4,104,2,null,5,104,2,9,null,9,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,8,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,66,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,null,116,82,2,116,82,2,116,82,2,4,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,65,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,10,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,116,82,2,97,2,4,104,2,null,25,7,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,null,null,8,104,2,8,null,8,104,2,8,null,8,104,2,9,null,9,104,2,25,65,113,2,null,null,6,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,null,null,null,null,null,97,2,null,97,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,177,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,null,38,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,25,7,104,2,25,7,104,2,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,null,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,21,35,91,82,2,17,27,91,82,2,41,17,91,82,2,null,107,82,2,116,82,2,116,82,2,97,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,null,8,null,8,104,2,8,104,2,8,104,2,8,104,2,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,33,108,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,21,35,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,5,104,2,8,null,8,104,2,null,8,null,8,104,2,null,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,104,2,25,33,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,132,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,114,82,2,116,82,2,4,104,2,null,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,null,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,25,33,108,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,null,null,134,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,17,27,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,114,82,2,116,82,2,97,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,null,107,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,8,null,8,104,2,9,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,41,17,91,82,2,41,17,91,82,2,null,null,53,91,82,2,41,17,91,82,2,21,35,91,82,2,41,17,91,82,2,94,82,2,116,82,2,117,82,2,4,104,2,25,7,104,2,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,null,8,104,2,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,null,null,8,null,8,104,2,8,104,2,25,7,104,2,25,65,113,2,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,149,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,94,82,2,114,82,2,116,82,2,97,2,null,4,104,2,5,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,null,8,null,8,104,2,8,104,2,25,7,104,2,25,65,113,2,25,65,113,2,73,9,130,2,73,9,130,2,73,9,130,2,null,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,33,19,2,null,53,91,82,2,41,17,91,82,2,41,17,91,82,2,41,17,91,82,2,null,41,17,91,82,2,41,17,91,82,2,null,53,91,82,2,116,82,2,117,82,2,4,104,2,8,null,8,104,2,25,7,104,2,25,7,104,2,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,104,2,8,null,8,104,2,8,null,8,104,2,25,7,104,2,25,33,108,2,25,65,113,2,8,130,2,73,9,130,2,null,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,148,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,33,19,2,45,21,2,41,17,91,82,2,17,27,91,82,2,null,17,27,91,82,2,null,17,27,91,82,2,41,17,91,82,2,17,27,91,82,2,17,27,91,82,2,114,82,2,117,82,2,4,104,2,25,7,104,2,8,null,8,104,2,25,7,104,2,8,null,8,104,2,8,null,8,104,2,null,8,null,8,104,2,8,null,8,104,2,8,null,8,104,2,8,104,2,8,null,8,104,2,8,null,8,104,2,null,8,8,null,8,104,2,null,8,8,null,8,104,2,8,null,8,104,2,8,8,null,8,104,2,8,null,8,104,2,8,104,2,25,65,113,2,null,66,null,66,113,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,73,9,130,2,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2,null,null,null,153,2],"memalloc":[119.641098022461,119.641098022461,119.641098022461,119.641098022461,119.641098022461,119.641098022461,125.910453796387,125.910453796387,125.910453796387,125.910453796387,125.910453796387,132.968490600586,132.968490600586,132.968490600586,132.968490600586,132.968490600586,145.720794677734,145.720794677734,145.720794677734,156.361114501953,156.361114501953,156.361114501953,166.994529724121,166.994529724121,166.994529724121,166.994529724121,166.994529724121,166.994529724121,178.534713745117,178.534713745117,178.534713745117,178.534713745117,178.534713745117,168.62036895752,168.62036895752,168.62036895752,168.62036895752,168.62036895752,139.591041564941,139.591041564941,139.591041564941,139.591041564941,139.591041564941,146.725082397461,146.725082397461,146.725082397461,146.725082397461,146.725082397461,153.42805480957,153.42805480957,153.42805480957,153.42805480957,153.42805480957,153.42805480957,153.42805480957,137.225845336914,137.225845336914,137.225845336914,137.225845336914,137.225845336914,144.906021118164,144.906021118164,144.906021118164,144.906021118164,144.906021118164,138.08479309082,138.08479309082,138.08479309082,138.08479309082,138.08479309082,138.08479309082,140.653244018555,140.653244018555,140.653244018555,140.653244018555,140.653244018555,146.776657104492,146.776657104492,146.776657104492,146.776657104492,146.776657104492,154.409507751465,154.409507751465,154.409507751465,154.409507751465,154.409507751465,140.796920776367,140.796920776367,140.796920776367,140.796920776367,140.796920776367,147.889457702637,147.889457702637,147.889457702637,147.889457702637,150.509284973145,150.509284973145,150.509284973145,150.509284973145,134.574417114258,134.574417114258,134.574417114258,134.574417114258,142.399291992188,142.399291992188,142.399291992188,142.399291992188,143.94263458252,143.94263458252,143.94263458252,143.94263458252,143.94263458252,144.848693847656,144.848693847656,144.848693847656,144.848693847656,144.848693847656,150.665824890137,150.665824890137,150.665824890137,150.665824890137,150.665824890137,150.665824890137,153.70198059082,153.70198059082,153.70198059082,153.70198059082,153.70198059082,164.560287475586,164.560287475586,164.560287475586,164.560287475586,164.560287475586,173.795097351074,173.795097351074,173.795097351074,190.84049987793,190.84049987793,190.84049987793,203.40502166748,203.40502166748,203.40502166748,165.268165588379,165.268165588379,165.268165588379,165.268165588379,165.268165588379,165.268165588379,159.007179260254,159.007179260254,159.007179260254,159.007179260254,159.007179260254,167.688949584961,167.688949584961,167.688949584961,167.688949584961,167.688949584961,154.808967590332,154.808967590332,154.808967590332,154.808967590332,154.808967590332,161.605041503906,161.605041503906,161.605041503906,161.605041503906,161.605041503906,158.822853088379,158.822853088379,158.822853088379,158.822853088379,158.822853088379,158.822853088379,158.822853088379,157.08186340332,157.08186340332,157.08186340332,157.08186340332,157.08186340332,165.224906921387,165.224906921387,165.224906921387,165.224906921387,165.224906921387,153.39714050293,153.39714050293,153.39714050293,153.39714050293,153.39714050293,161.799247741699,161.799247741699,161.799247741699,161.799247741699,161.799247741699,168.759468078613,168.759468078613,168.759468078613,168.759468078613,168.759468078613,156.833099365234,156.833099365234,156.833099365234,156.833099365234,156.833099365234,156.833099365234,162.235679626465,162.235679626465,162.235679626465,162.235679626465,164.745292663574,164.745292663574,164.745292663574,164.745292663574,151.564414978027,151.564414978027,151.564414978027,151.564414978027,158.941230773926,158.941230773926,158.941230773926,158.941230773926,158.941230773926,161.44026184082,161.44026184082,161.44026184082,161.44026184082,161.44026184082,162.517738342285,162.517738342285,162.517738342285,162.517738342285,162.517738342285,167.225891113281,167.225891113281,167.225891113281,167.225891113281,167.225891113281,169.803909301758,169.803909301758,169.803909301758,171.586250305176,171.586250305176,171.586250305176,171.586250305176,171.586250305176,183.717193603516,183.717193603516,183.717193603516,183.717193603516,183.717193603516,191.609107971191,191.609107971191,191.609107971191,191.609107971191,191.609107971191,199.106658935547,199.106658935547,199.106658935547,199.106658935547,215.010650634766,215.010650634766,225.74568939209,225.74568939209,225.74568939209,225.74568939209,225.74568939209,232.454467773438,232.454467773438,232.454467773438,232.454467773438,235.670486450195,235.670486450195,235.670486450195,235.670486450195,235.670486450195,235.670486450195,235.670486450195,137.262199401855,137.262199401855,137.262199401855,137.262199401855,137.262199401855,137.262199401855,137.262199401855,146.681060791016,146.681060791016,146.681060791016,146.681060791016,146.681060791016,153.822387695312,153.822387695312,153.822387695312,160.787445068359,160.787445068359,160.787445068359,142.882118225098,142.882118225098,142.882118225098,142.882118225098,142.882118225098,153.425254821777,153.425254821777,153.425254821777,153.425254821777,153.425254821777,160.294761657715,160.294761657715,160.294761657715,160.294761657715,160.294761657715,160.294761657715,160.294761657715,145.903274536133,145.903274536133,145.903274536133,145.903274536133,145.903274536133,153.490371704102,153.490371704102,153.490371704102,153.490371704102,153.490371704102,153.490371704102,159.791694641113,159.791694641113,159.791694641113,159.791694641113,146.704650878906,146.704650878906,146.704650878906,146.704650878906,146.704650878906,155.151466369629,155.151466369629,155.151466369629,155.151466369629,164.369415283203,164.369415283203,164.369415283203,164.369415283203,164.369415283203,140.113349914551,140.113349914551,140.113349914551,140.113349914551,142.844543457031,142.844543457031,142.844543457031,142.844543457031,147.0283203125,147.0283203125,147.0283203125,147.0283203125,147.0283203125,153.295761108398,153.295761108398,153.295761108398,153.295761108398,153.295761108398,156.14624786377,156.14624786377,156.14624786377,156.14624786377,156.14624786377,156.146324157715,156.146324157715,156.146324157715,156.146324157715,156.146324157715,157.348419189453,157.348419189453,157.348419189453,157.348419189453,157.348419189453,159.947532653809,159.947532653809,159.947532653809,159.947532653809,159.947532653809,168.689224243164,168.689224243164,168.689224243164,168.689224243164,168.689224243164,168.689224243164,170.471565246582,170.471565246582,170.471565246582,170.471565246582,170.471565246582,175.040267944336,175.040267944336,175.040267944336,175.040267944336,175.040267944336,182.904083251953,182.904083251953,182.904083251953,182.904083251953,182.904083251953,190.812614440918,190.812614440918,190.812614440918,190.812614440918,190.812614440918,209.57112121582,209.57112121582,209.57112121582,227.162330627441,227.162330627441,227.162330627441,227.162330627441,158.050521850586,158.050521850586,158.050521850586,158.050521850586,158.050521850586,167.740798950195,167.740798950195,167.740798950195,176.851509094238,176.851509094238,176.851509094238,176.851509094238,176.851509094238,176.08358001709,176.08358001709,176.08358001709,176.08358001709,176.08358001709,176.08358001709,167.376091003418,167.376091003418,167.376091003418,167.376091003418,167.376091003418,178.521636962891,178.521636962891,178.521636962891,178.521636962891,178.521636962891,178.521636962891,164.347686767578,164.347686767578,164.347686767578,164.347686767578,164.347686767578,175.43936920166,175.43936920166,175.43936920166,175.43936920166,175.43936920166,158.13623046875,158.13623046875,158.13623046875,158.13623046875,158.13623046875,164.655624389648,164.655624389648,164.655624389648,164.655624389648,164.655624389648,171.280204772949,171.280204772949,171.280204772949,171.280204772949,171.280204772949,178.678558349609,178.678558349609,178.678558349609,178.678558349609,178.678558349609,166.66609954834,166.66609954834,166.66609954834,166.66609954834,176.931533813477,176.931533813477,176.931533813477,176.931533813477,174.2236328125,174.2236328125,174.2236328125,174.2236328125,174.2236328125,162.388618469238,162.388618469238,162.388618469238,162.388618469238,169.451919555664,169.451919555664,172.754554748535,172.754554748535,172.754554748535,172.754554748535,172.754554748535,176.150238037109,176.150238037109,176.150238037109,176.150238037109,176.150238037109,177.713188171387,177.713188171387,177.713188171387,177.713188171387,177.713188171387,181.697708129883,181.697708129883,181.697708129883,181.697708129883,181.697708129883,191.027862548828,191.027862548828,191.027862548828,191.027862548828,191.027862548828,191.027862548828,192.810203552246,192.810203552246,192.810203552246,192.810203552246,192.810203552246,202.28882598877,202.28882598877,202.28882598877,202.28882598877,202.28882598877,213.259048461914,213.259048461914,213.259048461914,213.259048461914,213.259048461914,218.842811584473,218.842811584473,218.842811584473,233.773315429688,233.773315429688,233.773315429688,252.343338012695,252.343338012695,252.343338012695,252.343338012695,252.629180908203,252.629180908203,252.629180908203,252.629180908203,252.629180908203,252.629180908203,185.821571350098,185.821571350098,185.821571350098,185.821571350098,185.821571350098,196.013168334961,196.013168334961,196.013168334961,196.013168334961,196.013168334961,197.211730957031,197.211730957031,197.211730957031,197.211730957031,197.211730957031,197.211730957031,188.521850585938,188.521850585938,188.521850585938,188.521850585938,188.521850585938,195.129333496094,195.129333496094,195.129333496094,195.129333496094,195.129333496094,181.526435852051,181.526435852051,181.526435852051,181.526435852051,181.526435852051,190.303802490234,190.303802490234,190.303802490234,190.303802490234,190.303802490234,187.31566619873,187.31566619873,187.31566619873,187.31566619873,184.742034912109,184.742034912109,184.742034912109,184.742034912109,184.742034912109,191.464637756348,191.464637756348,191.464637756348,191.464637756348,191.464637756348,189.877426147461,189.877426147461,189.877426147461,189.877426147461,189.877426147461,189.877426147461,189.877426147461,184.205581665039,184.205581665039,184.205581665039,184.205581665039,196.356475830078,196.356475830078,196.356475830078,196.356475830078,199.731185913086,199.731185913086,199.731185913086,199.731185913086,199.731185913086,199.731185913086,185.286521911621,185.286521911621,185.286521911621,185.286521911621,188.249382019043,188.249382019043,188.249382019043,188.249382019043,191.10359954834,191.10359954834,191.10359954834,191.10359954834,182.050239562988,182.050239562988,182.050239562988,182.050239562988,190.819915771484,190.819915771484,190.819915771484,190.819915771484,190.819915771484,194.42138671875,194.42138671875,194.42138671875,194.42138671875,194.42138671875,196.048133850098,196.048133850098,196.048133850098,196.048133850098,196.048133850098,199.334548950195,199.334548950195,199.334548950195,199.334548950195,199.334548950195,210.203140258789,210.203140258789,210.203140258789,210.203140258789,210.203140258789,210.203140258789,212.889785766602,212.889785766602,212.889785766602,212.889785766602,212.889785766602,224.615760803223,224.615760803223,224.615760803223,224.615760803223,224.615760803223,232.547470092773,232.547470092773,232.547470092773,232.547470092773,232.547470092773,238.453689575195,238.453689575195,238.453689575195,254.848037719727,254.848037719727,254.848037719727,202.3662109375,202.3662109375,202.3662109375,213.838310241699,213.838310241699,213.838310241699,213.838310241699,213.838310241699,213.838310241699,221.357849121094,221.357849121094,221.357849121094,221.357849121094,227.033737182617,227.033737182617,227.033737182617,227.033737182617,227.033737182617,227.033737182617,227.033737182617,207.492309570312,207.492309570312,207.492309570312,207.492309570312,207.492309570312,216.899116516113,216.899116516113,216.899116516113,216.899116516113,216.899116516113,206.217330932617,206.217330932617,206.217330932617,206.217330932617,206.217330932617,217.649429321289,217.649429321289,217.649429321289,217.649429321289,217.649429321289,197.644195556641,197.644195556641,197.644195556641,197.644195556641,197.644195556641,197.644195556641,161.601860046387,161.601860046387,161.601860046387,161.601860046387,161.601860046387,167.748924255371,167.748924255371,167.748924255371,167.748924255371,167.748924255371,173.570274353027,173.570274353027,173.570274353027,173.570274353027,173.570274353027,179.298530578613,179.298530578613,179.298530578613,179.298530578613,163.779624938965,163.779624938965,163.779624938965,163.779624938965,163.779624938965,172.585571289062,172.585571289062,172.585571289062,178.507392883301,178.507392883301,178.507392883301,178.507392883301,178.507392883301,186.120994567871,186.120994567871,186.120994567871,186.120994567871,186.120994567871,186.120994567871,166.54377746582,166.54377746582,166.54377746582,166.54377746582,170.254241943359,170.254241943359,170.254241943359,170.254241943359,172.497184753418,172.497184753418,172.497184753418,172.497184753418,172.497184753418,167.248985290527,167.248985290527,167.248985290527,167.248985290527,167.248985290527,168.777465820312,168.777465820312,168.777465820312,168.777465820312,168.777465820312,171.671264648438,171.671264648438,171.671264648438,171.671264648438,171.671264648438,173.387046813965,173.387046813965,173.387046813965,173.387046813965,173.387046813965,173.387580871582,173.387580871582,173.387580871582,173.387580871582,173.387580871582,177.633003234863,177.633003234863,177.633003234863,177.633003234863,177.633003234863,188.441123962402,188.441123962402,188.441123962402,188.441123962402,188.441123962402,188.441123962402,190.264015197754,190.264015197754,190.264015197754,190.264015197754,190.264015197754,203.083206176758,203.083206176758,203.083206176758,203.083206176758,203.083206176758,211.022766113281,211.022766113281,211.022766113281,211.022766113281,211.022766113281,218.15763092041,218.15763092041,218.15763092041,234.96752166748,234.96752166748,234.96752166748,253.734504699707,253.734504699707,253.734504699707,253.734504699707,258.919395446777,258.919395446777,258.919395446777,258.919395446777,258.919395446777,258.919395446777,186.818519592285,186.818519592285,186.818519592285,186.818519592285,186.818519592285,194.551155090332,194.551155090332,194.551155090332,194.551155090332,194.551155090332,194.551155090332,200.997032165527,200.997032165527,200.997032165527,200.997032165527,200.997032165527,181.883758544922,181.883758544922,181.883758544922,181.883758544922,187.072273254395,187.072273254395,187.072273254395,187.072273254395,187.072273254395,197.020195007324,197.020195007324,197.020195007324,201.315803527832,201.315803527832,201.315803527832,201.315803527832,190.80078125,190.80078125,190.80078125,190.80078125,190.80078125,196.644187927246,196.644187927246,196.644187927246,196.644187927246,196.644187927246,191.54549407959,191.54549407959,191.54549407959,191.54549407959,191.54549407959,187.205024719238,187.205024719238,187.205024719238,187.205024719238,187.205024719238,196.053352355957,196.053352355957,196.053352355957,196.053352355957,196.053352355957,195.017295837402,195.017295837402,195.017295837402,195.017295837402,195.017295837402,195.017295837402,190.635414123535,190.635414123535,190.635414123535,190.635414123535,198.095397949219,198.095397949219,198.095397949219,198.095397949219,198.095397949219,203.810829162598,203.810829162598,203.810829162598,203.810829162598,183.837379455566,183.837379455566,183.837379455566,183.837379455566,187.90746307373,187.90746307373,187.90746307373,187.90746307373,187.90746307373,195.535530090332,195.535530090332,195.535530090332,195.535530090332,195.535530090332,197.30948638916,197.30948638916,197.30948638916,197.30948638916,197.30948638916,200.319343566895,200.319343566895,200.319343566895,200.319343566895,200.319343566895,202.087387084961,202.087387084961,202.087387084961,202.087387084961,202.087387084961,203.197021484375,203.197021484375,203.197021484375,207.372718811035,207.372718811035,207.372718811035,207.372718811035,207.372718811035,219.032279968262,219.032279968262,219.032279968262,219.032279968262,219.032279968262,219.032279968262,222.390777587891,222.390777587891,222.390777587891,222.390777587891,222.390777587891,233.746467590332,233.746467590332,233.746467590332,233.746467590332,233.746467590332,241.692962646484,241.692962646484,241.692962646484,241.692962646484,241.692962646484,248.647705078125,248.647705078125,248.647705078125,199.054748535156,199.054748535156,199.054748535156,206.187034606934,206.187034606934,226.420845031738,226.420845031738,226.420845031738,226.420845031738,233.936195373535,233.936195373535,233.936195373535,233.936195373535,233.936195373535,240.790786743164,240.790786743164,240.790786743164,240.790786743164,249.110900878906,249.110900878906,249.110900878906,249.110900878906,249.110900878906,249.110900878906,249.110900878906,226.283210754395,226.283210754395,226.283210754395,226.283210754395,226.283210754395,232.104537963867,232.104537963867,232.104537963867,232.104537963867,232.104537963867,232.104537963867,238.099815368652,238.099815368652,238.099815368652,238.099815368652,238.099815368652,219.934623718262,219.934623718262,219.934623718262,219.934623718262,219.934623718262,219.934623718262,219.934623718262,188.472610473633,188.472610473633,188.472610473633,188.472610473633,188.472610473633,193.958473205566,193.958473205566,193.958473205566,193.958473205566,193.958473205566,199.363494873047,199.363494873047,199.363494873047,199.363494873047,199.363494873047,194.262168884277,194.262168884277,194.262168884277,194.262168884277,192.024551391602,192.024551391602,192.024551391602,192.024551391602,192.024551391602,197.872787475586,197.872787475586,197.872787475586,197.872787475586,197.872787475586,202.038627624512,202.038627624512,202.038627624512,202.038627624512,202.038627624512,202.038627624512,186.105262756348,186.105262756348,186.105262756348,186.105262756348,197.073715209961,197.073715209961,197.073715209961,197.073715209961,197.073715209961,205.457946777344,205.457946777344,205.457946777344,205.457946777344,206.271041870117,206.271041870117,206.271041870117,206.271041870117,206.271041870117,206.271041870117,206.271041870117,186.357231140137,186.357231140137,186.357231140137,186.357231140137,189.83226776123,189.83226776123,189.83226776123,189.83226776123,192.838508605957,192.838508605957,192.838508605957,192.838508605957,202.420318603516,202.420318603516,202.420318603516,202.420318603516,202.420318603516,203.230506896973,203.230506896973,203.230506896973,203.230506896973,203.230506896973,207.421531677246,207.421531677246,207.421531677246,207.421531677246,207.421531677246,208.928672790527,208.928672790527,208.928672790527,208.928672790527,208.928672790527,208.928672790527,209.265441894531,209.265441894531,209.265441894531,209.265441894531,209.265441894531,213.129547119141,213.129547119141,213.129547119141,213.129547119141,213.129547119141,226.581382751465,226.581382751465,227.007675170898,227.007675170898,227.007675170898,228.790016174316,228.790016174316,228.790016174316,228.790016174316,228.790016174316,238.862083435059,238.862083435059,238.862083435059,238.862083435059,238.862083435059,249.868186950684,249.868186950684,249.868186950684,249.868186950684,249.868186950684,256.74063873291,256.74063873291,256.74063873291,256.74063873291,256.74063873291,192.99584197998,192.99584197998,192.99584197998,192.99584197998,207.87899017334,207.87899017334,207.87899017334,229.094909667969,229.094909667969,229.094909667969,229.094909667969,229.094909667969,237.336395263672,237.336395263672,237.336395263672,237.336395263672,237.336395263672,244.246826171875,244.246826171875,244.246826171875,244.246826171875,244.246826171875,250.101188659668,250.101188659668,250.101188659668,250.101188659668,224.297142028809,224.297142028809,224.297142028809,224.297142028809,224.297142028809,229.991111755371,229.991111755371,229.991111755371,237.832931518555,237.832931518555,237.832931518555,237.832931518555,214.020774841309,214.020774841309,214.020774841309,219.736824035645,219.736824035645,219.736824035645,214.97289276123,214.97289276123,214.97289276123,214.97289276123,214.97289276123,214.97289276123,215.125358581543,215.125358581543,215.125358581543,215.125358581543,215.125358581543,220.853614807129,220.853614807129,220.853614807129,220.853614807129,220.853614807129,215.019653320312,215.019653320312,215.019653320312,215.019653320312,215.019653320312,215.019653320312,215.019653320312,219.197036743164,219.197036743164,219.197036743164,219.197036743164,219.197036743164,225.848678588867,225.848678588867,225.848678588867,225.848678588867,225.848678588867,228.808822631836,228.808822631836,228.808822631836,228.808822631836,228.808822631836,228.808822631836,214.15364074707,214.15364074707,214.15364074707,214.15364074707,214.15364074707,218.751068115234,218.751068115234,218.751068115234,218.751068115234,221.724838256836,221.724838256836,221.724838256836,221.724838256836,216.306121826172,216.306121826172,216.306121826172,219.431411743164,219.431411743164,219.431411743164,219.431411743164,219.431411743164,221.06266784668,221.06266784668,221.06266784668,221.06266784668,221.06266784668,224.659515380859,224.659515380859,224.659515380859,224.659515380859,224.659515380859,224.659591674805,224.659591674805,224.659591674805,224.659591674805,224.659591674805,226.585502624512,226.585502624512,226.585502624512,226.585502624512,226.585502624512,228.545631408691,228.545631408691,228.545631408691,232.69189453125,232.69189453125,232.69189453125,232.69189453125,232.69189453125,245.338035583496,245.338035583496,245.338035583496,245.338035583496,245.338035583496,245.338035583496,247.120376586914,247.120376586914,247.120376586914,247.120376586914,247.120376586914,251.833587646484,251.833587646484,251.833587646484,251.833587646484,251.833587646484,260.372428894043,260.372428894043,260.372428894043,260.372428894043,260.372428894043,211.937805175781,211.937805175781,211.937805175781,211.937805175781,211.937805175781,211.937805175781,222.789855957031,222.789855957031,222.789855957031,222.789855957031,222.789855957031,249.576835632324,249.576835632324,249.576835632324,260.27864074707,260.27864074707,260.403549194336,260.403549194336,260.403549194336,260.403549194336,260.403549194336,260.403549194336,201.452217102051,201.452217102051,201.452217102051,141.790740966797,141.790740966797,163.114883422852,163.114883422852,163.114883422852,163.114883422852,163.114883422852,172.517158508301,172.517158508301,172.517158508301,172.517158508301,172.517158508301,179.034042358398,179.034042358398,179.034042358398,151.831214904785,151.831214904785,151.831214904785,151.831214904785,151.831214904785,151.831214904785,151.831214904785,158.550048828125,158.550048828125,158.550048828125,158.550048828125,158.550048828125,168.539665222168,168.539665222168,168.539665222168,168.539665222168,168.539665222168,154.560806274414,154.560806274414,154.560806274414,161.655685424805,161.655685424805,161.655685424805,169.739990234375,169.739990234375,169.739990234375,169.739990234375,169.739990234375,156.697319030762,156.697319030762,156.697319030762,156.697319030762,156.697319030762,163.1181640625,163.1181640625,163.1181640625,163.1181640625,167.676788330078,167.676788330078,167.676788330078,167.676788330078,167.676788330078,167.676788330078,167.676788330078,156.888648986816,156.888648986816,156.888648986816,156.888648986816,164.576133728027,164.576133728027,164.576133728027,164.576133728027,170.043144226074,170.043144226074,170.043144226074,170.043144226074,170.831497192383,170.831497192383,170.831497192383,170.831497192383,170.831497192383,155.477577209473,155.477577209473,162.37117767334,162.37117767334,162.37117767334,162.37117767334,162.37117767334,163.231292724609,163.231292724609,163.231292724609,163.231292724609,163.231292724609,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,167.903671264648,169.943862915039,169.943862915039,169.943862915039,169.943862915039,169.943862915039,169.944396972656,169.944396972656,169.944396972656,169.944396972656,169.944396972656,174.326057434082,174.326057434082,174.326057434082,174.326057434082,174.326057434082,188.461669921875,188.461669921875,188.461669921875,188.461669921875,188.461669921875,189.015449523926,189.015449523926,189.015449523926,190.797790527344,190.797790527344,190.797790527344,190.797790527344,190.797790527344,204.194030761719,204.194030761719,204.194030761719,204.194030761719,204.194030761719,212.155853271484,212.155853271484,212.155853271484,212.155853271484,212.155853271484,220.568801879883,220.568801879883,220.568801879883,242.784942626953,242.784942626953,242.784942626953,253.758689880371,253.758689880371,177.579803466797,177.579803466797,177.579803466797,191.626167297363,191.626167297363,191.626167297363,191.626167297363,201.491394042969,201.491394042969,201.491394042969,201.491394042969,201.491394042969,208.101379394531,208.101379394531,208.101379394531,208.101379394531,208.101379394531,186.554740905762,186.554740905762,186.554740905762,186.554740905762,186.554740905762,194.859397888184,194.859397888184,194.859397888184,194.859397888184,194.859397888184,191.20482635498,191.20482635498,191.20482635498,191.20482635498,191.20482635498,191.20482635498,184.014099121094,184.014099121094,184.014099121094,184.014099121094,184.014099121094,194.914756774902,194.914756774902,194.914756774902,194.914756774902,194.914756774902,181.561317443848,181.561317443848,181.561317443848,181.561317443848,181.561317443848,181.561317443848,186.903709411621,186.903709411621,186.903709411621,186.903709411621,186.903709411621,197.456588745117,197.456588745117,197.456588745117,197.456588745117,197.456588745117,189.945373535156,189.945373535156,189.945373535156,189.945373535156,189.945373535156,199.812324523926,199.812324523926,199.812324523926,199.812324523926,207.254089355469,207.254089355469,207.254089355469,180.807266235352,180.807266235352,180.807266235352,180.807266235352,185.041641235352,185.041641235352,185.041641235352,185.041641235352,194.264274597168,194.264274597168,194.264274597168,197.252731323242,197.252731323242,197.252731323242,197.252731323242,197.252731323242,198.125984191895,198.125984191895,198.125984191895,198.125984191895,198.125984191895,202.893928527832,202.893928527832,202.893928527832,202.893928527832,202.893928527832,203.875511169434,203.875511169434,203.875511169434,203.875511169434,203.875511169434,203.875511169434,204.965438842773,204.965438842773,204.965438842773,204.965438842773,204.965438842773,209.613388061523,209.613388061523,209.613388061523,209.613388061523,209.613388061523,223.627243041992,223.627243041992,223.627243041992,223.627243041992,223.627243041992,227.192153930664,227.192153930664,227.192153930664,229.015045166016,229.015045166016,229.015045166016,229.015045166016,229.015045166016,239.44361114502,239.44361114502,239.44361114502,239.44361114502,239.44361114502,250.461685180664,250.461685180664,250.461685180664,250.461685180664,250.461685180664,258.427268981934,258.427268981934,258.427268981934,258.427268981934,258.427268981934,258.445053100586,258.445053100586,258.445053100586,258.445053100586,258.445053100586,258.445053100586,207.25577545166,207.25577545166,207.25577545166,214.461372375488,214.461372375488,214.461372375488,235.489318847656,235.489318847656,235.489318847656,245.82251739502,245.82251739502,245.82251739502,245.82251739502,245.82251739502,253.923522949219,253.923522949219,253.923522949219,253.923522949219,253.923522949219,260.307609558105,260.307609558105,260.307609558105,260.307609558105,260.307609558105,260.307609558105,232.129402160645,232.129402160645,232.129402160645,232.129402160645,232.129402160645,232.129402160645,243.600723266602,243.600723266602,243.600723266602,243.600723266602,243.600723266602,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,244.156616210938,172.178596496582,172.178596496582,172.178596496582,172.178596496582,153.097297668457,153.097297668457,153.097297668457,161.578369140625,161.578369140625,161.578369140625,161.578369140625,161.578369140625,159.952140808105,159.952140808105,159.952140808105,159.952140808105,159.952140808105,159.952140808105,154.093322753906,154.093322753906,154.093322753906,154.093322753906,154.093322753906,165.89038848877,165.89038848877,165.89038848877,165.89038848877,165.89038848877,152.531234741211,152.531234741211,152.531234741211,152.531234741211,152.531234741211,152.531234741211,158.563652038574,158.563652038574,158.563652038574,158.563652038574,158.563652038574,168.731369018555,168.731369018555,168.731369018555,168.731369018555,177.552879333496,177.552879333496,177.552879333496,177.552879333496,164.229637145996,164.229637145996,164.229637145996,164.229637145996,164.229637145996,153.976295471191,153.976295471191,153.976295471191,153.976295471191,159.321640014648,159.321640014648,159.321640014648,159.321640014648,167.77611541748,167.77611541748,167.77611541748,167.77611541748,167.77611541748,168.665710449219,168.665710449219,168.665710449219,168.665710449219,168.665710449219,173.532661437988,173.532661437988,173.532661437988,173.532661437988,173.532661437988,173.532737731934,173.532737731934,173.532737731934,173.532737731934,173.532737731934,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,175.641822814941,179.260765075684,179.260765075684,179.260765075684,179.260765075684,181.652679443359,181.652679443359,181.652679443359,181.652679443359,181.652679443359,195.943511962891,195.943511962891,195.943511962891,195.943511962891,195.943511962891,198.283561706543,198.283561706543,198.283561706543,200.065902709961,200.065902709961,200.065902709961,200.065902709961,200.065902709961,207.538520812988,207.538520812988,207.538520812988,207.538520812988,207.538520812988,215.217094421387,215.217094421387,215.217094421387,215.217094421387,215.217094421387,224.719421386719,224.719421386719,224.719421386719,224.719421386719,224.719421386719,235.117218017578,235.117218017578,235.117218017578,235.117218017578,235.117218017578,259.898544311523,259.898544311523,259.898544311523,260.196311950684,260.196311950684,260.196311950684,260.196311950684,184.77172088623,184.77172088623,200.030548095703,200.030548095703,200.030548095703,200.030548095703,208.266128540039,208.266128540039,208.266128540039,208.266128540039,218.446922302246,218.446922302246,218.446922302246,218.446922302246,218.446922302246,225.385009765625,225.385009765625,225.385009765625,225.385009765625,225.385009765625,198.375312805176,198.375312805176,198.375312805176,198.375312805176,198.375312805176,205.259490966797,205.259490966797,205.259490966797,203.248870849609,203.248870849609,203.248870849609,203.248870849609,203.248870849609,203.248870849609,203.248870849609,201.073753356934,201.073753356934,201.073753356934,201.073753356934,201.073753356934,210.010345458984,210.010345458984,210.010345458984,210.010345458984,210.010345458984,193.254432678223,193.254432678223,193.254432678223,193.254432678223,193.254432678223,203.863677978516,203.863677978516,203.863677978516,203.863677978516,203.863677978516,212.226486206055,212.226486206055,212.226486206055,212.226486206055,187.753753662109,187.753753662109,187.753753662109,187.753753662109,187.753753662109,197.76050567627,197.76050567627,197.76050567627,197.76050567627,207.532844543457,207.532844543457,207.532844543457,207.532844543457,179.982490539551,179.982490539551,179.982490539551,179.982490539551,183.644477844238,183.644477844238,183.644477844238,183.644477844238,192.768287658691,192.768287658691,192.768287658691,195.96467590332,195.96467590332,195.96467590332,195.96467590332,195.96467590332,196.909080505371,196.909080505371,196.909080505371,196.909080505371,196.909080505371,202.044784545898,202.044784545898,202.044784545898,202.044784545898,202.044784545898,202.044860839844,202.044860839844,202.044860839844,202.044860839844,202.044860839844,204.23983001709,204.23983001709,204.23983001709,204.23983001709,204.23983001709,204.240364074707,204.240364074707,204.240364074707,204.240364074707,204.240364074707,209.175506591797,209.175506591797,209.175506591797,209.175506591797,209.175506591797,222.956398010254,222.956398010254,222.956398010254,222.956398010254,222.956398010254,229.450614929199,229.450614929199,229.450614929199,229.63077545166,229.63077545166,229.63077545166,229.63077545166,229.63077545166,235.999374389648,235.999374389648,235.999374389648,235.999374389648,235.999374389648,244.887023925781,244.887023925781,244.887023925781,244.887023925781,244.887023925781,254.361099243164,254.361099243164,254.361099243164,254.361099243164,254.361099243164,193.438400268555,193.438400268555,193.438400268555,193.438400268555,193.438400268555,216.653549194336,216.653549194336,216.653549194336,224.491973876953,224.491973876953,224.491973876953,243.579620361328,243.579620361328,243.579620361328,258.792282104492,258.792282104492,258.792282104492,258.792282104492,258.792282104492,238.961494445801,238.961494445801,238.961494445801,238.961494445801,238.961494445801,249.309173583984,249.309173583984,249.309173583984,256.169738769531,256.169738769531,256.169738769531,256.169738769531,256.169738769531,256.169738769531,212.025444030762,212.025444030762,212.025444030762,212.025444030762,212.025444030762,219.01741027832,219.01741027832,219.01741027832,219.01741027832,219.01741027832,225.338363647461,225.338363647461,225.338363647461,225.338363647461,225.338363647461,212.915878295898,212.915878295898,212.915878295898,212.915878295898,212.915878295898,220.01318359375,220.01318359375,220.01318359375,220.01318359375,220.01318359375,226.06226348877,226.06226348877,226.06226348877,226.06226348877,226.06226348877,226.06226348877,226.06226348877,212.156387329102,212.156387329102,212.156387329102,212.156387329102,212.156387329102,223.959976196289,223.959976196289,223.959976196289,219.250137329102,219.250137329102,219.250137329102,219.250137329102,219.250137329102,219.250137329102,219.250137329102,215.018951416016,215.018951416016,215.018951416016,215.018951416016,222.391311645508,222.391311645508,222.391311645508,222.391311645508,227.160469055176,227.160469055176,227.160469055176,227.160469055176,231.068786621094,231.068786621094,231.068786621094,231.068786621094,231.068786621094,210.331878662109,210.331878662109,210.331878662109,210.331878662109,221.269348144531,221.269348144531,221.269348144531,221.269348144531,221.269348144531,222.220039367676,222.220039367676,222.220039367676,222.220039367676,222.220039367676,227.434761047363,227.434761047363,227.434761047363,227.434761047363,227.434761047363,227.434837341309,227.434837341309,227.434837341309,227.434837341309,227.434837341309,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,229.661163330078,234.71492767334,234.71492767334,234.71492767334,234.71492767334,234.71492767334,248.76252746582,248.76252746582,248.76252746582,248.76252746582,248.76252746582,258.121391296387,258.121391296387,258.121391296387,258.301551818848,258.301551818848,258.301551818848,258.301551818848,258.301551818848,215.272621154785,215.272621154785,215.272621154785,215.272621154785,215.272621154785,224.420745849609,224.420745849609,224.420745849609,224.420745849609,224.420745849609,232.40013885498,232.40013885498,232.40013885498,232.40013885498,232.40013885498,240.388526916504,240.388526916504,240.388526916504,240.388526916504,240.388526916504,254.968193054199,254.968193054199,254.968193054199,254.968193054199,229.280204772949,229.280204772949,229.280204772949,239.986854553223,239.986854553223,260.563972473145,260.563972473145,260.563972473145,260.563972473145,260.563972473145,260.563972473145,260.563972473145,260.563972473145,152.337600708008,152.337600708008,152.337600708008,152.337600708008,155.360046386719,155.360046386719,155.360046386719,155.360046386719,167.929702758789,167.929702758789,167.929702758789,167.929702758789,179.651168823242,179.651168823242,179.651168823242,179.651168823242,179.651168823242,187.169677734375,187.169677734375,187.169677734375,187.169677734375,187.169677734375,162.055061340332,162.055061340332,162.055061340332,162.055061340332,162.055061340332,170.714813232422,170.714813232422,170.714813232422,170.714813232422,170.714813232422,176.861869812012,176.861869812012,176.861869812012,176.861869812012,161.352470397949,161.352470397949,161.352470397949,171.141304016113,171.141304016113,171.141304016113,171.141304016113,171.141304016113,166.731376647949,166.731376647949,166.731376647949,166.731376647949,166.731376647949,166.731376647949,166.731376647949,160.591743469238,160.591743469238,160.591743469238,160.591743469238,160.591743469238,168.827285766602,168.827285766602,168.827285766602,168.827285766602,178.102828979492,178.102828979492,178.102828979492,178.102828979492,178.102828979492,162.222877502441,162.222877502441,162.222877502441,162.222877502441,171.839309692383,171.839309692383,171.839309692383,171.839309692383,177.097793579102,177.097793579102,177.097793579102,177.097793579102,181.073394775391,181.073394775391,181.073394775391,181.073394775391,157.668975830078,157.668975830078,157.668975830078,157.668975830078,170.064750671387,170.064750671387,170.064750671387,170.064750671387,170.064750671387,171.080276489258,171.080276489258,171.080276489258,171.080276489258,171.080276489258,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.745697021484,176.74577331543,176.74577331543,176.74577331543,176.74577331543,176.74577331543,179.13990020752,179.13990020752,179.13990020752,179.13990020752,179.13990020752,179.140434265137,179.140434265137,179.140434265137,179.140434265137,179.140434265137,184.650215148926,184.650215148926,184.650215148926,184.650215148926,184.650215148926,198.90909576416,198.90909576416,198.90909576416,198.90909576416,198.90909576416,207.193977355957,207.193977355957,207.193977355957,207.374137878418,207.374137878418,207.374137878418,207.374137878418,207.374137878418,213.74348449707,213.74348449707,213.74348449707,213.74348449707,213.74348449707,222.731704711914,222.731704711914,222.731704711914,222.731704711914,222.731704711914,232.243827819824,232.243827819824,232.243827819824,232.243827819824,232.243827819824,242.014938354492,242.014938354492,242.014938354492,242.014938354492,242.014938354492,215.831245422363,215.831245422363,215.831245422363,215.831245422363,188.813781738281,188.813781738281,188.813781738281,201.985473632812,201.985473632812,217.665077209473,217.665077209473,217.665077209473,217.665077209473,227.210945129395,227.210945129395,227.210945129395,227.210945129395,236.362243652344,236.362243652344,236.362243652344,236.362243652344,244.053993225098,244.053993225098,244.053993225098,244.053993225098,244.053993225098,216.27547454834,216.27547454834,216.27547454834,216.27547454834,216.27547454834,222.949119567871,222.949119567871,222.949119567871,222.949119567871,222.949119567871,229.221076965332,229.221076965332,229.221076965332,229.221076965332,229.221076965332,229.221076965332,215.992767333984,215.992767333984,215.992767333984,222.548812866211,222.548812866211,222.548812866211,213.994422912598,213.994422912598,213.994422912598,213.994422912598,213.994422912598,213.994422912598,213.994422912598,218.27507019043,218.27507019043,218.27507019043,218.27507019043,218.27507019043,224.875221252441,224.875221252441,224.875221252441,224.875221252441,224.875221252441,209.463493347168,209.463493347168,209.463493347168,209.463493347168,218.836082458496,218.836082458496,218.836082458496,218.836082458496,218.836082458496,228.830520629883,228.830520629883,228.830520629883,228.830520629883,236.858428955078,236.858428955078,236.858428955078,236.858428955078,236.858428955078,240.802787780762,240.802787780762,240.802787780762,240.802787780762,240.802787780762,177.165214538574,177.165214538574,177.165214538574,177.165214538574,181.849182128906,181.849182128906,181.849182128906,181.849182128906,187.583541870117,187.583541870117,196.405723571777,196.405723571777,196.405723571777,196.405723571777,196.405723571777,197.43376159668,197.43376159668,197.43376159668,197.43376159668,197.43376159668,203.129272460938,203.129272460938,203.129272460938,203.129272460938,203.129272460938,203.129348754883,203.129348754883,203.129348754883,203.129348754883,203.129348754883,205.524070739746,205.524070739746,205.524070739746,205.524070739746,205.524070739746,205.524604797363,205.524604797363,205.524604797363,205.524604797363,205.524604797363,210.637901306152,210.637901306152,210.637901306152,210.637901306152,210.637901306152,220.47354888916,220.47354888916,220.47354888916,220.47354888916,220.47354888916,237.26212310791,237.26212310791,237.26212310791,237.26212310791,237.26212310791,238.342979431152,238.342979431152,238.342979431152,238.523139953613,238.523139953613,238.523139953613,238.523139953613,238.523139953613,244.920059204102,244.920059204102,244.920059204102,244.920059204102,244.920059204102,254.009765625,254.009765625,254.009765625,254.009765625,254.009765625,188.732009887695,188.732009887695,188.732009887695,188.732009887695,188.732009887695,199.721969604492,199.721969604492,199.721969604492,199.721969604492,199.721969604492,230.932662963867,230.932662963867,230.932662963867,232.634490966797,232.634490966797,232.634490966797,250.609466552734,250.609466552734,250.609466552734,260.315376281738,260.315376281738,260.315376281738,260.315376281738,260.315376281738,243.460441589355,243.460441589355,243.460441589355,252.296546936035,252.296546936035,252.296546936035,252.296546936035,252.296546936035,260.195365905762,260.195365905762,260.195365905762,260.195365905762,260.195365905762,260.195365905762,207.740493774414,207.740493774414,207.740493774414,207.740493774414,207.740493774414,217.08113861084,217.08113861084,217.08113861084,217.08113861084,217.08113861084,224.092666625977,224.092666625977,224.092666625977,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,228.067474365234,216.676940917969,216.676940917969,216.676940917969,216.676940917969,216.676940917969,216.676940917969,216.676940917969,159.385147094727,159.385147094727,159.385147094727,172.810821533203,172.810821533203,172.810821533203,172.810821533203,172.810821533203,154.127922058105,154.127922058105,154.127922058105,154.127922058105,154.127922058105,167.145668029785,167.145668029785,167.145668029785,167.145668029785,177.982498168945,177.982498168945,177.982498168945,177.982498168945,177.982498168945,160.30436706543,160.30436706543,160.30436706543,160.30436706543,168.171440124512,168.171440124512,168.171440124512,168.171440124512,168.171440124512,174.263198852539,174.263198852539,174.263198852539,174.263198852539,179.021713256836,179.021713256836,179.021713256836,179.021713256836,154.59024810791,154.59024810791,154.59024810791,154.59024810791,164.857315063477,164.857315063477,164.857315063477,164.857315063477,164.857315063477,167.658508300781,167.658508300781,167.658508300781,167.658508300781,167.658508300781,168.684448242188,168.684448242188,168.684448242188,168.684448242188,168.684448242188,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,174.25569152832,176.589027404785,176.589027404785,176.589027404785,176.589027404785,176.589027404785,176.589561462402,176.589561462402,176.589561462402,176.589561462402,176.589561462402,181.960037231445,181.960037231445,181.960037231445,181.960037231445,181.960037231445,195.652297973633,195.652297973633,195.652297973633,195.652297973633,195.652297973633,202.700912475586,202.700912475586,202.700912475586,202.881072998047,202.881072998047,202.881072998047,202.881072998047,202.881072998047,209.298332214355,209.298332214355,209.298332214355,209.298332214355,209.298332214355,218.220642089844,218.220642089844,218.220642089844,218.220642089844,218.220642089844,226.201698303223,226.201698303223,226.201698303223,226.201698303223,226.201698303223,235.690292358398,235.690292358398,235.690292358398,235.690292358398,235.690292358398,260.236709594727,260.236709594727,260.236709594727,180.541168212891,180.541168212891,180.541168212891,182.253753662109,182.253753662109,182.253753662109,204.798713684082,204.798713684082,204.798713684082,215.257682800293,215.257682800293,215.257682800293,215.257682800293,215.257682800293,224.794616699219,224.794616699219,224.794616699219,224.794616699219,224.794616699219,234.634796142578,234.634796142578,234.634796142578,234.634796142578,234.634796142578,205.28133392334,205.28133392334,205.28133392334,205.28133392334,205.28133392334,212.868446350098,212.868446350098,212.868446350098,212.868446350098,212.868446350098,220.982063293457,220.982063293457,220.982063293457,220.982063293457,220.982063293457,220.982063293457,209.984901428223,209.984901428223,209.984901428223,209.984901428223,209.984901428223,216.842193603516,216.842193603516,216.842193603516,216.842193603516,216.842193603516,210.142181396484,210.142181396484,210.142181396484,210.142181396484,210.142181396484,210.142181396484,210.538146972656,210.538146972656,210.538146972656,210.538146972656,210.538146972656,218.11791229248,218.11791229248,218.11791229248,218.11791229248,218.11791229248,201.10595703125,201.10595703125,201.10595703125,201.10595703125,218.352935791016,218.352935791016,218.352935791016,218.352935791016,227.105659484863,227.105659484863,227.105659484863,232.03596496582,232.03596496582,232.03596496582,232.03596496582,232.03596496582,205.857536315918,205.857536315918,205.857536315918,205.857536315918,211.156181335449,211.156181335449,211.156181335449,211.156181335449,223.326919555664,223.326919555664,223.326919555664,223.326919555664,223.326919555664,223.326995849609,223.326995849609,223.326995849609,223.326995849609,223.326995849609,224.349281311035,224.349281311035,224.349281311035,224.349281311035,224.349281311035,229.938232421875,229.938232421875,229.938232421875,229.938232421875,229.938232421875,229.93830871582,229.93830871582,229.93830871582,229.93830871582,229.93830871582,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,232.281837463379,234.35563659668,234.35563659668,234.35563659668,237.703979492188,237.703979492188,237.703979492188,237.703979492188,237.703979492188,251.103553771973,251.103553771973,251.103553771973,251.103553771973,251.103553771973,260.06224822998,260.06224822998,260.06224822998,258.452415466309,258.452415466309,258.452415466309,258.452415466309,258.452415466309,258.452415466309,210.6171875,210.6171875,210.6171875,210.6171875,210.6171875,219.575408935547,219.575408935547,219.575408935547,219.575408935547,219.575408935547,227.565437316895,227.565437316895,227.565437316895,227.565437316895,227.565437316895,235.553245544434,235.553245544434,235.553245544434,235.553245544434,235.553245544434,251.528793334961,251.528793334961,251.528793334961,251.528793334961,237.380302429199,237.380302429199,237.380302429199,239.523948669434,239.523948669434,260.188171386719,260.188171386719,260.188171386719,260.188171386719,187.153617858887,187.153617858887,187.153617858887,187.153617858887,203.882637023926,203.882637023926,203.882637023926,203.882637023926,216.51220703125,216.51220703125,216.51220703125,216.51220703125,216.51220703125,221.139976501465,221.139976501465,221.139976501465,221.139976501465,221.139976501465,221.139976501465,194.474082946777,194.474082946777,194.474082946777,194.474082946777,194.474082946777,207.174812316895,207.174812316895,207.174812316895,207.174812316895,207.174812316895,189.205924987793,189.205924987793,189.205924987793,189.205924987793,189.205924987793,195.446067810059,195.446067810059,195.446067810059,203.373634338379,203.373634338379,203.373634338379,203.373634338379,203.373634338379,202.878517150879,202.878517150879,202.878517150879,202.878517150879,202.878517150879,194.800010681152,194.800010681152,194.800010681152,194.800010681152,194.800010681152,203.50382232666,203.50382232666,203.50382232666,203.629447937012,203.629447937012,203.629447937012,203.629447937012,203.629447937012,203.629447937012,200.778831481934,200.778831481934,200.778831481934,200.778831481934,200.778831481934,211.584625244141,211.584625244141,211.584625244141,211.584625244141,218.163734436035,218.163734436035,218.163734436035,218.163734436035,221.712951660156,221.712951660156,221.712951660156,221.712951660156,221.712951660156,194.322135925293,194.322135925293,194.322135925293,194.322135925293,199.580139160156,199.580139160156,199.580139160156,199.580139160156,212.41658782959,212.41658782959,212.41658782959,212.41658782959,212.41658782959,212.416664123535,212.416664123535,212.416664123535,212.416664123535,212.416664123535,213.479461669922,213.479461669922,213.479461669922,213.479461669922,213.479461669922,219.377136230469,219.377136230469,219.377136230469,219.377136230469,219.377136230469,219.377212524414,219.377212524414,219.377212524414,219.377212524414,219.377212524414,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,221.840065002441,227.126808166504,227.126808166504,227.126808166504,227.126808166504,227.126808166504,234.238464355469,234.238464355469,234.238464355469,234.238464355469,234.238464355469,249.624923706055,249.624923706055,249.624923706055,249.624923706055,249.624923706055,249.624923706055,251.407264709473,251.407264709473,251.407264709473,251.407264709473,251.407264709473,257.090980529785,257.090980529785,257.090980529785,257.090980529785,257.090980529785,199.626472473145,199.626472473145,199.626472473145,199.626472473145,199.626472473145,207.616706848145,207.616706848145,207.616706848145,207.616706848145,207.616706848145,215.60359954834,215.60359954834,215.60359954834,215.60359954834,215.60359954834,226.71314239502,226.71314239502,226.71314239502,226.71314239502,253.733848571777,253.733848571777,253.733848571777,257.21630859375,257.21630859375,257.21630859375,257.21630859375,257.21630859375,257.21630859375,257.21630859375,241.917449951172,241.917449951172,241.917449951172,258.812606811523,258.812606811523,258.812606811523,227.843620300293,227.843620300293,227.843620300293,227.843620300293,227.843620300293,227.843620300293,234.928718566895,234.928718566895,234.928718566895,234.928718566895,234.928718566895,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,241.658638000488,209.543632507324,209.543632507324,209.543632507324,209.543632507324,209.543632507324,209.543632507324,154.54370880127,154.54370880127,154.54370880127,154.54370880127,154.54370880127,154.54370880127,164.085182189941,164.085182189941,164.085182189941,164.085182189941,164.085182189941,171.108978271484,171.108978271484,171.108978271484,171.108978271484,171.108978271484,177.270751953125,177.270751953125,177.270751953125,177.270751953125,177.270751953125,177.270751953125,163.896293640137,163.896293640137,163.896293640137,163.896293640137,163.896293640137,170.621406555176,170.621406555176,170.621406555176,170.621406555176,170.621406555176,171.41194152832,171.41194152832,171.41194152832,171.41194152832,171.41194152832,171.41194152832,162.617736816406,162.617736816406,162.617736816406,162.617736816406,173.34252166748,173.34252166748,173.34252166748,173.34252166748,173.34252166748,183.359115600586,183.359115600586,183.359115600586,183.359115600586,188.767471313477,188.767471313477,188.767471313477,188.767471313477,159.422187805176,159.422187805176,159.422187805176,159.422187805176,164.856956481934,164.856956481934,164.856956481934,164.856956481934,170.378677368164,170.378677368164,170.378677368164,170.378677368164,180.771865844727,180.771865844727,180.771865844727,180.771865844727,180.771865844727,183.740081787109,183.740081787109,183.740081787109,183.740081787109,183.740081787109,184.796440124512,184.796440124512,184.796440124512,184.796440124512,184.796440124512,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,191.270034790039,194.274475097656,194.274475097656,194.274475097656,194.274475097656,194.274475097656,194.275009155273,194.275009155273,194.275009155273,194.275009155273,194.275009155273,199.67219543457,199.67219543457,199.67219543457,199.67219543457,199.67219543457,210.600517272949,210.600517272949,210.600517272949,210.600517272949,210.600517272949,224.214340209961,224.214340209961,224.214340209961,224.214340209961,224.214340209961,224.214340209961,225.996681213379,225.996681213379,225.996681213379,225.996681213379,225.996681213379,236.882766723633,236.882766723633,236.882766723633,236.882766723633,236.882766723633,247.925514221191,247.925514221191,247.925514221191,247.925514221191,247.925514221191,255.914817810059,255.914817810059,255.914817810059,255.914817810059,255.914817810059,257.538345336914,257.538345336914,257.538345336914,257.538345336914,257.538345336914,257.538345336914,173.663681030273,173.663681030273,173.663681030273,173.663681030273,201.423545837402,201.423545837402,201.423545837402,223.893562316895,223.893562316895,223.893562316895,239.536476135254,239.536476135254,239.536476135254,239.536476135254,239.536476135254,248.937675476074,248.937675476074,248.937675476074,248.937675476074,259.974090576172,259.974090576172,259.974090576172,259.974090576172,259.974090576172,217.45288848877,217.45288848877,217.45288848877,217.45288848877,217.45288848877,223.803215026855,223.803215026855,223.803215026855,223.803215026855,223.803215026855,230.628677368164,230.628677368164,230.628677368164,237.010887145996,237.010887145996,237.010887145996,237.010887145996,237.010887145996,237.010887145996,190.170639038086,190.170639038086,190.170639038086,190.170639038086,190.170639038086,200.17741394043,200.17741394043,200.17741394043,200.17741394043,200.17741394043,207.889389038086,207.889389038086,207.889389038086,194.55541229248,194.55541229248,194.55541229248,201.61353302002,201.61353302002,201.61353302002,211.20166015625,211.20166015625,211.20166015625,211.20166015625,211.20166015625,194.441177368164,194.441177368164,194.441177368164,194.441177368164,205.880363464355,205.880363464355,205.880363464355,205.880363464355,205.880363464355,213.109481811523,213.109481811523,213.109481811523,213.109481811523,217.070655822754,217.070655822754,217.070655822754,217.070655822754,196.796852111816,196.796852111816,196.796852111816,196.796852111816,196.796852111816,194.546020507812,194.546020507812,194.546020507812,194.546020507812,207.111129760742,207.111129760742,207.111129760742,207.111129760742,207.111129760742,207.986228942871,207.986228942871,207.986228942871,207.986228942871,207.986228942871,208.194648742676,208.194648742676,208.194648742676,208.194648742676,208.194648742676,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,214.816932678223,217.872756958008,217.872756958008,217.872756958008,217.872756958008,217.872756958008,217.873291015625,217.873291015625,217.873291015625,217.873291015625,217.873291015625,223.381492614746,223.381492614746,223.381492614746,223.381492614746,223.381492614746,234.167213439941,234.167213439941,234.167213439941,234.167213439941,234.167213439941,246.86238861084,246.86238861084,246.86238861084,246.86238861084,246.86238861084,246.86238861084,248.644729614258,248.644729614258,248.644729614258,248.644729614258,248.644729614258,259.484909057617,259.484909057617,259.484909057617,259.484909057617,259.484909057617,199.122848510742,199.122848510742,199.122848510742,199.122848510742,199.122848510742,207.115119934082,207.115119934082,207.115119934082,207.115119934082,207.115119934082,216.60871887207,216.60871887207,216.60871887207,216.60871887207,216.60871887207,243.385551452637,243.385551452637,243.385551452637,252.537879943848,252.537879943848,252.537879943848,244.21866607666,244.21866607666,244.21866607666,258.095336914062,258.095336914062,258.095336914062,258.095336914062,258.095336914062,258.095336914062,233.45140838623,233.45140838623,233.45140838623,233.45140838623,240.46134185791,240.46134185791,240.46134185791,240.46134185791,240.46134185791,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,248.307991027832,247.112083435059,247.112083435059,247.112083435059,247.112083435059,154.209350585938,154.209350585938,154.209350585938,154.209350585938,162.09285736084,162.09285736084,162.09285736084,162.09285736084,162.09285736084,170.424476623535,170.424476623535,170.424476623535,170.424476623535,170.424476623535,177.004997253418,177.004997253418,177.004997253418,177.004997253418,177.004997253418,164.83570098877,164.83570098877,164.83570098877,164.83570098877,164.83570098877,172.204788208008,172.204788208008,172.204788208008,157.599212646484,157.599212646484,157.599212646484,157.599212646484,157.599212646484,157.599212646484,162.240287780762,162.240287780762,162.240287780762,162.240287780762,162.240287780762,173.280380249023,173.280380249023,173.280380249023,173.280380249023,173.280380249023,183.866714477539,183.866714477539,183.866714477539,183.866714477539,183.866714477539,157.663421630859,157.663421630859,157.663421630859,165.088752746582,165.088752746582,165.088752746582,165.088752746582,170.177017211914,170.177017211914,170.177017211914,170.177017211914,178.882255554199,178.882255554199,188.029098510742,188.029098510742,188.029098510742,188.029098510742,188.029098510742,189.068305969238,189.068305969238,189.068305969238,189.068305969238,189.068305969238,162.030921936035,162.030921936035,162.030921936035,162.030921936035,162.030921936035,162.030921936035,162.528244018555,162.528244018555,162.528244018555,162.528244018555,162.528244018555,162.5283203125,162.5283203125,162.5283203125,162.5283203125,162.5283203125,165.017242431641,165.017242431641,165.017242431641,165.017242431641,165.017242431641,165.017776489258,165.017776489258,165.017776489258,165.017776489258,165.017776489258,170.456024169922,170.456024169922,170.456024169922,170.456024169922,170.456024169922,182.715156555176,182.715156555176,182.715156555176,182.715156555176,182.715156555176,194.556900024414,194.556900024414,194.556900024414,194.556900024414,194.556900024414,194.556900024414,196.339241027832,196.339241027832,196.339241027832,196.339241027832,196.339241027832,207.166213989258,207.166213989258,207.166213989258,207.166213989258,207.166213989258,213.331771850586,213.331771850586,213.331771850586,213.331771850586,213.331771850586,221.623985290527,221.623985290527,221.623985290527,221.623985290527,221.623985290527,230.81901550293,230.81901550293,230.81901550293,230.81901550293,230.81901550293,257.383087158203,257.383087158203,257.383087158203,186.169120788574,186.169120788574,186.169120788574,209.302360534668,209.302360534668,209.302360534668,227.512939453125,227.512939453125,227.512939453125,227.512939453125,239.913284301758,239.913284301758,239.913284301758,239.913284301758,239.913284301758,245.479484558105,245.479484558105,245.479484558105,245.479484558105,245.479484558105,245.479484558105,217.312599182129,217.312599182129,217.312599182129,217.312599182129,217.312599182129,224.382949829102,224.382949829102,224.382949829102,224.382949829102,224.382949829102,224.382949829102,211.471542358398,211.471542358398,211.471542358398,211.471542358398,214.809379577637,214.809379577637,214.809379577637,214.809379577637,214.809379577637,222.190773010254,222.190773010254,222.190773010254,222.190773010254,222.190773010254,218.962493896484,218.962493896484,218.962493896484,218.962493896484,218.962493896484,218.962493896484,215.414657592773,215.414657592773,215.414657592773,215.414657592773,215.414657592773,227.400238037109,227.400238037109,227.400238037109,227.400238037109,227.400238037109,219.920196533203,219.920196533203,219.920196533203,219.920196533203,219.920196533203,230.737983703613,230.737983703613,230.737983703613,230.737983703613,237.862312316895,237.862312316895,237.862312316895,237.862312316895,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,242.518371582031,196.220420837402,196.220420837402,196.220420837402,196.220420837402,196.220420837402,152.581634521484,152.581634521484,152.581634521484,152.581634521484,158.286735534668,158.286735534668,158.286735534668,158.286735534668,164.603393554688,164.603393554688,174.358032226562,174.358032226562,174.358032226562,174.358032226562,174.358032226562,175.457664489746,175.457664489746,175.457664489746,175.457664489746,175.457664489746,181.715766906738,181.715766906738,181.715766906738,181.715766906738,181.715766906738,181.715766906738,182.246459960938,182.246459960938,182.246459960938,182.246459960938,182.246459960938,182.246536254883,182.246536254883,182.246536254883,182.246536254883,182.246536254883,185.368934631348,185.368934631348,185.368934631348,185.368934631348,185.368934631348,185.369468688965,185.369468688965,185.369468688965,185.369468688965,185.369468688965,191.042098999023,191.042098999023,191.042098999023,191.042098999023,191.042098999023,200.053260803223,200.053260803223,200.053260803223,200.053260803223,200.053260803223,213.539161682129,213.539161682129,213.539161682129,213.539161682129,213.539161682129,213.539161682129,215.321502685547,215.321502685547,215.321502685547,215.321502685547,215.321502685547,226.237739562988,226.237739562988,226.237739562988,226.237739562988,226.237739562988,237.284225463867,237.284225463867,237.284225463867,237.284225463867,237.284225463867,245.276351928711,245.276351928711,245.276351928711,245.276351928711,245.276351928711,253.276542663574,253.276542663574,253.276542663574,253.276542663574,253.276542663574,257.772407531738,257.772407531738,257.772407531738,257.772407531738,168.588516235352,168.588516235352,168.588516235352,168.588516235352,192.625694274902,192.625694274902,192.625694274902,192.62572479248,192.62572479248,192.62572479248,216.468070983887,216.468070983887,216.468070983887,233.910858154297,233.910858154297,233.910858154297,233.910858154297,233.910858154297,242.375610351562,242.375610351562,242.375610351562,242.375610351562,253.268989562988,253.268989562988,253.268989562988,214.140068054199,214.140068054199,214.140068054199,214.140068054199,215.583473205566,215.583473205566,215.583473205566,215.583473205566,215.583473205566,222.599922180176,222.599922180176,222.599922180176,222.599922180176,222.599922180176,222.599922180176,229.413177490234,229.413177490234,229.413177490234,229.413177490234,216.227783203125,216.227783203125,216.227783203125,216.227783203125,216.227783203125,224.326782226562,224.326782226562,224.326782226562,224.326782226562,224.326782226562,222.420486450195,222.420486450195,222.420486450195,222.420486450195,213.434265136719,213.434265136719,213.434265136719,221.554763793945,221.554763793945,221.554763793945,221.554763793945,232.655944824219,232.655944824219,232.655944824219,232.655944824219,232.655944824219,185.731147766113,185.731147766113,185.731147766113,185.731147766113,196.365684509277,196.365684509277,196.365684509277,196.365684509277,204.364685058594,204.364685058594,204.364685058594,204.364685058594,210.159484863281,210.159484863281,210.159484863281,210.159484863281,214.760864257812,214.760864257812,214.760864257812,214.760864257812,216.234375,216.234375,216.234375,216.234375,216.234375,191.806526184082,191.806526184082,201.882606506348,201.882606506348,201.882606506348,201.882606506348,201.882606506348,203.016067504883,203.016067504883,203.016067504883,203.016067504883,203.016067504883,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,210.011016845703,213.205986022949,213.205986022949,213.205986022949,213.205986022949,213.205986022949,213.206520080566,213.206520080566,213.206520080566,213.206520080566,213.206520080566,219.063552856445,219.063552856445,219.063552856445,219.063552856445,219.063552856445,224.621040344238,224.621040344238,224.621040344238,224.621040344238,224.621040344238,238.116920471191,238.116920471191,238.116920471191,238.116920471191,238.116920471191,244.080223083496,244.080223083496,244.080223083496,244.260383605957,244.260383605957,244.260383605957,244.260383605957,244.260383605957,250.646598815918,250.646598815918,250.646598815918,250.646598815918,250.646598815918,259.889381408691,259.889381408691,259.889381408691,259.889381408691,259.889381408691,200.809242248535,200.809242248535,200.809242248535,200.809242248535,200.809242248535,208.805648803711,208.805648803711,208.805648803711,208.805648803711,208.805648803711,216.803428649902,216.803428649902,216.803428649902,216.803428649902,216.803428649902,246.226676940918,246.226676940918,246.226676940918,256.530540466309,256.530540466309,256.530540466309,240.987060546875,240.987060546875,240.987060546875,240.987060546875,240.987060546875,240.987060546875,240.987060546875,240.987060546875,250.297172546387,250.297172546387,250.297172546387,260.586097717285,260.586097717285,260.586097717285,260.586097717285,260.586097717285,260.586097717285,233.916168212891,233.916168212891,233.916168212891,233.916168212891,247.450820922852,247.450820922852,247.450820922852,247.450820922852,247.450820922852,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,251.12678527832,157.73371887207,157.73371887207,157.73371887207,157.73371887207,157.73371887207,166.420486450195,166.420486450195,166.420486450195,166.420486450195,166.420486450195,173.057350158691,173.057350158691,173.057350158691,173.057350158691,173.057350158691,171.087799072266,171.087799072266,171.087799072266,171.087799072266,171.087799072266,171.087799072266,165.00740814209,165.00740814209,165.00740814209,165.00740814209,165.00740814209,174.399459838867,174.399459838867,174.399459838867,174.399459838867,174.399459838867,170.423133850098,170.423133850098,170.423133850098,170.423133850098,170.423133850098,170.423133850098,170.423133850098,165.079086303711,165.079086303711,165.079086303711,165.079086303711,165.079086303711,177.002433776855,177.002433776855,177.002433776855,177.002433776855,177.002433776855,185.832183837891,185.832183837891,185.832183837891,185.832183837891,160.577621459961,160.577621459961,160.577621459961,160.577621459961,169.259048461914,169.259048461914,169.259048461914,174.191825866699,174.191825866699,174.191825866699,174.191825866699,178.582832336426,178.582832336426,178.582832336426,178.582832336426,183.661148071289,183.661148071289,183.661148071289,183.661148071289,183.661148071289,168.921119689941,168.921119689941,168.921119689941,172.828079223633,172.828079223633,172.828079223633,172.828079223633,172.828079223633,173.957130432129,173.957130432129,173.957130432129,173.957130432129,173.957130432129,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,180.992652893066,183.658920288086,183.658920288086,183.658920288086,183.658920288086,183.658920288086,183.658920288086,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,184.215400695801,190.247581481934,190.247581481934,190.247581481934,190.247581481934,190.247581481934,202.13899230957,202.13899230957,202.13899230957,202.13899230957,202.13899230957,215.25373840332,215.25373840332,215.25373840332,215.25373840332,215.25373840332,215.25373840332,215.433898925781,215.433898925781,215.433898925781,215.433898925781,215.433898925781,221.790466308594,221.790466308594,221.790466308594,221.790466308594,221.790466308594,230.944038391113,230.944038391113,230.944038391113,230.944038391113,230.944038391113,238.980430603027,238.980430603027,238.980430603027,238.980430603027,238.980430603027,248.452606201172,248.452606201172,248.452606201172,248.452606201172,248.452606201172,256.5380859375,256.5380859375,256.5380859375,256.5380859375,256.5380859375,256.5380859375,198.136978149414,198.136978149414,198.136978149414,208.357902526855,208.357902526855,208.357902526855,232.153717041016,232.153717041016,232.153717041016,249.704978942871,249.704978942871,249.704978942871,249.704978942871,249.704978942871,258.033660888672,258.033660888672,258.033660888672,258.033660888672,230.838233947754,230.838233947754,230.838233947754,237.676002502441,237.676002502441,237.676002502441,237.676002502441,237.676002502441,244.846740722656,244.846740722656,244.846740722656,244.846740722656,244.846740722656,244.846740722656,202.189987182617,202.189987182617,202.189987182617,208.937080383301,208.937080383301,208.937080383301,208.937080383301,208.937080383301,208.937080383301,215.500473022461,215.500473022461,215.500473022461,200.369705200195,200.369705200195,200.369705200195,200.369705200195,207.56990814209,207.56990814209,207.56990814209,207.56990814209,207.56990814209,205.91788482666,205.91788482666,205.91788482666,205.91788482666,205.91788482666,205.91788482666,205.91788482666,204.39860534668,204.39860534668,204.39860534668,204.39860534668,204.39860534668,211.451866149902,211.451866149902,211.451866149902,211.451866149902,211.451866149902,222.340484619141,222.340484619141,222.340484619141,222.340484619141,229.457229614258,229.457229614258,229.457229614258,229.457229614258,229.457229614258,197.408767700195,197.408767700195,197.408767700195,197.408767700195,203.514823913574,203.514823913574,203.514823913574,203.514823913574,208.089813232422,208.089813232422,208.089813232422,208.089813232422,219.577659606934,219.577659606934,219.577659606934,219.577659606934,219.577659606934,222.350616455078,222.350616455078,222.350616455078,222.350616455078,222.350616455078,223.47631072998,223.47631072998,223.47631072998,223.47631072998,223.47631072998,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,230.462921142578,233.662101745605,233.662101745605,233.662101745605,233.662101745605,233.662101745605,233.662635803223,233.662635803223,233.662635803223,233.662635803223,233.662635803223,239.511070251465,239.511070251465,239.511070251465,239.511070251465,239.511070251465,245.046867370605,245.046867370605,245.046867370605,245.046867370605,245.046867370605,259.403762817383,259.403762817383,259.403762817383,259.403762817383,259.403762817383,202.07689666748,202.07689666748,202.503128051758,202.503128051758,202.503128051758,202.503128051758,202.503128051758,202.503128051758,209.016128540039,209.016128540039,209.016128540039,209.016128540039,209.016128540039,215.237648010254,215.237648010254,215.237648010254,215.237648010254,215.237648010254,223.23461151123,223.23461151123,223.23461151123,223.23461151123,223.23461151123,234.280166625977,234.280166625977,234.280166625977,234.280166625977,234.280166625977,242.2822265625,242.2822265625,242.2822265625,242.2822265625,242.2822265625,250.234825134277,250.234825134277,250.234825134277,224.944030761719,224.944030761719,224.944030761719,235.484497070312,235.484497070312,235.484497070312,259.006484985352,259.006484985352,259.006484985352,230.231941223145,230.231941223145,230.231941223145,230.231941223145,239.461357116699,239.461357116699,239.461357116699,239.461357116699,249.060897827148,249.060897827148,249.060897827148,249.060897827148,258.772369384766,258.772369384766,258.772369384766,258.772369384766,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,260.600883483887,169.334823608398,169.334823608398,169.334823608398,169.334823608398,169.334823608398,169.334823608398,162.714210510254,162.714210510254,162.714210510254,162.714210510254,162.714210510254,173.242630004883,173.242630004883,173.242630004883,173.242630004883,173.242630004883,181.410163879395,181.410163879395,181.410163879395,181.410163879395,181.410163879395,162.901405334473,162.901405334473,162.901405334473,162.901405334473,162.901405334473,171.017532348633,171.017532348633,171.017532348633,171.017532348633,171.017532348633,180.671630859375,180.671630859375,180.671630859375,180.671630859375,180.671630859375,163.503005981445,163.503005981445,163.503005981445,163.503005981445,163.503005981445,170.492515563965,170.492515563965,170.492515563965,170.492515563965,170.492515563965,177.043746948242,177.043746948242,177.043746948242,177.043746948242,177.043746948242,160.009963989258,160.009963989258,160.009963989258,160.009963989258,172.26953125,172.26953125,172.26953125,172.26953125,172.26953125,183.494323730469,183.494323730469,183.494323730469,183.494323730469,191.083404541016,191.083404541016,191.083404541016,191.083404541016,196.226005554199,196.226005554199,196.226005554199,196.226005554199,196.226005554199,164.535530090332,164.535530090332,164.535530090332,164.535530090332,170.422172546387,170.422172546387,170.422172546387,170.422172546387,182.497863769531,182.497863769531,182.497863769531,182.497863769531,182.497863769531,185.345993041992,185.345993041992,185.345993041992,185.345993041992,185.345993041992,186.499145507812,186.499145507812,186.499145507812,186.499145507812,186.499145507812,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,193.655197143555,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.913963317871,196.914497375488,196.914497375488,196.914497375488,196.914497375488,196.914497375488,203.399757385254,203.399757385254,203.399757385254,203.399757385254,203.399757385254,214.765907287598,214.765907287598,214.765907287598,214.765907287598,214.765907287598,228.591125488281,228.591125488281,228.591125488281,228.591125488281,228.591125488281,228.591125488281,230.373466491699,230.373466491699,230.373466491699,230.373466491699,230.373466491699,241.310356140137,241.310356140137,241.310356140137,241.310356140137,241.310356140137,252.35962677002,252.35962677002,252.35962677002,252.35962677002,252.35962677002,260.357902526855,260.357902526855,260.357902526855,260.357902526855,260.357902526855,252.393287658691,252.393287658691,252.393287658691,252.393287658691,252.393287658691,252.393287658691,179.027229309082,179.027229309082,179.027229309082,179.027229309082,179.027229309082,209.202659606934,209.202659606934,209.202659606934,219.68879699707,219.68879699707,219.68879699707,243.105918884277,243.105918884277,243.105918884277,259.123893737793,259.123893737793,259.123893737793,259.123893737793,259.123893737793,259.123893737793,235.771476745605,235.771476745605,235.771476745605,235.771476745605,248.359008789062,248.359008789062,248.359008789062,248.359008789062,248.359008789062,230.79118347168,230.79118347168,230.79118347168,230.79118347168,199.865379333496,199.865379333496,199.865379333496,199.865379333496,199.865379333496,207.256629943848,207.256629943848,207.256629943848,207.256629943848,207.256629943848,217.427474975586,217.427474975586,217.427474975586,217.427474975586,217.427474975586,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,218.096038818359,213.459083557129,213.459083557129,213.459083557129,213.459083557129,213.459083557129,213.459083557129,165.042366027832,165.042366027832,165.042366027832,172.308685302734,172.308685302734,172.308685302734,172.308685302734,172.308685302734,172.308685302734,172.269515991211,172.269515991211,172.269515991211,172.269515991211,172.269515991211,172.269515991211,169.111770629883,169.111770629883,169.111770629883,169.111770629883,181.682807922363,181.682807922363,181.682807922363,181.682807922363,181.682807922363,187.773056030273,187.773056030273,187.773056030273,187.773056030273,187.773056030273,187.773056030273,166.791702270508,166.791702270508,166.791702270508,166.791702270508,172.426071166992,172.426071166992,172.426071166992,172.426071166992,178.399200439453,178.399200439453,178.399200439453,178.399200439453,183.325416564941,183.325416564941,183.325416564941,183.325416564941,163.035171508789,163.035171508789,171.970680236816,171.970680236816,171.970680236816,171.970680236816,171.970680236816,173.129081726074,173.129081726074,173.129081726074,173.129081726074,173.129081726074,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,180.247627258301,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,183.480194091797,189.421417236328,189.421417236328,189.421417236328,189.421417236328,189.421417236328,197.638671875,197.638671875,197.638671875,197.638671875,197.638671875,211.403160095215,211.403160095215,211.403160095215,211.403160095215,211.403160095215,211.403160095215,212.117385864258,212.117385864258,212.117385864258,212.117385864258,212.117385864258,218.867446899414,218.867446899414,218.867446899414,218.867446899414,218.867446899414,227.219787597656,227.219787597656,227.219787597656,227.219787597656,227.219787597656,236.729598999023,236.729598999023,236.729598999023,236.729598999023,236.729598999023,244.776031494141,244.776031494141,244.776031494141,244.776031494141,244.776031494141,197.150756835938,197.150756835938,197.150756835938,197.150756835938,197.150756835938,199.832420349121,199.832420349121,199.832420349121,199.832420349121,199.832420349121,199.832420349121,223.35977935791,223.35977935791,223.35977935791,240.974884033203,240.974884033203,240.974884033203,240.974884033203,240.974884033203,249.069198608398,249.069198608398,249.069198608398,249.069198608398,258.134941101074,258.134941101074,258.134941101074,258.134941101074,258.134941101074,258.134941101074,222.804023742676,222.804023742676,222.804023742676,222.804023742676,222.804023742676,230.6875,230.6875,230.6875,230.6875,230.6875,236.107208251953,236.107208251953,236.107208251953,236.107208251953,236.107208251953,236.107208251953,194.822456359863,194.822456359863,194.822456359863,194.822456359863,194.822456359863,194.822456359863,204.91007232666,204.91007232666,204.91007232666,204.91007232666,204.91007232666,211.760025024414,211.760025024414,211.760025024414,211.760025024414,211.760025024414,206.600387573242,206.600387573242,206.600387573242,206.600387573242,206.600387573242,206.600387573242,206.600387573242,200.801078796387,200.801078796387,200.801078796387,200.801078796387,200.801078796387,209.068962097168,209.068962097168,209.068962097168,215.115127563477,215.115127563477,215.115127563477,215.115127563477,205.032196044922,205.032196044922,205.032196044922,205.032196044922,205.032196044922,215.649795532227,215.649795532227,215.649795532227,215.649795532227,224.763214111328,224.763214111328,224.763214111328,224.763214111328,229.714431762695,229.714431762695,229.714431762695,229.714431762695,229.714431762695,202.262161254883,202.262161254883,202.262161254883,202.262161254883,207.358299255371,207.358299255371,207.358299255371,207.358299255371,215.572402954102,215.572402954102,223.363800048828,223.363800048828,223.363800048828,223.363800048828,223.363800048828,224.501029968262,224.501029968262,224.501029968262,224.501029968262,224.501029968262,226.155334472656,226.155334472656,226.155334472656,226.155334472656,226.155334472656,231.402870178223,231.402870178223,231.402870178223,231.402870178223,231.402870178223,231.402946472168,231.402946472168,231.402946472168,231.402946472168,231.402946472168,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,234.544937133789,235.616188049316,235.616188049316,235.616188049316,235.616188049316,240.692306518555,240.692306518555,240.692306518555,240.692306518555,240.692306518555,251.234474182129,251.234474182129,251.234474182129,251.234474182129,251.234474182129,248.188499450684,248.188499450684,248.188499450684,248.188499450684,248.188499450684,248.188499450684,204.279434204102,204.279434204102,204.279434204102,204.459594726562,204.459594726562,204.459594726562,204.459594726562,204.459594726562,210.817436218262,210.817436218262,210.817436218262,210.817436218262,210.817436218262,220.281028747559,220.281028747559,220.281028747559,220.281028747559,220.281028747559,229.805755615234,229.805755615234,229.805755615234,229.805755615234,229.805755615234,237.856544494629,237.856544494629,237.856544494629,237.856544494629,237.856544494629,252.172462463379,252.172462463379,252.172462463379,252.172462463379,252.172462463379,218.162506103516,218.162506103516,218.162506103516,242.032234191895,242.032234191895,242.032234191895,260.536560058594,260.536560058594,260.536560058594,260.536560058594,245.209190368652,245.209190368652,245.209190368652,245.209190368652,254.981262207031,254.981262207031,254.981262207031,254.981262207031,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,260.60181427002,168.053939819336,168.053939819336,168.053939819336,168.053939819336,168.053939819336,168.053939819336,165.254264831543,165.254264831543,165.254264831543,176.867156982422,176.867156982422,176.867156982422,176.867156982422,176.867156982422,183.288536071777,183.288536071777,183.288536071777,183.288536071777,183.288536071777,168.164108276367,168.164108276367,168.164108276367,168.164108276367,168.164108276367,178.746452331543,178.746452331543,178.746452331543,178.746452331543,178.746452331543,176.062034606934,176.062034606934,176.062034606934,176.062034606934,176.062034606934,176.062034606934,176.062034606934,168.128913879395,168.128913879395,168.128913879395,168.128913879395,168.128913879395,174.890686035156,174.890686035156,174.890686035156,174.890686035156,174.890686035156,172.137008666992,172.137008666992,172.137008666992,172.137008666992,172.137008666992,172.137008666992,174.010894775391,174.010894775391,174.010894775391,174.010894775391,174.010894775391,185.039604187012,185.039604187012,185.039604187012,196.255294799805,196.255294799805,196.255294799805,196.255294799805,164.299041748047,164.299041748047,164.299041748047,164.299041748047,169.304039001465,169.304039001465,169.304039001465,169.304039001465,175.211204528809,175.211204528809,175.211204528809,175.211204528809,183.539657592773,183.539657592773,192.107894897461,192.107894897461,192.107894897461,192.107894897461,192.107894897461,192.979522705078,192.979522705078,192.979522705078,192.979522705078,192.979522705078,192.979522705078,193.353485107422,193.353485107422,193.353485107422,193.353485107422,193.353485107422,199.013916015625,199.013916015625,199.013916015625,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,200.901466369629,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,204.268264770508,210.281593322754,210.281593322754,210.281593322754,210.281593322754,210.281593322754,210.281593322754,215.151435852051,215.151435852051,215.151435852051,215.151435852051,215.151435852051,228.527328491211,228.527328491211,228.527328491211,228.527328491211,228.527328491211,237.853080749512,237.853080749512,237.853080749512,237.853080749512,237.853080749512,237.853080749512,239.971946716309,239.971946716309,239.971946716309,239.971946716309,239.971946716309,249.739448547363,249.739448547363,249.739448547363,249.739448547363,249.739448547363,257.065170288086,257.065170288086,257.065170288086,257.065170288086,257.065170288086,213.310173034668,213.310173034668,213.310173034668,213.310173034668,213.310173034668,213.310173034668,184.243614196777,184.243614196777,184.243614196777,184.243614196777,184.243614196777,192.247749328613,192.247749328613,192.247749328613,192.247749328613,192.247749328613,200.888061523438,200.888061523438,200.888061523438,235.40705871582,235.40705871582,235.40705871582,235.40705871582,235.40705871582,235.40705871582,259.877578735352,259.877578735352,259.877578735352,235.127937316895,235.127937316895,235.127937316895,235.127937316895,247.278549194336,247.278549194336,247.278549194336,247.278549194336,247.278549194336,255.761001586914,255.761001586914,255.761001586914,255.761001586914,207.680778503418,207.680778503418,207.680778503418,207.680778503418,207.680778503418,207.680778503418,208.826835632324,208.826835632324,208.826835632324,208.826835632324,208.826835632324,217.868614196777,217.868614196777,217.868614196777,204.712776184082,204.712776184082,204.712776184082,204.712776184082,207.010681152344,207.010681152344,207.010681152344,207.010681152344,207.010681152344,215.609245300293,215.609245300293,215.609245300293,215.609245300293,215.609245300293,212.600311279297,212.600311279297,212.600311279297,212.600311279297,204.734657287598,204.734657287598,204.734657287598,204.734657287598,204.734657287598,211.599304199219,211.599304199219,211.599304199219,211.599304199219,211.599304199219,220.878639221191,220.878639221191,220.878639221191,220.878639221191,220.878639221191,202.090003967285,202.090003967285,202.090003967285,202.090003967285,212.582153320312,212.582153320312,212.582153320312,212.582153320312,212.582153320312,224.175956726074,224.175956726074,224.175956726074,224.175956726074,231.586853027344,231.586853027344,231.586853027344,231.586853027344,236.194755554199,236.194755554199,236.194755554199,236.194755554199,236.194755554199,203.868873596191,203.868873596191,203.868873596191,203.868873596191,209.53165435791,209.53165435791,209.53165435791,209.53165435791,217.452644348145,217.452644348145,227.767059326172,227.767059326172,227.767059326172,227.767059326172,227.767059326172,228.993659973145,228.993659973145,228.993659973145,228.993659973145,228.993659973145,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.410163879395,236.41024017334,236.41024017334,236.41024017334,236.41024017334,236.41024017334,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,239.726181030273,245.882919311523,245.882919311523,245.882919311523,245.882919311523,245.882919311523,255.036125183105,255.036125183105,255.036125183105,255.036125183105,255.036125183105,212.191200256348,212.191200256348,212.191200256348,212.191200256348,212.191200256348,212.191200256348,210.203727722168,210.203727722168,210.203727722168,210.203727722168,210.203727722168,210.203727722168,211.986068725586,211.986068725586,211.986068725586,211.986068725586,211.986068725586,219.973457336426,219.973457336426,219.973457336426,219.973457336426,219.973457336426,229.21940612793,229.21940612793,229.21940612793,229.21940612793,229.21940612793,237.516677856445,237.516677856445,237.516677856445,237.516677856445,237.516677856445,247.039588928223,247.039588928223,247.039588928223,247.039588928223,247.039588928223,257.614532470703,257.614532470703,257.614532470703,257.614532470703,257.614532470703,230.858810424805,230.858810424805,230.858810424805,241.463554382324,241.463554382324,241.463554382324,257.06867980957,257.06867980957,240.383560180664,240.383560180664,240.383560180664,251.165374755859,251.165374755859,251.165374755859,251.165374755859,251.165374755859,259.321876525879,259.321876525879,259.321876525879,259.321876525879,259.321876525879,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,260.600273132324,236.468719482422,236.468719482422,236.468719482422,236.468719482422,236.468719482422,236.468719482422,164.23323059082,164.23323059082,164.23323059082,172.799514770508,172.799514770508,172.799514770508,172.799514770508,172.799514770508,179.661727905273,179.661727905273,179.661727905273,179.661727905273,179.661727905273,183.912963867188,183.912963867188,183.912963867188,183.912963867188,183.912963867188,183.912963867188,166.971366882324,166.971366882324,166.971366882324,166.971366882324,166.971366882324,176.767509460449,176.767509460449,176.767509460449,176.767509460449,176.767509460449,169.184219360352,169.184219360352,169.184219360352,169.184219360352,169.184219360352,169.184219360352,169.184219360352,167.225189208984,167.225189208984,167.225189208984,167.225189208984,167.225189208984,174.557624816895,174.557624816895,174.557624816895,174.557624816895,174.557624816895,172.812492370605,172.812492370605,172.812492370605,172.812492370605,172.812492370605,172.812492370605,172.812492370605,164.187683105469,164.187683105469,164.187683105469,164.187683105469,175.081481933594,175.081481933594,175.081481933594,186.089698791504,186.089698791504,186.089698791504,186.089698791504,193.461540222168,193.461540222168,193.461540222168,193.461540222168,193.461540222168,163.529258728027,163.529258728027,163.529258728027,163.529258728027,168.747512817383,168.747512817383,168.747512817383,168.747512817383,174.383644104004,174.383644104004,174.383644104004,174.383644104004,180.616836547852,180.616836547852,180.616836547852,180.616836547852,180.616836547852,180.616836547852,180.616836547852,180.616836547852,191.568557739258,191.568557739258,191.568557739258,191.568557739258,191.568557739258,192.75089263916,192.75089263916,192.75089263916,192.75089263916,192.75089263916,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,199.918479919434,202.590560913086,202.590560913086,202.590560913086,202.590560913086,202.590560913086,202.590560913086,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,203.148971557617,208.210586547852,208.210586547852,208.210586547852,208.210586547852,209.589698791504,209.589698791504,209.589698791504,209.589698791504,209.589698791504,219.741806030273,219.741806030273,219.741806030273,219.741806030273,219.741806030273,231.355422973633,231.355422973633,231.355422973633,231.355422973633,231.355422973633,231.355422973633,233.137763977051,233.137763977051,233.137763977051,233.137763977051,233.137763977051,242.781753540039,242.781753540039,242.781753540039,242.781753540039,242.781753540039,252.306632995605,252.306632995605,252.306632995605,252.306632995605,252.306632995605,260.119262695312,260.119262695312,260.119262695312,260.119262695312,260.119262695312,260.119262695312,175.136978149414,175.136978149414,175.136978149414,175.136978149414,175.136978149414,185.798805236816,185.798805236816,185.798805236816,185.798805236816,185.798805236816,216.078552246094,216.078552246094,216.078552246094,227.302040100098,227.302040100098,227.302040100098,243.709976196289,243.709976196289,254.525199890137,254.525199890137,254.525199890137,236.774932861328,236.774932861328,236.774932861328,236.774932861328,243.524627685547,243.524627685547,243.524627685547,243.524627685547,243.524627685547,253.23363494873,253.23363494873,253.23363494873,253.23363494873,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,260.599952697754,163.220520019531,163.220520019531,163.220520019531,163.220520019531,163.220520019531,163.220520019531,166.544296264648,166.544296264648,166.544296264648,166.544296264648,166.544296264648,176.433486938477,176.433486938477,176.433486938477,176.433486938477,176.433486938477,183.129165649414,183.129165649414,183.129165649414,183.129165649414,183.129165649414,166.618423461914,166.618423461914,166.618423461914,166.618423461914,166.618423461914,175.790000915527,175.790000915527,175.790000915527,182.493019104004,182.493019104004,182.493019104004,166.690673828125,166.690673828125,166.690673828125,166.690673828125,166.690673828125,176.43293762207,176.43293762207,176.43293762207,176.43293762207,176.43293762207,185.187530517578,185.187530517578,185.187530517578,163.042213439941,163.042213439941,163.042213439941,163.042213439941,163.042213439941,174.819709777832,174.819709777832,174.819709777832,174.819709777832,184.248222351074,184.248222351074,184.248222351074,184.248222351074,191.759254455566,191.759254455566,191.759254455566,191.759254455566,189.932693481445,189.932693481445,189.932693481445,189.932693481445,189.932693481445,166.026298522949,166.026298522949,166.026298522949,166.026298522949,174.500549316406,174.500549316406,184.959732055664,184.959732055664,184.959732055664,184.959732055664,184.959732055664,186.197731018066,186.197731018066,186.197731018066,186.197731018066,186.197731018066,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,193.696968078613,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,197.040069580078,201.221954345703,201.221954345703,201.221954345703,201.221954345703,203.80590057373,203.80590057373,203.80590057373,203.80590057373,203.80590057373,213.585655212402,213.585655212402,213.585655212402,213.585655212402,213.585655212402,224.816764831543,224.816764831543,224.816764831543,224.816764831543,224.816764831543,224.816764831543,226.599105834961,226.599105834961,226.599105834961,226.599105834961,226.599105834961,232.371055603027,232.371055603027,232.371055603027,232.371055603027,232.371055603027,243.989906311035,243.989906311035,243.989906311035,243.989906311035,243.989906311035,251.996383666992,251.996383666992,251.996383666992,251.996383666992,251.996383666992,259.995986938477,259.995986938477,259.995986938477,259.995986938477,259.995986938477,225.339790344238,225.339790344238,225.339790344238,225.339790344238,225.339790344238,225.339790344238,181.661178588867,181.661178588867,181.661178588867,181.661178588867,181.661178588867,214.257141113281,214.257141113281,214.257141113281,225.404335021973,225.404335021973,225.404335021973,241.71125793457,241.71125793457,256.282302856445,256.282302856445,256.282302856445,256.282302856445,237.53296661377,237.53296661377,237.53296661377,237.53296661377,237.53296661377,246.874786376953,246.874786376953,246.874786376953,259.17293548584,259.17293548584,259.17293548584,259.17293548584,259.17293548584,218.554809570312,218.554809570312,218.554809570312,218.554809570312,218.554809570312,218.554809570312,207.726852416992,207.726852416992,207.726852416992,207.726852416992,207.726852416992,214.542518615723,214.542518615723,214.542518615723,214.542518615723,214.542518615723,221.174507141113,221.174507141113,221.174507141113,221.174507141113,221.174507141113,200.923774719238,200.923774719238,200.923774719238,200.923774719238,200.923774719238,208.006423950195,208.006423950195,208.006423950195,208.006423950195,208.006423950195,220.501426696777,220.501426696777,220.501426696777,220.501426696777,220.501426696777,207.079193115234,207.079193115234,207.079193115234,207.079193115234,207.079193115234,215.975532531738,215.975532531738,215.975532531738,215.975532531738,225.61848449707,225.61848449707,225.61848449707,225.61848449707,225.61848449707,203.39868927002,203.39868927002,203.39868927002,203.39868927002,203.39868927002,215.94605255127,215.94605255127,215.94605255127,215.94605255127,225.79662322998,225.79662322998,225.79662322998,225.79662322998,230.89559173584,230.89559173584,230.89559173584,230.89559173584,231.894226074219,231.894226074219,231.894226074219,231.894226074219,231.894226074219,205.464958190918,205.464958190918,205.464958190918,205.464958190918,217.559532165527,217.559532165527,217.559532165527,217.559532165527,217.559532165527,221.072311401367,221.072311401367,221.072311401367,221.072311401367,221.072311401367,222.308906555176,222.308906555176,222.308906555176,222.308906555176,222.308906555176,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,229.765144348145,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,233.088180541992,239.819877624512,239.819877624512,239.819877624512,239.819877624512,239.819877624512,249.526931762695,249.526931762695,249.526931762695,249.526931762695,249.526931762695,259.37606048584,259.37606048584,259.37606048584,259.37606048584,204.303001403809,204.303001403809,204.303001403809,204.303001403809,204.303001403809,204.303001403809,210.811332702637,210.811332702637,210.811332702637,210.811332702637,210.811332702637,220.239410400391,220.239410400391,220.239410400391,220.239410400391,220.239410400391,228.241233825684,228.241233825684,228.241233825684,228.241233825684,228.241233825684,236.239883422852,236.239883422852,236.239883422852,236.239883422852,236.239883422852,244.239906311035,244.239906311035,244.239906311035,244.239906311035,244.239906311035,254.453704833984,254.453704833984,254.453704833984,254.453704833984,254.453704833984,244.710205078125,244.710205078125,244.710205078125,244.710205078125,244.710205078125,244.710205078125,232.414520263672,232.414520263672,232.414520263672,247.954864501953,247.954864501953,247.954864501953,247.954864501953,257.639228820801,257.639228820801,257.639228820801,257.639228820801,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,260.441047668457,171.69450378418,171.69450378418,171.69450378418,171.69450378418,171.69450378418,168.385673522949,168.385673522949,168.385673522949,178.076057434082,178.076057434082,178.076057434082,178.076057434082,178.076057434082,186.686889648438,186.686889648438,186.686889648438,186.686889648438,186.686889648438,168.737083435059,168.737083435059,168.737083435059,168.737083435059,168.737083435059,177.21076965332,177.21076965332,177.21076965332,177.21076965332,177.21076965332,182.857368469238,182.857368469238,182.857368469238,182.857368469238,182.857368469238,182.857368469238,168.063102722168,168.063102722168,168.063102722168,168.063102722168,168.063102722168,175.292655944824,175.292655944824,175.292655944824,175.292655944824,175.292655944824,181.829109191895,181.829109191895,181.829109191895,181.829109191895,181.829109191895,181.829109191895,181.829109191895,166.005554199219,166.005554199219,166.005554199219,166.005554199219,178.327346801758,178.327346801758,178.327346801758,178.327346801758,178.327346801758,189.835433959961,189.835433959961,189.835433959961,189.835433959961,189.663734436035,189.663734436035,189.663734436035,189.663734436035,189.663734436035,189.663734436035,189.663734436035,166.316017150879,166.316017150879,166.316017150879,166.316017150879,171.661926269531,171.661926269531,171.661926269531,171.661926269531,178.177139282227,178.177139282227,178.177139282227,178.177139282227,185.229522705078,185.229522705078,195.882148742676,195.882148742676,195.882148742676,195.882148742676,195.882148742676,197.087242126465,197.087242126465,197.087242126465,197.087242126465,197.087242126465,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,204.412727355957,207.129081726074,207.129081726074,207.129081726074,207.129081726074,207.129081726074,207.700714111328,207.700714111328,207.700714111328,207.700714111328,207.700714111328,207.701248168945,207.701248168945,207.701248168945,207.701248168945,207.701248168945,213.807556152344,213.807556152344,213.807556152344,213.807556152344,213.807556152344,218.316345214844,218.316345214844,218.316345214844,218.316345214844,218.316345214844,231.737487792969,231.737487792969,231.737487792969,231.737487792969,231.737487792969,234.718170166016,234.718170166016,234.718170166016,235.432388305664,235.432388305664,235.432388305664,235.432388305664,235.432388305664,241.225471496582,241.225471496582,241.225471496582,241.225471496582,241.225471496582,250.534240722656,250.534240722656,250.534240722656,250.534240722656,250.534240722656,258.533447265625,258.533447265625,258.533447265625,258.533447265625,258.533447265625,243.252998352051,243.252998352051,243.252998352051,243.252998352051,243.252998352051,243.252998352051,176.046249389648,176.046249389648,176.046249389648,176.046249389648,176.046249389648,186.496994018555,186.496994018555,186.496994018555,186.496994018555,186.496994018555,216.111366271973,216.111366271973,216.111366271973,227.076698303223,227.076698303223,227.076698303223,231.868377685547,231.868377685547,231.868377685547,231.868377685547,231.868377685547,231.868377685547,252.813102722168,252.813102722168,252.813102722168,230.630714416504,230.630714416504,230.630714416504,240.656433105469,240.656433105469,240.656433105469,240.656433105469,240.656433105469,250.12638092041,250.12638092041,250.12638092041,250.12638092041,250.12638092041,254.96915435791,254.96915435791,254.96915435791,254.96915435791,254.96915435791,254.96915435791,202.512435913086,202.512435913086,202.512435913086,202.512435913086,202.512435913086,210.589363098145,210.589363098145,210.589363098145,210.589363098145,210.589363098145,217.975654602051,217.975654602051,217.975654602051,217.975654602051,217.975654602051,204.219093322754,204.219093322754,204.219093322754,213.704238891602,213.704238891602,213.704238891602,213.704238891602,213.704238891602,209.631805419922,209.631805419922,209.631805419922,209.631805419922,209.631805419922,209.631805419922,209.631805419922,206.188652038574,206.188652038574,206.188652038574,206.188652038574,206.188652038574,213.516159057617,213.516159057617,213.516159057617,213.516159057617,213.516159057617,213.516159057617,219.426284790039,219.426284790039,219.426284790039,219.426284790039,219.426284790039,210.307540893555,210.307540893555,210.307540893555,210.307540893555,210.307540893555,222.063789367676,222.063789367676,222.063789367676,222.063789367676,229.347229003906,229.347229003906,229.347229003906,229.347229003906,235.768455505371,235.768455505371,235.768455505371,235.768455505371,235.768455505371,205.524391174316,205.524391174316,205.524391174316,205.524391174316,210.985832214355,210.985832214355,210.985832214355,210.985832214355,217.583206176758,217.583206176758,217.583206176758,217.583206176758,217.583206176758,230.361434936523,230.361434936523,230.361434936523,230.361434936523,230.361434936523,230.361511230469,230.361511230469,230.361511230469,230.361511230469,230.361511230469,231.58129119873,231.58129119873,231.58129119873,231.58129119873,231.58129119873,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,238.937591552734,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,242.224906921387,248.35693359375,248.35693359375,248.35693359375,248.35693359375,248.35693359375,257.018478393555,257.018478393555,257.018478393555,257.018478393555,257.018478393555,211.843017578125,211.843017578125,211.843017578125,211.843017578125,215.311294555664,215.311294555664,215.311294555664,215.488868713379,215.488868713379,215.488868713379,221.847137451172,221.847137451172,221.847137451172,221.847137451172,221.847137451172,231.28199005127,231.28199005127,231.28199005127,231.28199005127,231.28199005127,239.282691955566,239.282691955566,239.282691955566,239.282691955566,239.282691955566,247.284164428711,247.284164428711,247.284164428711,247.284164428711,247.284164428711,255.284355163574,255.284355163574,255.284355163574,255.284355163574,255.284355163574,219.094757080078,219.094757080078,219.094757080078,219.094757080078,219.094757080078,243.844757080078,243.844757080078,243.844757080078,254.905456542969,254.905456542969,254.905456542969,259.626899719238,259.626899719238,259.626899719238,241.571403503418,241.571403503418,241.571403503418,257.5634765625,257.5634765625,257.5634765625,257.5634765625,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,260.405319213867,200.143836975098,200.143836975098,200.143836975098,200.143836975098,200.143836975098,165.313438415527,165.313438415527,165.313438415527,177.229927062988,177.229927062988,177.229927062988,177.229927062988,177.229927062988,185.767265319824,185.767265319824,185.767265319824,185.767265319824,185.767265319824,165.393417358398,165.393417358398,165.393417358398,172.782196044922,172.782196044922,172.782196044922,172.782196044922,172.782196044922,183.714691162109,183.714691162109,183.714691162109,183.714691162109,183.714691162109,166.291816711426,166.291816711426,166.291816711426,166.291816711426,166.291816711426,177.559844970703,177.559844970703,177.559844970703,177.559844970703,177.559844970703,176.742492675781,176.742492675781,176.742492675781,176.742492675781,176.742492675781,176.742492675781,176.742492675781,167.83585357666,167.83585357666,167.83585357666,167.83585357666,177.712188720703,177.712188720703,177.712188720703,177.712188720703,177.712188720703,189.211250305176,189.211250305176,189.211250305176,189.211250305176,196.976249694824,196.976249694824,196.976249694824,196.976249694824,196.976249694824,168.354766845703,168.354766845703,168.354766845703,168.354766845703,174.261871337891,174.261871337891,174.261871337891,174.261871337891,179.928802490234,179.928802490234,179.928802490234,179.928802490234,187.678359985352,187.678359985352,187.678359985352,187.678359985352,187.678359985352,187.678359985352,198.995124816895,198.995124816895,198.995124816895,198.995124816895,198.995124816895,200.199096679688,200.199096679688,200.199096679688,200.199096679688,200.199096679688,203.039810180664,203.039810180664,203.039810180664,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,207.60619354248,209.061248779297,209.061248779297,209.061248779297,209.061248779297,209.061248779297,209.061248779297,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,210.935256958008,212.391380310059,212.391380310059,212.391380310059,212.391380310059,217.151069641113,217.151069641113,217.151069641113,217.151069641113,217.151069641113,225.837944030762,225.837944030762,225.837944030762,225.837944030762,225.837944030762,242.933517456055,242.933517456055,242.933517456055,242.933517456055,242.933517456055,245.943412780762,245.943412780762,245.943412780762,247.72575378418,247.72575378418,247.72575378418,247.72575378418,247.72575378418,258.826881408691,258.826881408691,258.826881408691,258.826881408691,258.826881408691,171.339012145996,171.339012145996,171.339012145996,171.339012145996,171.339012145996,179.338592529297,179.338592529297,179.338592529297,179.338592529297,179.338592529297,187.337821960449,187.337821960449,187.337821960449,187.337821960449,187.337821960449,195.334854125977,195.334854125977,195.334854125977,195.334854125977,195.334854125977,205.865509033203,205.865509033203,205.865509033203,205.865509033203,237.019920349121,237.019920349121,237.019920349121,237.019950866699,237.019950866699,237.019950866699,253.231956481934,253.231956481934,253.231956481934,253.231956481934,232.913642883301,232.913642883301,232.913642883301,232.913642883301,232.913642883301,242.999351501465,242.999351501465,242.999351501465,242.999351501465,242.999351501465,251.839019775391,251.839019775391,251.839019775391,251.839019775391,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,260.601928710938,159.087760925293,159.087760925293,159.087760925293,159.087760925293,159.087760925293,159.087760925293,163.767868041992,163.767868041992,163.767868041992,163.767868041992,163.767868041992,171.193344116211,171.193344116211,171.193344116211,171.193344116211,171.193344116211,179.877563476562,179.877563476562,179.877563476562,179.877563476562,179.877563476562,165.656646728516,165.656646728516,165.656646728516,165.656646728516,165.656646728516,172.655952453613,172.655952453613,172.655952453613,172.655952453613,172.655952453613,168.897407531738,168.897407531738,168.897407531738,168.897407531738,168.897407531738,168.897407531738,168.897407531738,165.814628601074,165.814628601074,165.814628601074,165.814628601074,165.814628601074,173.237655639648,173.237655639648,173.237655639648,173.237655639648,173.237655639648,183.538803100586,183.538803100586,183.538803100586,183.538803100586,183.538803100586,172.661567687988,172.661567687988,172.661567687988,172.661567687988,181.173042297363,181.173042297363,181.173042297363,181.173042297363,181.173042297363,187.376258850098,187.376258850098,187.376258850098,187.376258850098,192.663719177246,192.663719177246,192.663719177246,192.663719177246,166.062522888184,166.062522888184,166.062522888184,166.062522888184,166.062522888184,166.969207763672,166.969207763672,166.969207763672,166.969207763672,175.426544189453,175.426544189453,183.623291015625,183.623291015625,183.623291015625,183.623291015625,183.623291015625,184.808036804199,184.808036804199,184.808036804199,184.808036804199,184.808036804199,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035217285156,192.035293579102,192.035293579102,192.035293579102,192.035293579102,192.035293579102,195.292747497559,195.292747497559,195.292747497559,195.292747497559,195.292747497559,195.293281555176,195.293281555176,195.293281555176,195.293281555176,195.293281555176,201.22412109375,201.22412109375,201.22412109375,201.22412109375,201.22412109375,201.22412109375,205.75895690918,205.75895690918,205.75895690918,205.75895690918,205.75895690918,219.441467285156,219.441467285156,219.441467285156,219.441467285156,219.441467285156,231.158363342285,231.158363342285,231.158363342285,231.158363342285,231.158363342285,231.158363342285,232.940704345703,232.940704345703,232.940704345703,232.940704345703,232.940704345703,241.812911987305,241.812911987305,241.812911987305,241.812911987305,241.812911987305,250.427825927734,250.427825927734,250.427825927734,250.427825927734,250.427825927734,259.607009887695,259.607009887695,259.607009887695,259.607009887695,259.607009887695,259.607009887695,171.545539855957,171.545539855957,171.545539855957,171.545539855957,171.545539855957,171.545539855957,182.594329833984,182.594329833984,182.594329833984,182.594329833984,182.594329833984,200.995666503906,200.995666503906,200.995666503906,223.99617767334,223.99617767334,223.99617767334,239.652229309082,239.652229309082,250.921722412109,250.921722412109,250.921722412109,231.118461608887,231.118461608887,231.118461608887,231.118461608887,231.118461608887,240.817848205566,240.817848205566,240.817848205566,240.817848205566,240.817848205566,252.033409118652,252.033409118652,252.033409118652,252.033409118652,252.033409118652,257.374710083008,257.374710083008,257.374710083008,257.374710083008,201.976463317871,201.976463317871,201.976463317871,201.976463317871,201.976463317871,209.110504150391,209.110504150391,209.110504150391,209.110504150391,209.110504150391,216.680473327637,216.680473327637,216.680473327637,216.680473327637,216.680473327637,203.020698547363,203.020698547363,203.020698547363,203.020698547363,203.020698547363,203.020698547363,203.827972412109,203.827972412109,203.827972412109,203.827972412109,203.827972412109,214.248657226562,214.248657226562,214.248657226562,214.248657226562,214.248657226562,209.708740234375,209.708740234375,209.708740234375,209.708740234375,209.708740234375,209.708740234375,208.964340209961,208.964340209961,208.964340209961,220.98176574707,220.98176574707,220.98176574707,220.98176574707,220.98176574707,205.01912689209,205.01912689209,205.01912689209,205.01912689209,214.27808380127,214.27808380127,214.27808380127,214.27808380127,221.044334411621,221.044334411621,221.044334411621,221.044334411621,226.00276184082,226.00276184082,226.00276184082,226.00276184082,232.348831176758,232.348831176758,232.348831176758,232.348831176758,204.255973815918,204.255973815918,204.255973815918,204.255973815918,204.255973815918,205.552276611328,205.552276611328,214.624320983887,214.624320983887,214.624320983887,214.624320983887,214.624320983887,215.808532714844,215.808532714844,215.808532714844,215.808532714844,215.808532714844,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,222.996437072754,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,226.233825683594,227.632652282715,227.632652282715,227.632652282715,227.632652282715,232.68123626709,232.68123626709,232.68123626709,232.68123626709,232.68123626709,242.438148498535,242.438148498535,242.438148498535,242.438148498535,242.438148498535,259.614326477051,259.614326477051,260.040618896484,260.040618896484,260.040618896484,259.457611083984,259.457611083984,259.457611083984,259.457611083984,259.457611083984,259.457611083984,207.61604309082,207.61604309082,207.61604309082,207.61604309082,207.61604309082,217.034828186035,217.034828186035,217.034828186035,217.034828186035,217.034828186035,225.039268493652,225.039268493652,225.039268493652,225.039268493652,225.039268493652,233.042030334473,233.042030334473,233.042030334473,233.042030334473,233.042030334473,241.035865783691,241.035865783691,241.035865783691,241.035865783691,241.035865783691,252.249061584473,252.249061584473,252.249061584473,252.249061584473,230.195518493652,230.195518493652,230.195518493652,241.230087280273,241.230087280273,241.230087280273,260.49299621582,260.49299621582,260.49299621582,260.49299621582,234.446350097656,234.446350097656,234.446350097656,249.452751159668,249.452751159668,249.452751159668,249.452751159668,249.452751159668,257.983200073242,257.983200073242,257.983200073242,257.983200073242,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,260.599922180176,164.790679931641,164.790679931641,164.790679931641,164.790679931641,164.790679931641,164.790679931641,167.150787353516,167.150787353516,167.150787353516,167.150787353516,180.106163024902,180.106163024902,180.106163024902,180.106163024902,180.106163024902,184.019302368164,184.019302368164,184.019302368164,184.019302368164,171.253120422363,171.253120422363,171.253120422363,171.253120422363,171.253120422363,179.050849914551,179.050849914551,179.050849914551,179.050849914551,179.050849914551,167.904388427734,167.904388427734,167.904388427734,167.904388427734,167.904388427734,174.685722351074,174.685722351074,174.685722351074,174.685722351074,174.685722351074,171.777450561523,171.777450561523,171.777450561523,171.777450561523,171.777450561523,171.777450561523,171.777450561523,166.048316955566,166.048316955566,166.048316955566,166.048316955566,175.976455688477,175.976455688477,175.976455688477,175.976455688477,175.976455688477,186.903900146484,186.903900146484,186.903900146484,186.903900146484,195.531593322754,195.531593322754,195.531593322754,195.531593322754,162.992988586426,162.992988586426,162.992988586426,162.992988586426,169.334884643555,169.334884643555,169.334884643555,169.334884643555,177.183975219727,177.183975219727,177.183975219727,177.183975219727,183.752311706543,183.752311706543,183.752311706543,183.752311706543,183.752311706543,195.859703063965,195.859703063965,195.859703063965,195.859703063965,195.859703063965,195.85977935791,195.85977935791,195.85977935791,195.85977935791,195.85977935791,197.076965332031,197.076965332031,197.076965332031,197.076965332031,197.076965332031,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,204.474914550781,205.919715881348,205.919715881348,205.919715881348,205.919715881348,205.919715881348,205.919715881348,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,207.787582397461,209.233451843262,209.233451843262,209.233451843262,209.233451843262,214.45858001709,214.45858001709,214.45858001709,214.45858001709,214.45858001709,224.528060913086,224.528060913086,224.528060913086,224.528060913086,224.528060913086,235.119552612305,235.119552612305,235.119552612305,235.119552612305,235.119552612305,235.119552612305,236.901893615723,236.901893615723,236.901893615723,236.901893615723,236.901893615723,244.885765075684,244.885765075684,244.885765075684,244.885765075684,244.885765075684,254.294120788574,254.294120788574,254.294120788574,254.294120788574,254.294120788574,252.256530761719,252.256530761719,252.256530761719,252.256530761719,252.256530761719,252.256530761719,175.641059875488,175.641059875488,175.641059875488,175.641059875488,175.641059875488,186.762847900391,186.762847900391,186.762847900391,186.762847900391,186.762847900391,199.150276184082,199.150276184082,199.150276184082,199.150276184082,199.150276184082,223.899261474609,223.899261474609,223.899261474609,234.96558380127,234.96558380127,234.96558380127,253.186187744141,253.186187744141,231.327323913574,231.327323913574,231.327323913574,231.327323913574,244.697898864746,244.697898864746,244.697898864746,244.697898864746,244.697898864746,255.570304870605,255.570304870605,255.570304870605,255.570304870605,218.346565246582,218.346565246582,218.346565246582,218.346565246582,218.346565246582,218.346565246582,202.000022888184,202.000022888184,202.000022888184,202.000022888184,202.000022888184,209.305473327637,209.305473327637,209.305473327637,209.305473327637,209.305473327637,216.471351623535,216.471351623535,216.471351623535,209.510101318359,209.510101318359,209.510101318359,209.510101318359,207.469764709473,207.469764709473,207.469764709473,207.469764709473,207.469764709473,214.410331726074,214.410331726074,214.410331726074,214.410331726074,214.410331726074,218.314605712891,218.314605712891,218.314605712891,218.314605712891,207.463966369629,207.463966369629,207.463966369629,207.463966369629,207.463966369629,215.575172424316,215.575172424316,215.575172424316,215.575172424316,215.575172424316,219.411552429199,219.411552429199,219.411552429199,219.411552429199,212.801979064941,212.801979064941,212.801979064941,224.604690551758,224.604690551758,224.604690551758,224.604690551758,231.893692016602,231.893692016602,231.893692016602,231.893692016602,236.931007385254,236.931007385254,236.931007385254,236.931007385254,236.931007385254,204.137557983398,204.137557983398,204.137557983398,204.137557983398,210.65690612793,210.65690612793,210.65690612793,210.65690612793,216.084190368652,216.084190368652,216.084190368652,216.084190368652,230.340240478516,230.340240478516,230.340240478516,230.340240478516,230.340240478516,230.340316772461,230.340316772461,230.340316772461,230.340316772461,230.340316772461,231.549949645996,231.549949645996,231.549949645996,231.549949645996,231.549949645996,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,238.972244262695,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.305946350098,242.306480407715,242.306480407715,242.306480407715,242.306480407715,242.306480407715,248.509178161621,248.509178161621,248.509178161621,248.509178161621,248.509178161621,257.189163208008,257.189163208008,257.189163208008,257.189163208008,257.189163208008,221.241577148438,221.241577148438,221.241577148438,221.241577148438,221.241577148438,214.333686828613,214.333686828613,214.333686828613,214.333686828613,214.333686828613,214.333686828613,216.116027832031,216.116027832031,216.116027832031,216.116027832031,216.116027832031,221.903114318848,221.903114318848,221.903114318848,221.903114318848,221.903114318848,230.305419921875,230.305419921875,230.305419921875,230.305419921875,230.305419921875,239.823387145996,239.823387145996,239.823387145996,239.823387145996,239.823387145996,247.873840332031,247.873840332031,247.873840332031,247.873840332031,247.873840332031,256.12760925293,256.12760925293,256.12760925293,256.12760925293,256.12760925293,256.12760925293,242.156364440918,242.156364440918,242.156364440918,253.063232421875,253.063232421875,253.063232421875,217.340103149414,217.340103149414,217.340103149414,246.601593017578,246.601593017578,246.601593017578,246.601593017578,256.756553649902,256.756553649902,256.756553649902,256.756553649902,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,260.60082244873,179.382774353027,179.382774353027,179.382774353027,179.382774353027,179.382774353027,179.382774353027,165.966194152832,165.966194152832,165.966194152832,175.061470031738,175.061470031738,175.061470031738,175.061470031738,175.061470031738,183.532653808594,183.532653808594,183.532653808594,166.476890563965,166.476890563965,166.476890563965,166.476890563965,166.476890563965,173.488441467285,173.488441467285,173.488441467285,173.488441467285,173.488441467285,180.051834106445,180.051834106445,180.051834106445,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,182.31965637207,161.064056396484,161.064056396484,161.064056396484,161.064056396484,167.63916015625,167.63916015625,167.63916015625,167.63916015625,167.63916015625,177.927558898926,177.927558898926,177.927558898926,177.927558898926,177.927558898926,186.824905395508,186.824905395508,186.824905395508,186.824905395508,186.824905395508,195.83863067627,195.83863067627,195.83863067627,195.83863067627,195.83863067627,195.83863067627,188.566886901855,188.566886901855,188.566886901855,188.566886901855,188.566886901855,169.716346740723,169.716346740723,169.716346740723,169.716346740723,177.843116760254,177.843116760254,177.843116760254,177.843116760254,184.145317077637,184.145317077637,184.145317077637,184.145317077637,189.674697875977,189.674697875977,189.674697875977,189.674697875977,194.984451293945,194.984451293945,194.984451293945,194.984451293945,201.978004455566,201.978004455566,201.978004455566,201.978004455566,215.838729858398,215.838729858398,215.838729858398,215.838729858398,215.838729858398,217.027503967285,217.027503967285,217.027503967285,217.027503967285,217.027503967285,218.318138122559,218.318138122559,218.318138122559,218.318138122559,218.318138122559,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,224.354286193848,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,227.658050537109,233.518280029297,233.518280029297,233.518280029297,233.518280029297,233.518280029297,233.518280029297,238.310829162598,238.310829162598,238.310829162598,238.310829162598,238.310829162598,250.334449768066,250.334449768066,250.334449768066,250.334449768066,250.334449768066,254.736709594727,254.736709594727,254.736709594727,254.916870117188,254.916870117188,254.916870117188,254.916870117188,254.916870117188,232.158042907715,232.158042907715,232.158042907715,232.158042907715,232.158042907715,232.158042907715,166.794624328613,166.794624328613,166.794624328613,166.794624328613,166.794624328613,176.195960998535,176.195960998535,176.195960998535,176.195960998535,176.195960998535,185.71891784668,185.71891784668,185.71891784668,185.71891784668,185.71891784668,195.573402404785,195.573402404785,195.573402404785,195.573402404785,195.573402404785,207.057014465332,207.057014465332,207.057014465332,207.057014465332,207.057014465332,231.30396270752,231.30396270752,231.30396270752,241.527290344238,241.527290344238,241.527290344238,259.144004821777,259.144004821777,226.360305786133,226.360305786133,226.360305786133,226.360305786133,239.146011352539,239.146011352539,239.146011352539,239.146011352539,239.146011352539,249.11408996582,249.11408996582,249.11408996582,249.11408996582,260.600288391113,260.600288391113,260.600288391113,260.600288391113,260.600288391113,260.600288391113,197.852661132812,197.852661132812,197.852661132812,197.852661132812,197.852661132812,197.852661132812,206.612861633301,206.612861633301,206.612861633301,206.612861633301,206.612861633301,213.920776367188,213.920776367188,213.920776367188,213.920776367188,213.920776367188,221.375610351562,221.375610351562,221.375610351562,221.375610351562,221.375610351562,221.375610351562,231.357917785645,231.357917785645,231.357917785645,231.357917785645,231.357917785645,199.787490844727,199.787490844727,199.787490844727,199.787490844727,199.787490844727,207.381973266602,207.381973266602,207.381973266602,207.381973266602,207.381973266602,215.289909362793,215.289909362793,215.289909362793,215.289909362793,215.289909362793,222.420936584473,222.420936584473,222.420936584473,222.420936584473,235.893821716309,235.893821716309,235.893821716309,235.893821716309,235.893821716309,207.23567199707,207.23567199707,207.23567199707,207.23567199707,207.23567199707,207.23567199707,208.73405456543,208.73405456543,208.73405456543,208.73405456543,215.788719177246,215.788719177246,215.788719177246,215.788719177246,222.977554321289,222.977554321289,222.977554321289,222.977554321289,228.312255859375,228.312255859375,228.312255859375,228.312255859375,236.176834106445,236.176834106445,236.176834106445,236.176834106445,236.176834106445,236.176834106445,246.913398742676,246.913398742676,246.913398742676,246.913398742676,246.913398742676,247.852912902832,247.852912902832,247.852912902832,247.852912902832,247.852912902832,248.082397460938,248.082397460938,248.082397460938,248.082397460938,248.082397460938,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,255.264060974121,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,258.512008666992,240.49927520752,240.49927520752,240.49927520752,240.49927520752,206.744750976562,206.744750976562,206.744750976562,206.744750976562,206.744750976562,206.744750976562,211.447113037109,211.447113037109,211.447113037109,211.447113037109,211.447113037109,225.037696838379,225.037696838379,225.037696838379,225.037696838379,225.037696838379,227.533432006836,227.533432006836,227.533432006836,228.247657775879,228.247657775879,228.247657775879,228.247657775879,228.247657775879,234.071365356445,234.071365356445,234.071365356445,234.071365356445,234.071365356445,243.282508850098,243.282508850098,243.282508850098,243.282508850098,243.282508850098,252.799461364746,252.799461364746,252.799461364746,252.799461364746,252.799461364746,259.03897857666,259.03897857666,259.03897857666,259.03897857666,259.03897857666,259.03897857666,227.001068115234,227.001068115234,227.001068115234,227.001068115234,227.001068115234,251.150894165039,251.150894165039,251.150894165039,230.967041015625,230.967041015625,230.967041015625,246.801376342773,246.801376342773,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,260.506614685059,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,159.109176635742,164.34204864502,164.34204864502,164.34204864502,164.34204864502,174.000823974609,174.000823974609,174.000823974609,174.000823974609,187.667640686035,187.667640686035,187.667640686035,187.667640686035,187.667640686035,194.96817779541,194.96817779541,194.96817779541,194.96817779541,194.96817779541,194.96817779541,202.633674621582,202.633674621582,202.633674621582,202.633674621582,202.633674621582,208.193313598633,208.193313598633,208.193313598633,208.193313598633,208.193313598633,208.193313598633,208.193313598633,167.514472961426,167.514472961426,167.514472961426,167.514472961426,167.514472961426,176.098342895508,176.098342895508,176.098342895508,176.098342895508,176.098342895508,188.125556945801,188.125556945801,188.125556945801,188.125556945801,188.125556945801,194.860389709473,194.860389709473,194.860389709473,194.860389709473,194.860389709473,172.677230834961,172.677230834961,172.677230834961,172.677230834961,169.911224365234,169.911224365234,169.911224365234,169.911224365234,180.787620544434,180.787620544434,180.787620544434,180.787620544434,180.787620544434,191.239456176758,191.239456176758,191.239456176758,191.239456176758,200.422622680664,200.422622680664,200.422622680664,200.422622680664,207.8564453125,207.8564453125,207.8564453125,207.8564453125,214.776679992676,214.776679992676,214.776679992676,214.776679992676,201.819625854492,201.819625854492,201.819625854492,201.819625854492,201.819625854492,165.033386230469,165.033386230469,165.033386230469,165.033386230469,172.037971496582,172.037971496582,172.037971496582,172.037971496582,172.037971496582,182.920204162598,182.920204162598,182.920204162598,182.920204162598,182.920204162598,182.920280456543,182.920280456543,182.920280456543,182.920280456543,182.920280456543,184.121551513672,184.121551513672,184.121551513672,184.121551513672,184.121551513672,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,191.378799438477,193.787582397461,193.787582397461,193.787582397461,193.787582397461,193.787582397461,193.787582397461,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,194.633834838867,197.734321594238,197.734321594238,197.734321594238,197.734321594238,197.734321594238,201.137733459473,201.137733459473,201.137733459473,201.137733459473,201.137733459473,210.130516052246,210.130516052246,210.130516052246,210.130516052246,210.130516052246,225.162208557129,225.162208557129,225.162208557129,225.34236907959,225.34236907959,225.34236907959,225.34236907959,225.34236907959,231.663681030273,231.663681030273,231.663681030273,231.663681030273,231.663681030273,241.000778198242,241.000778198242,241.000778198242,241.000778198242,241.000778198242,250.518684387207,250.518684387207,250.518684387207,250.518684387207,250.518684387207,260.122894287109,260.122894287109,260.122894287109,260.122894287109,260.122894287109,180.02173614502,180.02173614502,180.02173614502,180.02173614502,180.02173614502,211.61109161377,211.61109161377,211.61109161377,222.463409423828,222.463409423828,222.463409423828,246.576553344727,246.576553344727,246.576553344727,256.948722839355,256.948722839355,256.948722839355,256.948722839355,240.834411621094,240.834411621094,240.834411621094,240.834411621094,252.254379272461,252.254379272461,252.254379272461,252.254379272461,252.254379272461,260.600692749023,260.600692749023,260.600692749023,260.600692749023,260.600692749023,260.600692749023,199.692657470703,199.692657470703,199.692657470703,199.692657470703,199.692657470703,206.640533447266,206.640533447266,206.640533447266,206.640533447266,213.28719329834,213.28719329834,213.28719329834,219.855567932129,219.855567932129,219.855567932129,219.855567932129,219.855567932129,226.852462768555,226.852462768555,226.852462768555,226.852462768555,226.852462768555,207.669876098633,207.669876098633,207.669876098633,207.669876098633,197.401039123535,197.401039123535,197.401039123535,197.401039123535,197.401039123535,209.269027709961,209.269027709961,209.269027709961,224.404838562012,224.404838562012,224.404838562012,224.404838562012,224.404838562012,235.365081787109,235.365081787109,235.365081787109,235.365081787109,232.149108886719,232.149108886719,232.149108886719,232.149108886719,232.149108886719,232.149108886719,197.634201049805,197.634201049805,197.634201049805,197.634201049805,203.646125793457,203.646125793457,203.646125793457,203.646125793457,210.283302307129,210.283302307129,210.283302307129,210.283302307129,216.85083770752,216.85083770752,216.85083770752,216.85083770752,229.250503540039,229.250503540039,229.250503540039,229.250503540039,231.750839233398,231.750839233398,231.750839233398,231.750839233398,231.750839233398,232.961296081543,232.961296081543,232.961296081543,232.961296081543,232.961296081543,236.343444824219,236.343444824219,236.343444824219,236.343444824219,236.343444824219,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,240.254020690918,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,243.517669677734,249.560905456543,249.560905456543,249.560905456543,249.560905456543,249.560905456543,254.063262939453,254.063262939453,254.063262939453,254.063262939453,254.063262939453,246.475044250488,246.475044250488,246.475044250488,246.475044250488,246.475044250488,205.963111877441,205.963111877441,205.963111877441,205.963111877441,205.963111877441,207.072853088379,207.072853088379,207.072853088379,209.633766174316,209.633766174316,209.633766174316,209.633766174316,209.633766174316,218.962799072266,218.962799072266,218.962799072266,218.962799072266,218.962799072266,226.232772827148,226.232772827148,226.232772827148,226.232772827148,226.232772827148,234.229362487793,234.229362487793,234.229362487793,234.229362487793,234.229362487793,242.230461120605,242.230461120605,242.230461120605,242.230461120605,242.230461120605,251.747467041016,251.747467041016,251.747467041016,251.747467041016,251.747467041016,209.876960754395,209.876960754395,209.876960754395,209.876960754395,234.871551513672,234.871551513672,234.871551513672,239.565231323242,239.565231323242,239.565231323242,239.565231323242,239.565231323242,239.565231323242,259.874443054199,259.874443054199,259.874443054199,259.874443054199,228.385414123535,228.385414123535,228.385414123535,228.385414123535,237.690490722656,237.690490722656,237.690490722656,237.690490722656,247.316734313965,247.316734313965,247.316734313965,247.316734313965,259.205535888672,259.205535888672,259.205535888672,259.205535888672,259.205535888672,260.601509094238,260.601509094238,260.601509094238,260.601509094238,260.601509094238,260.601509094238,258.75072479248,258.75072479248,258.75072479248,258.75072479248,258.75072479248,258.75072479248,164.940788269043,164.940788269043,164.940788269043,164.940788269043,164.940788269043,172.153221130371,172.153221130371,172.153221130371,178.53540802002,178.53540802002,178.53540802002,186.009902954102,186.009902954102,186.009902954102,186.009902954102,186.009902954102,192.766792297363,192.766792297363,192.766792297363,192.766792297363,192.766792297363,177.074104309082,177.074104309082,177.074104309082,177.074104309082,166.796249389648,166.796249389648,166.796249389648,166.796249389648,166.796249389648,175.688697814941,175.688697814941,175.688697814941,175.688697814941,175.688697814941,185.555801391602,185.555801391602,185.555801391602,185.555801391602,185.555801391602,200.094200134277,200.094200134277,200.094200134277,200.094200134277,200.094200134277,200.094200134277,169.622932434082,169.622932434082,169.622932434082,169.622932434082,178.89867401123,178.89867401123,178.89867401123,178.89867401123,184.727508544922,184.727508544922,184.727508544922,184.727508544922,189.596527099609,189.596527099609,189.596527099609,189.596527099609,196.523170471191,196.523170471191,196.523170471191,196.523170471191,202.220748901367,202.220748901367,202.220748901367,202.220748901367,211.134979248047,211.134979248047,211.134979248047,218.397811889648,218.397811889648,218.397811889648,218.397811889648,218.397811889648,219.594520568848,219.594520568848,219.594520568848,219.594520568848,219.594520568848,224.099990844727,224.099990844727,224.099990844727,224.099990844727,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,226.750297546387,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,229.951438903809,235.633453369141,235.633453369141,235.633453369141,235.633453369141,235.633453369141,235.633453369141,240.33935546875,240.33935546875,240.33935546875,240.33935546875,240.33935546875,253.101722717285,253.101722717285,253.101722717285,253.101722717285,253.101722717285,260.181816101074,260.181816101074,260.181816101074,260.361976623535,260.361976623535,260.361976623535,260.361976623535,260.361976623535,260.361976623535,164.250701904297,164.250701904297,164.250701904297,164.250701904297,164.250701904297,170.92716217041,170.92716217041,170.92716217041,170.92716217041,170.92716217041,179.912879943848,179.912879943848,179.912879943848,179.912879943848,179.912879943848,189.766983032227,189.766983032227,189.766983032227,189.766983032227,189.766983032227,202.347267150879,202.347267150879,202.347267150879,202.347267150879,202.347267150879,210.31778717041,210.31778717041,210.31778717041,210.31778717041,210.31778717041,235.512092590332,235.512092590332,235.512092590332,246.763427734375,246.763427734375,246.763427734375,250.523834228516,250.523834228516,219.333755493164,219.333755493164,219.333755493164,232.896781921387,232.896781921387,232.896781921387,232.896781921387,240.260589599609,240.260589599609,240.260589599609,240.260589599609,249.86043548584,249.86043548584,249.86043548584,249.86043548584,257.958793640137,257.958793640137,257.958793640137,257.958793640137,257.958793640137,230.403602600098,230.403602600098,230.403602600098,230.403602600098,230.403602600098,230.403602600098,198.030952453613,198.030952453613,198.030952453613,198.030952453613,198.030952453613,198.030952453613,202.426971435547,202.426971435547,202.426971435547,202.426971435547,202.426971435547,209.242637634277,209.242637634277,209.242637634277,209.242637634277,209.242637634277,215.739891052246,215.739891052246,215.739891052246,215.739891052246,223.726196289062,223.726196289062,223.726196289062,223.726196289062,223.726196289062,229.98348236084,229.98348236084,229.98348236084,229.98348236084,229.98348236084,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,235.270927429199,163.979667663574,163.979667663574,163.979667663574,171.66480255127,171.66480255127,171.66480255127,171.66480255127,171.66480255127,181.169509887695,181.169509887695,181.169509887695,181.169509887695,181.169509887695,195.390823364258,195.390823364258,195.390823364258,195.390823364258,195.390823364258,205.557189941406,205.557189941406,205.557189941406,205.557189941406,196.4033203125,196.4033203125,196.4033203125,196.4033203125,196.4033203125,196.4033203125,165.718704223633,165.718704223633,165.718704223633,172.190101623535,172.190101623535,172.190101623535,172.190101623535,178.689674377441,178.689674377441,178.689674377441,178.689674377441,184.317611694336,184.317611694336,184.317611694336,184.317611694336,189.810943603516,189.810943603516,189.810943603516,189.810943603516,204.516067504883,204.516067504883,204.516067504883,204.516067504883,204.516067504883,204.764625549316,204.764625549316,204.764625549316,204.764625549316,204.764625549316,206.009918212891,206.009918212891,206.009918212891,206.009918212891,206.009918212891,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,213.482177734375,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795135498047,216.795669555664,216.795669555664,216.795669555664,216.795669555664,216.795669555664,222.779777526855,222.779777526855,222.779777526855,222.779777526855,222.779777526855,222.779777526855,227.736694335938,227.736694335938,227.736694335938,227.736694335938,227.736694335938,240.190933227539,240.190933227539,240.190933227539,240.190933227539,240.190933227539,248.550689697266,248.550689697266,248.550689697266,248.730850219727,248.730850219727,248.730850219727,248.730850219727,248.730850219727,255.022941589355,255.022941589355,255.022941589355,255.022941589355,255.022941589355,235.209899902344,235.209899902344,235.209899902344,235.209899902344,235.209899902344,235.209899902344,170.390853881836,170.390853881836,170.390853881836,170.390853881836,170.390853881836,179.908912658691,179.908912658691,179.908912658691,179.908912658691,179.908912658691,189.505889892578,189.505889892578,189.505889892578,189.505889892578,189.505889892578,200.990440368652,200.990440368652,200.990440368652,200.990440368652,200.990440368652,224.892227172852,224.892227172852,224.892227172852,234.977035522461,234.977035522461,234.977035522461,258.433967590332,258.433967590332,258.433967590332,226.194931030273,226.194931030273,226.194931030273,226.194931030273,238.220024108887,238.220024108887,238.220024108887,238.220024108887,247.913078308105,247.913078308105,247.913078308105,247.913078308105,255.679084777832,255.679084777832,255.679084777832,255.679084777832,255.679084777832,260.594398498535,260.594398498535,260.594398498535,260.594398498535,260.594398498535,260.594398498535,198.418724060059,198.418724060059,198.418724060059,198.418724060059,198.418724060059,198.418724060059,205.929916381836,205.929916381836,205.929916381836,205.929916381836,205.929916381836,213.818199157715,213.818199157715,213.818199157715,220.261611938477,220.261611938477,220.261611938477,220.261611938477,220.261611938477,226.26668548584,226.26668548584,226.26668548584,226.26668548584,226.26668548584,226.26668548584,232.097846984863,232.097846984863,232.097846984863,232.097846984863,232.097846984863,232.097846984863,212.093040466309,212.093040466309,212.093040466309,212.093040466309,212.093040466309,212.093040466309,206.696449279785,206.696449279785,206.696449279785,206.696449279785,206.696449279785,216.338317871094,216.338317871094,216.338317871094,216.338317871094,216.338317871094,222.569763183594,222.569763183594,222.569763183594,222.569763183594,235.06803894043,235.06803894043,235.06803894043,235.06803894043,246.92374420166,246.92374420166,246.92374420166,246.92374420166,206.465377807617,206.465377807617,206.465377807617,206.465377807617,213.974052429199,213.974052429199,213.974052429199,213.974052429199,220.063323974609,220.063323974609,220.063323974609,220.063323974609,225.673553466797,225.673553466797,225.673553466797,225.673553466797,233.177284240723,233.177284240723,243.527992248535,243.527992248535,243.527992248535,243.527992248535,243.527992248535,244.721038818359,244.721038818359,244.721038818359,244.721038818359,244.721038818359,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,251.767936706543,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,254.910614013672,260.517707824707,260.517707824707,260.517707824707,260.517707824707,260.517707824707,260.517707824707,260.517707824707,203.09105682373,203.09105682373,203.09105682373,203.09105682373,203.09105682373,211.918617248535,211.918617248535,211.918617248535,211.918617248535,211.918617248535,224.35816192627,224.35816192627,224.35816192627,224.35816192627,224.35816192627,224.35816192627,226.140502929688,226.140502929688,226.140502929688,226.140502929688,226.140502929688,235.654777526855,235.654777526855,235.654777526855,235.654777526855,235.654777526855,248.232543945312,248.232543945312,248.232543945312,248.232543945312,248.232543945312,256.233062744141,256.233062744141,256.233062744141,256.233062744141,256.233062744141,259.530982971191,259.530982971191,259.530982971191,259.530982971191,259.530982971191,259.530982971191,224.458274841309,224.458274841309,224.458274841309,224.458274841309,224.458274841309,249.055694580078,249.055694580078,249.055694580078,260.045753479004,260.045753479004,260.045753479004,247.726768493652,247.726768493652,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,259.767684936523,188.289222717285,188.289222717285,188.289222717285,188.289222717285,160.156394958496,160.156394958496,160.156394958496,160.156394958496,163.452140808105,163.452140808105,163.452140808105,163.452140808105,174.303596496582,174.303596496582,174.303596496582,174.303596496582,174.303596496582,184.165229797363,184.165229797363,184.165229797363,184.165229797363,193.080764770508,193.080764770508,193.080764770508,193.080764770508,193.080764770508,200.817260742188,200.817260742188,200.817260742188,200.817260742188,200.817260742188,207.368431091309,207.368431091309,207.368431091309,207.368431091309,207.368431091309,196.174507141113,196.174507141113,196.174507141113,196.174507141113,172.714538574219,172.714538574219,172.714538574219,172.714538574219,172.714538574219,179.985725402832,179.985725402832,179.985725402832,179.985725402832,179.985725402832,189.015319824219,189.015319824219,189.015319824219,189.015319824219,189.015319824219,195.796691894531,195.796691894531,195.796691894531,195.796691894531,195.796691894531,162.489456176758,162.489456176758,162.489456176758,162.489456176758,162.489456176758,170.511962890625,170.511962890625,170.511962890625,170.511962890625,181.883476257324,181.883476257324,181.883476257324,181.883476257324,181.883476257324,192.935470581055,192.935470581055,192.935470581055,192.935470581055,201.364814758301,201.364814758301,201.364814758301,201.364814758301,208.78099822998,208.78099822998,208.78099822998,208.78099822998,216.323333740234,216.323333740234,216.323333740234,216.323333740234,212.377426147461,212.377426147461,212.377426147461,212.377426147461,212.377426147461,165.821502685547,165.821502685547,165.821502685547,165.821502685547,173.564224243164,173.564224243164,184.349609375,184.349609375,184.349609375,184.349609375,184.349609375,185.600166320801,185.600166320801,185.600166320801,185.600166320801,185.600166320801,192.350708007812,192.350708007812,192.350708007812,192.350708007812,192.350708007812,192.350708007812,192.904830932617,192.904830932617,192.904830932617,192.904830932617,192.904830932617,192.904907226562,192.904907226562,192.904907226562,192.904907226562,192.904907226562,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,196.121055603027,197.506645202637,197.506645202637,197.506645202637,197.506645202637,202.22420501709,202.22420501709,202.22420501709,202.22420501709,202.22420501709,206.82373046875,206.82373046875,206.82373046875,206.82373046875,206.82373046875,219.027740478516,219.027740478516,219.027740478516,219.027740478516,219.027740478516,229.112663269043,229.112663269043,229.112663269043,229.112663269043,229.112663269043,229.112663269043,230.895004272461,230.895004272461,230.895004272461,230.895004272461,230.895004272461,240.984558105469,240.984558105469,240.984558105469,240.984558105469,240.984558105469,248.321929931641,248.321929931641,248.321929931641,248.321929931641,248.321929931641,256.32674407959,256.32674407959,256.32674407959,256.32674407959,256.32674407959,178.980690002441,178.980690002441,178.980690002441,178.980690002441,178.980690002441,186.977722167969,186.977722167969,186.977722167969,186.977722167969,186.977722167969,219.378662109375,219.378662109375,219.378662109375,230.484565734863,230.484565734863,230.484565734863,249.85432434082,249.85432434082,249.85432434082,233.98770904541,233.98770904541,233.98770904541,233.98770904541,245.286750793457,245.286750793457,245.286750793457,245.286750793457,245.286750793457,245.286750793457,256.207000732422,256.207000732422,256.207000732422,256.207000732422,196.627952575684,196.627952575684,196.627952575684,196.627952575684,196.627952575684,206.416786193848,206.416786193848,206.416786193848,206.416786193848,206.416786193848,216.82763671875,216.82763671875,216.82763671875,216.82763671875,216.82763671875,223.322418212891,223.322418212891,223.322418212891,218.355224609375,218.355224609375,218.355224609375,218.355224609375,218.355224609375,218.355224609375,197.952049255371,197.952049255371,197.952049255371,197.952049255371,197.952049255371,204.95629119873,204.95629119873,204.95629119873,204.95629119873,204.95629119873,212.685386657715,212.685386657715,212.685386657715,212.685386657715,212.685386657715,219.344337463379,219.344337463379,219.344337463379,219.344337463379,219.344337463379,225.443069458008,225.443069458008,225.443069458008,225.443069458008,225.443069458008,219.953285217285,219.953285217285,219.953285217285,219.953285217285,205.584762573242,205.584762573242,205.584762573242,205.584762573242,214.955299377441,214.955299377441,214.955299377441,220.963417053223,220.963417053223,220.963417053223,220.963417053223,227.776550292969,227.776550292969,227.776550292969,227.776550292969,233.537734985352,233.537734985352,233.537734985352,233.537734985352,239.64427947998,239.64427947998,239.64427947998,239.64427947998,248.093444824219,248.093444824219,256.85733795166,256.85733795166,256.85733795166,256.85733795166,256.85733795166,258.372604370117,258.372604370117,258.372604370117,258.372604370117,258.372604370117,235.929527282715,235.929527282715,235.929527282715,235.929527282715,235.929527282715,201.723075866699,201.723075866699,201.723075866699,201.723075866699,201.723075866699,201.723075866699,202.27995300293,202.27995300293,202.27995300293,202.27995300293,202.27995300293,202.280029296875,202.280029296875,202.280029296875,202.280029296875,202.280029296875,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,205.507164001465,211.642471313477,211.642471313477,211.642471313477,211.642471313477,211.642471313477,218.731857299805,218.731857299805,218.731857299805,218.731857299805,218.731857299805,231.512107849121,231.512107849121,231.512107849121,231.512107849121,231.512107849121,233.104194641113,233.104194641113,233.104194641113,234.886535644531,234.886535644531,234.886535644531,234.886535644531,234.886535644531,241.677848815918,241.677848815918,241.677848815918,241.677848815918,241.677848815918,249.062225341797,249.062225341797,249.062225341797,249.062225341797,249.062225341797,257.060684204102,257.060684204102,257.060684204102,257.060684204102,257.060684204102,211.882453918457,211.882453918457,211.882453918457,211.882453918457,211.882453918457,226.386566162109,226.386566162109,226.386566162109,226.386566162109,226.386566162109,250.166839599609,250.166839599609,250.166839599609,260.088562011719,260.088562011719,260.088562011719,260.088562011719,224.509658813477,224.509658813477,224.509658813477,224.509658813477,239.916496276855,239.916496276855,257.937805175781,257.937805175781,257.937805175781,257.937805175781,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,260.184555053711,165.410301208496,165.410301208496,165.410301208496,179.731010437012,179.731010437012,179.731010437012,179.731010437012,179.731010437012,187.619316101074,187.619316101074,187.619316101074,187.619316101074,187.619316101074,195.387634277344,195.387634277344,195.387634277344,202.844947814941,202.844947814941,202.844947814941,170.072807312012,170.072807312012,170.072807312012,170.072807312012,170.072807312012,178.916297912598,178.916297912598,178.916297912598,178.916297912598,178.916297912598,188.303451538086,188.303451538086,188.303451538086,188.303451538086,188.303451538086,185.054229736328,185.054229736328,185.054229736328,185.054229736328,166.302757263184,166.302757263184,166.302757263184,166.302757263184,176.164817810059,176.164817810059,176.164817810059,176.164817810059,176.164817810059,187.073509216309,187.073509216309,187.073509216309,187.073509216309,196.430992126465,196.430992126465,196.430992126465,196.430992126465,204.321998596191,204.321998596191,204.321998596191,204.321998596191,210.661743164062,210.661743164062,210.661743164062,210.661743164062,217.34846496582,217.34846496582,217.34846496582,217.34846496582,182.687141418457,182.687141418457,182.687141418457,182.687141418457,182.687141418457,163.795021057129,163.795021057129,163.795021057129,163.795021057129,175.752799987793,175.752799987793,175.752799987793,175.752799987793,175.752799987793,179.110008239746,179.110008239746,179.110008239746,179.110008239746,179.110008239746,180.313552856445,180.313552856445,180.313552856445,180.313552856445,180.313552856445,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,187.312210083008,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,190.415840148926,196.753562927246,196.753562927246,196.753562927246,196.753562927246,196.753562927246,205.559013366699,205.559013366699,205.559013366699,205.559013366699,205.559013366699,221.573532104492,221.573532104492,221.999092102051,221.999092102051,221.999092102051,222.179252624512,222.179252624512,222.179252624512,222.179252624512,222.179252624512,229.446304321289,229.446304321289,229.446304321289,229.446304321289,229.446304321289,237.988265991211,237.988265991211,237.988265991211,237.988265991211,237.988265991211,247.509765625,247.509765625,247.509765625,247.509765625,247.509765625,255.560554504395,255.560554504395,255.560554504395,255.560554504395,255.560554504395,178.289131164551,178.289131164551,178.289131164551,178.289131164551,178.289131164551,196.187477111816,196.187477111816,196.187477111816,196.187477111816,222.564331054688,222.564331054688,222.564331054688,222.564361572266,222.564361572266,222.564361572266,247.424919128418,247.424919128418,247.424919128418,258.095268249512,258.095268249512,258.095268249512,258.095268249512,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,192.384124755859,203.621376037598,203.621376037598,203.621376037598,203.621376037598,203.621376037598,212.956451416016,212.956451416016,212.956451416016,212.956451416016,212.956451416016,219.534553527832,219.534553527832,219.534553527832,219.534553527832,219.534553527832,228.037643432617,228.037643432617,228.037643432617,228.037643432617,228.037643432617,237.031929016113,237.031929016113,237.031929016113,237.031929016113,237.031929016113,197.325584411621,197.325584411621,197.325584411621,197.325584411621,197.325584411621,209.418922424316,209.418922424316,209.418922424316,209.418922424316,209.418922424316,216.388877868652,216.388877868652,216.388877868652,216.388877868652,216.388877868652,225.173568725586,225.173568725586,225.173568725586,225.173568725586,225.173568725586,221.155609130859,221.155609130859,221.155609130859,221.155609130859,200.169815063477,200.169815063477,200.169815063477,200.169815063477,210.496398925781,210.496398925781,210.496398925781,210.496398925781,210.496398925781,221.556900024414,221.556900024414,221.556900024414,221.556900024414,231.092987060547,231.092987060547,231.092987060547,231.092987060547,238.084533691406,238.084533691406,238.084533691406,238.084533691406,244.065826416016,244.065826416016,244.065826416016,244.065826416016,249.98917388916,249.98917388916,249.98917388916,249.98917388916,247.509780883789,247.509780883789,247.509780883789,247.509780883789,247.509780883789,194.916481018066,194.916481018066,194.916481018066,194.916481018066,201.103225708008,201.103225708008,201.103225708008,201.103225708008,201.103225708008,213.757530212402,213.757530212402,213.757530212402,213.757530212402,213.757530212402,215.260162353516,215.260162353516,215.260162353516,215.260162353516,215.260162353516,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,222.661987304688,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,225.917152404785,231.881355285645,231.881355285645,231.881355285645,231.881355285645,231.881355285645,231.881355285645,236.93758392334,236.93758392334,236.93758392334,236.93758392334,236.93758392334,248.956520080566,248.956520080566,248.956520080566,248.956520080566,248.956520080566,259.72322845459,259.72322845459,259.72322845459,259.72322845459,259.72322845459,259.72322845459,223.243949890137,223.243949890137,223.243949890137,223.243949890137,223.243949890137,223.243949890137,203.774284362793,203.774284362793,203.774284362793,203.774284362793,203.774284362793,216.42733001709,216.42733001709,216.42733001709,216.42733001709,216.42733001709,224.424835205078,224.424835205078,224.424835205078,224.424835205078,224.424835205078,232.427597045898,232.427597045898,232.427597045898,232.427597045898,232.427597045898,240.425750732422,240.425750732422,240.425750732422,240.425750732422,240.425750732422,251.148078918457,251.148078918457,251.148078918457,225.839332580566,225.839332580566,225.839332580566,236.691268920898,236.691268920898,236.691268920898,256.158660888672,256.158660888672,256.158660888672,256.158660888672,256.158660888672,256.158660888672,256.158660888672,256.158660888672,228.566177368164,228.566177368164,228.566177368164,228.566177368164,158.963966369629,158.963966369629,158.963966369629,175.908729553223,175.908729553223,175.908729553223,175.908729553223,175.908729553223,186.557029724121,186.557029724121,186.557029724121,186.557029724121,198.157257080078,198.157257080078,198.157257080078,198.157257080078,198.157257080078,207.284812927246,207.284812927246,207.284812927246,207.284812927246,207.284812927246,214.626983642578,214.626983642578,214.626983642578,214.626983642578,214.626983642578,214.626983642578,163.647178649902,163.647178649902,163.647178649902,163.647178649902,163.647178649902,170.614654541016,170.614654541016,170.614654541016,170.614654541016,170.614654541016,181.138198852539,181.138198852539,181.138198852539,181.138198852539,181.138198852539,191.837997436523,191.837997436523,191.837997436523,191.837997436523,191.837997436523,197.28466796875,197.28466796875,197.28466796875,197.28466796875,197.28466796875,197.28466796875,165.731002807617,165.731002807617,165.731002807617,165.731002807617,165.731002807617,177.406181335449,177.406181335449,177.406181335449,177.406181335449,177.406181335449,189.672416687012,189.672416687012,189.672416687012,189.672416687012,199.905563354492,199.905563354492,199.905563354492,199.905563354492,206.691162109375,206.691162109375,206.691162109375,206.691162109375,212.594818115234,212.594818115234,212.594818115234,212.594818115234,218.535522460938,218.535522460938,218.535522460938,218.535522460938,191.664665222168,191.664665222168,191.664665222168,191.664665222168,191.664665222168,164.776245117188,164.776245117188,164.776245117188,164.776245117188,170.906555175781,170.906555175781,170.906555175781,170.906555175781,170.906555175781,183.555107116699,183.555107116699,183.555107116699,183.555107116699,183.555107116699,184.785934448242,184.785934448242,184.785934448242,184.785934448242,184.785934448242,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,191.987945556641,195.165298461914,195.165298461914,195.165298461914,195.165298461914,195.165298461914,195.165832519531,195.165832519531,195.165832519531,195.165832519531,195.165832519531,201.193580627441,201.193580627441,201.193580627441,201.193580627441,201.193580627441,205.8173828125,205.8173828125,205.8173828125,205.8173828125,205.8173828125,217.899192810059,217.899192810059,217.899192810059,217.899192810059,217.899192810059,226.018707275391,226.018707275391,226.018707275391,226.198867797852,226.198867797852,226.198867797852,226.198867797852,226.198867797852,232.540550231934,232.540550231934,232.540550231934,232.540550231934,232.540550231934,241.955947875977,241.955947875977,241.955947875977,241.955947875977,241.955947875977,249.997741699219,249.997741699219,249.997741699219,249.997741699219,249.997741699219,259.473342895508,259.473342895508,259.473342895508,259.473342895508,259.473342895508,179.539436340332,179.539436340332,179.539436340332,179.539436340332,179.539436340332,210.601470947266,210.601470947266,210.601470947266,221.344024658203,221.344024658203,221.344024658203,224.950401306152,224.950401306152,245.253837585449,245.253837585449,245.253837585449,259.050117492676,259.050117492676,259.050117492676,259.050117492676,259.050117492676,259.050117492676,237.289932250977,237.289932250977,237.289932250977,237.289932250977,237.289932250977,246.712135314941,246.712135314941,246.712135314941,246.712135314941,246.712135314941,253.221733093262,253.221733093262,253.221733093262,253.221733093262,253.221733093262,260.135391235352,260.135391235352,260.135391235352,260.135391235352,260.135391235352,260.135391235352,191.512664794922,191.512664794922,191.512664794922,191.512664794922,191.512664794922,191.512664794922,197.934013366699,197.934013366699,197.934013366699,197.934013366699,197.934013366699,204.891716003418,204.891716003418,204.891716003418,204.891716003418,204.891716003418,211.550674438477,211.550674438477,211.550674438477,211.550674438477,211.550674438477,220.523941040039,220.523941040039,220.523941040039,220.523941040039,220.523941040039,228.422080993652,228.422080993652,228.422080993652,228.422080993652,228.422080993652,194.495849609375,194.495849609375,194.495849609375,203.285484313965,203.285484313965,203.285484313965,203.285484313965,203.285484313965,209.093246459961,209.093246459961,209.093246459961,209.093246459961,227.436157226562,227.436157226562,227.436157226562,227.436157226562,236.119873046875,236.119873046875,236.119873046875,236.119873046875,236.119873046875,243.201431274414,243.201431274414,243.201431274414,243.201431274414,234.98722076416,234.98722076416,234.98722076416,234.98722076416,234.98722076416,197.17219543457,197.17219543457,197.17219543457,197.17219543457,204.151306152344,204.151306152344,204.151306152344,204.151306152344,212.027587890625,212.027587890625,212.027587890625,212.027587890625,221.332313537598,221.332313537598,228.226127624512,228.226127624512,228.226127624512,228.226127624512,228.226127624512,229.459884643555,229.459884643555,229.459884643555,229.459884643555,229.459884643555,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,236.599327087402,239.740966796875,239.740966796875,239.740966796875,239.740966796875,239.740966796875,239.741500854492,239.741500854492,239.741500854492,239.741500854492,239.741500854492,245.704246520996,245.704246520996,245.704246520996,245.704246520996,245.704246520996,250.296714782715,250.296714782715,250.296714782715,250.296714782715,250.296714782715,255.677665710449,255.677665710449,255.677665710449,255.677665710449,255.677665710449,204.924942016602,204.924942016602,204.924942016602,204.924942016602,204.924942016602,207.879524230957,207.879524230957,207.879524230957,209.661865234375,209.661865234375,209.661865234375,209.661865234375,209.661865234375,217.338600158691,217.338600158691,217.338600158691,217.338600158691,217.338600158691,225.248603820801,225.248603820801,225.248603820801,225.248603820801,225.248603820801,233.298789978027,233.298789978027,233.298789978027,233.298789978027,233.298789978027,243.157127380371,243.157127380371,243.157127380371,243.157127380371,243.157127380371,255.967643737793,255.967643737793,255.967643737793,255.967643737793,255.967643737793,227.117004394531,227.117004394531,227.117004394531,238.509773254395,238.509773254395,238.509773254395,238.965515136719,238.965515136719,238.965515136719,258.667152404785,258.667152404785,258.667152404785,258.667152404785,240.926818847656,240.926818847656,240.926818847656,240.926818847656,240.926818847656,251.112533569336,251.112533569336,251.112533569336,251.112533569336,251.112533569336,251.112533569336,258.799560546875,258.799560546875,258.799560546875,258.799560546875,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,260.26033782959,220.050903320312,220.050903320312,220.050903320312,220.050903320312,220.050903320312,162.028854370117,162.028854370117,162.028854370117,162.028854370117,162.028854370117,164.196701049805,164.196701049805,164.196701049805,172.843818664551,172.843818664551,172.843818664551,172.843818664551,172.843818664551,179.772079467773,179.772079467773,179.772079467773,188.493156433105,188.493156433105,188.493156433105,188.493156433105,188.493156433105,196.961898803711,196.961898803711,196.961898803711,196.961898803711,196.961898803711,200.922836303711,200.922836303711,200.922836303711,200.922836303711,167.733375549316,167.733375549316,167.733375549316,167.733375549316,167.733375549316,174.774337768555,174.774337768555,174.774337768555,174.774337768555,174.774337768555,183.539451599121,183.539451599121,183.539451599121,183.539451599121,183.539451599121,192.686599731445,192.686599731445,192.686599731445,192.686599731445,192.686599731445,203.264129638672,203.264129638672,203.264129638672,168.322769165039,168.322769165039,168.322769165039,168.322769165039,168.322769165039,184.557098388672,184.557098388672,184.557098388672,184.557098388672,184.557098388672,191.688873291016,191.688873291016,191.688873291016,191.688873291016,198.327133178711,198.327133178711,198.327133178711,198.327133178711,204.297607421875,204.297607421875,204.297607421875,204.297607421875,210.376609802246,210.376609802246,210.376609802246,210.376609802246,218.021446228027,218.021446228027,218.021446228027,218.021446228027,218.021446228027,218.021446228027,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,229.722244262695,231.26488494873,231.26488494873,231.26488494873,231.26488494873,231.26488494873,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,238.784934997559,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,242.0693359375,247.559661865234,247.559661865234,247.559661865234,247.559661865234,247.559661865234,247.559661865234,248.916542053223,248.916542053223,248.916542053223,248.916542053223,248.916542053223,257.939483642578,257.939483642578,257.939483642578,257.939483642578,257.939483642578,216.58536529541,216.58536529541,216.58536529541,216.58536529541,216.58536529541,216.58536529541,177.824851989746,177.824851989746,177.824851989746,177.824851989746,177.824851989746,163.664077758789,163.664077758789,163.664077758789,163.664077758789,163.664077758789,163.664077758789,163.664077758789,163.664077758789,163.664077758789,152.070533752441,152.070533752441,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,260.789405822754,263.254905700684,263.254905700684,263.254905700684,263.683486938477,263.683486938477,263.683486938477,265.465827941895,265.465827941895,265.465827941895,265.465827941895,265.465827941895,275.548187255859,275.548187255859,275.548187255859,275.548187255859,275.548187255859,282.832946777344,282.832946777344,282.832946777344,282.832946777344,282.832946777344,290.83177947998,290.83177947998,290.83177947998,290.83177947998,290.83177947998,298.835868835449,298.835868835449,298.835868835449,298.835868835449,298.835868835449,306.837760925293,306.837760925293,306.837760925293,306.837760925293,306.837760925293,282.776420593262,282.776420593262,282.776420593262,282.776420593262,309.442504882812,309.442504882812,309.442504882812,309.442504882812,309.442504882812,309.442504882812,278.941314697266,278.941314697266,278.941314697266,278.941314697266,278.941314697266,278.941314697266,304.937385559082,304.937385559082,304.937385559082,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,314.996185302734,286.73698425293,286.73698425293,286.73698425293,286.73698425293,286.73698425293,286.73698425293,283.399833679199,283.399833679199,283.399833679199,283.399833679199,283.399833679199,294.123970031738,294.123970031738,294.123970031738,294.123970031738,294.123970031738,302.078453063965,302.078453063965,302.078453063965,302.078453063965,302.078453063965,310.493301391602,310.493301391602,310.493301391602,310.493301391602,310.493301391602,310.148880004883,310.148880004883,310.148880004883,310.148880004883,277.065841674805,277.065841674805,277.065841674805,277.065841674805,277.065841674805,284.202331542969,284.202331542969,284.202331542969,284.202331542969,284.202331542969,292.205718994141,292.205718994141,292.205718994141,298.911178588867,298.911178588867,298.911178588867,305.518730163574,305.518730163574,305.518730163574,305.518730163574,305.518730163574,289.280052185059,289.280052185059,289.280052185059,289.280052185059,289.280052185059,289.280052185059,289.280052185059,271.984001159668,271.984001159668,271.984001159668,271.984001159668,271.984001159668,271.984001159668,271.984001159668,277.457069396973,277.457069396973,277.457069396973,277.457069396973,289.441551208496,289.441551208496,289.441551208496,289.441551208496,289.441551208496,301.089988708496,301.089988708496,301.089988708496,301.089988708496,308.732383728027,308.732383728027,308.732383728027,308.732383728027,314.841514587402,314.841514587402,314.841514587402,314.841514587402,320.930053710938,320.930053710938,320.930053710938,320.930053710938,326.653015136719,326.653015136719,326.653015136719,326.653015136719,333.291793823242,333.291793823242,333.291793823242,333.291793823242,295.355728149414,295.355728149414,295.355728149414,295.355728149414,295.355728149414,279.230087280273,279.230087280273,290.606460571289,290.606460571289,290.606460571289,290.606460571289,290.606460571289,290.606536865234,290.606536865234,290.606536865234,290.606536865234,290.606536865234,292.15308380127,292.15308380127,292.15308380127,292.15308380127,292.15308380127,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.655937194824,299.65601348877,299.65601348877,299.65601348877,299.65601348877,299.65601348877,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,302.926651000977,304.346305847168,304.346305847168,304.346305847168,304.346305847168,309.757377624512,309.757377624512,309.757377624512,309.757377624512,309.757377624512,318.765068054199,318.765068054199,318.765068054199,318.765068054199,318.765068054199,333.067970275879,333.067970275879,333.067970275879,333.067970275879,333.067970275879,333.067970275879,334.850311279297,334.850311279297,334.850311279297,334.850311279297,334.850311279297,341.876373291016,341.876373291016,341.876373291016,341.876373291016,341.876373291016,352.580490112305,352.580490112305,352.580490112305,352.580490112305,352.580490112305,360.585098266602,360.585098266602,360.585098266602,360.585098266602,360.585098266602,368.589561462402,368.589561462402,368.589561462402,368.589561462402,368.589561462402,376.59407043457,376.59407043457,376.59407043457,376.59407043457,376.59407043457,295.279670715332,295.279670715332,295.279670715332,295.279670715332,295.279670715332,321.867134094238,321.867134094238,321.867134094238,333.755195617676,333.755195617676,333.755195617676,359.84587097168,359.84587097168,359.84587097168,371.005218505859,371.005218505859,371.005218505859,371.005218505859,363.670989990234,363.670989990234,363.670989990234,363.670989990234,363.670989990234,363.670989990234,357.637977600098,357.637977600098,357.637977600098,357.637977600098,357.637977600098,368.776496887207,368.776496887207,368.776496887207,368.776496887207,368.776496887207,377.181587219238,377.181587219238,377.181587219238,377.181587219238,377.181587219238,328.695335388184,328.695335388184,328.695335388184,328.695335388184,328.695335388184,328.695335388184,321.139289855957,321.139289855957,321.139289855957,321.139289855957,321.139289855957,329.99739074707,329.99739074707,329.99739074707,329.99739074707,329.99739074707,336.553482055664,336.553482055664,336.553482055664,343.114448547363,343.114448547363,343.114448547363,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,349.028846740723,299.185516357422,299.185516357422,299.185516357422,299.185516357422,273.490913391113,273.490913391113,273.490913391113,273.490913391113,280.12296295166,280.12296295166,280.12296295166,280.12296295166,280.12296295166,287.073287963867,287.073287963867,287.073287963867,287.073287963867,287.073287963867,287.073287963867,297.953659057617,297.953659057617,297.953659057617,305.612129211426,305.612129211426,305.612129211426,305.612129211426,317.392738342285,317.392738342285,317.392738342285,317.392738342285,324.774276733398,324.774276733398,324.774276733398,324.774276733398,324.774276733398,303.64656829834,303.64656829834,303.64656829834,303.64656829834,303.64656829834,280.196853637695,280.196853637695,280.196853637695,280.196853637695,287.376045227051,287.376045227051,287.376045227051,287.376045227051,293.665252685547,293.665252685547,293.665252685547,293.665252685547,300.000381469727,300.000381469727,300.000381469727,300.000381469727,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,315.166435241699,316.761108398438,316.761108398438,316.761108398438,316.761108398438,316.761108398438,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,324.534332275391,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,327.892692565918,334.133453369141,334.133453369141,334.133453369141,334.133453369141,334.133453369141,334.133453369141,339.348793029785,339.348793029785,339.348793029785,339.348793029785,339.348793029785,352.039138793945,352.039138793945,352.039138793945,352.039138793945,352.039138793945,357.242744445801,357.242744445801,357.242744445801,357.242744445801,357.242744445801,357.242744445801,363.818733215332,363.818733215332,363.818733215332,363.818733215332,363.818733215332,370.151275634766,370.151275634766,370.151275634766,370.151275634766,370.151275634766,379.85228729248,379.85228729248,379.85228729248,379.85228729248,379.85228729248,387.856254577637,387.856254577637,387.856254577637,387.856254577637,387.856254577637,397.683135986328,397.683135986328,397.683135986328,397.683135986328,397.683135986328,408.706329345703,408.706329345703,408.706329345703,408.706329345703,408.706329345703,434.326942443848,434.326942443848,434.326942443848,445.78751373291,445.78751373291,445.78751373291,450.015838623047,450.015838623047,450.015838623047,450.015838623047,450.015838623047,450.015838623047,450.015838623047,370.628860473633,370.628860473633,370.628860473633,314.547904968262,314.547904968262,314.547904968262,332.527282714844,332.527282714844,332.527282714844,332.527282714844,332.527282714844,342.199378967285,342.199378967285,342.199378967285,342.199378967285,342.199378967285,352.43985748291,352.43985748291,352.43985748291,352.43985748291,352.43985748291,363.100448608398,363.100448608398,363.100448608398,363.100448608398,363.100448608398,369.360206604004,369.360206604004,369.360206604004,369.360206604004,369.360206604004,369.360206604004,369.360206604004,324.559204101562,324.559204101562,324.559204101562,324.559204101562,324.559204101562,324.559204101562,331.164199829102,331.164199829102,331.164199829102,342.180023193359,342.180023193359,342.180023193359,342.180023193359,342.180023193359,350.653648376465,350.653648376465,350.653648376465,350.653648376465,350.653648376465,350.653648376465,321.790832519531,321.790832519531,321.790832519531,328.035369873047,328.035369873047,328.035369873047,328.035369873047,339.200637817383,339.200637817383,339.200637817383,339.200637817383,339.200637817383,351.00447845459,351.00447845459,351.00447845459,351.00447845459,359.40803527832,359.40803527832,359.40803527832,359.40803527832,359.40803527832,366.193771362305,366.193771362305,366.193771362305,366.193771362305,359.69800567627,359.69800567627,359.69800567627,359.69800567627,359.69800567627,320.596694946289,320.596694946289,320.596694946289,320.596694946289,326.69408416748,326.69408416748,326.69408416748,326.69408416748,332.498504638672,332.498504638672,332.498504638672,332.498504638672,340.771621704102,340.771621704102,350.752601623535,350.752601623535,350.752601623535,350.752601623535,350.752601623535,351.408248901367,351.408248901367,351.408248901367,351.408248901367,351.408248901367,351.408248901367,352.302215576172,352.302215576172,352.302215576172,352.302215576172,352.302215576172,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,359.826354980469,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,363.098365783691,364.518486022949,364.518486022949,364.518486022949,364.518486022949,369.152961730957,369.152961730957,369.152961730957,369.152961730957,369.152961730957,369.152961730957,374.325653076172,374.325653076172,374.325653076172,374.325653076172,374.325653076172,387.473136901855,387.473136901855,387.473136901855,387.473136901855,387.473136901855,391.550331115723,391.550331115723,391.550331115723,391.550331115723,391.550331115723,391.550331115723,398.093879699707,398.093879699707,398.093879699707,398.093879699707,398.093879699707,405.582672119141,405.582672119141,405.582672119141,405.582672119141,405.582672119141,414.275527954102,414.275527954102,414.275527954102,414.275527954102,414.275527954102,423.805503845215,423.805503845215,423.805503845215,423.805503845215,423.805503845215,434.85595703125,434.85595703125,434.85595703125,434.85595703125,434.85595703125,443.952072143555,443.952072143555,443.952072143555,441.255340576172,441.255340576172,441.255340576172,441.255340576172,348.359275817871,348.359275817871,348.359275817871,359.676704406738,359.676704406738,359.676704406738,376.212379455566,376.212379455566,391.941871643066,391.941871643066,391.941871643066,391.941871643066,405.678672790527,405.678672790527,405.678672790527,405.678672790527,416.278045654297,416.278045654297,416.278045654297,416.278045654297,426.915985107422,426.915985107422,426.915985107422,426.915985107422,426.915985107422,436.107177734375,436.107177734375,436.107177734375,386.543441772461,386.543441772461,386.543441772461,397.260429382324,397.260429382324,397.260429382324,397.260429382324,397.260429382324,397.260429382324,408.352149963379,408.352149963379,408.352149963379,408.352149963379,408.352149963379,417.269088745117,417.269088745117,417.269088745117,417.269088745117,417.269088745117,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,417.34986114502,292.8251953125,292.8251953125,292.8251953125,292.8251953125,277.567039489746,277.567039489746,277.567039489746,277.567039489746,277.567039489746,287.647247314453,287.647247314453,287.647247314453,287.647247314453,300.25358581543,300.25358581543,300.25358581543,310.020362854004,310.020362854004,310.020362854004,310.020362854004,319.105033874512,319.105033874512,319.105033874512,319.105033874512,325.673637390137,325.673637390137,325.673637390137,325.673637390137,299.486831665039,299.486831665039,299.486831665039,299.486831665039,299.486831665039,276.708114624023,276.708114624023,276.708114624023,276.708114624023,283.940841674805,283.940841674805,283.940841674805,283.940841674805,291.319038391113,291.319038391113,291.319038391113,291.319038391113,299.118194580078,299.118194580078,310.464897155762,310.464897155762,310.464897155762,310.464897155762,310.464897155762,312.016403198242,312.016403198242,312.016403198242,312.016403198242,312.016403198242,318.912322998047,318.912322998047,318.912322998047,318.912322998047,318.912322998047,318.912322998047,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,319.471542358398,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,322.708152770996,328.658683776855,328.658683776855,328.658683776855,328.658683776855,328.658683776855,328.658683776855,333.755958557129,333.755958557129,333.755958557129,333.755958557129,333.755958557129,346.28694152832,346.28694152832,346.28694152832,346.28694152832,346.28694152832,350.810928344727,350.810928344727,350.810928344727,350.810928344727,350.810928344727,350.810928344727,354.283660888672,354.283660888672,354.283660888672,354.283660888672,354.283660888672,362.752494812012,362.752494812012,362.752494812012,362.752494812012,362.752494812012,370.080909729004,370.080909729004,370.080909729004,370.080909729004,370.080909729004,378.082153320312,378.082153320312,378.082153320312,378.082153320312,378.082153320312,386.085289001465,386.085289001465,386.085289001465,386.085289001465,386.085289001465,395.607803344727,395.607803344727,395.607803344727,395.607803344727,395.607803344727,427.728523254395,427.728523254395,427.728523254395,439.153335571289,439.153335571289,439.153335571289,443.3623046875,443.3623046875,443.3623046875,443.3623046875,443.3623046875,443.3623046875,443.3623046875,343.532112121582,343.532112121582,343.532112121582,313.652793884277,313.652793884277,313.652793884277,332.474922180176,332.474922180176,332.474922180176,332.474922180176,332.474922180176,341.025611877441,341.025611877441,341.025611877441,341.025611877441,356.528297424316,356.528297424316,356.528297424316,363.794647216797,363.794647216797,363.794647216797,363.794647216797,363.794647216797,333.051025390625,333.051025390625,333.051025390625,333.051025390625,325.140228271484,325.140228271484,325.140228271484,325.140228271484,325.140228271484,332.19832611084,332.19832611084,332.19832611084,332.19832611084,332.19832611084,339.258880615234,339.258880615234,339.258880615234,339.258880615234,339.258880615234,339.258880615234,335.696853637695,335.696853637695,335.696853637695,335.696853637695,335.696853637695,335.696853637695,318.470497131348,318.470497131348,318.470497131348,325.795623779297,325.795623779297,325.795623779297,325.795623779297,325.795623779297,336.690765380859,336.690765380859,336.690765380859,336.690765380859,336.690765380859,348.028129577637,348.028129577637,348.028129577637,348.028129577637,357.523597717285,357.523597717285,357.523597717285,357.523597717285,364.622207641602,364.622207641602,364.622207641602,364.622207641602,364.760162353516,364.760162353516,364.760162353516,364.760162353516,364.760162353516,318.796951293945,318.796951293945,318.796951293945,318.796951293945,325.470085144043,325.470085144043,325.470085144043,325.470085144043,330.817726135254,330.817726135254,330.817726135254,330.817726135254,339.509803771973,339.509803771973,349.514869689941,349.514869689941,349.514869689941,349.514869689941,349.514869689941,351.098495483398,351.098495483398,351.098495483398,351.098495483398,351.098495483398,351.775978088379,351.775978088379,351.775978088379,351.775978088379,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,358.617179870605,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,361.855377197266,367.5751953125,367.5751953125,367.5751953125,367.5751953125,367.5751953125,372.183799743652,372.183799743652,372.183799743652,372.183799743652,372.183799743652,381.175903320312,381.175903320312,381.175903320312,381.175903320312,381.175903320312,388.896286010742,388.896286010742,388.896286010742,388.896286010742,388.896286010742,388.896286010742,390.67862701416,390.67862701416,390.67862701416,390.67862701416,390.67862701416,395.428733825684,395.428733825684,395.428733825684,395.428733825684,395.428733825684,405.038879394531,405.038879394531,405.038879394531,405.038879394531,405.038879394531,411.517608642578,411.517608642578,411.517608642578,411.517608642578,411.517608642578,424.095977783203,424.095977783203,424.095977783203,424.095977783203,424.095977783203,432.099365234375,432.099365234375,432.099365234375,432.099365234375,432.099365234375,440.920616149902,440.920616149902,440.920616149902,440.920616149902,440.920616149902,441.779327392578,441.779327392578,441.779327392578,441.779327392578,346.701683044434,346.701683044434,346.701683044434,358.095878601074,358.095878601074,358.095878601074,374.723999023438,374.723999023438,386.649772644043,386.649772644043,386.649772644043,400.933303833008,400.933303833008,400.933303833008,400.933303833008,400.933303833008,410.150871276855,410.150871276855,410.150871276855,410.150871276855,410.150871276855,418.891036987305,418.891036987305,418.891036987305,418.891036987305,418.891036987305,430.479934692383,430.479934692383,430.479934692383,430.479934692383,430.479934692383,435.593254089355,435.593254089355,435.593254089355,435.593254089355,435.593254089355,435.593254089355,387.067108154297,387.067108154297,387.067108154297,387.067108154297,387.067108154297,395.472213745117,395.472213745117,395.472213745117,395.472213745117,395.472213745117,406.757369995117,406.757369995117,406.757369995117,406.757369995117,406.757369995117,415.032623291016,415.032623291016,415.032623291016,415.032623291016,415.032623291016,415.032623291016,403.830833435059,403.830833435059,403.830833435059,403.830833435059,403.830833435059,403.830833435059,313.803123474121,313.803123474121,313.803123474121,313.803123474121,313.803123474121,313.803123474121,318.444046020508,318.444046020508,318.444046020508,318.444046020508,318.444046020508,324.985420227051,324.985420227051,324.985420227051,324.985420227051,324.985420227051,324.985420227051,332.943077087402,332.943077087402,332.943077087402,332.943077087402,342.974243164062,342.974243164062,342.974243164062,342.974243164062,342.974243164062,353.116111755371,353.116111755371,353.116111755371,353.116111755371,360.595573425293,360.595573425293,360.595573425293,360.595573425293,360.595573425293,366.368049621582,366.368049621582,366.368049621582,366.368049621582,366.368049621582,318.647300720215,318.647300720215,318.647300720215,318.647300720215,324.425071716309,324.425071716309,324.425071716309,324.425071716309,331.676239013672,331.676239013672,331.676239013672,331.676239013672,338.100044250488,338.100044250488,338.100044250488,338.100044250488,344.690139770508,344.690139770508,344.690139770508,344.690139770508,344.690139770508,344.690139770508,344.690139770508,344.690139770508,356.683547973633,356.683547973633,356.683547973633,356.683547973633,356.683547973633,358.26993560791,358.26993560791,358.26993560791,358.26993560791,358.26993560791,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,365.76879119873,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993362426758,368.993896484375,368.993896484375,368.993896484375,368.993896484375,368.993896484375,374.946601867676,374.946601867676,374.946601867676,374.946601867676,374.946601867676,374.946601867676,380.070182800293,380.070182800293,380.070182800293,380.070182800293,380.070182800293,392.67147064209,392.67147064209,392.67147064209,392.67147064209,392.67147064209,399.174301147461,399.174301147461,399.174301147461,399.174301147461,399.174301147461,399.174301147461,405.708213806152,405.708213806152,405.708213806152,405.708213806152,405.708213806152,411.088897705078,411.088897705078,411.088897705078,411.088897705078,411.088897705078,420.032783508301,420.032783508301,420.032783508301,420.032783508301,420.032783508301,429.890785217285,429.890785217285,429.890785217285,429.890785217285,429.890785217285,439.415939331055,439.415939331055,439.415939331055,439.415939331055,439.415939331055,450.517166137695,450.517166137695,450.517166137695,450.517166137695,450.517166137695,432.545783996582,432.545783996582,432.545783996582,432.545783996582,432.545783996582,349.002555847168,349.002555847168,349.002555847168,360.421073913574,360.421073913574,360.421073913574,377.086410522461,377.086410522461,389.033569335938,389.033569335938,389.033569335938,405.385398864746,405.385398864746,405.385398864746,405.385398864746,405.385398864746,413.958808898926,413.958808898926,413.958808898926,413.958808898926,423.369041442871,423.369041442871,423.369041442871,423.369041442871,423.369041442871,432.51863861084,432.51863861084,432.51863861084,432.51863861084,432.51863861084,432.070533752441,432.070533752441,432.070533752441,432.070533752441,432.070533752441,432.070533752441,384.764366149902,384.764366149902,384.764366149902,384.764366149902,384.764366149902,393.220848083496,393.220848083496,393.220848083496,393.220848083496,401.662712097168,401.662712097168,401.662712097168,401.662712097168,401.662712097168,408.480827331543,408.480827331543,408.480827331543,408.480827331543,408.480827331543,410.112586975098,410.112586975098,410.112586975098,410.112586975098,410.112586975098,410.112586975098,410.112586975098,360.55541229248,360.55541229248,360.55541229248,360.55541229248,360.55541229248,367.390670776367,367.390670776367,367.390670776367,367.390670776367,367.390670776367,367.390670776367,377.363189697266,377.363189697266,377.363189697266,377.363189697266,377.363189697266,384.375877380371,384.375877380371,384.375877380371,384.375877380371,395.952163696289,395.952163696289,395.952163696289,395.952163696289,403.259498596191,403.259498596191,403.259498596191,403.259498596191,403.259498596191,359.620361328125,359.620361328125,359.620361328125,359.620361328125,359.620361328125,358.548042297363,358.548042297363,358.548042297363,358.548042297363,364.186340332031,364.186340332031,364.186340332031,364.186340332031,372.330368041992,372.330368041992,372.330368041992,372.330368041992,378.631149291992,378.631149291992,378.631149291992,378.631149291992,384.217269897461,384.217269897461,384.217269897461,384.217269897461,396.832206726074,396.832206726074,396.832206726074,396.832206726074,396.832206726074,400.292007446289,400.292007446289,400.292007446289,400.292007446289,400.292007446289,401.88062286377,401.88062286377,401.88062286377,401.88062286377,401.88062286377,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,409.381591796875,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,412.60262298584,418.572219848633,418.572219848633,418.572219848633,418.572219848633,418.572219848633,418.572219848633,423.713363647461,423.713363647461,423.713363647461,423.713363647461,423.713363647461,436.345649719238,436.345649719238,436.345649719238,436.345649719238,436.345649719238,440.906578063965,440.906578063965,440.906578063965,441.086738586426,441.086738586426,441.086738586426,441.086738586426,441.086738586426,447.403686523438,447.403686523438,447.403686523438,447.403686523438,447.403686523438,452.793182373047,452.793182373047,452.793182373047,452.793182373047,452.793182373047,452.793182373047,364.566116333008,364.566116333008,364.566116333008,364.566116333008,364.566116333008,375.620071411133,375.620071411133,375.620071411133,375.620071411133,375.620071411133,383.620590209961,383.620590209961,383.620590209961,383.620590209961,383.620590209961,391.622856140137,391.622856140137,391.622856140137,391.622856140137,391.622856140137,402.305160522461,402.305160522461,402.305160522461,436.139663696289,436.139663696289,436.139663696289,436.139663696289,436.139663696289,436.139663696289,452.690887451172,452.690887451172,423.180587768555,423.180587768555,423.180587768555,436.969345092773,436.969345092773,436.969345092773,436.969345092773,436.969345092773,445.618202209473,445.618202209473,445.618202209473,445.618202209473,445.618202209473,454.938316345215,454.938316345215,454.938316345215,454.938316345215,454.938316345215,454.938316345215,401.00089263916,401.00089263916,401.00089263916,401.00089263916,401.00089263916,412.925270080566,412.925270080566,412.925270080566,412.925270080566,412.925270080566,419.442115783691,419.442115783691,419.442115783691,419.442115783691,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,426.456130981445,304.53343963623,304.53343963623,304.53343963623,304.53343963623,271.801483154297,271.801483154297,271.801483154297,271.801483154297,277.30207824707,277.30207824707,277.30207824707,277.30207824707,277.30207824707,284.999397277832,284.999397277832,284.999397277832,284.999397277832,284.999397277832,293.703231811523,293.703231811523,293.703231811523,293.703231811523,293.703231811523,293.703231811523,301.581817626953,301.581817626953,301.581817626953,301.581817626953,301.581817626953,310.432716369629,310.432716369629,310.432716369629,310.432716369629,310.432716369629,279.765724182129,279.765724182129,279.765724182129,279.765724182129,279.765724182129,279.765724182129,279.765724182129,284.010185241699,284.010185241699,284.010185241699,284.010185241699,293.727874755859,293.727874755859,293.727874755859,293.727874755859,293.727874755859,302.146957397461,302.146957397461,302.146957397461,302.146957397461,307.665428161621,307.665428161621,307.665428161621,307.665428161621,314.771270751953,314.771270751953,314.771270751953,314.771270751953,321.856872558594,321.856872558594,321.856872558594,321.856872558594,329.005889892578,329.005889892578,329.005889892578,329.005889892578,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,343.20873260498,344.794479370117,344.794479370117,344.794479370117,344.794479370117,344.794479370117,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,352.238624572754,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431411743164,355.431945800781,355.431945800781,355.431945800781,355.431945800781,355.431945800781,361.337936401367,361.337936401367,361.337936401367,361.337936401367,361.337936401367,361.337936401367,366.352104187012,366.352104187012,366.352104187012,366.352104187012,366.352104187012,376.575157165527,376.575157165527,376.575157165527,376.575157165527,376.575157165527,385.497627258301,385.497627258301,385.497627258301,385.677787780762,385.677787780762,385.677787780762,385.677787780762,385.677787780762,391.993721008301,391.993721008301,391.993721008301,391.993721008301,391.993721008301,404.94849395752,404.94849395752,404.94849395752,404.94849395752,404.94849395752,412.954429626465,412.954429626465,412.954429626465,412.954429626465,412.954429626465,420.956069946289,420.956069946289,420.956069946289,420.956069946289,420.956069946289,428.957588195801,428.957588195801,428.957588195801,428.957588195801,428.957588195801,438.592765808105,438.592765808105,438.592765808105,415.000595092773,415.000595092773,415.000595092773,415.000595092773,304.741752624512,304.741752624512,304.741752624512,316.417381286621,316.417381286621,316.417381286621,333.417472839355,333.417472839355,349.576805114746,349.576805114746,349.576805114746,349.576805114746,359.262924194336,359.262924194336,359.262924194336,359.262924194336,359.262924194336,370.78352355957,370.78352355957,370.78352355957,370.78352355957,382.464942932129,382.464942932129,382.464942932129,382.464942932129,382.464942932129,389.221809387207,389.221809387207,389.221809387207,389.221809387207,389.221809387207,396.488838195801,396.488838195801,396.488838195801,396.488838195801,347.843231201172,347.843231201172,347.843231201172,347.843231201172,347.843231201172,356.816497802734,356.816497802734,356.816497802734,356.816497802734,356.816497802734,368.273086547852,368.273086547852,368.273086547852,368.273086547852,368.273086547852,375.615295410156,375.615295410156,375.615295410156,375.615295410156,375.615295410156,348.448936462402,348.448936462402,348.448936462402,348.448936462402,348.448936462402,354.43628692627,354.43628692627,354.43628692627,354.43628692627,375.418785095215,375.418785095215,375.418785095215,375.418785095215,375.418785095215,386.071113586426,386.071113586426,386.071113586426,386.071113586426,394.903312683105,394.903312683105,394.903312683105,394.903312683105,362.489288330078,362.489288330078,362.489288330078,362.489288330078,362.489288330078,349.029083251953,349.029083251953,349.029083251953,349.029083251953,356.386817932129,356.386817932129,356.386817932129,356.386817932129,362.856620788574,362.856620788574,362.856620788574,362.856620788574,375.205856323242,375.205856323242,375.205856323242,379.932762145996,379.932762145996,379.932762145996,379.932762145996,379.932762145996,381.551727294922,381.551727294922,381.551727294922,381.551727294922,381.551727294922,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,389.184982299805,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,392.44197845459,398.240005493164,398.240005493164,398.240005493164,398.240005493164,398.240005493164,400.366333007812,400.366333007812,400.366333007812,400.366333007812,400.366333007812,408.146118164062,408.146118164062,408.146118164062,408.146118164062,408.146118164062,425.17919921875,425.17919921875,425.17919921875,425.17919921875,425.17919921875,427.300689697266,427.300689697266,427.300689697266,427.47826385498,427.47826385498,427.47826385498,433.847938537598,433.847938537598,433.847938537598,433.847938537598,433.847938537598,443.541305541992,443.541305541992,443.541305541992,443.541305541992,443.541305541992,451.546119689941,451.546119689941,451.546119689941,451.546119689941,451.546119689941,453.547431945801,453.547431945801,453.547431945801,453.547431945801,453.547431945801,453.547431945801,360.577156066895,360.577156066895,360.577156066895,360.577156066895,360.577156066895,370.098892211914,370.098892211914,370.098892211914,370.098892211914,370.098892211914,401.591171264648,401.591171264648,401.591171264648,412.865966796875,412.865966796875,412.865966796875,429.346466064453,429.346466064453,445.989242553711,445.989242553711,445.989242553711,445.989242553711,453.459838867188,453.459838867188,453.459838867188,453.459838867188,453.459838867188,453.459838867188,419.743347167969,419.743347167969,419.743347167969,419.743347167969,419.743347167969,429.356285095215,429.356285095215,429.356285095215,429.356285095215,429.356285095215,442.299438476562,442.299438476562,442.299438476562,442.299438476562,442.299438476562,450.350929260254,450.350929260254,450.350929260254,450.350929260254,450.350929260254,450.350929260254,450.350929260254,331.932388305664,331.932388305664,331.932388305664,331.932388305664,331.932388305664,331.932388305664,331.932388305664,322.176200866699,322.176200866699,322.176200866699,322.176200866699,322.176200866699,329.031051635742,329.031051635742,329.031051635742,329.031051635742,329.031051635742,342.508094787598,342.508094787598,342.508094787598,342.508094787598,342.508094787598,348.478782653809,348.478782653809,348.478782653809,348.478782653809,319.571731567383,319.571731567383,319.571731567383,319.571731567383,319.571731567383,332.849464416504,332.849464416504,332.849464416504,332.849464416504,332.849464416504,343.832084655762,343.832084655762,343.832084655762,343.832084655762,354.342910766602,354.342910766602,354.342910766602,354.342910766602,360.081123352051,360.081123352051,360.081123352051,360.081123352051,366.941925048828,366.941925048828,366.941925048828,366.941925048828,368.05290222168,368.05290222168,368.05290222168,368.05290222168,368.05290222168,318.602119445801,318.602119445801,318.602119445801,318.602119445801,324.378784179688,324.378784179688,324.378784179688,324.378784179688,333.213966369629,333.213966369629,344.564064025879,344.564064025879,344.564064025879,344.564064025879,344.564064025879,345.236610412598,345.236610412598,345.236610412598,345.236610412598,345.236610412598,345.236610412598,346.141006469727,346.141006469727,346.141006469727,346.141006469727,346.141006469727,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,353.555404663086,354.10188293457,354.10188293457,354.10188293457,354.10188293457,354.10188293457,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,356.742393493652,361.399353027344,361.399353027344,361.399353027344,361.399353027344,361.399353027344,363.456695556641,363.456695556641,363.456695556641,363.456695556641,363.456695556641,371.975242614746,371.975242614746,371.975242614746,371.975242614746,371.975242614746,388.936981201172,388.936981201172,388.936981201172,388.936981201172,388.936981201172,393.165710449219,393.165710449219,393.165710449219,393.343284606934,393.343284606934,393.343284606934,399.711357116699,399.711357116699,399.711357116699,399.711357116699,399.711357116699,409.633979797363,409.633979797363,409.633979797363,409.633979797363,409.633979797363,420.689231872559,420.689231872559,420.689231872559,420.689231872559,420.689231872559,428.697975158691,428.697975158691,428.697975158691,428.697975158691,428.697975158691,436.694053649902,436.694053649902,436.694053649902,436.694053649902,436.694053649902,446.14478302002,446.14478302002,446.14478302002,354.765747070312,354.765747070312,354.765747070312,354.765747070312,354.765747070312,360.830238342285,360.830238342285,360.830238342285,361.294471740723,361.294471740723,361.294471740723,387.379035949707,387.379035949707,387.379035949707,404.451820373535,404.451820373535,404.451820373535,404.451820373535,404.451820373535,414.97550201416,414.97550201416,414.97550201416,414.97550201416,426.56615447998,426.56615447998,426.56615447998,433.391616821289,433.391616821289,433.391616821289,433.391616821289,433.391616821289,439.531402587891,439.531402587891,439.531402587891,439.531402587891,439.531402587891,439.531402587891,384.74388885498,384.74388885498,384.74388885498,384.74388885498,384.74388885498,392.889419555664,392.889419555664,392.889419555664,392.889419555664,392.889419555664,401.110832214355,401.110832214355,401.110832214355,401.110832214355,401.110832214355,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,411.156715393066,374.686347961426,374.686347961426,374.686347961426,374.686347961426,272.651931762695,272.651931762695,272.651931762695,272.651931762695,272.651931762695,272.651931762695,272.651931762695,272.651931762695,281.083961486816,281.083961486816,281.083961486816,288.685264587402,288.685264587402,288.685264587402,288.685264587402,298.169403076172,298.169403076172,298.169403076172,298.169403076172,298.169403076172,305.415199279785,305.415199279785,305.415199279785,305.415199279785,315.237663269043,315.237663269043,315.237663269043,315.237663269043,322.20580291748,322.20580291748,322.20580291748,322.20580291748,322.20580291748,329.054573059082,329.054573059082,329.054573059082,329.054573059082,276.994262695312,276.994262695312,276.994262695312,276.994262695312,276.994262695312,280.034797668457,280.034797668457,280.034797668457,280.034797668457,288.687805175781,288.687805175781,288.687805175781,288.687805175781,295.921897888184,295.921897888184,295.921897888184,295.921897888184,305.84497833252,305.84497833252,305.84497833252,314.01741027832,314.01741027832,314.01741027832,314.01741027832,314.01741027832,314.711471557617,314.711471557617,314.711471557617,314.711471557617,314.711471557617,314.711471557617,315.628486633301,315.628486633301,315.628486633301,315.628486633301,315.628486633301,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,323.210754394531,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.446762084961,326.447296142578,326.447296142578,326.447296142578,326.447296142578,326.447296142578,332.479125976562,332.479125976562,332.479125976562,332.479125976562,332.479125976562,332.479125976562,336.908309936523,336.908309936523,336.908309936523,336.908309936523,336.908309936523,345.074699401855,345.074699401855,345.074699401855,345.074699401855,345.074699401855,362.001838684082,362.001838684082,362.001838684082,362.001838684082,362.001838684082,363.12361907959,363.12361907959,363.12361907959,364.905960083008,364.905960083008,364.905960083008,364.905960083008,364.905960083008,375.056549072266,375.056549072266,375.056549072266,375.056549072266,375.056549072266,382.537612915039,382.537612915039,382.537612915039,382.537612915039,382.537612915039,390.534202575684,390.534202575684,390.534202575684,390.534202575684,390.534202575684,398.53247833252,398.53247833252,398.53247833252,398.53247833252,398.53247833252,406.535659790039,406.535659790039,406.535659790039,406.535659790039,406.535659790039,423.783866882324,423.783866882324,423.783866882324,423.783866882324,449.824935913086,449.824935913086,449.824935913086,449.824935913086,449.824935913086,449.824935913086,447.979507446289,447.979507446289,447.979507446289,295.038795471191,295.038795471191,295.038795471191,320.675163269043,320.675163269043,320.675163269043,320.675163269043,331.598251342773,331.598251342773,331.598251342773,340.515243530273,340.515243530273,340.515243530273,340.515243530273,351.255966186523,351.255966186523,351.255966186523,351.255966186523,351.255966186523,358.656929016113,358.656929016113,358.656929016113,358.656929016113,358.656929016113,366.354248046875,366.354248046875,366.354248046875,366.354248046875,319.528999328613,319.528999328613,319.528999328613,319.528999328613,319.528999328613,327.650001525879,327.650001525879,327.650001525879,327.650001525879,327.650001525879,340.262535095215,340.262535095215,340.262535095215,340.262535095215,340.262535095215,347.085548400879,347.085548400879,347.085548400879,347.085548400879,347.085548400879,330.727066040039,330.727066040039,330.727066040039,330.727066040039,330.727066040039,330.727066040039,323.671821594238,323.671821594238,323.671821594238,323.671821594238,323.671821594238,332.06046295166,332.06046295166,332.06046295166,332.06046295166,332.06046295166,346.621643066406,346.621643066406,346.621643066406,346.621643066406,357.082649230957,357.082649230957,357.082649230957,357.082649230957,363.15266418457,363.15266418457,363.15266418457,363.15266418457,369.081604003906,369.081604003906,369.081604003906,369.081604003906,324.492889404297,324.492889404297,324.492889404297,324.492889404297,324.492889404297,321.26628112793,321.26628112793,321.26628112793,321.26628112793,329.451850891113,329.451850891113,329.451850891113,329.451850891113,337.569679260254,337.569679260254,337.569679260254,337.569679260254,337.569679260254,351.124893188477,351.124893188477,351.124893188477,351.124893188477,351.124893188477,352.679344177246,352.679344177246,352.679344177246,352.679344177246,352.679344177246,359.44734954834,359.44734954834,359.44734954834,359.44734954834,359.44734954834,359.98454284668,359.98454284668,359.98454284668,359.98454284668,359.98454284668,359.984619140625,359.984619140625,359.984619140625,359.984619140625,359.984619140625,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,363.134773254395,368.924240112305,368.924240112305,368.924240112305,368.924240112305,368.924240112305,368.924240112305,373.968711853027,373.968711853027,373.968711853027,373.968711853027,373.968711853027,386.304985046387,386.304985046387,386.304985046387,386.304985046387,386.304985046387,398.391212463379,398.391212463379,398.391212463379,398.391212463379,398.391212463379,398.391212463379,400.173553466797,400.173553466797,400.173553466797,400.173553466797,400.173553466797,406.931007385254,406.931007385254,406.931007385254,406.931007385254,406.931007385254,417.868362426758,417.868362426758,417.868362426758,417.868362426758,417.868362426758,425.871475219727,425.871475219727,425.871475219727,425.871475219727,425.871475219727,433.872573852539,433.872573852539,433.872573852539,433.872573852539,433.872573852539,441.880821228027,441.880821228027,441.880821228027,441.880821228027,441.880821228027,452.87646484375,452.87646484375,452.87646484375,422.250335693359,422.250335693359,422.250335693359,422.250335693359,422.250335693359,350.38599395752,350.38599395752,350.38599395752,362.376998901367,362.376998901367,362.376998901367,364.775436401367,364.775436401367,388.661933898926,388.661933898926,388.661933898926,409.478012084961,409.478012084961,409.478012084961,409.478012084961,409.478012084961,417.758651733398,417.758651733398,417.758651733398,417.758651733398,429.295768737793,429.295768737793,429.295768737793,429.295768737793,429.295768737793,438.849456787109,438.849456787109,438.849456787109,438.849456787109,438.849456787109,403.929344177246,403.929344177246,403.929344177246,403.929344177246,385.175010681152,385.175010681152,385.175010681152,385.175010681152,385.175010681152,396.734436035156,396.734436035156,396.734436035156,396.734436035156,396.734436035156,403.515815734863,403.515815734863,403.515815734863,403.515815734863,403.515815734863,412.704597473145,412.704597473145,412.704597473145,412.704597473145,412.704597473145,401.384429931641,401.384429931641,401.384429931641,401.384429931641,401.384429931641,401.384429931641,322.069557189941,322.069557189941,322.069557189941,322.069557189941,328.610931396484,328.610931396484,328.610931396484,328.610931396484,335.565048217773,335.565048217773,335.565048217773,335.565048217773,347.261001586914,347.261001586914,347.261001586914,347.261001586914,358.290985107422,358.290985107422,358.290985107422,358.290985107422,365.530822753906,365.530822753906,365.530822753906,365.530822753906,362.84546661377,362.84546661377,362.84546661377,362.84546661377,362.84546661377,317.766700744629,317.766700744629,317.766700744629,317.766700744629,317.766700744629,321.254974365234,321.254974365234,321.254974365234,321.254974365234,329.284736633301,329.284736633301,329.284736633301,329.284736633301,337.365036010742,337.365036010742,337.365036010742,337.365036010742,344.013641357422,344.013641357422,344.013641357422,344.013641357422,352.064224243164,352.064224243164,362.496292114258,362.496292114258,362.496292114258,362.496292114258,362.496292114258,364.137702941895,364.137702941895,364.137702941895,364.137702941895,364.137702941895,371.368789672852,371.368789672852,371.368789672852,371.368789672852,371.368789672852,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,371.950538635254,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,375.278991699219,381.485725402832,381.485725402832,381.485725402832,381.485725402832,381.485725402832,381.485725402832,386.835174560547,386.835174560547,386.835174560547,386.835174560547,386.835174560547,399.072242736816,399.072242736816,399.072242736816,399.072242736816,399.072242736816,406.875953674316,406.875953674316,406.875953674316,407.056114196777,407.056114196777,407.056114196777,407.056114196777,407.056114196777,413.436454772949,413.436454772949,413.436454772949,413.436454772949,413.436454772949,426.133483886719,426.133483886719,426.133483886719,426.133483886719,426.133483886719,434.131568908691,434.131568908691,434.131568908691,434.131568908691,434.131568908691,442.134162902832,442.134162902832,442.134162902832,442.134162902832,442.134162902832,450.136596679688,450.136596679688,450.136596679688,450.136596679688,450.136596679688,440.238212585449,440.238212585449,440.238212585449,440.238212585449,440.238212585449,440.238212585449,336.77596282959,336.77596282959,336.77596282959,360.623458862305,360.623458862305,360.623458862305,371.831787109375,371.831787109375,371.831787109375,388.22339630127,388.22339630127,405.260635375977,405.260635375977,405.260635375977,405.260635375977,415.212760925293,415.212760925293,415.212760925293,415.212760925293,415.212760925293,424.246025085449,424.246025085449,424.246025085449,424.246025085449,424.246025085449,433.193794250488,433.193794250488,433.193794250488,433.193794250488,433.193794250488,440.905792236328,440.905792236328,440.905792236328,440.905792236328,440.905792236328,446.016906738281,446.016906738281,446.016906738281,416.245231628418,416.245231628418,416.245231628418,416.245231628418,416.245231628418,416.245231628418,416.245231628418,397.243270874023,397.243270874023,397.243270874023,397.243270874023,397.243270874023,406.654914855957,406.654914855957,406.654914855957,406.654914855957,406.654914855957,416.375137329102,416.375137329102,416.375137329102,416.375137329102,416.375137329102,419.194618225098,419.194618225098,419.194618225098,419.194618225098,419.194618225098,419.194618225098,419.194618225098,362.517547607422,362.517547607422,362.517547607422,362.517547607422,362.517547607422,371.623023986816,371.623023986816,371.623023986816,371.623023986816,371.623023986816,371.623023986816,385.824989318848,385.824989318848,385.824989318848,385.824989318848,385.824989318848,397.330062866211,397.330062866211,397.330062866211,397.330062866211,404.302635192871,404.302635192871,404.302635192871,404.302635192871,380.19458770752,380.19458770752,380.19458770752,380.19458770752,380.19458770752,361.838172912598,361.838172912598,361.838172912598,361.838172912598,369.805732727051,369.805732727051,369.805732727051,369.805732727051,376.594688415527,376.594688415527,376.594688415527,376.594688415527,384.742980957031,384.742980957031,384.742980957031,384.742980957031,393.756980895996,393.756980895996,405.023910522461,405.023910522461,405.023910522461,405.023910522461,405.023910522461,405.680976867676,405.680976867676,405.680976867676,405.680976867676,405.680976867676,405.680976867676,406.57608795166,406.57608795166,406.57608795166,406.57608795166,406.57608795166,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,413.953681945801,416.323524475098,416.323524475098,416.323524475098,416.323524475098,416.323524475098,416.323524475098,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,417.146408081055,421.120307922363,421.120307922363,421.120307922363,421.120307922363,423.837135314941,423.837135314941,423.837135314941,423.837135314941,423.837135314941,432.335189819336,432.335189819336,432.335189819336,432.335189819336,432.335189819336,448.44352722168,448.44352722168,448.44352722168,448.44352722168,448.44352722168,448.87003326416,448.87003326416,448.87003326416,450.652374267578,450.652374267578,450.652374267578,450.652374267578,450.652374267578,430.156295776367,430.156295776367,430.156295776367,430.156295776367,430.156295776367,430.156295776367,365.190162658691,365.190162658691,365.190162658691,365.190162658691,365.190162658691,376.841331481934,376.841331481934,376.841331481934,376.841331481934,376.841331481934,384.847640991211,384.847640991211,384.847640991211,384.847640991211,384.847640991211,392.848533630371,392.848533630371,392.848533630371,392.848533630371,392.848533630371,400.855453491211,400.855453491211,400.855453491211,400.855453491211,400.855453491211,413.571479797363,413.571479797363,413.571479797363,447.939804077148,447.939804077148,447.939804077148,448.412971496582,448.412971496582,448.412971496582,394.411819458008,394.411819458008,394.411819458008,376.474922180176,376.474922180176,376.474922180176,402.400207519531,402.400207519531,402.400207519531,417.406059265137,417.406059265137,417.406059265137,426.238822937012,426.238822937012,426.238822937012,426.238822937012,437.02995300293,437.02995300293,437.02995300293,444.97713470459,444.97713470459,444.97713470459,444.97713470459,444.97713470459,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,449.150268554688,356.247406005859,356.247406005859,356.247406005859,356.247406005859,356.247406005859,356.247406005859,277.836044311523,277.836044311523,277.836044311523,277.836044311523,277.836044311523,287.661575317383,287.661575317383,287.661575317383,287.661575317383,287.661575317383,296.314018249512,296.314018249512,296.314018249512,296.314018249512,296.314018249512,303.827621459961,303.827621459961,303.827621459961,303.827621459961,310.180419921875,310.180419921875,310.180419921875,310.180419921875,281.375030517578,281.375030517578,281.375030517578,287.57738494873,287.57738494873,287.57738494873,287.57738494873,300.670791625977,300.670791625977,300.670791625977,300.670791625977,300.670791625977,312.88990020752,312.88990020752,312.88990020752,312.88990020752,320.714324951172,320.714324951172,320.714324951172,320.714324951172,320.714324951172,326.827079772949,326.827079772949,326.827079772949,326.827079772949,319.18970489502,319.18970489502,319.18970489502,319.18970489502,319.18970489502,277.835426330566,277.835426330566,277.835426330566,277.835426330566,286.53377532959,286.53377532959,286.53377532959,286.53377532959,293.738609313965,293.738609313965,293.738609313965,293.738609313965,302.512939453125,302.512939453125,311.786582946777,311.786582946777,311.786582946777,311.786582946777,311.786582946777,311.786659240723,311.786659240723,311.786659240723,311.786659240723,311.786659240723,313.392204284668,313.392204284668,313.392204284668,313.392204284668,313.392204284668,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,321.104995727539,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,324.415939331055,330.579513549805,330.579513549805,330.579513549805,330.579513549805,330.579513549805,330.579513549805,335.890655517578,335.890655517578,335.890655517578,335.890655517578,335.890655517578,348.481391906738,348.481391906738,348.481391906738,348.481391906738,348.481391906738,358.407859802246,358.407859802246,358.407859802246,358.407859802246,358.407859802246,358.407859802246,358.588020324707,358.588020324707,358.588020324707,358.588020324707,358.588020324707,364.925910949707,364.925910949707,364.925910949707,364.925910949707,364.925910949707,374.558151245117,374.558151245117,374.558151245117,374.558151245117,374.558151245117,382.561096191406,382.561096191406,382.561096191406,382.561096191406,382.561096191406,390.571914672852,390.571914672852,390.571914672852,390.571914672852,390.571914672852,401.62760925293,401.62760925293,401.62760925293,401.62760925293,401.62760925293,410.849380493164,410.849380493164,410.849380493164,410.849380493164,410.849380493164,437.852653503418,437.852653503418,437.852653503418,449.906890869141,449.906890869141,449.906890869141,454.318389892578,454.318389892578,406.249855041504,406.249855041504,406.249855041504,406.249855041504,406.249855041504,406.249855041504,406.249855041504,316.402626037598,316.402626037598,316.402626037598,333.672019958496,333.672019958496,333.672019958496,333.672019958496,333.672019958496,345.582679748535,345.582679748535,345.582679748535,345.582679748535,357.186470031738,357.186470031738,357.186470031738,357.186470031738,357.186470031738,364.511497497559,364.511497497559,364.511497497559,364.511497497559,364.511497497559,371.748435974121,371.748435974121,371.748435974121,371.748435974121,371.748435974121,323.848960876465,323.848960876465,323.848960876465,323.848960876465,323.848960876465,331.259803771973,331.259803771973,331.259803771973,331.259803771973,331.259803771973,342.878028869629,342.878028869629,342.878028869629,342.878028869629,342.878028869629,352.003112792969,352.003112792969,352.003112792969,352.003112792969,352.003112792969,318.937744140625,318.937744140625,318.937744140625,318.937744140625,318.937744140625,326.355903625488,326.355903625488,326.355903625488,326.355903625488,326.355903625488,335.960250854492,335.960250854492,335.960250854492,344.122329711914,344.122329711914,344.122329711914,344.122329711914,344.122329711914,355.879150390625,355.879150390625,355.879150390625,355.879150390625,363.319480895996,363.319480895996,363.319480895996,363.319480895996,369.790000915527,369.790000915527,369.790000915527,369.790000915527,366.675765991211,366.675765991211,366.675765991211,366.675765991211,366.675765991211,322.231941223145,322.231941223145,322.231941223145,322.231941223145,329.315719604492,329.315719604492,329.315719604492,329.315719604492,338.651382446289,338.651382446289,338.651382446289,338.651382446289,346.435241699219,346.435241699219,356.880867004395,356.880867004395,356.880867004395,356.880867004395,356.880867004395,357.301933288574,357.301933288574,357.301933288574,357.301933288574,357.301933288574,358.505447387695,358.505447387695,358.505447387695,358.505447387695,358.505447387695,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.327934265137,366.328010559082,366.328010559082,366.328010559082,366.328010559082,366.328010559082,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,369.673797607422,375.925079345703,375.925079345703,375.925079345703,375.925079345703,375.925079345703,375.925079345703,381.329086303711,381.329086303711,381.329086303711,381.329086303711,381.329086303711,391.098251342773,391.098251342773,391.098251342773,391.098251342773,391.098251342773,395.329895019531,395.329895019531,395.329895019531,395.329895019531,395.329895019531,395.329895019531,401.863090515137,401.863090515137,401.863090515137,401.863090515137,401.863090515137,407.243774414062,407.243774414062,407.243774414062,407.243774414062,407.243774414062,416.131019592285,416.131019592285,416.131019592285,416.131019592285,416.131019592285,424.181594848633,424.181594848633,424.181594848633,424.181594848633,424.181594848633,433.739929199219,433.739929199219,433.739929199219,433.739929199219,433.739929199219,446.655815124512,446.655815124512,446.655815124512,446.655815124512,446.655815124512,436.176551818848,436.176551818848,436.176551818848,436.176551818848,436.176551818848,352.817680358887,352.817680358887,352.817680358887,364.227897644043,364.227897644043,364.227897644043,380.882118225098,380.882118225098,396.72297668457,396.72297668457,396.72297668457,396.72297668457,410.361434936523,410.361434936523,410.361434936523,420.176734924316,420.176734924316,420.176734924316,420.176734924316,434.36873626709,434.36873626709,434.36873626709,434.36873626709,434.36873626709,435.837997436523,435.837997436523,435.837997436523,435.837997436523,435.837997436523,435.837997436523,387.507934570312,387.507934570312,387.507934570312,387.507934570312,387.507934570312,394.492599487305,394.492599487305,394.492599487305,394.492599487305,394.492599487305,401.487007141113,401.487007141113,401.487007141113,408.508430480957,408.508430480957,408.508430480957,408.508430480957,408.508430480957,409.15064239502,409.15064239502,409.15064239502,409.15064239502,409.15064239502,409.15064239502,310.870140075684,310.870140075684,310.870140075684,310.870140075684,310.870140075684,310.870140075684,309.350730895996,309.350730895996,309.350730895996,309.350730895996,309.350730895996,315.955780029297,315.955780029297,315.955780029297,315.955780029297,315.955780029297,321.977981567383,321.977981567383,321.977981567383,321.977981567383,321.977981567383,333.375999450684,333.375999450684,333.375999450684,333.375999450684,333.375999450684,340.178215026855,340.178215026855,340.178215026855,340.178215026855,350.455772399902,350.455772399902,350.455772399902,350.455772399902,357.338310241699,357.338310241699,357.338310241699,363.600204467773,363.600204467773,363.600204467773,363.600204467773,332.140419006348,332.140419006348,332.140419006348,332.140419006348,332.140419006348,315.534767150879,315.534767150879,315.534767150879,315.534767150879,321.965110778809,321.965110778809,321.965110778809,321.965110778809,329.237930297852,329.237930297852,329.237930297852,329.237930297852,335.575347900391,335.575347900391,335.575347900391,335.575347900391,349.766716003418,349.766716003418,349.766716003418,349.766716003418,349.766716003418,351.674934387207,351.674934387207,351.674934387207,351.674934387207,351.674934387207,353.227478027344,353.227478027344,353.227478027344,353.227478027344,353.227478027344,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666885375977,360.666961669922,360.666961669922,360.666961669922,360.666961669922,360.666961669922,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,363.880180358887,369.838417053223,369.838417053223,369.838417053223,369.838417053223,369.838417053223,369.838417053223,375.021003723145,375.021003723145,375.021003723145,375.021003723145,375.021003723145,385.809059143066,385.809059143066,385.809059143066,385.809059143066,385.809059143066,392.313125610352,392.313125610352,392.313125610352,392.313125610352,392.313125610352,392.313125610352,394.136016845703,394.136016845703,394.136016845703,394.136016845703,394.136016845703,404.207862854004,404.207862854004,404.207862854004,404.207862854004,404.207862854004,411.763771057129,411.763771057129,411.763771057129,411.763771057129,411.763771057129,419.762229919434,419.762229919434,419.762229919434,419.762229919434,419.762229919434,427.767066955566,427.767066955566,427.767066955566,427.767066955566,427.767066955566,435.771743774414,435.771743774414,435.771743774414,435.771743774414,435.771743774414,449.119781494141,449.119781494141,449.119781494141,449.119781494141,449.119781494141,333.332946777344,333.332946777344,333.332946777344,333.332946777344,333.332946777344,354.821510314941,354.821510314941,354.821510314941,355.289047241211,355.289047241211,355.289047241211,380.530754089355,380.530754089355,380.530754089355,391.537750244141,391.537750244141,391.537750244141,391.537750244141,401.911315917969,401.911315917969,401.911315917969,401.911315917969,409.725700378418,409.725700378418,409.725700378418,409.725700378418,419.376205444336,419.376205444336,419.376205444336,426.21883392334,426.21883392334,426.21883392334,432.968353271484,432.968353271484,432.968353271484,390.808670043945,390.808670043945,390.808670043945,390.808670043945,386.670944213867,386.670944213867,386.670944213867,386.670944213867,386.670944213867,393.883354187012,393.883354187012,393.883354187012,393.883354187012,393.883354187012,400.787185668945,400.787185668945,400.787185668945,400.787185668945,400.787185668945,409.907356262207,409.907356262207,409.907356262207,409.907356262207,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,413.539276123047,288.434028625488,288.434028625488,288.434028625488,288.434028625488,288.434028625488,288.434028625488,277.571067810059,277.571067810059,277.571067810059,277.571067810059,277.571067810059,287.546981811523,287.546981811523,287.546981811523,287.546981811523,299.359703063965,299.359703063965,299.359703063965,299.359703063965,299.359703063965,310.405197143555,310.405197143555,310.405197143555,310.405197143555,318.190765380859,318.190765380859,318.190765380859,318.190765380859,324.704383850098,324.704383850098,324.704383850098,324.704383850098,331.078552246094,331.078552246094,331.078552246094,331.078552246094,325.859535217285,325.859535217285,325.859535217285,325.859535217285,325.859535217285,275.81958770752,275.81958770752,275.81958770752,275.81958770752,283.194305419922,283.194305419922,283.194305419922,283.194305419922,290.400100708008,290.400100708008,290.400100708008,290.400100708008,298.237747192383,298.237747192383,308.403244018555,308.403244018555,308.403244018555,308.403244018555,308.403244018555,309.079727172852,309.079727172852,309.079727172852,309.079727172852,309.079727172852,309.079727172852,309.986198425293,309.986198425293,309.986198425293,309.986198425293,309.986198425293,317.016616821289,317.016616821289,317.016616821289,317.016616821289,317.016616821289,317.016616821289,317.582946777344,317.582946777344,317.582946777344,317.582946777344,317.582946777344,317.583023071289,317.583023071289,317.583023071289,317.583023071289,317.583023071289,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,320.847991943359,326.925308227539,326.925308227539,326.925308227539,326.925308227539,326.925308227539,326.925308227539,332.095077514648,332.095077514648,332.095077514648,332.095077514648,332.095077514648,343.202102661133,343.202102661133,343.202102661133,343.202102661133,343.202102661133,353.861679077148,353.861679077148,353.861679077148,353.861679077148,353.861679077148,353.861679077148,355.644020080566,355.644020080566,355.644020080566,355.644020080566,355.644020080566,360.380409240723,360.380409240723,360.380409240723,360.380409240723,360.380409240723,373.474746704102,373.474746704102,373.474746704102,373.474746704102,373.474746704102,381.477111816406,381.477111816406,381.477111816406,381.477111816406,381.477111816406,389.483818054199,389.483818054199,389.483818054199,389.483818054199,389.483818054199,397.482719421387,397.482719421387,397.482719421387,397.482719421387,397.482719421387,407.877128601074,407.877128601074,407.877128601074,432.097633361816,432.097633361816,432.097633361816,443.845581054688,443.845581054688,443.845581054688,431.013366699219,431.013366699219,431.013366699219,314.754501342773,314.754501342773,314.754501342773,331.967308044434,331.967308044434,331.967308044434,331.967308044434,331.967308044434,341.945205688477,341.945205688477,341.945205688477,341.945205688477,341.945205688477,356.076789855957,356.076789855957,356.076789855957,356.076789855957,366.068893432617,366.068893432617,366.068893432617,366.068893432617,366.068893432617,347.897071838379,347.897071838379,347.897071838379,347.897071838379,347.897071838379,347.897071838379,323.447402954102,323.447402954102,323.447402954102,323.447402954102,323.447402954102,330.93416595459,330.93416595459,330.93416595459,330.93416595459,330.93416595459,341.834823608398,341.834823608398,341.834823608398,341.834823608398,341.834823608398,350.871742248535,350.871742248535,350.871742248535,350.871742248535,350.871742248535,350.871742248535,323.833450317383,323.833450317383,323.833450317383,323.833450317383,323.833450317383,336.148948669434,336.148948669434,336.148948669434,336.148948669434,336.148948669434,348.608947753906,348.608947753906,348.608947753906,348.608947753906,348.608947753906,358.140113830566,358.140113830566,358.140113830566,358.140113830566,358.140113830566,366.437614440918,366.437614440918,366.437614440918,366.437614440918,372.560577392578,372.560577392578,372.560577392578,372.560577392578,333.674583435059,333.674583435059,333.674583435059,333.674583435059,333.674583435059,321.486022949219,321.486022949219,321.486022949219,321.486022949219,330.174278259277,330.174278259277,330.174278259277,330.174278259277,336.376571655273,336.376571655273,336.376571655273,336.376571655273,344.601570129395,344.601570129395,355.820892333984,355.820892333984,355.820892333984,355.820892333984,355.820892333984,357.414268493652,357.414268493652,357.414268493652,357.414268493652,357.414268493652,357.414588928223,357.414588928223,357.414588928223,357.414588928223,357.414588928223,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,365.02702331543,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,368.286262512207,369.698745727539,369.698745727539,369.698745727539,369.698745727539,375.241477966309,375.241477966309,375.241477966309,375.241477966309,375.241477966309,384.103706359863,384.103706359863,384.103706359863,384.103706359863,384.103706359863,399.856552124023,399.856552124023,399.856552124023,399.856552124023,399.856552124023,403.49015045166,403.49015045166,403.49015045166,403.670310974121,403.670310974121,403.670310974121,403.670310974121,403.670310974121,410.036460876465,410.036460876465,410.036460876465,410.036460876465,410.036460876465,422.641845703125,422.641845703125,422.641845703125,422.641845703125,422.641845703125,430.650772094727,430.650772094727,430.650772094727,430.650772094727,430.650772094727,438.652412414551,438.652412414551,438.652412414551,438.652412414551,438.652412414551,446.65746307373,446.65746307373,446.65746307373,446.65746307373,446.65746307373,450.114250183105,450.114250183105,450.114250183105,450.114250183105,450.114250183105,450.114250183105,316.892753601074,316.892753601074,316.892753601074,316.892753601074,316.892753601074,316.892753601074,322.452941894531,322.452941894531,322.452941894531,322.452941894531,322.452941894531,349.192901611328,349.192901611328,349.192901611328,361.129455566406,361.129455566406,361.129455566406,363.51700592041,363.51700592041,388.318351745605,388.318351745605,388.318351745605,404.376922607422,404.376922607422,404.376922607422,416.325714111328,416.325714111328,416.325714111328,416.325714111328,426.838531494141,426.838531494141,426.838531494141,426.838531494141,426.838531494141,426.838531494141,434.575073242188,434.575073242188,434.575073242188,434.575073242188,434.575073242188,440.842155456543,440.842155456543,440.842155456543,440.842155456543,440.842155456543,394.642913818359,394.642913818359,394.642913818359,394.642913818359,383.292922973633,383.292922973633,383.292922973633,383.292922973633,383.292922973633,389.574699401855,389.574699401855,389.574699401855,389.574699401855,389.574699401855,399.373291015625,399.373291015625,399.373291015625,399.373291015625,399.373291015625,410.095138549805,410.095138549805,410.095138549805,410.095138549805,410.095138549805,366.606323242188,366.606323242188,366.606323242188,366.606323242188,366.606323242188,366.606323242188,353.329002380371,353.329002380371,353.329002380371,353.329002380371,353.329002380371,364.259674072266,364.259674072266,364.259674072266,364.259674072266,364.259674072266,371.518615722656,371.518615722656,371.518615722656,371.518615722656,371.518615722656,382.438339233398,382.438339233398,382.438339233398,382.438339233398,390.296714782715,390.296714782715,390.296714782715,390.296714782715,396.271537780762,396.271537780762,396.271537780762,396.271537780762,390.972434997559,390.972434997559,390.972434997559,390.972434997559,390.972434997559,347.946090698242,347.946090698242,347.946090698242,347.946090698242,355.506393432617,355.506393432617,355.506393432617,355.506393432617,363.329010009766,363.329010009766,363.329010009766,363.329010009766,372.67650604248,372.67650604248,385.696762084961,385.696762084961,385.696762084961,385.696762084961,385.696762084961,386.400779724121,386.400779724121,386.400779724121,386.400779724121,386.400779724121,386.400779724121,387.323768615723,387.323768615723,387.323768615723,387.323768615723,387.323768615723,392.327758789062,392.327758789062,392.327758789062,392.327758789062,395.032081604004,395.032081604004,395.032081604004,395.032081604004,395.032081604004,395.032157897949,395.032157897949,395.032157897949,395.032157897949,395.032157897949,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305236816406,398.305770874023,398.305770874023,398.305770874023,398.305770874023,398.305770874023,404.457862854004,404.457862854004,404.457862854004,404.457862854004,404.457862854004,404.457862854004,409.038055419922,409.038055419922,409.038055419922,409.038055419922,409.038055419922,414.992942810059,414.992942810059,414.992942810059,414.992942810059,414.992942810059,429.50611114502,429.50611114502,429.50611114502,430.629852294922,430.629852294922,430.629852294922,430.807426452637,430.807426452637,430.807426452637,437.170631408691,437.170631408691,437.170631408691,437.170631408691,437.170631408691,442.592506408691,442.592506408691,442.592506408691,442.592506408691,442.592506408691,451.55883026123,451.55883026123,451.55883026123,451.55883026123,451.55883026123,433.372917175293,433.372917175293,433.372917175293,433.372917175293,433.372917175293,433.372917175293,364.21940612793,364.21940612793,364.21940612793,364.21940612793,364.21940612793,376.796699523926,376.796699523926,376.796699523926,376.796699523926,376.796699523926,388.984107971191,388.984107971191,388.984107971191,388.984107971191,422.737480163574,422.737480163574,422.737480163574,422.737510681152,422.737510681152,422.737510681152,448.309707641602,448.309707641602,448.309707641602,432.746620178223,432.746620178223,432.746620178223,432.746620178223,432.746620178223,432.945930480957,432.945930480957,432.945930480957,432.945930480957,443.21639251709,443.21639251709,443.21639251709,443.21639251709,451.178657531738,451.178657531738,451.178657531738,451.178657531738,451.178657531738,445.184112548828,445.184112548828,445.184112548828,445.184112548828,445.184112548828,445.184112548828,386.194633483887,386.194633483887,386.194633483887,386.194633483887,386.194633483887,386.194633483887,391.374282836914,391.374282836914,391.374282836914,391.374282836914,391.374282836914,398.505935668945,398.505935668945,398.505935668945,398.505935668945,398.505935668945,405.2333984375,405.2333984375,405.2333984375,411.899688720703,411.899688720703,411.899688720703,411.899688720703,411.899688720703,418.242652893066,418.242652893066,418.242652893066,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,419.790496826172,348.9521484375,348.9521484375,348.9521484375,348.9521484375,348.9521484375,348.9521484375,277.257186889648,277.257186889648,277.257186889648,277.257186889648,277.257186889648,284.618988037109,284.618988037109,284.618988037109,284.618988037109,284.618988037109,284.618988037109,293.149017333984,293.149017333984,293.149017333984,293.149017333984,293.149017333984,300.038368225098,300.038368225098,300.038368225098,300.038368225098,311.062606811523,311.062606811523,311.062606811523,311.062606811523,311.062606811523,322.277214050293,322.277214050293,322.277214050293,322.277214050293,277.214744567871,277.214744567871,277.214744567871,286.139930725098,286.139930725098,286.139930725098,286.139930725098,292.595001220703,292.595001220703,292.595001220703,292.595001220703,299.083480834961,299.083480834961,299.083480834961,299.083480834961,307.95613861084,307.95613861084,307.95613861084,307.95613861084,315.578147888184,315.578147888184,315.578147888184,315.578147888184,325.564270019531,325.564270019531,325.564270019531,333.701522827148,333.701522827148,333.701522827148,333.701522827148,333.701522827148,335.284049987793,335.284049987793,335.284049987793,335.284049987793,335.284049987793,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,342.808624267578,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,346.03002166748,352.04753112793,352.04753112793,352.04753112793,352.04753112793,352.04753112793,352.04753112793,356.52025604248,356.52025604248,356.52025604248,356.52025604248,356.52025604248,361.854156494141,361.854156494141,361.854156494141,361.854156494141,361.854156494141,378.495407104492,378.495407104492,378.495407104492,378.495407104492,378.495407104492,378.921981811523,378.921981811523,378.921981811523,380.704322814941,380.704322814941,380.704322814941,380.704322814941,380.704322814941,390.792686462402,390.792686462402,390.792686462402,390.792686462402,390.792686462402,398.094306945801,398.094306945801,398.094306945801,398.094306945801,398.094306945801,406.10099029541,406.10099029541,406.10099029541,406.10099029541,406.10099029541,414.103210449219,414.103210449219,414.103210449219,414.103210449219,414.103210449219,422.109008789062,422.109008789062,422.109008789062,422.109008789062,422.109008789062,435.199310302734,435.199310302734,435.199310302734,419.039077758789,419.039077758789,419.039077758789,419.039077758789,306.242652893066,306.242652893066,306.242652893066,318.205047607422,318.205047607422,318.205047607422,318.683570861816,318.683570861816,318.683570861816,344.425132751465,344.425132751465,344.425132751465,356.150665283203,356.150665283203,356.150665283203,356.150665283203,366.091468811035,366.091468811035,366.091468811035,366.091468811035,376.032623291016,376.032623291016,376.032623291016,376.032623291016,386.693168640137,386.693168640137,386.693168640137,393.739082336426,393.739082336426,393.739082336426,393.739082336426,393.739082336426,399.468879699707,399.468879699707,399.468879699707,399.468879699707,399.468879699707,399.468879699707,350.129898071289,350.129898071289,350.129898071289,350.129898071289,350.129898071289,357.805137634277,357.805137634277,357.805137634277,357.805137634277,364.870582580566,364.870582580566,364.870582580566,364.870582580566,364.870582580566,371.945907592773,371.945907592773,371.945907592773,371.945907592773,371.945907592773,373.789016723633,373.789016723633,373.789016723633,373.789016723633,350.763221740723,350.763221740723,350.763221740723,357.535942077637,357.535942077637,357.535942077637,357.535942077637,369.295639038086,369.295639038086,369.295639038086,369.295639038086,369.295639038086,381.981796264648,381.981796264648,381.981796264648,381.981796264648,389.604217529297,389.604217529297,389.604217529297,389.604217529297,396.221290588379,396.221290588379,396.221290588379,396.221290588379,390.070198059082,390.070198059082,390.070198059082,390.070198059082,390.070198059082,349.281806945801,349.281806945801,349.281806945801,349.281806945801,358.538436889648,358.538436889648,358.538436889648,358.538436889648,364.923400878906,364.923400878906,364.923400878906,364.923400878906,373.675498962402,373.675498962402,385.067481994629,385.067481994629,385.067481994629,385.067481994629,385.067481994629,386.679168701172,386.679168701172,386.679168701172,386.679168701172,386.679168701172,393.809234619141,393.809234619141,393.809234619141,393.809234619141,393.809234619141,393.809234619141,394.379165649414,394.379165649414,394.379165649414,394.379165649414,394.379165649414,394.379241943359,394.379241943359,394.379241943359,394.379241943359,394.379241943359,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,397.65860748291,402.035675048828,402.035675048828,402.035675048828,402.035675048828,402.035675048828,404.369369506836,404.369369506836,404.369369506836,404.369369506836,413.51155090332,413.51155090332,413.51155090332,413.51155090332,424.193496704102,424.193496704102,424.193496704102,424.193496704102,424.193496704102,427.361335754395,427.361335754395,427.361335754395,427.541496276855,427.541496276855,427.541496276855,427.541496276855,427.541496276855,433.925804138184,433.925804138184,433.925804138184,433.925804138184,433.925804138184,446.899543762207,446.899543762207,446.899543762207,446.899543762207,446.899543762207,454.902488708496,454.902488708496,454.902488708496,454.902488708496,454.902488708496,449.191963195801,449.191963195801,449.191963195801,449.191963195801,449.191963195801,449.191963195801,363.038398742676,363.038398742676,363.038398742676,363.038398742676,363.038398742676,374.57674407959,374.57674407959,374.57674407959,374.57674407959,374.57674407959,407.315063476562,407.315063476562,407.315063476562,419.455513000488,419.455513000488,419.455513000488,423.908393859863,423.908393859863,423.908393859863,423.908393859863,423.908393859863,423.908393859863,423.908393859863,446.026016235352,446.026016235352,446.026016235352,426.009490966797,426.009490966797,426.009490966797,426.009490966797,426.009490966797,437.750396728516,437.750396728516,437.750396728516,437.750396728516,437.750396728516,450.906944274902,450.906944274902,450.906944274902,454.938117980957,454.938117980957,454.938117980957,454.938117980957,454.938117980957,454.938117980957,327.310615539551,327.310615539551,327.310615539551,327.310615539551,327.310615539551,327.310615539551,316.957336425781,316.957336425781,316.957336425781,316.957336425781,316.957336425781,316.957336425781,324.01545715332,324.01545715332,324.01545715332,324.01545715332,324.01545715332,333.466278076172,333.466278076172,333.466278076172,333.466278076172,333.466278076172,340.007598876953,340.007598876953,340.007598876953,340.007598876953,340.007598876953,347.758819580078,347.758819580078,347.758819580078,347.758819580078,347.758819580078,347.758819580078,340.374610900879,340.374610900879,340.374610900879,340.374610900879,321.87255859375,321.87255859375,321.87255859375,321.87255859375,321.87255859375,331.387001037598,331.387001037598,331.387001037598,331.387001037598,331.387001037598,339.735778808594,339.735778808594,339.735778808594,339.735778808594,351.764427185059,351.764427185059,351.764427185059,351.764427185059,351.764427185059,363.421997070312,363.421997070312,363.421997070312,363.421997070312,344.023193359375,344.023193359375,344.023193359375,344.023193359375,323.171478271484,323.171478271484,331.969078063965,331.969078063965,331.969078063965,331.969078063965,338.074020385742,338.074020385742,338.074020385742,338.074020385742,344.636543273926,344.636543273926,344.636543273926,344.636543273926,351.823516845703,351.823516845703,351.823516845703,351.823516845703,358.416687011719,358.416687011719,358.416687011719,358.416687011719,369.712295532227,369.712295532227,376.575744628906,376.575744628906,376.575744628906,376.575744628906,376.575744628906,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,378.186103820801,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,385.971420288086,388.42212677002,388.42212677002,388.42212677002,388.42212677002,388.42212677002,388.42212677002,389.293525695801,389.293525695801,389.293525695801,389.293525695801,389.293525695801,389.294059753418,389.294059753418,389.294059753418,389.294059753418,389.294059753418,395.308601379395,395.308601379395,395.308601379395,395.308601379395,395.308601379395,398.676010131836,398.676010131836,398.676010131836,398.676010131836,398.676010131836,405.83130645752,405.83130645752,405.83130645752,405.83130645752,405.83130645752,419.42845916748,419.42845916748,419.42845916748,419.608619689941,419.608619689941,419.608619689941,419.608619689941,419.608619689941,425.926612854004,425.926612854004,425.926612854004,425.926612854004,425.926612854004,439.075271606445,439.075271606445,439.075271606445,439.075271606445,439.075271606445,447.078216552734,447.078216552734,447.078216552734,447.078216552734,447.078216552734,449.810455322266,449.810455322266,449.810455322266,449.810455322266,449.810455322266,449.810455322266,363.385391235352,363.385391235352,363.385391235352,363.385391235352,363.385391235352,363.385391235352,341.772911071777,341.772911071777,341.772911071777,341.772911071777,341.772911071777,377.170478820801,377.170478820801,377.170478820801,389.119522094727,389.119522094727,389.119522094727,389.119552612305,389.119552612305,389.119552612305,415.329002380371,415.329002380371,415.329002380371,426.534683227539,426.534683227539,426.534683227539,426.534683227539,436.981452941895,436.981452941895,436.981452941895,436.981452941895,445.897834777832,445.897834777832,445.897834777832,445.897834777832,454.347869873047,454.347869873047,454.347869873047,398.340232849121,398.340232849121,398.340232849121,398.340232849121,398.340232849121,398.340232849121,405.219551086426,405.219551086426,405.219551086426,416.845161437988,416.845161437988,416.845161437988,416.845161437988,416.845161437988,424.821670532227,424.821670532227,424.821670532227,424.821670532227,424.821670532227,401.954872131348,401.954872131348,401.954872131348,401.954872131348,401.954872131348,401.954872131348,361.7041015625,361.7041015625,361.7041015625,361.7041015625,361.7041015625,371.35327911377,371.35327911377,371.35327911377,371.35327911377,371.35327911377,373.312568664551,373.312568664551,373.312568664551,373.312568664551,373.312568664551,380.015579223633,380.015579223633,380.015579223633,380.015579223633,380.015579223633,388.200210571289,388.200210571289,388.200210571289,388.200210571289,387.878150939941,387.878150939941,387.878150939941,387.878150939941,362.939697265625,362.939697265625,362.939697265625,362.939697265625,362.939697265625,362.939697265625,375.009689331055,375.009689331055,375.009689331055,375.009689331055,381.216606140137,381.216606140137,381.216606140137,381.216606140137,388.451614379883,388.451614379883,388.451614379883,388.451614379883,395.98804473877,395.98804473877,395.98804473877,395.98804473877,403.896110534668,403.896110534668,403.896110534668,403.896110534668,410.317054748535,410.317054748535,410.317054748535,410.317054748535,417.742050170898,417.742050170898,417.742050170898,417.742050170898,426.780715942383,426.780715942383,426.780715942383,436.093360900879,436.093360900879,436.093360900879,436.093360900879,436.093360900879,437.679718017578,437.679718017578,437.679718017578,437.679718017578,437.679718017578,444.77091217041,444.77091217041,444.77091217041,444.77091217041,444.77091217041,444.77091217041,445.340423583984,445.340423583984,445.340423583984,445.340423583984,445.340423583984,445.34049987793,445.34049987793,445.34049987793,445.34049987793,445.34049987793,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618171691895,448.618705749512,448.618705749512,448.618705749512,448.618705749512,448.618705749512,454.843406677246,454.843406677246,454.843406677246,454.843406677246,454.843406677246,454.843406677246,454.843406677246,407.386596679688,407.386596679688,407.386596679688,407.386596679688,407.386596679688,407.386596679688,407.386596679688,363.912956237793,363.912956237793,363.912956237793,363.912956237793,363.912956237793,372.579399108887,372.579399108887,372.579399108887,372.579399108887,372.579399108887,386.004066467285,386.004066467285,386.004066467285,386.004066467285,386.004066467285,386.004066467285,388.128433227539,388.128433227539,388.128433227539,388.128433227539,388.128433227539,397.931953430176,397.931953430176,397.931953430176,397.931953430176,397.931953430176,405.414970397949,405.414970397949,405.414970397949,405.414970397949,405.414970397949,413.42015838623,413.42015838623,413.42015838623,413.42015838623,413.42015838623,421.425369262695,421.425369262695,421.425369262695,421.425369262695,421.425369262695,429.425186157227,429.425186157227,429.425186157227,429.425186157227,429.425186157227,451.03638458252,451.03638458252,451.03638458252,451.03638458252,392.897796630859,392.897796630859,392.897796630859,404.674369812012,404.674369812012,404.674369812012,430.082359313965,430.082359313965,430.082359313965,441.135749816895,441.135749816895,441.135749816895,451.555488586426,451.555488586426,451.555488586426,451.555488586426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,454.569160461426,453.373252868652,453.373252868652,453.373252868652,453.373252868652,453.373252868652,292.597877502441,292.597877502441,292.597877502441,292.597877502441,292.597877502441,274.222343444824,274.222343444824,274.222343444824,274.222343444824,274.222343444824,280.056083679199,280.056083679199,280.056083679199,280.056083679199,291.605987548828,291.605987548828,291.605987548828,291.605987548828,291.605987548828,301.377639770508,301.377639770508,301.377639770508,301.377639770508,301.377639770508,307.921401977539,307.921401977539,307.921401977539,307.921401977539,307.921401977539,314.384468078613,314.384468078613,314.384468078613,314.384468078613,314.384468078613,283.25365447998,283.25365447998,283.25365447998,283.25365447998,290.074195861816,290.074195861816,290.074195861816,290.074195861816,290.074195861816,300.95287322998,300.95287322998,300.95287322998,300.95287322998,300.95287322998,308.160385131836,308.160385131836,308.160385131836,308.160385131836,308.160385131836,302.157157897949,302.157157897949,302.157157897949,302.157157897949,283.763610839844,283.763610839844,283.763610839844,295.810035705566,295.810035705566,295.810035705566,295.810035705566,305.534332275391,305.534332275391,305.534332275391,305.534332275391,305.534332275391,315.340354919434,315.340354919434,315.340354919434,315.340354919434,321.023651123047,321.023651123047,321.023651123047,321.023651123047,327.424217224121,327.424217224121,327.424217224121,327.424217224121,333.869293212891,333.869293212891,333.869293212891,333.869293212891,341.795555114746,341.795555114746,341.795555114746,341.795555114746,349.564811706543,349.564811706543,349.564811706543,349.564811706543,349.564811706543,349.564811706543,361.582969665527,361.582969665527,361.582969665527,361.582969665527,361.582969665527,362.882873535156,362.882873535156,362.882873535156,362.882873535156,362.882873535156,362.882873535156,363.150161743164,363.150161743164,363.150161743164,363.150161743164,363.150161743164,367.23575592041,367.23575592041,367.23575592041,367.23575592041,367.23575592041,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,370.683807373047,372.073554992676,372.073554992676,372.073554992676,372.073554992676,372.073554992676,372.073554992676,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,373.908378601074,378.210083007812,378.210083007812,378.210083007812,378.210083007812,378.210083007812,381.018043518066,381.018043518066,381.018043518066,381.018043518066,381.018043518066,389.844253540039,389.844253540039,389.844253540039,389.844253540039,402.93310546875,402.93310546875,402.93310546875,402.93310546875,402.93310546875,404.062660217285,404.062660217285,404.062660217285,404.062660217285,404.062660217285,404.062660217285,405.845001220703,405.845001220703,405.845001220703,405.845001220703,405.845001220703,416.025604248047,416.025604248047,416.025604248047,416.025604248047,416.025604248047,423.708885192871,423.708885192871,423.708885192871,423.708885192871,423.708885192871,431.715194702148,431.715194702148,431.715194702148,431.715194702148,431.715194702148,439.718704223633,439.718704223633,439.718704223633,439.718704223633,439.718704223633,447.724334716797,447.724334716797,447.724334716797,447.724334716797,447.724334716797,420.864486694336,420.864486694336,420.864486694336,420.864486694336,420.864486694336,420.864486694336,374.345108032227,374.345108032227,374.345108032227,374.345108032227,374.345108032227,374.345108032227,297.116050720215,297.116050720215,297.116050720215,297.116050720215,325.881103515625,325.881103515625,325.881103515625,325.881103515625,325.881103515625,325.881103515625,345.86262512207,345.86262512207,345.86262512207,364.131935119629,364.131935119629,364.131935119629,364.131935119629,373.712860107422,373.712860107422,373.712860107422,373.712860107422,373.712860107422,382.142860412598,382.142860412598,382.142860412598,382.142860412598,396.687301635742,396.687301635742,396.687301635742,404.96265411377,404.96265411377,404.96265411377,404.96265411377,404.96265411377,410.33667755127,410.33667755127,410.33667755127,410.33667755127,410.33667755127,410.33667755127,346.578247070312,346.578247070312,346.578247070312,346.578247070312,346.578247070312,354.508247375488,354.508247375488,354.508247375488,354.508247375488,354.508247375488,361.781883239746,361.781883239746,361.781883239746,361.781883239746,361.781883239746,370.889785766602,370.889785766602,370.889785766602,370.889785766602,370.889785766602,376.116088867188,376.116088867188,376.116088867188,376.116088867188,376.116088867188,344.028686523438,344.028686523438,344.028686523438,344.028686523438,344.028686523438,344.028686523438,344.028686523438,349.871788024902,349.871788024902,349.871788024902,363.237396240234,363.237396240234,363.237396240234,363.237396240234,363.237396240234,375.615173339844,375.615173339844,375.615173339844,375.615173339844,383.152587890625,383.152587890625,383.152587890625,383.152587890625,390.812644958496,390.812644958496,390.812644958496,390.812644958496,400.318778991699,400.318778991699,400.318778991699,400.318778991699,409.19482421875,409.19482421875,409.19482421875,409.19482421875,364.750396728516,364.750396728516,364.750396728516,364.750396728516,364.750396728516,346.296775817871,346.296775817871,346.296775817871,346.296775817871,356.750915527344,356.750915527344,356.750915527344,356.750915527344,356.750915527344,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,370.113456726074,371.72331237793,371.72331237793,371.72331237793,371.72331237793,371.72331237793,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,379.496871948242,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,382.796775817871,388.987365722656,388.987365722656,388.987365722656,388.987365722656,388.987365722656,390.954872131348,390.954872131348,390.954872131348,390.954872131348,390.954872131348,399.855682373047,399.855682373047,399.855682373047,399.855682373047,399.855682373047,411.51432800293,411.51432800293,411.51432800293,411.51432800293,411.51432800293,411.51432800293,413.296669006348,413.296669006348,413.296669006348,413.296669006348,413.296669006348,420.404159545898,420.404159545898,420.404159545898,420.404159545898,420.404159545898,431.391975402832,431.391975402832,431.391975402832,431.391975402832,431.391975402832,439.398284912109,439.398284912109,439.398284912109,439.398284912109,439.398284912109,447.408149719238,447.408149719238,447.408149719238,447.408149719238,447.408149719238,445.22354888916,445.22354888916,445.22354888916,445.22354888916,445.22354888916,445.22354888916,360.999237060547,360.999237060547,360.999237060547,360.999237060547,360.999237060547,399.184326171875,399.184326171875,399.184326171875,411.874282836914,411.874282836914,411.874282836914,411.874313354492,411.874313354492,411.874313354492,439.49934387207,439.49934387207,439.49934387207,451.268096923828,451.268096923828,451.268096923828,451.268096923828,429.508796691895,429.508796691895,429.508796691895,429.508796691895,429.508796691895,439.638305664062,439.638305664062,439.638305664062,439.638305664062,447.734191894531,447.734191894531,447.734191894531,447.734191894531,447.734191894531,453.993232727051,453.993232727051,453.993232727051,453.993232727051,453.993232727051,453.993232727051,325.491668701172,325.491668701172,325.491668701172,325.491668701172,325.491668701172,325.491668701172,312.196769714355,312.196769714355,312.196769714355,312.196769714355,312.196769714355,312.196769714355,317.185432434082,317.185432434082,317.185432434082,317.185432434082,317.185432434082,327.726043701172,327.726043701172,327.726043701172,336.564651489258,336.564651489258,336.564651489258,336.564651489258,336.564651489258,342.795013427734,342.795013427734,342.795013427734,342.795013427734,342.795013427734,336.732795715332,336.732795715332,336.732795715332,336.732795715332,336.732795715332,336.732795715332,336.732795715332,319.233421325684,319.233421325684,319.233421325684,319.233421325684,325.960960388184,325.960960388184,325.960960388184,325.960960388184,325.960960388184,332.905097961426,332.905097961426,332.905097961426,332.905097961426,332.905097961426,343.198234558105,343.198234558105,343.198234558105,343.198234558105,343.198234558105,355.072250366211,355.072250366211,355.072250366211,355.072250366211,365.13623046875,365.13623046875,365.13623046875,365.13623046875,316.517463684082,316.517463684082,316.517463684082,316.517463684082,324.460845947266,324.460845947266,324.460845947266,324.460845947266,333.293563842773,333.293563842773,333.293563842773,333.293563842773,339.40193939209,339.40193939209,339.40193939209,339.40193939209,346.499397277832,346.499397277832,346.499397277832,346.499397277832,353.239540100098,353.239540100098,353.239540100098,353.239540100098,367.452865600586,367.452865600586,367.452865600586,367.452865600586,367.452865600586,369.476112365723,369.476112365723,369.476112365723,369.476112365723,369.476112365723,371.101608276367,371.101608276367,371.101608276367,371.101608276367,371.101608276367,371.523788452148,371.523788452148,371.523788452148,371.523788452148,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,379.105430603027,380.606033325195,380.606033325195,380.606033325195,380.606033325195,380.606033325195,380.606033325195,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,382.507369995117,383.408332824707,383.408332824707,383.408332824707,383.408332824707,383.408332824707,388.919319152832,388.919319152832,388.919319152832,388.919319152832,388.919319152832,392.014060974121,392.014060974121,392.014060974121,392.014060974121,392.014060974121,400.179054260254,400.179054260254,400.179054260254,400.179054260254,400.179054260254,412.191352844238,412.191352844238,412.191352844238,412.371513366699,412.371513366699,412.371513366699,412.371513366699,412.371513366699,418.690719604492,418.690719604492,418.690719604492,418.690719604492,418.690719604492,431.883781433105,431.883781433105,431.883781433105,431.883781433105,431.883781433105,439.887100219727,439.887100219727,439.887100219727,439.887100219727,439.887100219727,447.894180297852,447.894180297852,447.894180297852,447.894180297852,447.894180297852,441.619667053223,441.619667053223,441.619667053223,441.619667053223,441.619667053223,441.619667053223,330.919906616211,330.919906616211,330.919906616211,330.919906616211,330.919906616211,353.088081359863,353.088081359863,353.088081359863,379.407356262207,379.407356262207,379.407356262207,397.07364654541,397.07364654541,410.213821411133,410.213821411133,410.213821411133,424.834297180176,424.834297180176,424.834297180176,435.41748046875,435.41748046875,435.41748046875,435.41748046875,446.183547973633,446.183547973633,446.183547973633,446.183547973633,446.183547973633,453.236770629883,453.236770629883,453.236770629883,453.236770629883,453.236770629883,394.517677307129,394.517677307129,394.517677307129,394.517677307129,394.517677307129,394.517677307129,395.107788085938,395.107788085938,395.107788085938,405.44522857666,405.44522857666,405.44522857666,405.44522857666,405.44522857666,413.027442932129,413.027442932129,413.027442932129,413.027442932129,413.027442932129,422.145164489746,422.145164489746,422.145164489746,422.145164489746,422.145164489746,424.427665710449,424.427665710449,424.427665710449,424.427665710449,424.427665710449,424.427665710449,362.211250305176,362.211250305176,362.211250305176,372.367446899414,372.367446899414,372.367446899414,372.367446899414,372.367446899414,373.79126739502,373.79126739502,373.79126739502,373.79126739502,388.315155029297,388.315155029297,388.315155029297,388.315155029297,400.270713806152,400.270713806152,400.270713806152,400.270713806152,407.281120300293,407.281120300293,407.281120300293,407.281120300293,378.685005187988,378.685005187988,378.685005187988,378.685005187988,378.685005187988,360.473068237305,360.473068237305,360.473068237305,360.473068237305,369.155151367188,369.155151367188,369.155151367188,369.155151367188,376.22827911377,376.22827911377,376.22827911377,376.22827911377,383.301483154297,383.301483154297,383.301483154297,383.301483154297,391.66764831543,391.66764831543,391.66764831543,391.66764831543,402.843254089355,402.843254089355,409.694511413574,409.694511413574,409.694511413574,409.694511413574,409.694511413574,411.285018920898,411.285018920898,411.285018920898,411.285018920898,411.285018920898,414.392616271973,414.392616271973,414.392616271973,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.000389099121,419.857154846191,419.857154846191,419.857154846191,419.857154846191,419.857154846191,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,422.28630065918,425.428825378418,425.428825378418,425.428825378418,428.769271850586,428.769271850586,428.769271850586,428.769271850586,428.769271850586,428.769271850586,432.082366943359,432.082366943359,432.082366943359,432.082366943359,432.082366943359,439.289321899414,439.289321899414,439.289321899414,439.289321899414,439.289321899414,452.968719482422,452.968719482422,452.968719482422,452.968719482422,452.968719482422,452.968719482422,454.75106048584,454.75106048584,454.75106048584,454.75106048584,454.75106048584,424.639976501465,424.639976501465,424.639976501465,424.639976501465,424.639976501465,424.639976501465,364.455513000488,364.455513000488,364.455513000488,364.455513000488,364.455513000488,377.659530639648,377.659530639648,377.659530639648,377.659530639648,377.659530639648,385.66658782959,385.66658782959,385.66658782959,385.66658782959,385.66658782959,393.675163269043,393.675163269043,393.675163269043,393.675163269043,393.675163269043,401.678718566895,401.678718566895,401.678718566895,401.678718566895,401.678718566895,412.441665649414,412.441665649414,412.441665649414,438.82568359375,438.82568359375,438.82568359375,451.724136352539,451.724136352539,451.724136352539,412.419700622559,412.419700622559,429.451072692871,429.451072692871,429.451072692871,429.451072692871,443.426864624023,443.426864624023,443.426864624023,443.426864624023,443.426864624023,451.181015014648,451.181015014648,451.181015014648,451.181015014648,399.724876403809,399.724876403809,399.724876403809,399.724876403809,399.724876403809,404.480155944824,404.480155944824,404.480155944824,404.480155944824,404.480155944824,410.512184143066,410.512184143066,410.512184143066,410.512184143066,410.512184143066,419.127899169922,419.127899169922,419.127899169922,419.127899169922,419.127899169922,425.559051513672,425.559051513672,425.559051513672,425.559051513672,425.559051513672,434.916831970215,434.916831970215,434.916831970215,434.916831970215,434.916831970215,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,435.813140869141,433.804061889648,433.804061889648,433.804061889648,433.804061889648,433.804061889648,295.00318145752,295.00318145752,295.00318145752,295.00318145752,295.00318145752,283.735504150391,283.735504150391,283.735504150391,283.735504150391,283.735504150391,290.923370361328,290.923370361328,290.923370361328,298.738258361816,298.738258361816,298.738258361816,305.789077758789,305.789077758789,305.789077758789,305.789077758789,305.789077758789,305.626777648926,305.626777648926,305.626777648926,305.626777648926,305.626777648926,305.626777648926,280.713340759277,280.713340759277,280.713340759277,280.713340759277,280.713340759277,293.668586730957,293.668586730957,293.668586730957,293.668586730957,301.228157043457,301.228157043457,301.228157043457,301.228157043457,309.234657287598,309.234657287598,309.234657287598,309.234657287598,316.168487548828,316.168487548828,316.168487548828,316.168487548828,323.357231140137,323.357231140137,323.357231140137,323.357231140137,330.005615234375,330.005615234375,330.005615234375,330.005615234375,338.977310180664,338.977310180664,338.977310180664,338.977310180664,348.578727722168,348.578727722168,348.578727722168,358.165924072266,358.165924072266,358.165924072266,358.165924072266,358.165924072266,359.775779724121,359.775779724121,359.775779724121,359.775779724121,359.775779724121,362.356285095215,362.356285095215,362.356285095215,362.356285095215,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,367.602172851562,370.924163818359,370.924163818359,370.924163818359,370.924163818359,370.924163818359,370.924697875977,370.924697875977,370.924697875977,370.924697875977,370.924697875977,377.18879699707,377.18879699707,377.18879699707,377.18879699707,377.18879699707,379.735595703125,379.735595703125,379.735595703125,379.735595703125,379.735595703125,388.096153259277,388.096153259277,388.096153259277,388.096153259277,388.096153259277,401.019065856934,401.019065856934,401.019065856934,401.019065856934,402.158081054688,402.158081054688,402.158081054688,402.338241577148,402.338241577148,402.338241577148,402.338241577148,402.338241577148,408.67259979248,408.67259979248,408.67259979248,408.67259979248,408.67259979248,421.818054199219,421.818054199219,421.818054199219,421.818054199219,421.818054199219,429.826606750488,429.826606750488,429.826606750488,429.826606750488,429.826606750488,437.829200744629,437.829200744629,437.829200744629,437.829200744629,437.829200744629,445.836326599121,445.836326599121,445.836326599121,445.836326599121,445.836326599121,431.991233825684,431.991233825684,431.991233825684,431.991233825684,431.991233825684,431.991233825684,365.945304870605,365.945304870605,365.945304870605,365.945304870605,365.945304870605,365.945304870605,323.918167114258,323.918167114258,323.918167114258,336.440658569336,336.440658569336,336.440658569336,338.94539642334,338.94539642334,364.801719665527,364.801719665527,364.801719665527,380.550933837891,380.550933837891,380.550933837891,393.53564453125,393.53564453125,393.53564453125,393.53564453125,404.327606201172,404.327606201172,404.327606201172,404.327606201172,404.327606201172,411.471466064453,411.471466064453,411.471466064453,411.471466064453,411.471466064453,419.77124786377,419.77124786377,419.77124786377,419.77124786377,419.77124786377,419.77124786377,356.948173522949,356.948173522949,356.948173522949,356.948173522949,356.948173522949,356.948173522949,363.984237670898,363.984237670898,363.984237670898,363.984237670898,363.984237670898,372.310958862305,372.310958862305,372.310958862305,372.310958862305,372.310958862305,372.310958862305,380.439346313477,380.439346313477,380.439346313477,380.439346313477,380.439346313477,377.413833618164,377.413833618164,377.413833618164,377.413833618164,357.938461303711,357.938461303711,357.938461303711,357.938461303711,357.938461303711,365.016128540039,365.016128540039,365.016128540039,365.016128540039,375.594161987305,375.594161987305,375.594161987305,375.594161987305,375.594161987305,387.695205688477,387.695205688477,387.695205688477,387.695205688477,396.542762756348,396.542762756348,396.542762756348,396.542762756348,396.542762756348,404.752021789551,404.752021789551,404.752021789551,404.752021789551,404.038681030273,404.038681030273,404.038681030273,404.038681030273,404.038681030273,356.209403991699,356.209403991699,356.209403991699,356.209403991699,362.645698547363,362.645698547363,362.645698547363,362.645698547363,372.230438232422,372.230438232422,372.230438232422,372.230438232422,380.686996459961,380.686996459961,380.686996459961,380.686996459961,394.314117431641,394.314117431641,394.314117431641,394.314117431641,394.314117431641,397.954498291016,397.954498291016,397.954498291016,397.954498291016,397.954498291016,399.577964782715,399.577964782715,399.577964782715,399.577964782715,399.577964782715,400.420707702637,400.420707702637,400.420707702637,400.420707702637,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,407.465805053711,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,410.804832458496,417.114280700684,417.114280700684,417.114280700684,417.114280700684,417.114280700684,418.600051879883,418.600051879883,418.600051879883,418.600051879883,418.600051879883,428.308441162109,428.308441162109,428.308441162109,428.308441162109,428.308441162109,441.881950378418,441.881950378418,443.017150878906,443.017150878906,443.017150878906,443.017150878906,443.017150878906,443.017150878906,449.56135559082,449.56135559082,449.56135559082,449.56135559082,449.56135559082,446.336082458496,446.336082458496,446.336082458496,446.336082458496,446.336082458496,446.336082458496,363.49439239502,363.49439239502,363.49439239502,363.49439239502,363.49439239502,371.135040283203,371.135040283203,371.135040283203,371.135040283203,371.135040283203,380.672172546387,380.672172546387,380.672172546387,380.672172546387,380.672172546387,390.538444519043,390.538444519043,390.538444519043,390.538444519043,390.538444519043,404.735733032227,404.735733032227,404.735733032227,404.735733032227,404.735733032227,432.559715270996,432.559715270996,432.559715270996,444.990173339844,444.990173339844,444.990173339844,411.78409576416,411.78409576416,411.78409576416,426.420455932617,426.420455932617,426.420455932617,444.654563903809,444.654563903809,444.654563903809,453.455032348633,453.455032348633,453.455032348633,453.455032348633,349.793670654297,349.793670654297,349.793670654297,349.793670654297,349.793670654297,319.620948791504,319.620948791504,319.620948791504,319.620948791504,319.620948791504,323.011711120605,323.011711120605,323.011711120605,333.779693603516,333.779693603516,333.779693603516,333.779693603516,333.779693603516,344.589736938477,344.589736938477,344.589736938477,344.589736938477,344.589736938477,351.219276428223,351.219276428223,351.219276428223,351.219276428223,351.219276428223,358.980239868164,358.980239868164,358.980239868164,358.980239868164,358.980239868164,328.770011901855,328.770011901855,328.770011901855,328.770011901855,328.770011901855,338.801284790039,338.801284790039,338.801284790039,338.801284790039,338.801284790039,347.429237365723,347.429237365723,347.429237365723,347.429237365723,347.429237365723,353.675193786621,353.675193786621,353.675193786621,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,362.911338806152,361.715431213379,361.715431213379,361.715431213379,361.715431213379,361.715431213379,361.715431213379,361.715431213379,278.476875305176,278.476875305176,278.476875305176,278.476875305176,278.476875305176,278.476875305176,278.476875305176,284.572525024414,284.572525024414,284.572525024414,284.572525024414,294.731536865234,294.731536865234,294.731536865234,294.731536865234,305.397308349609,305.397308349609,305.397308349609,305.397308349609,313.907455444336,313.907455444336,313.907455444336,313.907455444336,319.543495178223,319.543495178223,319.543495178223,319.543495178223,329.414085388184,329.414085388184,329.414085388184,329.414085388184,336.346138000488,336.346138000488,336.346138000488,336.346138000488,344.153938293457,344.153938293457,344.153938293457,344.153938293457,344.153938293457,344.153938293457,356.724327087402,356.724327087402,356.724327087402,356.724327087402,356.724327087402,356.724403381348,356.724403381348,356.724403381348,356.724403381348,356.724403381348,358.344146728516,358.344146728516,358.344146728516,358.344146728516,358.344146728516,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,366.185707092285,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,369.505516052246,375.639114379883,375.639114379883,375.639114379883,375.639114379883,375.639114379883,376.534675598145,376.534675598145,376.534675598145,376.534675598145,376.534675598145,386.664695739746,386.664695739746,386.664695739746,386.664695739746,386.664695739746,386.664695739746,399.658271789551,399.658271789551,399.658271789551,399.658271789551,399.658271789551,400.791076660156,400.791076660156,400.791076660156,402.573417663574,402.573417663574,402.573417663574,402.573417663574,402.573417663574,408.389892578125,408.389892578125,408.389892578125,408.389892578125,408.389892578125,420.636543273926,420.636543273926,420.636543273926,420.636543273926,420.636543273926,428.640029907227,428.640029907227,428.640029907227,428.640029907227,428.640029907227,436.648025512695,436.648025512695,436.648025512695,436.648025512695,436.648025512695,444.648590087891,444.648590087891,444.648590087891,444.648590087891,444.648590087891,454.54467010498,454.54467010498,454.54467010498,454.54467010498,388.682441711426,388.682441711426,388.682441711426,388.682441711426,299.196495056152,299.196495056152,299.196495056152,325.060317993164,325.060317993164,325.060317993164,325.060348510742,325.060348510742,325.060348510742,351.752487182617,351.752487182617,351.752487182617,363.14884185791,363.14884185791,363.14884185791,363.14884185791,373.665855407715,373.665855407715,373.665855407715,373.665855407715,382.682586669922,382.682586669922,382.682586669922,382.682586669922,391.961349487305,391.961349487305,391.961349487305,391.961349487305,404.728210449219,404.728210449219,404.728210449219,404.728210449219,404.728210449219,388.657257080078,388.657257080078,388.657257080078,388.657257080078,388.657257080078,388.657257080078,388.657257080078,345.051086425781,345.051086425781,345.051086425781,345.051086425781,345.051086425781,352.403121948242,352.403121948242,352.403121948242,352.403121948242,352.403121948242,363.166633605957,363.166633605957,363.166633605957,363.166633605957,363.166633605957,372.641952514648,372.641952514648,372.641952514648,372.641952514648,372.641952514648,363.086608886719,363.086608886719,363.086608886719,363.086608886719,350.54515838623,350.54515838623,350.54515838623,350.54515838623,361.675048828125,361.675048828125,361.675048828125,361.675048828125,361.675048828125,372.951011657715,372.951011657715,372.951011657715,372.951011657715,382.677337646484,382.677337646484,382.677337646484,382.677337646484,390.157676696777,390.157676696777,390.157676696777,390.157676696777,398.562896728516,398.562896728516,398.562896728516,398.562896728516,408.30224609375,408.30224609375,408.30224609375,408.30224609375,363.011627197266,363.011627197266,363.011627197266,363.011627197266,363.011627197266,346.574913024902,346.574913024902,346.574913024902,346.574913024902,355.019348144531,355.019348144531,355.019348144531,355.019348144531,368.194213867188,368.194213867188,368.194213867188,368.194213867188,372.492324829102,372.492324829102,372.492324829102,372.492324829102,372.492324829102,374.096015930176,374.096015930176,374.096015930176,374.096015930176,374.096015930176,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,381.805931091309,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,385.072937011719,391.224617004395,391.224617004395,391.224617004395,391.224617004395,391.224617004395,394.264930725098,394.264930725098,394.264930725098,394.264930725098,394.264930725098,401.996200561523,401.996200561523,401.996200561523,401.996200561523,401.996200561523,413.780967712402,413.780967712402,413.780967712402,413.780967712402,413.780967712402,413.780967712402,415.56330871582,415.56330871582,415.56330871582,415.56330871582,415.56330871582,425.697280883789,425.697280883789,425.697280883789,425.697280883789,425.697280883789,433.505584716797,433.505584716797,433.505584716797,433.505584716797,433.505584716797,441.509071350098,441.509071350098,441.509071350098,441.509071350098,441.509071350098,449.509590148926,449.509590148926,449.509590148926,449.509590148926,449.509590148926,360.59245300293,360.59245300293,360.59245300293,360.59245300293,360.59245300293,379.822509765625,379.822509765625,379.822509765625,379.822509765625,407.843460083008,407.843460083008,407.843460083008,407.843490600586,407.843490600586,407.843490600586,434.046409606934,434.046409606934,434.046409606934,444.632331848145,444.632331848145,444.632331848145,444.632331848145,444.632331848145,451.886238098145,451.886238098145,451.886238098145,451.886238098145,451.886238098145,451.886238098145,429.049545288086,429.049545288086,429.049545288086,440.067329406738,440.067329406738,440.067329406738,440.067329406738,440.067329406738,447.125450134277,447.125450134277,447.125450134277,447.125450134277,447.125450134277,453.95336151123,453.95336151123,453.95336151123,453.95336151123,453.95336151123,380.954368591309,380.954368591309,380.954368591309,380.954368591309,380.954368591309,380.954368591309,318.337982177734,318.337982177734,318.337982177734,318.337982177734,318.337982177734,318.337982177734,324.722557067871,324.722557067871,324.722557067871,331.741516113281,331.741516113281,331.741516113281,331.741516113281,331.741516113281,331.741516113281,342.370346069336,342.370346069336,342.370346069336,342.370346069336,342.370346069336,350.782806396484,350.782806396484,350.782806396484,350.782806396484,350.782806396484,353.649856567383,353.649856567383,353.649856567383,353.649856567383,353.649856567383,353.649856567383,353.649856567383,326.418037414551,326.418037414551,326.418037414551,326.418037414551,326.418037414551,338.334060668945,338.334060668945,338.334060668945,338.334060668945,338.334060668945,350.187339782715,350.187339782715,350.187339782715,350.187339782715,357.935577392578,357.935577392578,357.935577392578,357.935577392578,364.985252380371,364.985252380371,364.985252380371,364.985252380371,371.868957519531,371.868957519531,371.868957519531,371.868957519531,380.423973083496,380.423973083496,380.423973083496,380.423973083496,386.963340759277,386.963340759277,386.963340759277,386.963340759277,370.325660705566,370.325660705566,370.325660705566,370.325660705566,370.325660705566,321.851890563965,321.851890563965,321.851890563965,321.851890563965,329.697738647461,329.697738647461,329.697738647461,329.697738647461,344.598846435547,344.598846435547,344.598846435547,344.598846435547,344.598846435547,345.27921295166,345.27921295166,345.27921295166,345.27921295166,345.27921295166,345.27921295166,346.188301086426,346.188301086426,346.188301086426,346.188301086426,346.188301086426,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,353.749870300293,354.575805664062,354.575805664062,354.575805664062,354.575805664062,354.575805664062,356.953567504883,356.953567504883,356.953567504883,356.953567504883,356.953567504883,356.9541015625,356.9541015625,356.9541015625,356.9541015625,356.9541015625,362.97583770752,362.97583770752,362.97583770752,362.97583770752,362.97583770752,364.447647094727,364.447647094727,364.447647094727,364.447647094727,364.447647094727,373.682540893555,373.682540893555,373.682540893555,373.682540893555,373.682540893555,390.769218444824,390.769218444824,390.769218444824,390.769218444824,390.769218444824,391.195793151855,391.195793151855,391.195793151855,392.978134155273,392.978134155273,392.978134155273,392.978134155273,392.978134155273,398.705345153809,398.705345153809,398.705345153809,398.705345153809,398.705345153809,410.816246032715,410.816246032715,410.816246032715,410.816246032715,410.816246032715,418.819358825684,418.819358825684,418.819358825684,418.819358825684,418.819358825684,426.820251464844,426.820251464844,426.820251464844,426.820251464844,426.820251464844,434.825508117676,434.825508117676,434.825508117676,434.825508117676,434.825508117676,444.815208435059,444.815208435059,444.815208435059,383.638862609863,383.638862609863,383.638862609863,383.638862609863,383.638862609863,365.75602722168,365.75602722168,365.75602722168,365.75602722168,365.75602722168,365.75602722168,383.101219177246,383.101219177246,399.572288513184,399.572288513184,399.572288513184,399.572288513184,408.581672668457,408.581672668457,408.581672668457,408.581672668457,408.581672668457,420.966049194336,420.966049194336,420.966049194336,420.966049194336,429.778953552246,429.778953552246,429.778953552246,429.778953552246,429.778953552246,436.685173034668,436.685173034668,436.685173034668,445.528701782227,445.528701782227,445.528701782227,445.528701782227,445.528701782227,393.958274841309,393.958274841309,393.958274841309,399.603340148926,399.603340148926,399.603340148926,399.603340148926,399.603340148926,406.032020568848,406.032020568848,406.032020568848,406.032020568848,406.032020568848,406.032020568848,416.592262268066,416.592262268066,416.592262268066,416.592262268066,416.592262268066,424.909172058105,424.909172058105,424.909172058105,424.909172058105,366.915885925293,366.915885925293,366.915885925293,381.610443115234,381.610443115234,381.610443115234,381.610443115234,381.610443115234,391.778907775879,391.778907775879,391.778907775879,391.778907775879,401.845321655273,401.845321655273,401.845321655273,401.845321655273,401.845321655273,401.845321655273,408.801315307617,408.801315307617,408.801315307617,408.801315307617,415.096588134766,415.096588134766,415.096588134766,415.096588134766,423.158851623535,423.158851623535,423.158851623535,423.158851623535,393.222343444824,393.222343444824,393.222343444824,393.222343444824,393.222343444824,365.822555541992,365.822555541992,365.822555541992,365.822555541992,373.422576904297,373.422576904297,373.422576904297,373.422576904297,380.491874694824,380.491874694824,380.491874694824,380.491874694824,388.159698486328,388.159698486328,399.530128479004,399.530128479004,399.530128479004,399.530128479004,399.530128479004,400.222473144531,400.222473144531,400.222473144531,400.222473144531,400.222473144531,400.222473144531,401.138458251953,401.138458251953,401.138458251953,401.138458251953,401.138458251953,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,408.718322753906,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,411.916893005371,417.918411254883,417.918411254883,417.918411254883,417.918411254883,417.918411254883,420.903388977051,420.903388977051,420.903388977051,420.903388977051,420.903388977051,428.579452514648,428.579452514648,428.579452514648,428.579452514648,428.579452514648,444.035034179688,444.035034179688,444.035034179688,444.035034179688,444.035034179688,444.035034179688,445.817375183105,445.817375183105,445.817375183105,445.817375183105,445.817375183105,451.582489013672,451.582489013672,451.582489013672,451.582489013672,451.582489013672,370.985069274902,370.985069274902,370.985069274902,370.985069274902,370.985069274902,381.985275268555,381.985275268555,381.985275268555,381.985275268555,381.985275268555,390.292335510254,390.292335510254,390.292335510254,390.292335510254,390.292335510254,402.875984191895,402.875984191895,402.875984191895,402.875984191895,402.875984191895,412.532119750977,412.532119750977,412.532119750977,412.532119750977,412.532119750977,440.688018798828,440.688018798828,440.688018798828,453.279174804688,453.279174804688,453.279174804688,453.780464172363,453.780464172363,453.780464172363,453.780464172363,398.835548400879,398.835548400879,398.835548400879,398.835548400879,425.769577026367,425.769577026367,425.769577026367,446.705238342285,446.705238342285,446.705238342285,446.705238342285,446.705238342285,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,454.937950134277,388.842727661133,388.842727661133,388.842727661133,388.842727661133,388.842727661133,388.842727661133,279.828048706055,279.828048706055,279.828048706055,288.098014831543,288.098014831543,288.098014831543,288.098014831543,288.098014831543,295.900604248047,295.900604248047,295.900604248047,295.900604248047,295.900604248047,303.999565124512,303.999565124512,303.999565124512,303.999565124512,303.999565124512,311.238952636719,311.238952636719,311.238952636719,311.238952636719,311.238952636719,315.244682312012,315.244682312012,315.244682312012,315.244682312012,315.244682312012,315.244682312012,281.060111999512,281.060111999512,281.060111999512,281.060111999512,281.060111999512,289.940353393555,289.940353393555,289.940353393555,289.940353393555,289.940353393555,298.227828979492,298.227828979492,298.227828979492,298.227828979492,298.227828979492,309.150543212891,309.150543212891,309.150543212891,309.150543212891,306.588455200195,306.588455200195,306.588455200195,306.588455200195,282.24015045166,282.24015045166,282.24015045166,282.24015045166,282.24015045166,295.947906494141,295.947906494141,295.947906494141,295.947906494141,303.59822845459,303.59822845459,303.59822845459,303.59822845459,311.199996948242,311.199996948242,311.199996948242,311.199996948242,318.361755371094,318.361755371094,318.361755371094,318.361755371094,327.739723205566,327.739723205566,327.739723205566,327.739723205566,337.753295898438,337.753295898438,337.753295898438,337.753295898438,345.732818603516,345.732818603516,345.732818603516,345.732818603516,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,361.30094909668,362.986671447754,362.986671447754,362.986671447754,362.986671447754,362.986671447754,363.431335449219,363.431335449219,363.431335449219,363.431335449219,363.431335449219,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,370.90803527832,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201278686523,374.201812744141,374.201812744141,374.201812744141,374.201812744141,374.201812744141,380.480262756348,380.480262756348,380.480262756348,380.480262756348,380.480262756348,382.003173828125,382.003173828125,382.003173828125,382.003173828125,382.003173828125,391.718315124512,391.718315124512,391.718315124512,391.718315124512,391.718315124512,405.361335754395,405.361335754395,405.361335754395,406.496490478516,406.496490478516,406.496490478516,406.676651000977,406.676651000977,406.676651000977,406.676651000977,406.676651000977,413.008094787598,413.008094787598,413.008094787598,413.008094787598,413.008094787598,426.046051025391,426.046051025391,426.046051025391,426.046051025391,426.046051025391,434.049743652344,434.049743652344,434.049743652344,434.049743652344,434.049743652344,442.05362701416,442.05362701416,442.05362701416,442.05362701416,442.05362701416,450.060920715332,450.060920715332,450.060920715332,450.060920715332,450.060920715332,424.62915802002,424.62915802002,424.62915802002,424.62915802002,424.62915802002,424.62915802002,369.880439758301,369.880439758301,369.880439758301,369.880439758301,369.880439758301,369.880439758301,308.540084838867,308.540084838867,308.540084838867,334.430892944336,334.430892944336,334.430892944336,351.837135314941,351.837135314941,369.390907287598,369.390907287598,369.390907287598,369.390907287598,379.948455810547,379.948455810547,379.948455810547,379.948455810547,379.948455810547,389.800109863281,389.800109863281,389.800109863281,389.800109863281,399.21019744873,399.21019744873,399.21019744873,399.21019744873,399.21019744873,406.704246520996,406.704246520996,406.704246520996,406.704246520996,406.704246520996,415.794158935547,415.794158935547,415.794158935547,415.794158935547,415.794158935547,415.794158935547,354.829795837402,354.829795837402,354.829795837402,363.974555969238,363.974555969238,363.974555969238,363.974555969238,363.974555969238,371.172271728516,371.172271728516,371.172271728516,371.172271728516,371.172271728516,378.666320800781,378.666320800781,378.666320800781,378.666320800781,378.666320800781,377.38899230957,377.38899230957,377.38899230957,377.38899230957,377.38899230957,377.38899230957,355.533172607422,355.533172607422,355.533172607422,355.533172607422,355.533172607422,362.896919250488,362.896919250488,362.896919250488,362.896919250488,374.785026550293,374.785026550293,374.785026550293,374.785026550293,374.785026550293,386.73356628418,386.73356628418,386.73356628418,386.73356628418,394.88191986084,394.88191986084,394.88191986084,394.88191986084,401.560302734375,401.560302734375,401.560302734375,401.560302734375,408.229957580566,408.229957580566,408.229957580566,408.229957580566,408.229957580566,354.858406066895,354.858406066895,354.858406066895,354.858406066895,361.866760253906,361.866760253906,361.866760253906,361.866760253906,370.012519836426,370.012519836426,370.012519836426,370.012519836426,377.357246398926,377.357246398926,377.357246398926,377.357246398926,384.991806030273,384.991806030273,384.991806030273,398.04313659668,398.04313659668,398.04313659668,398.04313659668,398.04313659668,398.043212890625,398.043212890625,398.043212890625,398.043212890625,398.043212890625,399.665077209473,399.665077209473,399.665077209473,399.665077209473,399.665077209473,405.441818237305,405.441818237305,405.441818237305,405.441818237305,405.441818237305,405.441818237305,407.264053344727,407.264053344727,407.264053344727,407.264053344727,407.264053344727,407.264129638672,407.264129638672,407.264129638672,407.264129638672,407.264129638672,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.456962585449,410.457496643066,410.457496643066,410.457496643066,410.457496643066,410.457496643066,416.471267700195,416.471267700195,416.471267700195,416.471267700195,416.471267700195,419.482460021973,419.482460021973,419.482460021973,419.482460021973,419.482460021973,427.236473083496,427.236473083496,427.236473083496,427.236473083496,427.236473083496,442.759674072266,442.759674072266,442.759674072266,442.759674072266,442.759674072266,442.759674072266,444.542015075684,444.542015075684,444.542015075684,444.542015075684,444.542015075684,454.675102233887,454.675102233887,454.675102233887,454.675102233887,454.675102233887,431.302848815918,431.302848815918,431.302848815918,431.302848815918,431.302848815918,431.302848815918,365.564758300781,365.564758300781,365.564758300781,365.564758300781,365.564758300781,373.568077087402,373.568077087402,373.568077087402,373.568077087402,373.568077087402,381.573287963867,381.573287963867,381.573287963867,381.573287963867,381.573287963867,389.622459411621,389.622459411621,389.622459411621,389.622459411621,389.622459411621,426.72811126709,426.72811126709,426.72811126709,439.122428894043,439.122428894043,439.122428894043,439.122428894043,439.122428894043,439.122428894043,410.898971557617,410.898971557617,426.33975982666,426.33975982666,426.33975982666,439.51008605957,439.51008605957,439.51008605957,439.51008605957,439.51008605957,449.328437805176,449.328437805176,449.328437805176,449.328437805176,437.206008911133,437.206008911133,437.206008911133,437.206008911133,437.206008911133,437.206008911133,320.014198303223,320.014198303223,320.014198303223,320.014198303223,320.014198303223,320.014198303223,313.25562286377,313.25562286377,313.25562286377,313.25562286377,313.25562286377,313.25562286377,317.105499267578,317.105499267578,317.105499267578,317.105499267578,317.105499267578,327.276290893555,327.276290893555,327.276290893555,334.028343200684,334.028343200684,334.028343200684,334.028343200684,334.028343200684,342.340370178223,342.340370178223,342.340370178223,342.340370178223,342.340370178223,348.977256774902,348.977256774902,348.977256774902,348.977256774902,348.977256774902,319.384643554688,319.384643554688,319.384643554688,319.384643554688,319.384643554688,329.229804992676,329.229804992676,329.229804992676,329.229804992676,329.229804992676,337.541831970215,337.541831970215,337.541831970215,337.541831970215,337.541831970215,344.77326965332,344.77326965332,344.77326965332,344.77326965332,355.017112731934,355.017112731934,355.017112731934,355.017112731934,355.017112731934,355.017112731934,355.017112731934,317.966850280762,317.966850280762,317.966850280762,317.966850280762,331.352577209473,331.352577209473,331.352577209473,331.352577209473,341.750221252441,341.750221252441,341.750221252441,341.750221252441,348.120429992676,348.120429992676,348.120429992676,348.120429992676,357.941444396973,357.941444396973,357.941444396973,357.941444396973,367.127532958984,367.127532958984,367.127532958984,367.127532958984,377.724281311035,377.724281311035,377.724281311035,377.724281311035,386.508529663086,386.508529663086,397.213928222656,397.213928222656,397.213928222656,397.213928222656,397.213928222656,397.214004516602,397.214004516602,397.214004516602,397.214004516602,397.214004516602,398.873725891113,398.873725891113,398.873725891113,398.873725891113,398.873725891113,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,406.683654785156,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,409.944679260254,416.137130737305,416.137130737305,416.137130737305,416.137130737305,416.137130737305,418.168464660645,418.168464660645,418.168464660645,418.168464660645,418.168464660645,427.049217224121,427.049217224121,427.049217224121,427.049217224121,427.049217224121,443.66805267334,443.66805267334,443.66805267334,443.66805267334,443.66805267334,445.330558776855,445.330558776855,445.330558776855,445.510719299316,445.510719299316,445.510719299316,445.510719299316,445.510719299316,451.887786865234,451.887786865234,451.887786865234,451.887786865234,451.887786865234,403.429153442383,403.429153442383,403.429153442383,403.429153442383,403.429153442383,403.429153442383,323.917869567871,323.917869567871,323.917869567871,323.917869567871,323.917869567871,333.367599487305,333.367599487305,333.367599487305,333.367599487305,333.367599487305,342.935272216797,342.935272216797,342.935272216797,342.935272216797,342.935272216797,351.243461608887,351.243461608887,351.243461608887,351.243461608887,351.243461608887,365.609588623047,365.609588623047,365.609588623047,365.609588623047,365.609588623047,393.894821166992,393.894821166992,393.894821166992,406.541862487793,406.541862487793,406.541862487793,407.047775268555,407.047775268555,407.047775268555,434.078651428223,434.078651428223,434.078651428223,445.814788818359,445.814788818359,445.814788818359,445.814788818359,452.877838134766,452.877838134766,452.877838134766,452.877838134766,452.877838134766,452.877838134766,398.630310058594,398.630310058594,398.630310058594,406.944358825684,406.944358825684,406.944358825684,406.944358825684,406.944358825684,413.916702270508,413.916702270508,413.916702270508,413.916702270508,413.916702270508,420.546264648438,420.546264648438,420.546264648438,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,428.272972106934,359.438255310059,359.438255310059,359.438255310059,359.438255310059,359.438255310059,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,275.8671875,286.087020874023,286.087020874023,286.087020874023,286.087020874023,286.087020874023,292.89778137207,292.89778137207,292.89778137207,292.89778137207,292.89778137207,301.731491088867,301.731491088867,301.731491088867,301.731491088867,301.731491088867,310.61653137207,310.61653137207,310.61653137207,288.603317260742,288.603317260742,288.603317260742,288.603317260742,288.603317260742,288.603317260742,281.479911804199,281.479911804199,281.479911804199,281.479911804199,292.290908813477,292.290908813477,292.290908813477,292.290908813477,292.290908813477,303.766876220703,303.766876220703,303.766876220703,303.766876220703,312.564834594727,312.564834594727,312.564834594727,312.564834594727,320.152320861816,320.152320861816,320.152320861816,320.152320861816,327.235305786133,327.235305786133,327.235305786133,327.235305786133,335.86400604248,335.86400604248,335.86400604248,335.86400604248,342.233825683594,342.233825683594,342.233825683594,342.233825683594,352.291213989258,352.291213989258,352.291213989258,352.291213989258,353.919692993164,353.919692993164,353.919692993164,353.919692993164,353.919692993164,288.72004699707,288.72004699707,288.72004699707,288.72004699707,288.72004699707,288.71752166748,288.71752166748,288.71752166748,293.692626953125,293.692626953125,293.692626953125,293.692626953125,293.692626953125,295.368782043457,295.368782043457,295.368782043457,295.368782043457,295.368782043457,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,303.331939697266,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,306.658645629883,310.931854248047,310.931854248047,310.931854248047,310.931854248047,313.310699462891,313.310699462891,313.310699462891,313.310699462891,313.310699462891,313.310699462891,315.021446228027,315.021446228027,315.021446228027,315.021446228027,315.021446228027,323.859344482422,323.859344482422,323.859344482422,323.859344482422,323.859344482422,336.661781311035,336.661781311035,336.661781311035,336.661781311035,336.661781311035,344.812850952148,344.812850952148,344.812850952148,344.812850952148,344.812850952148,344.812850952148,351.350845336914,351.350845336914,351.350845336914,351.350845336914,351.350845336914,356.742744445801,356.742744445801,356.742744445801,356.742744445801,356.742744445801,366.038017272949,366.038017272949,366.038017272949,366.038017272949,366.038017272949,375.597457885742,375.597457885742,375.597457885742,375.597457885742,375.597457885742,383.902397155762,383.902397155762,383.902397155762,383.902397155762,383.902397155762,396.996047973633,396.996047973633,396.996047973633,396.996047973633,396.996047973633,423.487640380859,423.487640380859,423.487640380859,435.340270996094,435.340270996094,435.340270996094,437.711036682129,437.711036682129,392.467491149902,392.467491149902,392.467491149902,392.467491149902,323.309928894043,323.309928894043,323.309928894043,338.571266174316,338.571266174316,338.571266174316,338.571266174316,338.571266174316,347.170707702637,347.170707702637,347.170707702637,347.170707702637,356.543266296387,356.543266296387,356.543266296387,356.543266296387,356.543266296387,363.449523925781,363.449523925781,363.449523925781,372.457138061523,372.457138061523,372.457138061523,372.457138061523,372.457138061523,323.667427062988,323.667427062988,323.667427062988,323.667427062988,330.781852722168,330.781852722168,330.781852722168,341.501342773438,341.501342773438,341.501342773438,341.501342773438,341.501342773438,348.30721282959,348.30721282959,348.30721282959,348.30721282959,348.30721282959,337.991836547852,337.991836547852,337.991836547852,337.991836547852,337.991836547852,337.991836547852,326.237945556641,326.237945556641,326.237945556641,326.237945556641,326.237945556641,331.972557067871,331.972557067871,331.972557067871,331.972557067871,341.871795654297,341.871795654297,341.871795654297,341.871795654297,341.871795654297,353.075965881348,353.075965881348,353.075965881348,353.075965881348,362.066436767578,362.066436767578,362.066436767578,362.066436767578,362.066436767578,369.493698120117,369.493698120117,369.493698120117,369.493698120117,377.778587341309,377.778587341309,377.778587341309,377.778587341309,345.374786376953,345.374786376953,345.374786376953,345.374786376953,345.374786376953,326.055198669434,326.055198669434,326.055198669434,326.055198669434,333.075042724609,333.075042724609,333.075042724609,333.075042724609,341.282493591309,341.282493591309,341.282493591309,341.282493591309,348.836486816406,348.836486816406,348.836486816406,348.836486816406,362.410102844238,362.410102844238,362.410102844238,362.410102844238,365.435249328613,365.435249328613,365.435249328613,365.435249328613,365.435249328613,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,367.037368774414,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582710266113,374.582786560059,374.582786560059,374.582786560059,374.582786560059,374.582786560059,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,377.771621704102,383.745025634766,383.745025634766,383.745025634766,383.745025634766,383.745025634766,384.499336242676,384.499336242676,384.499336242676,384.499336242676,384.499336242676,394.290298461914,394.290298461914,394.290298461914,394.290298461914,394.290298461914,409.668251037598,409.668251037598,409.668251037598,409.668251037598,409.668251037598,409.668251037598,411.450592041016,411.450592041016,411.450592041016,411.450592041016,411.450592041016,421.593444824219,421.593444824219,421.593444824219,421.593444824219,421.593444824219,429.487449645996,429.487449645996,429.487449645996,429.487449645996,429.487449645996,437.48607635498,437.48607635498,437.48607635498,437.48607635498,437.48607635498,445.495567321777,445.495567321777,445.495567321777,445.495567321777,445.495567321777,453.502319335938,453.502319335938,453.502319335938,453.502319335938,453.502319335938,427.68091583252,427.68091583252,427.68091583252,427.68091583252,427.68091583252,427.68091583252,354.386177062988,354.386177062988,354.386177062988,354.386177062988,383.290596008301,383.290596008301,383.290596008301,383.290626525879,383.290626525879,383.290626525879,410.211814880371,410.211814880371,410.211814880371,421.700309753418,421.700309753418,421.700309753418,421.700309753418,432.251274108887,432.251274108887,432.251274108887,432.251274108887,441.316505432129,441.316505432129,441.316505432129,441.316505432129,449.681594848633,449.681594848633,449.681594848633,449.681594848633,449.681594848633,454.937255859375,454.937255859375,454.937255859375,454.937255859375,454.937255859375,454.937255859375,404.142807006836,404.142807006836,404.142807006836,404.142807006836,404.142807006836,411.925842285156,411.925842285156,411.925842285156,411.925842285156,411.925842285156,418.570014953613,418.570014953613,418.570014953613,418.570014953613,418.570014953613,427.359664916992,427.359664916992,427.359664916992,427.359664916992,427.359664916992,429.643501281738,429.643501281738,429.643501281738,429.643501281738,324.514114379883,324.514114379883,324.514114379883,324.514114379883,326.449989318848,326.449989318848,326.449989318848,326.449989318848,326.449989318848,332.773345947266,332.773345947266,332.773345947266,332.773345947266,332.773345947266,340.972778320312,340.972778320312,340.972778320312,340.972778320312,340.972778320312,350.128898620605,350.128898620605,350.128898620605,350.128898620605,357.39168548584,357.39168548584,357.39168548584,357.39168548584,357.39168548584,368.774673461914,368.774673461914,368.774673461914,368.774673461914,326.687339782715,326.687339782715,326.687339782715,326.687339782715,326.267028808594,326.267028808594,326.267028808594,334.33903503418,334.33903503418,334.33903503418,334.33903503418,340.857917785645,340.857917785645,340.857917785645,340.857917785645,350.986213684082,350.986213684082,350.986213684082,350.986213684082,358.365295410156,358.365295410156,358.365295410156,358.365295410156,364.482666015625,364.482666015625,364.482666015625,364.482666015625,371.25528717041,371.25528717041,371.25528717041,371.25528717041,381.707824707031,381.707824707031,389.725296020508,389.725296020508,389.725296020508,389.725296020508,389.725296020508,391.36824798584,391.36824798584,391.36824798584,391.36824798584,391.36824798584,398.576179504395,398.576179504395,398.576179504395,398.576179504395,398.576179504395,398.576179504395,399.141105651855,399.141105651855,399.141105651855,399.141105651855,399.141105651855,399.141181945801,399.141181945801,399.141181945801,399.141181945801,399.141181945801,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,402.400131225586,407.343955993652,407.343955993652,407.343955993652,407.343955993652,407.343955993652,409.365577697754,409.365577697754,409.365577697754,409.365577697754,409.365577697754,412.25341796875,412.25341796875,412.25341796875,412.25341796875,412.25341796875,419.532012939453,419.532012939453,419.532012939453,419.532012939453,419.532012939453,436.412200927734,436.412200927734,436.412200927734,436.412200927734,436.412200927734,440.353912353516,440.353912353516,440.353912353516,440.53148651123,440.53148651123,440.53148651123,446.914505004883,446.914505004883,446.914505004883,446.914505004883,446.914505004883,454.764167785645,454.764167785645,454.764167785645,454.764167785645,454.764167785645,407.60277557373,407.60277557373,407.60277557373,407.60277557373,407.60277557373,407.60277557373,331.676872253418,331.676872253418,331.676872253418,331.676872253418,331.676872253418,339.677574157715,339.677574157715,339.677574157715,339.677574157715,339.677574157715,347.677719116211,347.677719116211,347.677719116211,347.677719116211,347.677719116211,355.723152160645,355.723152160645,355.723152160645,355.723152160645,355.723152160645,389.580665588379,389.580665588379,389.580665588379,401.179328918457,401.179328918457,401.179328918457,418.093688964844,418.093688964844,434.160682678223,434.160682678223,434.160682678223,434.160682678223,446.078353881836,446.078353881836,446.078353881836,446.078353881836,446.078353881836,454.669662475586,454.669662475586,454.669662475586,454.669662475586,454.669662475586,454.669662475586,392.538482666016,392.538482666016,392.538482666016,404.636779785156,404.636779785156,404.636779785156,404.636779785156,404.636779785156,411.577346801758,411.577346801758,411.577346801758,411.577346801758,411.577346801758,418.858268737793,418.858268737793,418.858268737793,422.83797454834,422.83797454834,422.83797454834,422.83797454834,422.83797454834,422.83797454834,361.206748962402,361.206748962402,361.206748962402,361.206748962402,361.206748962402,361.206748962402,367.716323852539,367.716323852539,367.716323852539,367.716323852539,367.716323852539,373.865791320801,373.865791320801,373.865791320801,380.37287902832,380.37287902832,380.37287902832,388.826972961426,388.826972961426,388.826972961426,388.826972961426,388.826972961426,388.826972961426,382.925415039062,382.925415039062,382.925415039062,382.925415039062,382.925415039062,382.925415039062,374.592765808105,374.592765808105,374.592765808105,374.592765808105,374.592765808105,386.24666595459,386.24666595459,386.24666595459,386.24666595459,393.68106842041,393.68106842041,393.68106842041,393.68106842041,399.43684387207,399.43684387207,399.43684387207,399.43684387207,407.263290405273,407.263290405273,407.263290405273,407.263290405273,418.025062561035,418.025062561035,418.025062561035,418.025062561035,426.12548828125,426.12548828125,426.12548828125,426.12548828125,433.308601379395,433.308601379395,433.308601379395,433.308601379395,440.102989196777,440.102989196777,440.102989196777,440.102989196777,454.873817443848,454.873817443848,454.873817443848,454.873817443848,454.873817443848,454.873817443848,401.133880615234,401.133880615234,401.133880615234,401.133880615234,401.133880615234,401.133880615234,401.133880615234,365.870300292969,365.870300292969,365.870300292969,365.870300292969,365.870300292969,367.175384521484,367.175384521484,367.175384521484,367.175384521484,367.175384521484,367.712448120117,367.712448120117,367.712448120117,367.712448120117,367.712448120117,374.820861816406,374.820861816406,374.820861816406,374.820861816406,374.820861816406,375.351821899414,375.351821899414,375.351821899414,375.351821899414,375.351821899414,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,377.945381164551,383.799476623535,383.799476623535,383.799476623535,383.799476623535,383.799476623535,386.754707336426,386.754707336426,386.754707336426,386.754707336426,386.754707336426,394.050796508789,394.050796508789,394.050796508789,394.050796508789,394.050796508789,408.881454467773,408.881454467773,409.307388305664,409.307388305664,409.307388305664,411.089729309082,411.089729309082,411.089729309082,411.089729309082,411.089729309082,421.234214782715,421.234214782715,421.234214782715,421.234214782715,421.234214782715,429.196044921875,429.196044921875,429.196044921875,429.196044921875,429.196044921875,437.202896118164,437.202896118164,437.202896118164,437.202896118164,437.202896118164,445.216331481934,445.216331481934,445.216331481934,445.216331481934,445.216331481934,453.222709655762,453.222709655762,453.222709655762,453.222709655762,453.222709655762,385.526634216309,385.526634216309,385.526634216309,385.526634216309,385.526634216309,385.526634216309,412.374465942383,412.374465942383,412.374465942383,425.032661437988,425.032661437988,425.032661437988,443.318862915039,443.318862915039,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,454.206787109375,323.805450439453,323.805450439453,323.805450439453,323.805450439453,275.05729675293,275.05729675293,275.05729675293,275.05729675293,278.820098876953,278.820098876953,278.820098876953,291.344635009766,291.344635009766,291.344635009766,291.344635009766,291.344635009766,300.245124816895,300.245124816895,300.245124816895,300.245124816895,300.245124816895,311.705039978027,311.705039978027,311.705039978027,311.705039978027,311.705039978027,318.919898986816,318.919898986816,318.919898986816,318.919898986816,318.919898986816,327.288192749023,327.288192749023,327.288192749023,323.529815673828,323.529815673828,323.529815673828,323.529815673828,323.529815673828,323.529815673828,282.826225280762,282.826225280762,282.826225280762,282.826225280762,282.826225280762,289.918632507324,289.918632507324,289.918632507324,289.918632507324,289.918632507324,296.966957092285,296.966957092285,296.966957092285,296.966957092285,296.966957092285,305.913284301758,305.913284301758,305.913284301758,305.913284301758,305.913284301758,312.870994567871,312.870994567871,312.870994567871,312.870994567871,312.870994567871,282.047103881836,282.047103881836,282.047103881836,294.428916931152,294.428916931152,294.428916931152,294.428916931152,294.428916931152,308.36051940918,308.36051940918,308.36051940918,308.36051940918,317.92431640625,317.92431640625,317.92431640625,317.92431640625,317.92431640625,326.317726135254,326.317726135254,326.317726135254,326.317726135254,333.923439025879,333.923439025879,333.923439025879,333.923439025879,341.861221313477,341.861221313477,341.861221313477,341.861221313477,349.882736206055,349.882736206055,349.882736206055,349.882736206055,315.334815979004,315.334815979004,315.334815979004,315.334815979004,315.334815979004,282.323150634766,282.323150634766,282.323150634766,282.323150634766,289.965599060059,289.965599060059,289.965599060059,289.965599060059,300.534233093262,300.534233093262,308.722099304199,308.722099304199,308.722099304199,308.722099304199,308.722099304199,309.450119018555,309.450119018555,309.450119018555,309.450119018555,309.450119018555,309.450119018555,310.387512207031,310.387512207031,310.387512207031,310.387512207031,310.387512207031,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,318.337432861328,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,321.663551330566,328.00138092041,328.00138092041,328.00138092041,328.00138092041,328.00138092041,330.067329406738,330.067329406738,330.067329406738,330.067329406738,330.067329406738,339.294509887695,339.294509887695,339.294509887695,339.294509887695,339.294509887695,355.158164978027,355.158164978027,355.584098815918,355.584098815918,355.584098815918,355.764259338379,355.764259338379,355.764259338379,355.764259338379,355.764259338379,362.188552856445,362.188552856445,362.188552856445,362.188552856445,362.188552856445,375.547889709473,375.547889709473,375.547889709473,375.547889709473,375.547889709473,383.557563781738,383.557563781738,383.557563781738,383.557563781738,383.557563781738,391.566307067871,391.566307067871,391.566307067871,391.566307067871,391.566307067871,399.569488525391,399.569488525391,399.569488525391,399.569488525391,399.569488525391,410.975547790527,410.975547790527,410.975547790527,438.297019958496,438.297019958496,438.297019958496,451.141181945801,451.141181945801,451.141181945801,448.652252197266,448.652252197266,448.652252197266,314.155754089355,314.155754089355,333.799003601074,333.799003601074,333.799003601074,344.763412475586,344.763412475586,344.763412475586,344.763412475586,344.763412475586,353.640533447266,353.640533447266,353.640533447266,353.640533447266,366.05322265625,366.05322265625,366.05322265625,375.25431060791,375.25431060791,375.25431060791,375.25431060791,375.25431060791,379.837684631348,379.837684631348,379.837684631348,379.837684631348,379.837684631348,379.837684631348,317.686309814453,317.686309814453,317.686309814453,317.686309814453,317.686309814453,329.187004089355,329.187004089355,329.187004089355,329.187004089355,329.187004089355,337.354537963867,337.354537963867,337.354537963867,337.354537963867,337.354537963867,344.280380249023,344.280380249023,344.280380249023,344.280380249023,344.280380249023,350.26579284668,350.26579284668,350.26579284668,350.26579284668,320.612724304199,320.612724304199,320.612724304199,336.558479309082,336.558479309082,336.558479309082,349.178398132324,349.178398132324,349.178398132324,349.178398132324,357.069976806641,357.069976806641,357.069976806641,357.069976806641,363.843711853027,363.843711853027,363.843711853027,363.843711853027,370.452522277832,370.452522277832,370.452522277832,370.452522277832,376.531814575195,376.531814575195,376.531814575195,376.531814575195,385.245758056641,385.245758056641,385.245758056641,385.245758056641,385.245758056641,320.504570007324,320.504570007324,320.504570007324,320.504570007324,327.035736083984,327.035736083984,327.035736083984,327.035736083984,336.212516784668,336.212516784668,336.212516784668,336.212516784668,336.212516784668,350.69669342041,350.69669342041,350.69669342041,350.69669342041,350.69669342041,350.696769714355,350.696769714355,350.696769714355,350.696769714355,350.696769714355,352.379791259766,352.379791259766,352.379791259766,352.379791259766,352.379791259766,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,360.427658081055,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,363.785682678223,368.938316345215,368.938316345215,368.938316345215,368.938316345215,368.938316345215,370.880592346191,370.880592346191,370.880592346191,370.880592346191,370.880592346191,373.418403625488,373.418403625488,373.418403625488,373.418403625488,373.418403625488,381.642150878906,381.642150878906,381.642150878906,381.642150878906,381.642150878906,395.965057373047,395.965057373047,395.965057373047,395.965057373047,395.965057373047,395.965057373047,397.747398376465,397.747398376465,397.747398376465,397.747398376465,397.747398376465,407.916061401367,407.916061401367,407.916061401367,407.916061401367,407.916061401367,415.733940124512,415.733940124512,415.733940124512,415.733940124512,415.733940124512,423.738380432129,423.738380432129,423.738380432129,423.738380432129,423.738380432129,431.740020751953,431.740020751953,431.740020751953,431.740020751953,431.740020751953,439.748062133789,439.748062133789,439.748062133789,439.748062133789,439.748062133789,440.494667053223,440.494667053223,440.494667053223,440.494667053223,440.494667053223,351.205444335938,351.205444335938,351.205444335938,363.47940826416,363.47940826416,363.47940826416,363.970397949219,363.970397949219,363.970397949219,390.311515808105,390.311515808105,390.311515808105,401.764114379883,401.764114379883,401.764114379883,401.764114379883,412.301849365234,412.301849365234,412.301849365234,412.301849365234,422.392539978027,422.392539978027,422.392539978027,422.392539978027,430.430656433105,430.430656433105,430.430656433105,430.430656433105,430.430656433105,437.907562255859,437.907562255859,437.907562255859,437.907562255859,437.907562255859,445.462837219238,445.462837219238,445.462837219238,445.462837219238,445.462837219238,391.65926361084,391.65926361084,391.65926361084,391.65926361084,391.65926361084,387.574241638184,387.574241638184,387.574241638184,387.574241638184,387.574241638184,395.129516601562,395.129516601562,395.129516601562,395.129516601562,395.129516601562,402.442337036133,402.442337036133,402.442337036133,402.442337036133,402.442337036133,410.053939819336,410.053939819336,410.053939819336,410.053939819336,410.053939819336,416.355270385742,416.355270385742,416.355270385742,416.355270385742,416.355270385742,416.355270385742,410.796836853027,410.796836853027,410.796836853027,410.796836853027,410.796836853027,410.796836853027,349.216514587402,349.216514587402,349.216514587402,349.216514587402,349.216514587402,349.216514587402,355.395469665527,355.395469665527,355.395469665527,355.395469665527,355.395469665527,361.48127746582,361.48127746582,361.48127746582,361.48127746582,370.99292755127,370.99292755127,370.99292755127,370.99292755127,370.99292755127,370.99292755127,377.70531463623,377.70531463623,377.70531463623,377.70531463623,388.172828674316,388.172828674316,388.172828674316,388.172828674316,395.407806396484,395.407806396484,395.407806396484,395.407806396484,402.330780029297,402.330780029297,402.330780029297,402.330780029297,409.415641784668,409.415641784668,409.415641784668,409.415641784668,416.163642883301,416.163642883301,416.163642883301,416.163642883301,365.829452514648,365.829452514648,365.829452514648,365.829452514648,365.829452514648,355.787185668945,355.787185668945,355.787185668945,355.787185668945,363.305572509766,363.305572509766,363.305572509766,363.305572509766,371.715278625488,371.715278625488,371.715278625488,371.715278625488,379.423873901367,379.423873901367,391.594268798828,391.594268798828,391.594268798828,391.594268798828,391.594268798828,392.021217346191,392.021217346191,392.021217346191,392.021217346191,392.021217346191,393.233604431152,393.233604431152,393.233604431152,393.233604431152,393.233604431152,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,400.951751708984,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,404.18009185791,410.118202209473,410.118202209473,410.118202209473,410.118202209473,410.118202209473,410.118202209473,411.106025695801,411.106025695801,411.106025695801,411.106025695801,411.106025695801,416.515487670898,416.515487670898,416.515487670898,416.515487670898,416.515487670898,426.068069458008,426.068069458008,426.068069458008,426.068069458008,426.068069458008,435.144134521484,435.144134521484,435.144134521484,435.144134521484,435.144134521484,435.144134521484,436.926475524902,436.926475524902,436.926475524902,436.926475524902,436.926475524902,445.037101745605,445.037101745605,445.037101745605,445.037101745605,445.037101745605,445.431503295898,445.431503295898,445.431503295898,445.431503295898,445.431503295898,445.431503295898,360.274612426758,360.274612426758,360.274612426758,360.274612426758,360.274612426758,368.284454345703,368.284454345703,368.284454345703,368.284454345703,368.284454345703,377.813659667969,377.813659667969,377.813659667969,377.813659667969,377.813659667969,388.091423034668,388.091423034668,388.091423034668,388.091423034668,388.091423034668,421.750503540039,421.750503540039,421.750503540039,434.254875183105,434.254875183105,434.254875183105,434.254905700684,434.254905700684,434.254905700684,454.593696594238,454.593696594238,454.593696594238,454.593696594238,429.010971069336,429.010971069336,429.010971069336,429.010971069336,440.425888061523,440.425888061523,440.425888061523,440.425888061523,440.425888061523,449.106925964355,449.106925964355,449.106925964355,449.106925964355,449.106925964355,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,454.754257202148,343.17236328125,343.17236328125,343.17236328125,343.17236328125,275.123741149902,275.123741149902,275.123741149902,286.690071105957,286.690071105957,286.690071105957,286.690071105957,286.690071105957,295.834808349609,295.834808349609,295.834808349609,295.834808349609,295.834808349609,306.101150512695,306.101150512695,306.101150512695,306.101150512695,306.101150512695,312.8310546875,312.8310546875,312.8310546875,312.8310546875,283.938941955566,283.938941955566,283.938941955566,283.938941955566,283.938941955566,290.859977722168,290.859977722168,290.859977722168,290.859977722168,290.859977722168,299.808753967285,299.808753967285,299.808753967285,299.808753967285,299.808753967285,307.98551940918,307.98551940918,307.98551940918,307.98551940918,303.558921813965,303.558921813965,303.558921813965,303.558921813965,279.714157104492,279.714157104492,279.714157104492,292.49723815918,292.49723815918,292.49723815918,292.49723815918,299.454788208008,299.454788208008,299.454788208008,299.454788208008,306.493980407715,306.493980407715,306.493980407715,306.493980407715,312.732841491699,312.732841491699,312.732841491699,312.732841491699,321.570938110352,321.570938110352,321.570938110352,321.570938110352,328.573608398438,328.573608398438,328.573608398438,328.573608398438,335.158805847168,335.158805847168,335.158805847168,335.158805847168,341.68189239502,341.68189239502,341.68189239502,341.68189239502,348.104873657227,348.104873657227,348.104873657227,348.104873657227,363.121620178223,363.121620178223,363.121620178223,364.060264587402,364.060264587402,364.060264587402,364.060264587402,364.060264587402,365.729583740234,365.729583740234,365.729583740234,365.729583740234,365.729583740234,370.594635009766,370.594635009766,370.594635009766,370.594635009766,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,373.575981140137,375.991134643555,375.991134643555,375.991134643555,375.991134643555,375.991134643555,375.991134643555,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,376.841201782227,380.487083435059,380.487083435059,380.487083435059,380.487083435059,380.487083435059,383.396003723145,383.396003723145,383.396003723145,383.396003723145,383.396003723145,383.396003723145,385.109886169434,385.109886169434,385.109886169434,385.109886169434,385.109886169434,394.276489257812,394.276489257812,394.276489257812,394.276489257812,394.276489257812,411.412734985352,411.412734985352,411.412734985352,411.412734985352,411.412734985352,413.261688232422,413.261688232422,413.261688232422,413.441848754883,413.441848754883,413.441848754883,413.441848754883,413.441848754883,419.805450439453,419.805450439453,419.805450439453,419.805450439453,419.805450439453,428.473068237305,428.473068237305,428.473068237305,428.473068237305,428.473068237305,438.002807617188,438.002807617188,438.002807617188,438.002807617188,438.002807617188,449.061653137207,449.061653137207,449.061653137207,449.061653137207,449.061653137207,448.452812194824,448.452812194824,448.452812194824,448.452812194824,448.452812194824,448.452812194824,388.473266601562,388.473266601562,388.473266601562,388.473266601562,388.473266601562,388.473266601562,294.345542907715,294.345542907715,294.345542907715,294.345542907715,294.345542907715,331.572219848633,331.572219848633,331.572219848633,344.00611114502,344.00611114502,344.00611114502,348.565742492676,348.565742492676,348.565742492676,348.565742492676,348.565742492676,348.565742492676,348.565742492676,371.141143798828,371.141143798828,371.141143798828,388.712326049805,388.712326049805,388.712326049805,388.712326049805,388.712326049805,400.822387695312,400.822387695312,400.822387695312,400.822387695312,412.507972717285,412.507972717285,412.507972717285,412.507972717285,412.507972717285,420.633903503418,420.633903503418,420.633903503418,420.633903503418,420.633903503418,424.103889465332,424.103889465332,424.103889465332,424.103889465332,424.103889465332,424.103889465332,424.103889465332,359.832450866699,359.832450866699,359.832450866699,359.832450866699,359.832450866699,367.395034790039,367.395034790039,367.395034790039,367.395034790039,367.395034790039,367.395034790039,380.357818603516,380.357818603516,380.357818603516,380.357818603516,380.357818603516,378.513999938965,378.513999938965,378.513999938965,378.513999938965,378.513999938965,359.252822875977,359.252822875977,359.252822875977,359.252822875977,359.252822875977,366.971656799316,366.971656799316,366.971656799316,366.971656799316,385.685081481934,385.685081481934,385.685081481934,385.685081481934,395.360412597656,395.360412597656,395.360412597656,395.360412597656,395.360412597656,404.460189819336,404.460189819336,404.460189819336,404.460189819336,413.265556335449,413.265556335449,413.265556335449,413.265556335449,376.641105651855,376.641105651855,376.641105651855,376.641105651855,376.641105651855,360.932899475098,360.932899475098,360.932899475098,360.932899475098,368.801116943359,368.801116943359,368.801116943359,368.801116943359,377.274765014648,377.274765014648,377.274765014648,377.274765014648,384.066223144531,384.066223144531,384.066223144531,384.066223144531,391.848472595215,391.848472595215,391.848472595215,391.848472595215,404.861938476562,404.861938476562,404.861938476562,404.861938476562,404.861938476562,404.862014770508,404.862014770508,404.862014770508,404.862014770508,404.862014770508,406.532585144043,406.532585144043,406.532585144043,406.532585144043,406.532585144043,412.492202758789,412.492202758789,412.492202758789,414.331207275391,414.331207275391,414.331207275391,414.331207275391,414.331207275391,414.331283569336,414.331283569336,414.331283569336,414.331283569336,414.331283569336,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,417.568550109863,423.603462219238,423.603462219238,423.603462219238,423.603462219238,423.603462219238,424.514434814453,424.514434814453,424.514434814453,424.514434814453,424.514434814453,434.501480102539,434.501480102539,434.501480102539,434.501480102539,434.501480102539,445.618598937988,445.618598937988,445.618598937988,445.618598937988,445.618598937988,448.868461608887,448.868461608887,448.868461608887,450.650802612305,450.650802612305,450.650802612305,450.650802612305,450.650802612305,434.041069030762,434.041069030762,434.041069030762,434.041069030762,434.041069030762,434.041069030762,361.944076538086,361.944076538086,361.944076538086,361.944076538086,361.944076538086,375.07731628418,375.07731628418,375.07731628418,375.07731628418,375.07731628418,383.085494995117,383.085494995117,383.085494995117,383.085494995117,383.085494995117,391.089584350586,391.089584350586,391.089584350586,391.089584350586,391.089584350586,399.103233337402,399.103233337402,399.103233337402,399.103233337402,399.103233337402,410.912300109863,410.912300109863,410.912300109863,438.425918579102,438.425918579102,438.425918579102,451.352577209473,451.352577209473,451.352577209473,425.64225769043,425.64225769043,425.64225769043,428.776954650879,428.776954650879,428.776954650879,445.015510559082,445.015510559082,445.015510559082,454.830215454102,454.830215454102,454.830215454102,454.830215454102,454.830215454102,454.830215454102,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,320.894332885742,331.498710632324,331.498710632324,331.498710632324,331.498710632324,331.498710632324,340.462242126465,340.462242126465,340.462242126465,340.462242126465,340.462242126465,349.614288330078,349.614288330078,349.614288330078,349.614288330078,349.614288330078,356.236465454102,356.236465454102,356.236465454102,356.236465454102,356.236465454102,362.258651733398,362.258651733398,362.258651733398,362.258651733398,362.258651733398,362.258651733398,332.600570678711,332.600570678711,332.600570678711,342.423713684082,342.423713684082,342.423713684082,342.423713684082,342.423713684082,351.575759887695,351.575759887695,351.575759887695,351.575759887695,351.575759887695,357.46590423584,357.46590423584,357.46590423584,357.46590423584,323.478813171387,323.478813171387,323.478813171387,323.478813171387,330.927070617676,330.927070617676,330.927070617676,330.927070617676,347.684265136719,347.684265136719,347.684265136719,347.684265136719,354.266647338867,354.266647338867,354.266647338867,354.266647338867,362.287284851074,362.287284851074,362.287284851074,362.287284851074,371.452445983887,371.452445983887,371.452445983887,371.452445983887,381.689926147461,381.689926147461,381.689926147461,381.689926147461,388.42301940918,388.42301940918,388.42301940918,388.42301940918,394.78271484375,394.78271484375,394.78271484375,394.78271484375,406.259429931641,406.259429931641,413.509918212891,413.509918212891,413.509918212891,413.509918212891,413.509918212891,415.21085357666,415.21085357666,415.21085357666,415.21085357666,415.21085357666,420.230072021484,420.230072021484,420.230072021484,420.230072021484,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,423.286895751953,424.168251037598,424.168251037598,424.168251037598,424.168251037598,424.168251037598,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,426.637977600098,427.519683837891,427.519683837891,427.519683837891,427.519683837891,427.519683837891,433.049873352051,433.049873352051,433.049873352051,433.049873352051,433.049873352051,433.8359375,433.8359375,433.8359375,433.8359375,433.8359375,444.384826660156,444.384826660156,444.384826660156,444.384826660156,444.384826660156,447.127220153809,447.127220153809,447.127220153809,447.127220153809,447.127220153809,447.127220153809,367.993675231934,367.993675231934,367.993675231934,367.993675231934,367.993675231934,367.993675231934,336.265899658203,336.265899658203,336.265899658203,336.265899658203,336.265899658203,336.265899658203,338.048240661621,338.048240661621,338.048240661621,338.048240661621,338.048240661621,345.110816955566,345.110816955566,345.110816955566,345.110816955566,345.110816955566,356.130638122559,356.130638122559,356.130638122559,356.130638122559,356.130638122559,364.135620117188,364.135620117188,364.135620117188,364.135620117188,364.135620117188,372.140625,372.140625,372.140625,372.140625,372.140625,380.144386291504,380.144386291504,380.144386291504,380.144386291504,380.144386291504,392.161575317383,392.161575317383,392.161575317383,428.63680267334,428.63680267334,428.63680267334,428.63680267334,428.63680267334,428.63680267334,446.349571228027,446.349571228027,364.817474365234,364.817474365234,364.817474365234,376.225135803223,376.225135803223,376.225135803223,376.225135803223,386.223861694336,386.223861694336,386.223861694336,386.223861694336,386.223861694336,394.209602355957,394.209602355957,394.209602355957,394.209602355957,405.478759765625,405.478759765625,405.478759765625,405.478759765625,405.478759765625,412.208648681641,412.208648681641,412.208648681641,412.208648681641,412.208648681641,420.501106262207,420.501106262207,420.501106262207,420.501106262207,420.501106262207,420.501106262207,359.909111022949,359.909111022949,359.909111022949,359.909111022949,359.909111022949,359.909111022949,364.825294494629,364.825294494629,364.825294494629,364.825294494629,364.825294494629,370.928283691406,370.928283691406,370.928283691406,370.928283691406,370.928283691406,378.672080993652,378.672080993652,378.672080993652,378.672080993652,378.672080993652,388.666656494141,388.666656494141,388.666656494141,388.666656494141,388.666656494141,393.799858093262,393.799858093262,393.799858093262,393.799858093262,393.799858093262,393.799858093262,393.799858093262,362.270736694336,362.270736694336,362.270736694336,362.270736694336,362.270736694336,367.929893493652,367.929893493652,367.929893493652,367.929893493652,381.493392944336,381.493392944336,381.493392944336,381.493392944336,381.493392944336,393.88362121582,393.88362121582,393.88362121582,393.88362121582,401.214080810547,401.214080810547,401.214080810547,401.214080810547,407.019111633301,407.019111633301,407.019111633301,407.019111633301,415.249435424805,415.249435424805,415.249435424805,415.249435424805,421.831108093262,421.831108093262,421.831108093262,421.831108093262,428.610733032227,428.610733032227,428.610733032227,428.610733032227,428.610733032227,366.330741882324,366.330741882324,366.330741882324,366.330741882324,366.330741882324,357.714706420898,357.714706420898,357.714706420898,357.714706420898,357.714706420898,363.278259277344,363.278259277344,363.278259277344,363.278259277344,371.58073425293,371.58073425293,371.58073425293,371.58073425293,379.769416809082,379.769416809082,379.769416809082,379.769416809082,394.900550842285,394.900550842285,394.900550842285,394.900550842285,394.900550842285,394.90062713623,394.90062713623,394.90062713623,394.90062713623,394.90062713623,396.514877319336,396.514877319336,396.514877319336,396.514877319336,396.514877319336,397.211547851562,397.211547851562,397.211547851562,397.211547851562,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,404.189842224121,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,407.418670654297,411.782249450684,411.782249450684,411.782249450684,414.296646118164,414.296646118164,414.296646118164,414.296646118164,414.296646118164,417.156776428223,417.156776428223,417.156776428223,417.156776428223,417.156776428223,424.575210571289,424.575210571289,424.575210571289,424.575210571289,424.575210571289,441.340759277344,441.340759277344,441.340759277344,441.340759277344,441.340759277344,444.5537109375,444.5537109375,444.5537109375,446.336051940918,446.336051940918,446.336051940918,446.336051940918,446.336051940918,453.378227233887,453.378227233887,453.378227233887,453.378227233887,453.378227233887,367.439529418945,367.439529418945,367.439529418945,367.439529418945,367.439529418945,378.402030944824,378.402030944824,378.402030944824,378.402030944824,378.402030944824,386.711845397949,386.711845397949,386.711845397949,386.711845397949,386.711845397949,396.246513366699,396.246513366699,396.246513366699,396.246513366699,396.246513366699,409.083168029785,409.083168029785,409.083168029785,409.083168029785,409.083168029785,437.323944091797,437.323944091797,437.323944091797,449.948951721191,449.948951721191,449.948951721191,450.453979492188,450.453979492188,450.453979492188,390.850891113281,390.850891113281,404.395988464355,404.395988464355,404.395988464355,420.54808807373,420.54808807373,420.54808807373,420.54808807373,420.54808807373,430.03980255127,430.03980255127,430.03980255127,430.03980255127,440.769920349121,440.769920349121,440.769920349121,440.769920349121,440.769920349121,448.415794372559,448.415794372559,448.415794372559,448.415794372559,448.415794372559,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.828880310059,454.828880310059,454.828880310059,454.828880310059,454.828880310059,454.828880310059,298.994125366211,298.994125366211,298.994125366211,298.994125366211,298.994125366211,298.994125366211,275.740646362305,275.740646362305,275.740646362305,275.740646362305,275.740646362305,275.740646362305,283.48445892334,283.48445892334,283.48445892334,290.319755554199,290.319755554199,290.319755554199,290.319755554199,290.319755554199,298.257041931152,298.257041931152,298.257041931152,298.257041931152,298.257041931152,298.257041931152,305.655616760254,305.655616760254,305.655616760254,305.655616760254,305.655616760254,306.662162780762,306.662162780762,306.662162780762,306.662162780762,306.662162780762,306.662162780762,306.662162780762,282.595428466797,282.595428466797,282.595428466797,282.595428466797,282.595428466797,289.414703369141,289.414703369141,289.414703369141,289.414703369141,309.917137145996,309.917137145996,309.917137145996,309.917137145996,318.233337402344,318.233337402344,318.233337402344,318.233337402344,318.233337402344,324.773231506348,324.773231506348,324.773231506348,324.773231506348,332.493431091309,332.493431091309,332.493431091309,332.493431091309,341.839584350586,341.839584350586,341.839584350586,341.839584350586,305.462760925293,305.462760925293,305.462760925293,305.462760925293,305.462760925293,281.814674377441,281.814674377441,281.814674377441,281.814674377441,288.718681335449,288.718681335449,288.718681335449,288.718681335449,299.047470092773,299.047470092773,299.047470092773,299.047470092773,307.006141662598,307.006141662598,319.463073730469,319.463073730469,319.463073730469,319.463073730469,319.463073730469,319.463150024414,319.463150024414,319.463150024414,319.463150024414,319.463150024414,321.12378692627,321.12378692627,321.12378692627,321.12378692627,321.12378692627,323.255790710449,323.255790710449,323.255790710449,323.255790710449,323.255790710449,329.006858825684,329.006858825684,329.006858825684,329.006858825684,329.006858825684,329.006935119629,329.006935119629,329.006935119629,329.006935119629,329.006935119629,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,332.292922973633,338.560897827148,338.560897827148,338.560897827148,338.560897827148,338.560897827148,339.342430114746,339.342430114746,339.342430114746,339.342430114746,339.342430114746,348.806533813477,348.806533813477,348.806533813477,348.806533813477,348.806533813477,357.023284912109,357.023284912109,357.023284912109,357.023284912109,357.023284912109,366.238731384277,366.238731384277,366.238731384277,366.418891906738,366.418891906738,366.418891906738,366.418891906738,366.418891906738,372.740409851074,372.740409851074,372.740409851074,372.740409851074,372.740409851074,386.028396606445,386.028396606445,386.028396606445,386.028396606445,386.028396606445,394.022911071777,394.022911071777,394.022911071777,394.022911071777,394.022911071777,402.031112670898,402.031112670898,402.031112670898,402.031112670898,402.031112670898,410.03636932373,410.03636932373,410.03636932373,410.03636932373,410.03636932373,419.679161071777,419.679161071777,419.679161071777,444.833366394043,444.833366394043,444.833366394043,380.86173248291,380.86173248291,380.86173248291,380.86173248291,313.727676391602,313.727676391602,313.727676391602,318.458366394043,318.458366394043,318.458366394043,318.458366394043,318.458366394043,318.458366394043,344.764533996582,344.764533996582,344.764533996582,357.360160827637,357.360160827637,357.360160827637,357.360160827637,357.360160827637,368.606132507324,368.606132507324,368.606132507324,368.606132507324,380.495338439941,380.495338439941,380.495338439941,387.918426513672,387.918426513672,387.918426513672,387.918426513672,387.918426513672,394.569389343262,394.569389343262,394.569389343262,394.569389343262,394.569389343262,394.569389343262,347.63932800293,347.63932800293,347.63932800293,347.63932800293,347.63932800293,356.198669433594,356.198669433594,356.198669433594,356.198669433594,356.198669433594,365.08869934082,365.08869934082,365.08869934082,365.08869934082,365.08869934082,363.236534118652,363.236534118652,363.236534118652,363.236534118652,345.204063415527,345.204063415527,345.204063415527,352.082901000977,352.082901000977,352.082901000977,352.082901000977,364.784843444824,364.784843444824,364.784843444824,364.784843444824,364.784843444824,376.844627380371,376.844627380371,376.844627380371,376.844627380371,384.709945678711,384.709945678711,384.709945678711,384.709945678711,391.021171569824,391.021171569824,391.021171569824,391.021171569824,399.334716796875,399.334716796875,399.334716796875,399.334716796875,356.259010314941,356.259010314941,356.259010314941,356.259010314941,356.259010314941,347.106986999512,347.106986999512,347.106986999512,347.106986999512,358.750389099121,358.750389099121,358.750389099121,358.750389099121,369.829284667969,369.829284667969,369.829284667969,369.829284667969,378.916275024414,378.916275024414,389.169548034668,389.169548034668,389.169548034668,389.169548034668,389.169548034668,389.169624328613,389.169624328613,389.169624328613,389.169624328613,389.169624328613,390.75163269043,390.75163269043,390.75163269043,390.75163269043,390.75163269043,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,398.197143554688,399.533828735352,399.533828735352,399.533828735352,399.533828735352,399.533828735352,399.533828735352,401.336418151855,401.336418151855,401.336418151855,401.336418151855,401.336418151855,401.336708068848,401.336708068848,401.336708068848,401.336708068848,401.336708068848,407.240211486816,407.240211486816,407.240211486816,407.240211486816,407.240211486816,410.211334228516,410.211334228516,410.211334228516,410.211334228516,410.211334228516,417.645210266113,417.645210266113,417.645210266113,417.645210266113,417.645210266113,429.28099822998,429.28099822998,429.28099822998,429.28099822998,429.28099822998,434.143684387207,434.143684387207,434.143684387207,434.143684387207,434.143684387207,434.143684387207,434.857902526855,434.857902526855,434.857902526855,434.857902526855,434.857902526855,440.677551269531,440.677551269531,440.677551269531,440.677551269531,440.677551269531,453.833366394043,453.833366394043,453.833366394043,453.833366394043,453.833366394043,444.002220153809,444.002220153809,444.002220153809,444.002220153809,444.002220153809,444.002220153809,355.50106048584,355.50106048584,355.50106048584,355.50106048584,355.50106048584,363.502906799316,363.502906799316,363.502906799316,363.502906799316,363.502906799316,371.509284973145,371.509284973145,371.509284973145,371.509284973145,371.509284973145,390.529167175293,390.529167175293,390.529167175293,390.529167175293,418.336845397949,418.336845397949,418.336845397949,418.336845397949,418.336845397949,418.336845397949,435.575073242188,435.575073242188,447.903839111328,447.903839111328,447.903839111328,409.594589233398,409.594589233398,409.594589233398,409.594589233398,409.594589233398,409.594589233398,423.572776794434,423.572776794434,423.572776794434,423.572776794434,423.572776794434,438.558937072754,438.558937072754,438.558937072754,438.558937072754,438.558937072754,447.179565429688,447.179565429688,447.179565429688,447.179565429688,447.179565429688,446.650909423828,446.650909423828,446.650909423828,446.650909423828,446.650909423828,446.650909423828,446.650909423828,323.934989929199,323.934989929199,323.934989929199,323.934989929199,323.934989929199,323.934989929199,323.934989929199,316.946922302246,316.946922302246,316.946922302246,316.946922302246,316.946922302246,325.214904785156,325.214904785156,325.214904785156,325.214904785156,325.214904785156,332.530174255371,332.530174255371,332.530174255371,332.530174255371,332.530174255371,342.796531677246,342.796531677246,342.796531677246,342.796531677246,342.796531677246,340.556625366211,340.556625366211,340.556625366211,340.556625366211,340.556625366211,340.556625366211,316.581871032715,316.581871032715,316.581871032715,323.137954711914,323.137954711914,323.137954711914,323.137954711914,335.580596923828,335.580596923828,335.580596923828,335.580596923828,335.580596923828,346.677520751953,346.677520751953,346.677520751953,346.677520751953,355.207946777344,355.207946777344,355.207946777344,355.207946777344,361.43724822998,361.43724822998,361.43724822998,361.43724822998,367.959396362305,367.959396362305,367.959396362305,367.959396362305,374.289627075195,374.289627075195,374.289627075195,374.289627075195,371.750869750977,371.750869750977,371.750869750977,371.750869750977,371.750869750977,315.375343322754,315.375343322754,315.375343322754,315.375343322754,321.996917724609,321.996917724609,321.996917724609,321.996917724609,328.257583618164,328.257583618164,328.257583618164,328.257583618164,334.915283203125,334.915283203125,334.915283203125,334.915283203125,348.009300231934,348.009300231934,348.009300231934,348.009300231934,348.009300231934,352.043655395508,352.043655395508,352.043655395508,352.043655395508,352.043655395508,353.644798278809,353.644798278809,353.644798278809,353.644798278809,353.644798278809,357.743255615234,357.743255615234,357.743255615234,357.743255615234,357.743255615234,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,361.119293212891,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,364.257713317871,367.197860717773,367.197860717773,367.197860717773,367.197860717773,367.197860717773,370.414039611816,370.414039611816,370.414039611816,370.414039611816,372.115226745605,372.115226745605,372.115226745605,372.115226745605,372.115226745605,380.563293457031,380.563293457031,380.563293457031,380.563293457031,380.563293457031,392.19019317627,392.19019317627,392.19019317627,392.19019317627,392.19019317627,398.377876281738,398.377876281738,398.377876281738,398.377876281738,398.377876281738,398.377876281738,404.915771484375,404.915771484375,404.915771484375,404.915771484375,404.915771484375,410.313278198242,410.313278198242,410.313278198242,410.313278198242,410.313278198242,418.115898132324,418.115898132324,418.115898132324,418.115898132324,418.115898132324,426.116226196289,426.116226196289,426.116226196289,426.116226196289,426.116226196289,434.122932434082,434.122932434082,434.122932434082,434.122932434082,434.122932434082,442.123497009277,442.123497009277,442.123497009277,442.123497009277,442.123497009277,441.131195068359,441.131195068359,441.131195068359,441.131195068359,441.131195068359,348.13525390625,348.13525390625,348.13525390625,359.901382446289,359.901382446289,359.901382446289,359.901382446289,359.901382446289,359.901382446289,380.249732971191,380.249732971191,380.249732971191,396.836753845215,396.836753845215,396.836753845215,396.836753845215,405.382415771484,405.382415771484,405.382415771484,414.569969177246,414.569969177246,414.569969177246,414.569969177246,426.749443054199,426.749443054199,426.749443054199,426.749443054199,426.749443054199,433.405860900879,433.405860900879,433.405860900879,439.949684143066,439.949684143066,439.949684143066,439.949684143066,439.949684143066,386.041069030762,386.041069030762,386.041069030762,386.041069030762,386.041069030762,386.041069030762,386.041069030762,385.658912658691,385.658912658691,385.658912658691,385.658912658691,385.658912658691,391.859870910645,391.859870910645,391.859870910645,391.859870910645,391.859870910645,399.226570129395,399.226570129395,399.226570129395,399.226570129395,399.226570129395,406.071563720703,406.071563720703,406.071563720703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,412.177032470703,379.726501464844,379.726501464844,379.726501464844,379.726501464844,379.726501464844,379.726501464844,379.726501464844,273.257522583008,273.257522583008,273.257522583008,273.257522583008,273.257522583008,273.257522583008,273.257522583008,274.565338134766,274.565338134766,274.565338134766,274.565338134766,274.565338134766,282.096069335938,282.096069335938,282.096069335938,282.096069335938,282.096069335938,290.91463470459,290.91463470459,290.91463470459,290.91463470459,300.544403076172,300.544403076172,300.544403076172,300.544403076172,311.693542480469,311.693542480469,311.693542480469,311.693542480469,318.912826538086,318.912826538086,318.912826538086,325.911079406738,325.911079406738,325.911079406738,325.911079406738,334.071449279785,334.071449279785,334.071449279785,334.071449279785,341.084655761719,341.084655761719,341.084655761719,341.084655761719,285.814529418945,285.814529418945,285.814529418945,285.814529418945,285.814529418945,280.446846008301,280.446846008301,280.446846008301,280.446846008301,288.805976867676,288.805976867676,288.805976867676,288.805976867676,297.072273254395,297.072273254395,297.072273254395,297.072273254395,305.467239379883,305.467239379883,317.214347839355,317.214347839355,317.214347839355,317.214347839355,317.214347839355,317.214424133301,317.214424133301,317.214424133301,317.214424133301,317.214424133301,318.816818237305,318.816818237305,318.816818237305,318.816818237305,318.816818237305,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,326.252632141113,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,329.371597290039,335.409202575684,335.409202575684,335.409202575684,335.409202575684,335.409202575684,335.409202575684,338.463203430176,338.463203430176,338.463203430176,338.463203430176,338.463203430176,345.696075439453,345.696075439453,345.696075439453,345.696075439453,345.696075439453,362.37638092041,362.37638092041,362.37638092041,362.37638092041,362.37638092041,365.008529663086,365.008529663086,365.008529663086,365.186103820801,365.186103820801,365.186103820801,371.558044433594,371.558044433594,371.558044433594,371.558044433594,371.558044433594,384.624984741211,384.624984741211,384.624984741211,384.624984741211,384.624984741211,392.6318359375,392.6318359375,392.6318359375,392.6318359375,392.6318359375,400.634056091309,400.634056091309,400.634056091309,400.634056091309,400.634056091309,408.633499145508,408.633499145508,408.633499145508,408.633499145508,408.633499145508,418.47826385498,418.47826385498,418.47826385498,443.699394226074,443.699394226074,443.699394226074,419.092018127441,419.092018127441,419.092018127441,419.092018127441,311.115760803223,311.115760803223,311.115760803223,311.590065002441,311.590065002441,311.590065002441,337.153518676758,337.153518676758,337.153518676758,357.989334106445,357.989334106445,357.989334106445,357.989334106445,357.989334106445,366.037704467773,366.037704467773,366.037704467773,376.68871307373,376.68871307373,376.68871307373,376.68871307373,376.68871307373,388.363227844238,388.363227844238,388.363227844238,362.846771240234,362.846771240234,362.846771240234,362.846771240234,362.846771240234,362.846771240234,362.846771240234,344.629981994629,344.629981994629,344.629981994629,344.629981994629,344.629981994629,353.179565429688,353.179565429688,353.179565429688,353.179565429688,353.179565429688,360.213134765625,360.213134765625,360.213134765625,367.097373962402,367.097373962402,367.097373962402,367.097373962402,367.097373962402,372.046897888184,372.046897888184,372.046897888184,372.046897888184,372.046897888184,372.046897888184,372.046897888184,346.367874145508,346.367874145508,346.367874145508,346.367874145508,346.367874145508,358.753036499023,358.753036499023,358.753036499023,358.753036499023,358.753036499023,370.639602661133,370.639602661133,370.639602661133,370.639602661133,381.369354248047,381.369354248047,381.369354248047,381.369354248047,388.392990112305,388.392990112305,388.392990112305,388.392990112305,395.658416748047,395.658416748047,395.658416748047,395.658416748047,381.279228210449,381.279228210449,381.279228210449,381.279228210449,381.279228210449,343.073303222656,343.073303222656,343.073303222656,343.073303222656,350.678184509277,350.678184509277,350.678184509277,350.678184509277,358.851722717285,358.851722717285,358.851722717285,358.851722717285,366.967147827148,366.967147827148,366.967147827148,366.967147827148,375.748046875,375.748046875,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,387.579437255859,389.195274353027,389.195274353027,389.195274353027,389.195274353027,389.195274353027,396.686630249023,396.686630249023,396.686630249023,396.686630249023,396.686630249023,396.686706542969,396.686706542969,396.686706542969,396.686706542969,396.686706542969,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,399.822563171387,404.52067565918,404.52067565918,404.52067565918,404.52067565918,404.52067565918,406.196250915527,406.196250915527,406.196250915527,406.196250915527,406.196250915527,411.464515686035,411.464515686035,411.464515686035,411.464515686035,411.464515686035,419.79077911377,419.79077911377,419.79077911377,419.79077911377,419.79077911377,431.625755310059,431.625755310059,431.625755310059,431.625755310059,431.625755310059,431.625755310059,433.408096313477,433.408096313477,433.408096313477,433.408096313477,433.408096313477,438.138557434082,438.138557434082,438.138557434082,438.138557434082,438.138557434082,451.455001831055,451.455001831055,451.455001831055,451.455001831055,451.455001831055,448.732444763184,448.732444763184,448.732444763184,448.732444763184,448.732444763184,448.732444763184,352.917373657227,352.917373657227,352.917373657227,352.917373657227,352.917373657227,360.925743103027,360.925743103027,360.925743103027,360.925743103027,360.925743103027,370.459808349609,370.459808349609,370.459808349609,370.459808349609,370.459808349609,406.284538269043,406.284538269043,406.284538269043,418.758964538574,418.758964538574,418.758964538574,421.253868103027,421.253868103027,421.253868103027,445.969711303711,445.969711303711,445.969711303711,452.862281799316,452.862281799316,452.862281799316,452.862281799316,424.597816467285,424.597816467285,424.597816467285,424.597816467285,424.597816467285,435.903686523438,435.903686523438,435.903686523438,435.903686523438,448.136978149414,448.136978149414,448.136978149414,448.136978149414,448.136978149414,454.493942260742,454.493942260742,454.493942260742,454.493942260742,454.493942260742,454.493942260742,339.270790100098,339.270790100098,339.270790100098,339.270790100098,339.270790100098,339.270790100098,325.62907409668,325.62907409668,325.62907409668,325.62907409668,325.62907409668,332.261047363281,332.261047363281,332.261047363281,332.261047363281,332.261047363281,339.074241638184,339.074241638184,339.074241638184,345.671981811523,345.671981811523,345.671981811523,345.671981811523,345.671981811523,353.278686523438,353.278686523438,353.278686523438,353.278686523438,353.278686523438,327.51545715332,327.51545715332,327.51545715332,327.51545715332,327.51545715332,323.20426940918,323.20426940918,323.20426940918,323.20426940918,323.20426940918,333.25025177002,333.25025177002,333.25025177002,333.25025177002,333.25025177002,339.545372009277,339.545372009277,339.545372009277,339.545372009277,350.111251831055,350.111251831055,350.111251831055,350.111251831055,350.111251831055,360.763320922852,360.763320922852,360.763320922852,360.763320922852,368.616004943848,368.616004943848,368.616004943848,368.616004943848,368.616004943848,320.261848449707,320.261848449707,320.261848449707,327.304443359375,327.304443359375,327.304443359375,327.304443359375,334.136940002441,334.136940002441,334.136940002441,334.136940002441,340.751792907715,340.751792907715,340.751792907715,340.751792907715,351.613594055176,351.613594055176,351.613594055176,351.613594055176,359.456100463867,359.456100463867,359.456100463867,359.456100463867,366.51587677002,366.51587677002,366.51587677002,366.51587677002,376.631172180176,376.631172180176,389.006797790527,389.006797790527,389.006797790527,389.006797790527,389.006797790527,389.006874084473,389.006874084473,389.006874084473,389.006874084473,389.006874084473,390.688491821289,390.688491821289,390.688491821289,390.688491821289,390.688491821289,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,398.500877380371,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,401.732070922852,407.863342285156,407.863342285156,407.863342285156,407.863342285156,407.863342285156,410.907287597656,410.907287597656,410.907287597656,410.907287597656,410.907287597656,419.161735534668,419.161735534668,419.161735534668,419.161735534668,419.161735534668,436.237915039062,436.237915039062,436.237915039062,436.237915039062,436.237915039062,441.617965698242,441.617965698242,441.617965698242,441.798126220703,441.798126220703,441.798126220703,441.798126220703,441.798126220703,448.151962280273,448.151962280273,448.151962280273,448.151962280273,448.151962280273,440.89720916748,440.89720916748,440.89720916748,440.89720916748,440.89720916748,440.89720916748,370.502105712891,370.502105712891,370.502105712891,370.502105712891,370.502105712891,370.502105712891,332.880798339844,332.880798339844,332.880798339844,332.880798339844,332.880798339844,340.932250976562,340.932250976562,340.932250976562,340.932250976562,340.932250976562,350.497657775879,350.497657775879,350.497657775879,350.497657775879,350.497657775879,359.142684936523,359.142684936523,359.142684936523,359.142684936523,359.142684936523,392.608825683594,392.608825683594,392.608825683594,405.027557373047,405.027557373047,405.027557373047,407.511322021484,407.511322021484,407.511322021484,432.130744934082,432.130744934082,432.130744934082,443.693367004395,443.693367004395,443.693367004395,443.693367004395,454.271636962891,454.271636962891,454.271636962891,454.271636962891,394.676361083984,394.676361083984,394.676361083984,394.676361083984,394.676361083984,407.15168762207,407.15168762207,407.15168762207,407.15168762207,407.15168762207,418.34619140625,418.34619140625,418.34619140625,418.34619140625,418.34619140625,424.860664367676,424.860664367676,424.860664367676,424.860664367676,424.860664367676,428.573348999023,428.573348999023,428.573348999023,428.573348999023,369.715827941895,369.715827941895,369.715827941895,369.715827941895,369.715827941895,378.373107910156,378.373107910156,378.373107910156,385.225532531738,385.225532531738,385.225532531738,385.225532531738,385.225532531738,391.820762634277,391.820762634277,391.820762634277,383.803932189941,383.803932189941,383.803932189941,383.803932189941,383.803932189941,383.803932189941,369.324180603027,369.324180603027,369.324180603027,369.324180603027,380.421745300293,380.421745300293,380.421745300293,380.421745300293,380.421745300293,391.920066833496,391.920066833496,391.920066833496,391.920066833496,401.361740112305,401.361740112305,401.361740112305,401.361740112305,401.361740112305,409.41690826416,409.41690826416,409.41690826416,409.41690826416,418.578079223633,418.578079223633,418.578079223633,418.578079223633,424.923500061035,424.923500061035,424.923500061035,424.923500061035,424.492774963379,424.492774963379,424.492774963379,424.492774963379,424.492774963379,364.18431854248,364.18431854248,364.18431854248,364.18431854248,372.882827758789,372.882827758789,372.882827758789,372.882827758789,380.249862670898,380.249862670898,380.249862670898,380.249862670898,386.429862976074,386.429862976074,386.429862976074,386.429862976074,401.272041320801,401.272041320801,401.272041320801,401.272041320801,402.806198120117,402.806198120117,402.806198120117,402.806198120117,402.806198120117,404.48851776123,404.48851776123,404.48851776123,404.48851776123,404.48851776123,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,412.255416870117,415.45938873291,415.45938873291,415.45938873291,415.45938873291,415.45938873291,415.459678649902,415.459678649902,415.459678649902,415.459678649902,415.459678649902,421.560188293457,421.560188293457,421.560188293457,421.560188293457,421.560188293457,422.326232910156,422.326232910156,422.326232910156,422.326232910156,422.326232910156,431.679672241211,431.679672241211,431.679672241211,431.679672241211,431.679672241211,439.251480102539,439.251480102539,439.251480102539,439.251480102539,439.251480102539,451.263061523438,451.263061523438,451.263061523438,451.688583374023,451.688583374023,451.688583374023,451.866157531738,451.866157531738,451.866157531738,446.386360168457,446.386360168457,446.386360168457,446.386360168457,446.386360168457,446.386360168457,371.365394592285,371.365394592285,371.365394592285,371.365394592285,371.365394592285,378.244369506836,378.244369506836,378.244369506836,378.244369506836,378.244369506836,384.753433227539,384.753433227539,384.753433227539,384.753433227539,384.753433227539,392.801788330078,392.801788330078,392.801788330078,392.801788330078,392.801788330078,402.291404724121,402.291404724121,402.291404724121,402.291404724121,402.291404724121,408.771499633789,408.771499633789,408.771499633789,408.771499633789,408.771499633789,431.231185913086,431.231185913086,431.231185913086,445.955131530762,445.955131530762,445.955131530762,445.955131530762,387.950996398926,387.950996398926,387.950996398926,387.950996398926,399.817054748535,399.817054748535,399.817054748535,417.721488952637,417.721488952637,432.074531555176,432.074531555176,432.074531555176,448.282936096191,448.282936096191,448.282936096191,448.282936096191,448.282936096191,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,454.937599182129,412.582077026367,412.582077026367,412.582077026367,412.582077026367,412.582077026367,412.582077026367,281.654235839844,281.654235839844,281.654235839844,281.654235839844,281.654235839844,281.654235839844,280.13404083252,280.13404083252,280.13404083252,293.89525604248,293.89525604248,293.89525604248,293.89525604248,293.89525604248,302.052947998047,302.052947998047,302.052947998047,310.382179260254,310.382179260254,310.382179260254,310.382179260254,310.382179260254,313.891571044922,313.891571044922,313.891571044922,313.891571044922,313.891571044922,313.891571044922,282.180679321289,282.180679321289,282.180679321289,282.180679321289,282.180679321289,290.744987487793,290.744987487793,290.744987487793,290.744987487793,290.744987487793,301.535438537598,301.535438537598,301.535438537598,301.535438537598,301.535438537598,309.090713500977,309.090713500977,309.090713500977,309.090713500977,309.090713500977,304.316345214844,304.316345214844,304.316345214844,304.316345214844,304.316345214844,304.316345214844,280.600746154785,280.600746154785,280.600746154785,280.600746154785,280.600746154785,293.761779785156,293.761779785156,293.761779785156,293.761779785156,301.736869812012,301.736869812012,301.736869812012,301.736869812012,308.143501281738,308.143501281738,308.143501281738,308.143501281738,315.669868469238,315.669868469238,315.669868469238,315.669868469238,325.844863891602,325.844863891602,325.844863891602,325.844863891602,334.499046325684,334.499046325684,334.499046325684,334.499046325684,343.084060668945,343.084060668945,343.084060668945,343.084060668945,351.745513916016,351.745513916016,351.745513916016,351.745513916016,362.270408630371,362.270408630371,370.339347839355,370.339347839355,370.339347839355,370.339347839355,370.339347839355,372.007507324219,372.007507324219,372.007507324219,372.007507324219,372.007507324219,374.139167785645,374.139167785645,374.139167785645,374.139167785645,374.139167785645,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,379.715690612793,382.079200744629,382.079200744629,382.079200744629,382.079200744629,382.079200744629,382.079200744629,382.897888183594,382.897888183594,382.897888183594,382.897888183594,382.897888183594,382.898178100586,382.898178100586,382.898178100586,382.898178100586,382.898178100586,388.984771728516,388.984771728516,388.984771728516,388.984771728516,388.984771728516,391.028961181641,391.028961181641,391.028961181641,391.028961181641,391.028961181641,400.277282714844,400.277282714844,400.277282714844,400.277282714844,400.277282714844,412.014190673828,412.014190673828,412.014190673828,412.014190673828,412.014190673828,412.014190673828,413.83708190918,413.83708190918,413.83708190918,413.83708190918,413.83708190918,423.973854064941,423.973854064941,423.973854064941,423.973854064941,423.973854064941,431.929496765137,431.929496765137,431.929496765137,431.929496765137,431.929496765137,439.93318939209,439.93318939209,439.93318939209,439.93318939209,439.93318939209,447.942138671875,447.942138671875,447.942138671875,447.942138671875,447.942138671875,401.120040893555,401.120040893555,401.120040893555,401.120040893555,401.120040893555,401.120040893555,294.039894104004,294.039894104004,294.039894104004,294.039894104004,294.039894104004,314.435699462891,314.435699462891,314.435699462891,314.435699462891,343.618125915527,343.618125915527,343.618125915527,343.618156433105,343.618156433105,343.618156433105,370.767166137695,370.767166137695,370.767166137695,382.345008850098,382.345008850098,382.345008850098,382.345008850098,392.928886413574,392.928886413574,392.928886413574,392.928886413574,403.098678588867,403.098678588867,403.098678588867,403.098678588867,411.309150695801,411.309150695801,411.309150695801,411.309150695801,411.309150695801,411.309150695801,424.232727050781,424.232727050781,424.232727050781,424.232727050781,424.232727050781,365.42350769043,365.42350769043,365.42350769043,365.42350769043,365.42350769043,365.42350769043,359.847648620605,359.847648620605,359.847648620605,359.847648620605,359.847648620605,366.807830810547,366.807830810547,366.807830810547,366.807830810547,366.807830810547,373.508430480957,373.508430480957,373.508430480957,373.508430480957,373.508430480957,380.324096679688,380.324096679688,380.324096679688,380.324096679688,380.324096679688,376.375991821289,376.375991821289,376.375991821289,376.375991821289,376.375991821289,376.375991821289,376.375991821289,360.085807800293,360.085807800293,360.085807800293,360.085807800293,360.085807800293,366.723609924316,366.723609924316,366.723609924316,366.723609924316,376.603736877441,376.603736877441,376.603736877441,376.603736877441,376.603736877441,388.399780273438,388.399780273438,388.399780273438,388.399780273438,399.347579956055,399.347579956055,399.347579956055,399.347579956055,406.209182739258,406.209182739258,406.209182739258,406.209182739258,413.265113830566,413.265113830566,413.265113830566,413.265113830566,372.87899017334,372.87899017334,372.87899017334,372.87899017334,372.87899017334,359.913101196289,359.913101196289,359.913101196289,359.913101196289,366.606857299805,366.606857299805,366.606857299805,366.606857299805,373.604667663574,373.604667663574,373.604667663574,373.604667663574,380.108276367188,380.108276367188,380.108276367188,380.108276367188,390.149612426758,390.149612426758,390.149612426758,390.149612426758,398.954193115234,398.954193115234,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,409.737899780273,411.434135437012,411.434135437012,411.434135437012,411.434135437012,411.434135437012,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.183029174805,419.18310546875,419.18310546875,419.18310546875,419.18310546875,419.18310546875,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,422.35765838623,425.876342773438,425.876342773438,425.876342773438,425.876342773438,425.876342773438,428.789993286133,428.789993286133,428.789993286133,428.789993286133,428.789993286133,428.789993286133,431.04613494873,431.04613494873,431.04613494873,431.04613494873,431.04613494873,439.812850952148,439.812850952148,439.812850952148,439.812850952148,439.812850952148,448.314659118652,448.314659118652,448.314659118652,448.314659118652,448.314659118652,448.314659118652,359.114921569824,359.114921569824,359.114921569824,359.114921569824,359.114921569824,359.114921569824,360.897262573242,360.897262573242,360.897262573242,360.897262573242,360.897262573242,366.712539672852,366.712539672852,366.712539672852,366.712539672852,366.712539672852,379.144401550293,379.144401550293,379.144401550293,379.144401550293,379.144401550293,387.148468017578,387.148468017578,387.148468017578,387.148468017578,387.148468017578,395.155174255371,395.155174255371,395.155174255371,395.155174255371,395.155174255371,403.163047790527,403.163047790527,403.163047790527,403.163047790527,403.163047790527,413.959564208984,413.959564208984,413.959564208984,441.153022766113,441.153022766113,441.153022766113,453.204383850098,453.204383850098,453.204383850098,398.069839477539,398.069839477539,398.069839477539,398.069839477539,398.069839477539,398.069839477539,423.124015808105,423.124015808105,423.124015808105,441.544761657715,441.544761657715,441.544761657715,441.544761657715,441.544761657715,450.296447753906,450.296447753906,450.296447753906,450.296447753906,436.051696777344,436.051696777344,436.051696777344,436.051696777344,436.051696777344,436.051696777344,315.290016174316,315.290016174316,315.290016174316,315.290016174316,315.290016174316,315.290016174316,313.348602294922,313.348602294922,313.348602294922,313.348602294922,313.348602294922,313.348602294922,318.373985290527,318.373985290527,318.373985290527,326.933364868164,326.933364868164,326.933364868164,333.793113708496,333.793113708496,333.793113708496,333.793113708496,333.793113708496,339.879005432129,339.879005432129,339.879005432129,339.879005432129,339.879005432129,348.898780822754,348.898780822754,348.898780822754,348.898780822754,348.898780822754,325.403198242188,325.403198242188,325.403198242188,325.403198242188,325.403198242188,325.403198242188,321.258125305176,321.258125305176,321.258125305176,321.258125305176,321.258125305176,329.271308898926,329.271308898926,329.271308898926,336.527862548828,336.527862548828,336.527862548828,336.527862548828,336.527862548828,345.438369750977,345.438369750977,345.438369750977,345.438369750977,355.144943237305,355.144943237305,355.144943237305,355.144943237305,355.144943237305,317.650444030762,317.650444030762,317.650444030762,317.650444030762,317.650444030762,330.749519348145,330.749519348145,330.749519348145,330.749519348145,337.92472076416,337.92472076416,337.92472076416,337.92472076416,344.407585144043,344.407585144043,344.407585144043,344.407585144043,351.84912109375,351.84912109375,351.84912109375,351.84912109375,362.657173156738,362.657173156738,362.657173156738,362.657173156738,370.458000183105,370.458000183105,370.458000183105,370.458000183105,379.10604095459,379.10604095459,379.10604095459,379.10604095459,387.231971740723,387.231971740723,387.231971740723,387.231971740723,394.814041137695,394.814041137695,394.814041137695,394.814041137695,394.814041137695,394.814041137695,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,407.594093322754,409.299774169922,409.299774169922,409.299774169922,409.299774169922,409.299774169922,414.185417175293,414.185417175293,414.185417175293,414.185417175293,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101516723633,417.101593017578,417.101593017578,417.101593017578,417.101593017578,417.101593017578,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.291770935059,420.292060852051,420.292060852051,420.292060852051,420.292060852051,420.292060852051,426.438468933105,426.438468933105,426.438468933105,426.438468933105,426.438468933105,427.98787689209,427.98787689209,427.98787689209,427.98787689209,427.98787689209,437.449226379395,437.449226379395,437.449226379395,437.449226379395,437.449226379395,447.031929016113,447.031929016113,447.031929016113,447.031929016113,447.031929016113,413.467788696289,413.467788696289,413.467788696289,413.467788696289,413.467788696289,320.854621887207,320.854621887207,320.854621887207,320.854621887207,320.854621887207,321.490333557129,321.490333557129,321.490333557129,323.272674560547,323.272674560547,323.272674560547,323.272674560547,323.272674560547,330.087371826172,330.087371826172,330.087371826172,330.087371826172,330.087371826172,341.440727233887,341.440727233887,341.440727233887,341.440727233887,341.440727233887,349.4462890625,349.4462890625,349.4462890625,349.4462890625,349.4462890625,357.451499938965,357.451499938965,357.451499938965,357.451499938965,357.451499938965,365.458419799805,365.458419799805,365.458419799805,365.458419799805,365.458419799805,376.463363647461,376.463363647461,376.463363647461,403.313697814941,403.313697814941,403.313697814941,415.938133239746,415.938133239746,415.938133239746,418.463035583496,418.463035583496,418.463035583496,443.439872741699,443.439872741699,443.439872741699,454.404235839844,454.404235839844,454.404235839844,454.404235839844,454.404235839844,454.404235839844,364.749656677246,364.749656677246,364.749656677246,376.535934448242,376.535934448242,376.535934448242,376.535934448242,386.30339050293,386.30339050293,386.30339050293,386.30339050293,386.30339050293,392.798233032227,392.798233032227,392.798233032227,392.798233032227,392.798233032227,401.462959289551,401.462959289551,401.462959289551,401.462959289551,401.462959289551,369.583862304688,369.583862304688,369.583862304688,369.583862304688,369.583862304688,369.583862304688,369.583862304688,367.192558288574,367.192558288574,367.192558288574,367.192558288574,367.192558288574,375.083351135254,375.083351135254,375.083351135254,375.083351135254,375.083351135254,381.938140869141,381.938140869141,381.938140869141,389.096733093262,389.096733093262,389.096733093262,389.096733093262,389.096733093262,380.363899230957,380.363899230957,380.363899230957,380.363899230957,368.59644317627,368.59644317627,368.59644317627,368.59644317627,368.59644317627,380.633163452148,380.633163452148,380.633163452148,380.633163452148,380.633163452148,392.082450866699,392.082450866699,392.082450866699,392.082450866699,400.879150390625,400.879150390625,400.879150390625,400.879150390625,400.879150390625,409.305313110352,409.305313110352,409.305313110352,409.305313110352,416.603240966797,416.603240966797,416.603240966797,416.603240966797,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,424.668067932129,313.13801574707,313.13801574707,313.13801574707,313.13801574707,313.13801574707,270.538955688477,270.538955688477,270.538955688477,270.538955688477,277.89234161377,277.89234161377,277.89234161377,277.89234161377,287.271408081055,287.271408081055,287.271408081055,287.271408081055,295.033340454102,295.033340454102,295.033340454102,295.033340454102,301.958976745605,301.958976745605,301.958976745605,301.958976745605,315.08576965332,315.08576965332,315.08576965332,315.08576965332,318.336791992188,318.336791992188,318.336791992188,318.336791992188,318.336791992188,320.058280944824,320.058280944824,320.058280944824,320.058280944824,320.058280944824,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,327.900398254395,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,331.095962524414,337.262580871582,337.262580871582,337.262580871582,337.262580871582,337.262580871582,338.814193725586,338.814193725586,338.814193725586,338.814193725586,338.814193725586,348.54972076416,348.54972076416,348.54972076416,348.54972076416,348.54972076416,363.343109130859,363.343109130859,363.343109130859,363.343109130859,363.343109130859,367.165550231934,367.165550231934,367.165550231934,368.947891235352,368.947891235352,368.947891235352,368.947891235352,368.947891235352,374.782821655273,374.782821655273,374.782821655273,374.782821655273,374.782821655273,386.997024536133,386.997024536133,386.997024536133,386.997024536133,386.997024536133,395.00350189209,395.00350189209,395.00350189209,395.00350189209,395.00350189209,403.008338928223,403.008338928223,403.008338928223,403.008338928223,403.008338928223,411.010604858398,411.010604858398,411.010604858398,411.010604858398,411.010604858398,422.254539489746,422.254539489746,422.254539489746,447.564109802246,447.564109802246,447.564109802246,307.511726379395,307.511726379395,307.511726379395,307.511726379395,306.635360717773,306.635360717773,306.635360717773,333.471328735352,333.471328735352,333.471328735352,350.985389709473,350.985389709473,350.985389709473,362.943351745605,362.943351745605,362.943351745605,362.943351745605,374.964149475098,374.964149475098,374.964149475098,374.964149475098,374.964149475098,385.739944458008,385.739944458008,385.739944458008,385.739944458008,385.739944458008,390.815544128418,390.815544128418,390.815544128418,390.815544128418,336.914863586426,336.914863586426,336.914863586426,336.914863586426,336.914863586426,345.471794128418,345.471794128418,345.471794128418,345.471794128418,345.471794128418,355.199363708496,355.199363708496,355.199363708496,355.199363708496,355.199363708496,362.284362792969,362.284362792969,362.284362792969,362.284362792969,362.284362792969,369.193115234375,369.193115234375,369.193115234375,369.193115234375,369.193115234375,341.959442138672,341.959442138672,341.959442138672,352.989959716797,352.989959716797,352.989959716797,352.989959716797,352.989959716797,364.863647460938,364.863647460938,364.863647460938,364.863647460938,374.477386474609,374.477386474609,374.477386474609,374.477386474609,381.993453979492,381.993453979492,381.993453979492,381.993453979492,390.702140808105,390.702140808105,390.702140808105,390.702140808105,398.469802856445,398.469802856445,398.469802856445,398.469802856445,404.930763244629,404.930763244629,404.930763244629,404.930763244629,404.575012207031,404.575012207031,404.575012207031,404.575012207031,404.575012207031,335.214462280273,335.214462280273,335.214462280273,335.214462280273,342.629692077637,342.629692077637,342.629692077637,342.629692077637,350.468421936035,350.468421936035,350.468421936035,350.468421936035,363.878700256348,363.878700256348,363.878700256348,363.878700256348,367.070014953613,367.070014953613,367.070014953613,367.070014953613,367.070014953613,368.76838684082,368.76838684082,368.76838684082,368.76838684082,368.76838684082,369.517585754395,369.517585754395,369.517585754395,369.517585754395,376.454467773438,376.454467773438,376.454467773438,376.454467773438,376.454467773438,376.454544067383,376.454544067383,376.454544067383,376.454544067383,376.454544067383,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600288391113,379.600578308105,379.600578308105,379.600578308105,379.600578308105,379.600578308105,385.612197875977,385.612197875977,385.612197875977,385.612197875977,385.612197875977,387.633415222168,387.633415222168,387.633415222168,387.633415222168,387.633415222168,396.348503112793,396.348503112793,396.348503112793,396.348503112793,396.348503112793,407.294723510742,407.294723510742,407.294723510742,407.294723510742,407.294723510742,417.526245117188,417.526245117188,417.526245117188,417.526245117188,417.526245117188,417.526245117188,418.240463256836,418.240463256836,418.240463256836,418.240463256836,418.240463256836,424.085021972656,424.085021972656,424.085021972656,424.085021972656,424.085021972656,437.393569946289,437.393569946289,437.393569946289,437.393569946289,437.393569946289,445.403038024902,445.403038024902,445.403038024902,445.403038024902,445.403038024902,453.414024353027,453.414024353027,453.414024353027,453.414024353027,453.414024353027,420.653564453125,420.653564453125,420.653564453125,420.653564453125,420.653564453125,420.653564453125,354.555786132812,354.555786132812,354.555786132812,354.555786132812,354.555786132812,379.28165435791,379.28165435791,379.28165435791,407.643768310547,407.643768310547,407.643768310547,407.643768310547,407.643768310547,407.643768310547,412.810745239258,412.810745239258,412.810745239258,412.810745239258,412.810745239258,412.810745239258,412.810745239258,436.098503112793,436.098503112793,436.098503112793,449.87149810791,449.87149810791,449.87149810791,449.87149810791,416.151428222656,416.151428222656,416.151428222656,416.151428222656,416.151428222656,429.81175994873,429.81175994873,429.81175994873,437.863723754883,437.863723754883,437.863723754883,437.863723754883,446.90064239502,446.90064239502,446.90064239502,446.90064239502,446.90064239502,454.938438415527,454.938438415527,454.938438415527,454.938438415527,454.938438415527,454.938438415527,358.497100830078,358.497100830078,358.497100830078,358.497100830078,358.497100830078,358.497100830078,314.655059814453,314.655059814453,314.655059814453,314.655059814453,314.655059814453,314.655059814453,321.921348571777,321.921348571777,321.921348571777,321.921348571777,321.921348571777,329.187637329102,329.187637329102,329.187637329102,329.187637329102,329.187637329102,336.848159790039,336.848159790039,336.848159790039,336.848159790039,336.848159790039,345.28759765625,345.28759765625,345.28759765625,345.28759765625,345.28759765625,349.416633605957,349.416633605957,349.416633605957,349.416633605957,349.416633605957,327.238555908203,327.238555908203,327.238555908203,327.238555908203,327.238555908203,327.238555908203,327.238555908203,323.25464630127,323.25464630127,323.25464630127,323.25464630127,334.474151611328,334.474151611328,334.474151611328,346.318077087402,346.318077087402,346.318077087402,346.318077087402,355.267578125,355.267578125,355.267578125,355.267578125,355.267578125,363.982437133789,363.982437133789,363.982437133789,363.982437133789,371.257423400879,371.257423400879,371.257423400879,371.257423400879,382.323272705078,382.323272705078,382.323272705078,382.323272705078,389.727600097656,389.727600097656,389.727600097656,389.727600097656,389.017440795898,389.017440795898,389.017440795898,389.017440795898,389.017440795898,318.579612731934,318.579612731934,318.579612731934,318.579612731934,318.579612731934,325.19913482666,325.19913482666,325.19913482666,325.19913482666,334.517280578613,334.517280578613,347.511680603027,347.511680603027,347.511680603027,347.511680603027,347.511680603027,347.511756896973,347.511756896973,347.511756896973,347.511756896973,347.511756896973,349.29328918457,349.29328918457,349.29328918457,349.29328918457,349.29328918457,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,357.470520019531,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,360.79077911377,367.057067871094,367.057067871094,367.057067871094,367.057067871094,367.057067871094,367.974578857422,367.974578857422,367.974578857422,367.974578857422,367.974578857422,377.735794067383,377.735794067383,377.735794067383,377.735794067383,377.735794067383,386.187561035156,386.187561035156,386.187561035156,386.187561035156,386.187561035156,402.035987854004,402.035987854004,402.462219238281,402.462219238281,402.462219238281,404.244560241699,404.244560241699,404.244560241699,404.244560241699,404.244560241699,411.010719299316,411.010719299316,411.010719299316,411.010719299316,411.010719299316,422.158538818359,422.158538818359,422.158538818359,422.158538818359,422.158538818359,430.167465209961,430.167465209961,430.167465209961,430.167465209961,430.167465209961,438.175086975098,438.175086975098,438.175086975098,438.175086975098,438.175086975098,446.180137634277,446.180137634277,446.180137634277,446.180137634277,446.180137634277,447.009132385254,447.009132385254,447.009132385254,447.009132385254,447.009132385254,447.009132385254,340.322532653809,340.322532653809,340.322532653809,340.322532653809,376.590705871582,376.590705871582,376.590705871582,376.590705871582,376.590705871582,376.590705871582,394.643417358398,394.643417358398,404.874351501465,404.874351501465,404.874351501465,422.426933288574,422.426933288574,422.426933288574,431.109191894531,431.109191894531,431.109191894531,445.850608825684,445.850608825684,445.850608825684,452.671195983887,452.671195983887,452.671195983887,452.671195983887,452.671195983887,416.184112548828,416.184112548828,416.184112548828,416.184112548828,416.184112548828,416.184112548828,397.774894714355,397.774894714355,397.774894714355,397.774894714355,397.774894714355,406.434684753418,406.434684753418,406.434684753418,406.434684753418,406.434684753418,413.262596130371,413.262596130371,413.262596130371,413.262596130371,413.262596130371,422.255393981934,422.255393981934,422.255393981934,422.255393981934,422.255393981934,427.496360778809,427.496360778809,427.496360778809,427.496360778809,427.496360778809,427.496360778809,364.138687133789,364.138687133789,364.138687133789,364.138687133789,364.138687133789,364.138687133789,368.232139587402,368.232139587402,368.232139587402,368.232139587402,368.232139587402,374.927803039551,374.927803039551,374.927803039551,374.927803039551,374.927803039551,384.225975036621,384.225975036621,384.225975036621,391.634460449219,391.634460449219,391.634460449219,391.634460449219,402.223731994629,402.223731994629,402.223731994629,402.223731994629,409.699501037598,409.699501037598,409.699501037598,409.699501037598,409.699501037598,416.55061340332,416.55061340332,416.55061340332,416.55061340332,369.64128112793,369.64128112793,369.64128112793,369.64128112793,369.64128112793,365.154205322266,365.154205322266,365.154205322266,365.154205322266,373.706771850586,373.706771850586,373.706771850586,373.706771850586,380.996826171875,380.996826171875,380.996826171875,380.996826171875,387.276161193848,387.276161193848,387.276161193848,387.276161193848,394.036865234375,394.036865234375,394.036865234375,394.036865234375,403.791702270508,403.791702270508,403.791702270508,403.791702270508,412.26831817627,412.26831817627,423.10913848877,423.10913848877,423.10913848877,423.10913848877,423.10913848877,423.109214782715,423.109214782715,423.109214782715,423.109214782715,423.109214782715,424.828063964844,424.828063964844,424.828063964844,424.828063964844,424.828063964844,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670112609863,432.670188903809,432.670188903809,432.670188903809,432.670188903809,432.670188903809,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884704589844,435.884994506836,435.884994506836,435.884994506836,435.884994506836,435.884994506836,442.005699157715,442.005699157715,442.005699157715,442.005699157715,442.005699157715,443.472732543945,443.472732543945,443.472732543945,443.472732543945,443.472732543945,453.225280761719,453.225280761719,453.225280761719,453.225280761719,453.225280761719,412.933807373047,412.933807373047,412.933807373047,412.933807373047,412.933807373047,376.886054992676,376.886054992676,376.886054992676,376.886054992676,376.886054992676,377.312629699707,377.312629699707,377.312629699707,379.094970703125,379.094970703125,379.094970703125,379.094970703125,379.094970703125,389.279800415039,389.279800415039,389.279800415039,389.279800415039,389.279800415039,397.138427734375,397.138427734375,397.138427734375,397.138427734375,397.138427734375,405.145484924316,405.145484924316,405.145484924316,405.145484924316,405.145484924316,413.152359008789,413.152359008789,413.152359008789,413.152359008789,413.152359008789,421.159111022949,421.159111022949,421.159111022949,421.159111022949,421.159111022949,432.159355163574,432.159355163574,432.159355163574,382.976997375488,382.976997375488,382.976997375488,382.976997375488,407.062980651855,407.062980651855,407.062980651855,407.565689086914,407.565689086914,407.565689086914,434.45255279541,434.45255279541,434.45255279541,446.127807617188,446.127807617188,446.127807617188,446.127807617188,454.531112670898,454.531112670898,454.531112670898,454.531112670898,454.531112670898,454.531112670898,454.531112670898,401.560943603516,401.560943603516,401.560943603516,401.560943603516,401.560943603516,401.560943603516,401.560943603516,407.585105895996,407.585105895996,407.585105895996,407.585105895996,407.585105895996,417.337028503418,417.337028503418,417.337028503418,417.337028503418,417.337028503418,424.583724975586,424.583724975586,424.583724975586,424.583724975586,424.583724975586,433.60107421875,433.60107421875,433.60107421875,433.60107421875,433.60107421875,441.533500671387,441.533500671387,441.533500671387,441.533500671387,441.533500671387,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,444.484527587891,324.26545715332,324.26545715332,324.26545715332,324.26545715332,280.332717895508,280.332717895508,280.332717895508,280.332717895508,280.332717895508,287.687133789062,287.687133789062,287.687133789062,287.687133789062,287.687133789062,294.767295837402,294.767295837402,294.767295837402,302.023765563965,302.023765563965,302.023765563965,309.054946899414,309.054946899414,309.054946899414,309.054946899414,309.054946899414,303.667190551758,303.667190551758,303.667190551758,303.667190551758,303.667190551758,303.667190551758,280.879211425781,280.879211425781,280.879211425781,280.879211425781,291.064453125,291.064453125,291.064453125,291.064453125,291.064453125,302.48860168457,302.48860168457,302.48860168457,302.48860168457,310.645568847656,310.645568847656,310.645568847656,310.645568847656,310.645568847656,319.295295715332,319.295295715332,319.295295715332,319.295295715332,326.136405944824,326.136405944824,326.136405944824,326.136405944824,332.626411437988,332.626411437988,332.626411437988,332.626411437988,342.134857177734,342.134857177734,342.134857177734,342.134857177734,352.720520019531,352.720520019531,352.720520019531,352.720520019531,359.940269470215,359.940269470215,359.940269470215,359.940269470215,364.246589660645,364.246589660645,364.246589660645,364.246589660645,364.246589660645,297.243171691895,297.243171691895,297.243171691895,297.243171691895,297.243171691895,285.106460571289,285.106460571289,285.106460571289,293.883338928223,293.883338928223,293.883338928223,293.883338928223,293.883338928223,295.616195678711,295.616195678711,295.616195678711,295.616195678711,295.616195678711,297.310821533203,297.310821533203,297.310821533203,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,303.487396240234,304.316612243652,304.316612243652,304.316612243652,304.316612243652,304.316612243652,306.699440002441,306.699440002441,306.699440002441,306.699440002441,306.699440002441,306.699729919434,306.699729919434,306.699729919434,306.699729919434,306.699729919434,312.845169067383,312.845169067383,312.845169067383,312.845169067383,312.845169067383,314.87134552002,314.87134552002,314.87134552002,314.87134552002,314.87134552002,324.154693603516,324.154693603516,324.154693603516,324.154693603516,324.154693603516,339.933471679688,339.933471679688,340.35961151123,340.35961151123,340.35961151123,340.539772033691,340.539772033691,340.539772033691,340.539772033691,340.539772033691,346.949546813965,346.949546813965,346.949546813965,346.949546813965,346.949546813965,360.201354980469,360.201354980469,360.201354980469,360.201354980469,360.201354980469,368.209533691406,368.209533691406,368.209533691406,368.209533691406,368.209533691406,376.217903137207,376.217903137207,376.217903137207,376.217903137207,376.217903137207,384.227066040039,384.227066040039,384.227066040039,384.227066040039,384.227066040039,396.530776977539,396.530776977539,396.530776977539,424.765228271484,424.765228271484,424.765228271484,438.031867980957,438.031867980957,438.031867980957,440.694854736328,440.694854736328,440.694854736328,322.155586242676,322.155586242676,322.155586242676,340.267127990723,340.267127990723,340.267127990723,340.267127990723,340.267127990723,350.031021118164,350.031021118164,350.031021118164,350.031021118164,350.031021118164,359.182815551758,359.182815551758,359.182815551758,359.182815551758,359.182815551758,367.671234130859,367.671234130859,367.671234130859,367.671234130859,367.671234130859,377.04118347168,377.04118347168,377.04118347168,351.741271972656,351.741271972656,351.741271972656,351.741271972656,351.741271972656,351.741271972656,331.070922851562,331.070922851562,331.070922851562,331.070922851562,331.070922851562,340.945426940918,340.945426940918,340.945426940918,340.945426940918,340.945426940918,348.451728820801,348.451728820801,348.451728820801,348.451728820801,348.451728820801,346.135620117188,346.135620117188,346.135620117188,346.135620117188,331.185150146484,331.185150146484,331.185150146484,331.185150146484,331.185150146484,341.351867675781,341.351867675781,341.351867675781,341.351867675781,341.351867675781,341.351867675781,349.323516845703,349.323516845703,349.323516845703,349.323516845703,349.323516845703,361.864372253418,361.864372253418,361.864372253418,361.864372253418,370.004409790039,370.004409790039,370.004409790039,370.004409790039,376.728332519531,376.728332519531,376.728332519531,376.728332519531,383.059837341309,383.059837341309,383.059837341309,383.059837341309,377.089561462402,377.089561462402,377.089561462402,377.089561462402,377.089561462402,328.61304473877,328.61304473877,328.61304473877,328.61304473877,335.320343017578,335.320343017578,335.320343017578,335.320343017578,342.316070556641,342.316070556641,342.316070556641,342.316070556641,351.005523681641,351.005523681641,351.005523681641,351.005523681641,359.50138092041,359.50138092041,359.50138092041,359.50138092041,373.034217834473,373.034217834473,373.034217834473,378.278366088867,378.278366088867,378.278366088867,378.278366088867,378.278366088867,378.278442382812,378.278442382812,378.278442382812,378.278442382812,378.278442382812,380.071815490723,380.071815490723,380.071815490723,380.071815490723,380.071815490723,387.727500915527,387.727500915527,387.727500915527,387.727500915527,387.727500915527,387.727500915527,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,388.312324523926,391.065795898438,391.065795898438,391.065795898438,391.065795898438,391.065795898438,391.065795898438,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,391.650939941406,394.865989685059,394.865989685059,394.865989685059,398.104400634766,398.104400634766,398.104400634766,398.104400634766,398.104400634766,399.634239196777,399.634239196777,399.634239196777,399.634239196777,399.634239196777,409.327011108398,409.327011108398,409.327011108398,409.327011108398,416.791557312012,416.791557312012,416.791557312012,416.791557312012,416.791557312012,424.730339050293,424.730339050293,424.730339050293,424.730339050293,424.730339050293,424.730339050293,431.317741394043,431.317741394043,431.317741394043,431.317741394043,431.317741394043,436.716156005859,436.716156005859,436.716156005859,436.716156005859,436.716156005859,444.617576599121,444.617576599121,444.617576599121,444.617576599121,444.617576599121,442.922821044922,442.922821044922,442.922821044922,442.922821044922,442.922821044922,442.922821044922,341.300895690918,341.300895690918,341.300895690918,341.300895690918,341.300895690918,353.472389221191,353.472389221191,353.472389221191,353.472389221191,353.472389221191,388.001052856445,388.001052856445,388.001052856445,400.809547424316,400.809547424316,400.809547424316,403.37126159668,403.37126159668,403.37126159668,428.658538818359,428.658538818359,428.658538818359,438.44261932373,438.44261932373,438.44261932373,438.44261932373,450.770530700684,450.770530700684,450.770530700684,450.770530700684,450.770530700684,408.779609680176,408.779609680176,408.779609680176,408.779609680176,408.779609680176,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,322.571556091309,334.393020629883,334.393020629883,334.393020629883,334.393020629883,334.393020629883,342.357223510742,342.357223510742,342.357223510742,352.486457824707,352.486457824707,352.486457824707,352.486457824707,352.486457824707,352.486457824707,360.867057800293,360.867057800293,360.867057800293,360.867057800293,360.867057800293,360.867057800293,342.609115600586,342.609115600586,342.609115600586,342.609115600586,342.609115600586,342.609115600586,330.096664428711,330.096664428711,330.096664428711,330.096664428711,330.096664428711,338.913192749023,338.913192749023,338.913192749023,338.913192749023,338.913192749023,347.065994262695,347.065994262695,347.065994262695,353.622047424316,353.622047424316,353.622047424316,359.798004150391,359.798004150391,359.798004150391,359.798004150391,333.578300476074,333.578300476074,333.578300476074,333.578300476074,333.578300476074,345.819091796875,345.819091796875,345.819091796875,345.819091796875,356.03980255127,356.03980255127,356.03980255127,356.03980255127,363.578186035156,363.578186035156,363.578186035156,363.578186035156,373.957595825195,373.957595825195,373.957595825195,373.957595825195,381.228881835938,381.228881835938,381.228881835938,381.228881835938,389.674201965332,389.674201965332,389.674201965332,389.674201965332,396.251571655273,396.251571655273,396.251571655273,396.251571655273,402.46851348877,402.46851348877,402.46851348877,402.46851348877,414.172256469727,414.172256469727,414.172256469727,414.172256469727,429.496765136719,429.496765136719,429.496765136719,429.496765136719,429.496765136719,429.496765136719,429.807952880859,429.807952880859,429.807952880859,429.807952880859,429.807952880859,431.552024841309,431.552024841309,431.552024841309,431.552024841309,431.552024841309,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,439.543098449707,440.672660827637,440.672660827637,440.672660827637,440.672660827637,442.802993774414,442.802993774414,442.802993774414,442.802993774414,442.802993774414,442.803283691406,442.803283691406,442.803283691406,442.803283691406,442.803283691406,449.055526733398,449.055526733398,449.055526733398,449.055526733398,449.055526733398,449.83065032959,449.83065032959,449.83065032959,449.83065032959,449.83065032959,408.43132019043,408.43132019043,408.43132019043,408.43132019043,408.43132019043,332.946411132812,332.946411132812,332.946411132812,332.946411132812,341.252662658691,341.252662658691,341.252662658691,341.252662658691,341.252662658691,349.144828796387,349.144828796387,349.144828796387,349.144828796387,349.144828796387,349.144828796387,349.322402954102,349.322402954102,349.322402954102,355.706764221191,355.706764221191,355.706764221191,355.706764221191,355.706764221191,365.926635742188,365.926635742188,365.926635742188,365.926635742188,365.926635742188,373.930702209473,373.930702209473,373.930702209473,373.930702209473,373.930702209473,381.934959411621,381.934959411621,381.934959411621,381.934959411621,381.934959411621,392.99439239502,392.99439239502,392.99439239502,392.99439239502,392.99439239502,401.861923217773,401.861923217773,401.861923217773,401.861923217773,401.861923217773,428.975173950195,428.975173950195,428.975173950195,441.108757019043,441.108757019043,441.108757019043,441.108787536621,441.108787536621,441.108787536621,371.940788269043,371.940788269043,371.940788269043,367.910331726074,367.910331726074,367.910331726074,383.420951843262,383.420951843262,383.420951843262,383.420951843262,383.420951843262,396.16202545166,396.16202545166,396.16202545166,396.16202545166,406.186363220215,406.186363220215,406.186363220215,406.186363220215,406.186363220215,413.295875549316,413.295875549316,413.295875549316,421.147521972656,421.147521972656,421.147521972656,421.147521972656,421.147521972656,380.473388671875,380.473388671875,380.473388671875,380.473388671875,380.473388671875,380.473388671875,373.885871887207,373.885871887207,373.885871887207,373.885871887207,373.885871887207,384.142372131348,384.142372131348,384.142372131348,384.142372131348,384.142372131348,392.714057922363,392.714057922363,392.714057922363,392.714057922363,392.714057922363,400.937919616699,400.937919616699,400.937919616699,400.937919616699,400.937919616699,401.88346862793,401.88346862793,401.88346862793,401.88346862793,362.116493225098,362.116493225098,362.116493225098,362.116493225098,362.116493225098,368.295402526855,368.295402526855,368.295402526855,368.295402526855,368.295402526855,377.189735412598,377.189735412598,377.189735412598,377.189735412598,377.189735412598,386.294769287109,386.294769287109,386.294769287109,386.294769287109,396.053092956543,396.053092956543,396.053092956543,396.053092956543,403.078887939453,403.078887939453,403.078887939453,403.078887939453,403.078887939453,409.273864746094,409.273864746094,409.273864746094,409.273864746094,415.541809082031,415.541809082031,415.541809082031,415.541809082031,425.72917175293,425.72917175293,425.72917175293,425.72917175293,390.625465393066,390.625465393066,390.625465393066,390.625465393066,390.625465393066,360.926040649414,360.926040649414,360.926040649414,360.926040649414,367.556030273438,367.556030273438,367.556030273438,367.556030273438,378.492561340332,378.492561340332,378.492561340332,378.492561340332,387.015968322754,387.015968322754,387.015968322754,387.015968322754,399.771270751953,399.771270751953,399.771270751953,404.645530700684,404.645530700684,404.645530700684,404.645530700684,404.645530700684,406.312759399414,406.312759399414,406.312759399414,406.312759399414,406.312759399414,413.387008666992,413.387008666992,413.387008666992,413.387008666992,413.387008666992,413.387008666992,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,413.921478271484,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.05867767334,417.058967590332,417.058967590332,417.058967590332,417.058967590332,417.058967590332,423.022621154785,423.022621154785,423.022621154785,423.022621154785,423.022621154785,425.536346435547,425.536346435547,425.536346435547,425.536346435547,425.536346435547,434.008155822754,434.008155822754,434.008155822754,449.365074157715,449.365074157715,449.365074157715,449.365074157715,449.365074157715,449.791465759277,449.791465759277,449.791465759277,449.971626281738,449.971626281738,449.971626281738,449.971626281738,449.971626281738,433.840728759766,433.840728759766,433.840728759766,433.840728759766,433.840728759766,433.840728759766,366.768844604492,366.768844604492,366.768844604492,366.768844604492,366.768844604492,377.544486999512,377.544486999512,377.544486999512,377.544486999512,377.544486999512,385.549468994141,385.549468994141,385.549468994141,385.549468994141,385.549468994141,393.554306030273,393.554306030273,393.554306030273,393.554306030273,393.554306030273,401.559936523438,401.559936523438,401.559936523438,401.559936523438,401.559936523438,412.800270080566,412.800270080566,412.800270080566,449.734580993652,449.734580993652,449.734580993652,450.216995239258,450.216995239258,450.216995239258,454.907112121582,454.907112121582,454.907112121582,454.907112121582,454.907112121582,454.907112121582,454.907112121582,454.907112121582,454.907112121582,333.345817565918,333.345817565918,333.345817565918,266.741188049316,266.741188049316,266.741188049316,266.741188049316,266.741188049316,266.741188049316,287.983352661133,287.983352661133,287.983352661133,304.374221801758,304.374221801758,304.374221801758,304.374221801758,304.374221801758,313.591987609863,313.591987609863,313.591987609863,313.591987609863,313.591987609863,324.960189819336,324.960189819336,324.960189819336,324.960189819336,324.960189819336,324.960189819336,331.6142578125,331.6142578125,331.6142578125,331.6142578125,331.6142578125,338.263389587402,338.263389587402,338.263389587402,338.263389587402,338.263389587402,345.052787780762,345.052787780762,345.052787780762,345.052787780762,345.052787780762,345.052787780762,345.052787780762,295.406295776367,295.406295776367,295.406295776367,295.406295776367,295.406295776367,295.406295776367,304.911041259766,304.911041259766,304.911041259766,304.911041259766,304.911041259766,314.751266479492,314.751266479492,314.751266479492,314.751266479492,314.751266479492,321.68448638916,321.68448638916,321.68448638916,321.68448638916,321.68448638916,307.055160522461,307.055160522461,307.055160522461,307.055160522461,307.055160522461,307.055160522461,294.827987670898,294.827987670898,294.827987670898,294.827987670898,294.827987670898,307.01033782959,307.01033782959,307.01033782959,307.01033782959,307.01033782959,319.207229614258,319.207229614258,319.207229614258,319.207229614258,328.476974487305,328.476974487305,328.476974487305,328.476974487305,328.476974487305,335.784782409668,335.784782409668,335.784782409668,335.784782409668,343.613014221191,343.613014221191,343.613014221191,343.613014221191,350.858116149902,350.858116149902,350.858116149902,350.858116149902,357.589248657227,357.589248657227,357.589248657227,357.589248657227,364.520004272461,364.520004272461,364.520004272461,364.520004272461,364.665344238281,364.665344238281,364.665344238281,364.665344238281,364.665344238281,292.158973693848,292.158973693848,292.158973693848,292.158973693848,298.743682861328,298.743682861328,298.743682861328,298.743682861328,311.167556762695,311.167556762695,323.22785949707,323.22785949707,323.22785949707,323.22785949707,323.22785949707,323.227935791016,323.227935791016,323.227935791016,323.227935791016,323.227935791016,324.902305603027,324.902305603027,324.902305603027,324.902305603027,324.902305603027,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,332.503059387207,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,335.635864257812,341.563209533691,341.563209533691,341.563209533691,341.563209533691,341.563209533691,343.52027130127,343.52027130127,343.52027130127,343.52027130127,343.52027130127,352.277526855469,352.277526855469,352.277526855469,352.277526855469,352.277526855469,367.698921203613,367.698921203613,367.698921203613,367.698921203613,367.698921203613,368.125495910645,368.125495910645,368.125495910645,369.907836914062,369.907836914062,369.907836914062,369.907836914062,369.907836914062,374.72607421875,374.72607421875,374.72607421875,374.72607421875,374.72607421875,387.699195861816,387.699195861816,387.699195861816,387.699195861816,387.699195861816,395.704925537109,395.704925537109,395.704925537109,395.704925537109,395.704925537109,403.706939697266,403.706939697266,403.706939697266,403.706939697266,403.706939697266,411.710494995117,411.710494995117,411.710494995117,411.710494995117,411.710494995117,421.159767150879,421.159767150879,421.159767150879,447.000701904297,447.000701904297,447.000701904297,399.601623535156,399.601623535156,399.601623535156,399.601623535156,327.180328369141,327.180328369141,327.180328369141,344.482681274414,344.482681274414,360.914840698242,360.914840698242,360.914840698242,360.914840698242,372.6259765625,372.6259765625,372.6259765625,372.6259765625,372.6259765625,382.285255432129,382.285255432129,382.285255432129,382.285255432129,392.597625732422,392.597625732422,392.597625732422,392.597625732422,392.597625732422,400.674606323242,400.674606323242,400.674606323242,400.674606323242,400.674606323242,408.741668701172,408.741668701172,408.741668701172,408.741668701172,358.04564666748,358.04564666748,358.04564666748,358.04564666748,358.04564666748,365.035209655762,365.035209655762,365.035209655762,365.035209655762,365.035209655762,371.481010437012,371.481010437012,371.481010437012,377.934280395508,377.934280395508,377.934280395508,377.934280395508,377.934280395508,386.85856628418,386.85856628418,386.85856628418,386.85856628418,386.85856628418,357.728759765625,357.728759765625,357.728759765625,357.728759765625,357.728759765625,364.887268066406,364.887268066406,364.887268066406,378.468254089355,378.468254089355,378.468254089355,378.468254089355,378.468254089355,390.496925354004,390.496925354004,390.496925354004,390.496925354004,398.372177124023,398.372177124023,398.372177124023,398.372177124023,405.190498352051,405.190498352051,405.190498352051,405.190498352051,413.183532714844,413.183532714844,413.183532714844,413.183532714844,404.644790649414,404.644790649414,404.644790649414,404.644790649414,404.644790649414,360.848091125488,360.848091125488,360.848091125488,360.848091125488,369.020111083984,369.020111083984,369.020111083984,369.020111083984,376.029083251953,376.029083251953,376.029083251953,376.029083251953,382.933227539062,382.933227539062,382.933227539062,382.933227539062,391.572242736816,391.572242736816,391.572242736816,391.572242736816,404.793090820312,404.793090820312,404.793090820312,404.793090820312,404.793090820312,408.417610168457,408.417610168457,408.417610168457,408.417610168457,408.417610168457,409.791717529297,409.791717529297,409.791717529297,409.791717529297,409.791717529297,409.791717529297,410.083740234375,410.083740234375,410.083740234375,410.083740234375,410.083740234375,415.802726745605,415.802726745605,415.802726745605,417.585678100586,417.585678100586,417.585678100586,417.585678100586,417.585678100586,417.585754394531,417.585754394531,417.585754394531,417.585754394531,417.585754394531,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,420.673149108887,426.511512756348,426.511512756348,426.511512756348,426.511512756348,426.511512756348,427.263229370117,427.263229370117,427.263229370117,427.263229370117,427.263229370117,434.650314331055,434.650314331055,434.650314331055,434.650314331055,434.650314331055,443.513969421387,443.513969421387,443.513969421387,443.513969421387,443.513969421387,454.843627929688,454.843627929688,454.843627929688,445.888305664062,445.888305664062,445.888305664062,445.888305664062,360.575973510742,360.575973510742,360.575973510742,360.575973510742,364.206230163574,364.206230163574,364.206230163574,364.206230163574,364.206230163574,374.182571411133,374.182571411133,374.182571411133,374.182571411133,374.182571411133,385.239692687988,385.239692687988,385.239692687988,385.239692687988,385.239692687988,393.245651245117,393.245651245117,393.245651245117,393.245651245117,393.245651245117,401.248458862305,401.248458862305,401.248458862305,401.248458862305,401.248458862305,411.64274597168,411.64274597168,411.64274597168,437.448684692383,437.448684692383,437.448684692383,449.577018737793,449.577018737793,449.577018737793,454.402198791504,454.402198791504,454.402198791504,454.402198791504,454.402198791504,454.402198791504,454.402198791504,396.398681640625,396.398681640625,396.398681640625,414.48477935791,414.48477935791,414.48477935791,414.48477935791,414.48477935791,425.67658996582,425.67658996582,425.67658996582,425.67658996582,437.516593933105,437.516593933105,437.516593933105,444.246604919434,444.246604919434,444.246604919434,444.246604919434,444.246604919434,450.08039855957,450.08039855957,450.08039855957,450.08039855957,450.08039855957,450.08039855957,333.926094055176,333.926094055176,333.926094055176,333.926094055176,333.926094055176,333.926094055176,334.859741210938,334.859741210938,334.859741210938,334.859741210938,334.859741210938,343.039520263672,343.039520263672,343.039520263672,343.039520263672,343.039520263672,354.062629699707,354.062629699707,354.062629699707,354.062629699707,354.062629699707,360.420310974121,360.420310974121,360.420310974121,360.420310974121,360.420310974121,334.988014221191,334.988014221191,334.988014221191,334.988014221191,334.022155761719,334.022155761719,334.022155761719,334.022155761719,334.022155761719,345.104476928711,345.104476928711,345.104476928711,345.104476928711,345.104476928711,351.726669311523,351.726669311523,351.726669311523,351.726669311523,351.726669311523,360.988975524902,360.988975524902,360.988975524902,360.988975524902,368.661148071289,368.661148071289,368.661148071289,368.661148071289,368.661148071289,377.943168640137,377.943168640137,377.943168640137,377.943168640137,384.596839904785,384.596839904785,384.596839904785,384.596839904785,395.16902923584,395.16902923584,395.16902923584,395.16902923584,366.700698852539,366.700698852539,366.700698852539,366.700698852539,366.700698852539,334.276153564453,334.276153564453,334.276153564453,334.276153564453,341.808296203613,341.808296203613,341.808296203613,341.808296203613,349.332099914551,349.332099914551,349.332099914551,349.332099914551,361.532112121582,361.532112121582,361.532112121582,361.532112121582,361.532112121582,374.097900390625,374.097900390625,374.097900390625,374.097900390625,374.097900390625,374.09797668457,374.09797668457,374.09797668457,374.09797668457,374.09797668457,375.791389465332,375.791389465332,375.791389465332,375.791389465332,375.791389465332,382.878807067871,382.878807067871,382.878807067871,382.878807067871,382.878807067871,382.878807067871,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,383.40837097168,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,386.525932312012,392.456489562988,392.456489562988,392.456489562988,392.456489562988,392.456489562988,395.47705078125,395.47705078125,395.47705078125,395.47705078125,395.47705078125,403.446166992188,403.446166992188,403.446166992188,403.446166992188,403.446166992188,418.769462585449,418.769462585449,419.195701599121,419.195701599121,419.195701599121,420.978042602539,420.978042602539,420.978042602539,420.978042602539,420.978042602539,427.770309448242,427.770309448242,427.770309448242,427.770309448242,427.770309448242,438.845748901367,438.845748901367,438.845748901367,438.845748901367,438.845748901367,446.851684570312,446.851684570312,446.851684570312,446.851684570312,446.851684570312,454.855567932129,454.855567932129,454.855567932129,454.855567932129,454.855567932129,424.500289916992,424.500289916992,424.500289916992,424.500289916992,424.500289916992,424.500289916992,346.833229064941,346.833229064941,346.833229064941,346.833229064941,346.833229064941,382.476943969727,382.476943969727,382.476943969727,394.485305786133,394.485305786133,394.485305786133,411.925384521484,411.925384521484,423.368507385254,423.368507385254,423.368507385254,441.735389709473,441.735389709473,441.735389709473,449.930335998535,449.930335998535,449.930335998535,449.930335998535,405.121269226074,405.121269226074,405.121269226074,405.121269226074,405.121269226074,411.59156036377,411.59156036377,411.59156036377,417.846420288086,417.846420288086,417.846420288086,417.846420288086,417.846420288086,425.551124572754,425.551124572754,425.551124572754,425.551124572754,425.551124572754,436.375823974609,436.375823974609,436.375823974609,436.375823974609,436.375823974609,436.375823974609,363.349105834961,363.349105834961,363.349105834961,363.349105834961,363.349105834961,363.349105834961,360.911193847656,360.911193847656,360.911193847656,360.911193847656,360.911193847656,360.911193847656,370.935073852539,370.935073852539,370.935073852539,381.909225463867,381.909225463867,381.909225463867,381.909225463867,381.909225463867,390.368209838867,390.368209838867,390.368209838867,390.368209838867,390.368209838867,400.116546630859,400.116546630859,400.116546630859,400.116546630859,400.116546630859,377.687850952148,377.687850952148,377.687850952148,377.687850952148,377.687850952148,377.687850952148,367.462738037109,367.462738037109,367.462738037109,367.462738037109,379.530670166016,379.530670166016,379.530670166016,379.530670166016,386.364677429199,386.364677429199,386.364677429199,386.364677429199,393.575874328613,393.575874328613,393.575874328613,393.575874328613,399.771682739258,399.771682739258,399.771682739258,399.771682739258,408.621147155762,408.621147155762,408.621147155762,408.621147155762,416.144828796387,416.144828796387,416.144828796387,416.144828796387,423.95352935791,423.95352935791,423.95352935791,423.95352935791,431.556564331055,431.556564331055,431.556564331055,431.556564331055,441.620674133301,441.620674133301,441.620674133301,441.620674133301,450.044570922852,450.044570922852,411.487022399902,411.487022399902,411.487022399902,411.487022399902,370.146339416504,370.146339416504,370.146339416504,370.146339416504,370.419067382812,370.419067382812,370.419067382812,370.419067382812,370.419067382812,370.419143676758,370.419143676758,370.419143676758,370.419143676758,370.419143676758,372.113273620605,372.113273620605,372.113273620605,372.113273620605,372.113273620605,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667823791504,379.667900085449,379.667900085449,379.667900085449,379.667900085449,379.667900085449,382.753219604492,382.753219604492,382.753219604492,382.753219604492,382.753219604492,382.753509521484,382.753509521484,382.753509521484,382.753509521484,382.753509521484,388.619331359863,388.619331359863,388.619331359863,388.619331359863,388.619331359863,389.38102722168,389.38102722168,389.38102722168,389.38102722168,389.38102722168,398.946128845215,398.946128845215,398.946128845215,398.946128845215,407.797996520996,407.797996520996,407.797996520996,407.797996520996,407.797996520996,413.779434204102,413.779434204102,413.779434204102,413.779434204102,413.779434204102,413.779434204102,415.56177520752,415.56177520752,415.56177520752,415.56177520752,415.56177520752,420.311935424805,420.311935424805,420.311935424805,420.311935424805,420.311935424805,433.458145141602,433.458145141602,433.458145141602,433.458145141602,433.458145141602,441.462585449219,441.462585449219,441.462585449219,441.462585449219,441.462585449219,449.468170166016,449.468170166016,449.468170166016,449.468170166016,449.468170166016,454.403244018555,454.403244018555,454.403244018555,454.403244018555,454.403244018555,454.403244018555,376.296897888184,376.296897888184,376.296897888184,376.296897888184,376.296897888184,376.296897888184,379.348655700684,379.348655700684,379.348655700684,379.348655700684,379.348655700684,413.746139526367,413.746139526367,413.746139526367,425.452949523926,425.452949523926,425.452949523926,442.502792358398,442.502792358398,454.703666687012,454.703666687012,454.703666687012,454.703666687012,454.703666687012,454.703666687012,454.703666687012,454.703666687012,331.193580627441,331.193580627441,331.193580627441,331.193580627441,278.351409912109,278.351409912109,278.351409912109,278.351409912109,290.761070251465,290.761070251465,290.761070251465,290.761070251465,301.578521728516,301.578521728516,301.578521728516,301.578521728516,311.721717834473,311.721717834473,311.721717834473,311.721717834473,311.721717834473,320.780738830566,320.780738830566,320.780738830566,320.780738830566,320.780738830566,326.391441345215,326.391441345215,326.391441345215,326.391441345215,326.391441345215,326.391441345215,285.927886962891,285.927886962891,285.927886962891,285.927886962891,285.927886962891,293.316627502441,293.316627502441,293.316627502441,293.316627502441,293.316627502441,306.242637634277,306.242637634277,306.242637634277,306.242637634277,306.242637634277,297.723205566406,297.723205566406,297.723205566406,297.723205566406,297.723205566406,297.723205566406,297.723205566406,280.292320251465,280.292320251465,280.292320251465,280.292320251465,280.292320251465,291.947265625,291.947265625,291.947265625,291.947265625,291.947265625,304.78547668457,304.78547668457,304.78547668457,304.78547668457,314.460708618164,314.460708618164,314.460708618164,314.460708618164,314.460708618164,323.168762207031,323.168762207031,323.168762207031,323.168762207031,330.943778991699,330.943778991699,330.943778991699,330.943778991699,339.560272216797,339.560272216797,339.560272216797,339.560272216797,348.133804321289,348.133804321289,348.133804321289,348.133804321289,355.08381652832,355.08381652832,355.08381652832,355.08381652832,310.640083312988,310.640083312988,310.640083312988,310.640083312988,310.640083312988,282.055923461914,282.055923461914,282.055923461914,282.055923461914,288.772186279297,288.772186279297,288.772186279297,288.772186279297,296.908882141113,296.908882141113,296.908882141113,296.908882141113,296.908882141113,309.38525390625,309.38525390625,309.38525390625,309.38525390625,309.38525390625,311.081108093262,311.081108093262,311.081108093262,311.081108093262,311.081108093262,311.828735351562,311.828735351562,311.828735351562,311.828735351562,318.487686157227,318.487686157227,318.487686157227,318.487686157227,318.487686157227,318.487762451172,318.487762451172,318.487762451172,318.487762451172,318.487762451172,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,321.498908996582,327.358009338379,327.358009338379,327.358009338379,327.358009338379,327.358009338379,327.358009338379,330.389358520508,330.389358520508,330.389358520508,330.389358520508,330.389358520508,337.552612304688,337.552612304688,337.552612304688,337.552612304688,337.552612304688,350.841789245605,350.841789245605,350.841789245605,350.841789245605,350.841789245605,350.841789245605,352.664680480957,352.664680480957,352.664680480957,352.664680480957,352.664680480957,362.789764404297,362.789764404297,362.789764404297,362.789764404297,362.789764404297,370.241470336914,370.241470336914,370.241470336914,370.241470336914,370.241470336914,378.244956970215,378.244956970215,378.244956970215,378.244956970215,378.244956970215,386.249588012695,386.249588012695,386.249588012695,386.249588012695,386.249588012695,394.254096984863,394.254096984863,394.254096984863,394.254096984863,394.254096984863,414.080535888672,414.080535888672,414.080535888672,414.080535888672,442.344467163086,442.344467163086,442.344467163086,442.344497680664,442.344497680664,442.344497680664,383.579727172852,383.579727172852,383.579727172852,317.703147888184,317.703147888184,317.703147888184,339.460121154785,339.460121154785,339.460121154785,339.460121154785,350.469543457031,350.469543457031,350.469543457031,350.469543457031,360.382568359375,360.382568359375,360.382568359375,360.382568359375,360.382568359375,370.063606262207,370.063606262207,370.063606262207,370.063606262207,370.063606262207,337.49137878418,337.49137878418,337.49137878418,337.49137878418,337.49137878418,337.49137878418,325.879196166992,325.879196166992,325.879196166992,325.879196166992,325.879196166992,334.205917358398,334.205917358398,334.205917358398,334.205917358398,334.205917358398,344.185707092285,344.185707092285,344.185707092285,344.185707092285,344.185707092285,343.100715637207,343.100715637207,343.100715637207,343.100715637207,343.100715637207,343.100715637207,324.048843383789,324.048843383789,324.048843383789,324.048843383789,324.048843383789,331.001609802246,331.001609802246,331.001609802246,331.001609802246,340.14185333252,340.14185333252,340.14185333252,340.14185333252,340.14185333252,352.490783691406,352.490783691406,352.490783691406,352.490783691406,361.628242492676,361.628242492676,361.628242492676,361.628242492676,361.628242492676,368.845840454102,368.845840454102,368.845840454102,368.845840454102,376.201721191406,376.201721191406,376.201721191406,376.201721191406,379.614074707031,379.614074707031,379.614074707031,379.614074707031,379.614074707031,326.769134521484,326.769134521484,326.769134521484,326.769134521484,333.695518493652,333.695518493652,333.695518493652,333.695518493652,340.681251525879,340.681251525879,340.681251525879,340.681251525879,347.114532470703,347.114532470703,347.114532470703,347.114532470703,353.769874572754,353.769874572754,353.769874572754,353.769874572754,362.011459350586,362.011459350586,362.011459350586,362.011459350586,362.011459350586,362.011459350586,375.178382873535,375.178382873535,375.178382873535,375.178382873535,375.178382873535,376.609344482422,376.609344482422,376.609344482422,376.609344482422,376.609344482422,376.609344482422,376.920608520508,376.920608520508,376.920608520508,376.920608520508,376.920608520508,384.532165527344,384.532165527344,384.532165527344,384.532165527344,384.532165527344,384.532241821289,384.532241821289,384.532241821289,384.532241821289,384.532241821289,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,387.60669708252,393.300811767578,393.300811767578,393.300811767578,393.300811767578,393.300811767578,394.573699951172,394.573699951172,394.573699951172,394.573699951172,394.573699951172,404.008415222168,404.008415222168,404.008415222168,404.008415222168,404.008415222168,419.265785217285,419.265785217285,419.265785217285,419.265785217285,419.265785217285,419.69229888916,419.69229888916,419.69229888916,421.474639892578,421.474639892578,421.474639892578,421.474639892578,421.474639892578,428.56184387207,428.56184387207,428.56184387207,428.56184387207,428.56184387207,439.635452270508,439.635452270508,439.635452270508,439.635452270508,439.635452270508,447.636322021484,447.636322021484,447.636322021484,447.636322021484,447.636322021484,438.781089782715,438.781089782715,438.781089782715,438.781089782715,438.781089782715,438.781089782715,336.555740356445,336.555740356445,336.555740356445,336.555740356445,336.555740356445,344.597602844238,344.597602844238,344.597602844238,344.597602844238,344.597602844238,378.637351989746,378.637351989746,378.637351989746,390.32251739502,390.32251739502,390.32251739502,407.354232788086,407.354232788086,421.031883239746,421.031883239746,421.031883239746,437.423614501953,437.423614501953,437.423614501953,437.423614501953,447.23168182373,447.23168182373,447.23168182373,447.23168182373,451.886848449707,451.886848449707,451.886848449707,451.886848449707,451.886848449707,451.886848449707,401.336547851562,401.336547851562,401.336547851562,401.336547851562,401.336547851562,408.717903137207,408.717903137207,408.717903137207,416.853637695312,416.853637695312,416.853637695312,416.853637695312,416.853637695312,426.943664550781,426.943664550781,426.943664550781,426.943664550781,426.943664550781,370.977928161621,370.977928161621,370.977928161621,370.977928161621,309.132446289062,309.132446289062,309.132446289062,309.132446289062,316.163665771484,316.163665771484,316.163665771484,316.163665771484,316.163665771484,316.163665771484,322.288681030273,322.288681030273,322.288681030273,322.288681030273,322.288681030273,329.57453918457,329.57453918457,329.57453918457,336.860481262207,336.860481262207,336.860481262207,336.860481262207,336.860481262207,349.413047790527,349.413047790527,349.413047790527,349.413047790527,349.413047790527,318.143905639648,318.143905639648,318.143905639648,318.143905639648,327.523574829102,327.523574829102,327.523574829102,327.523574829102,327.523574829102,337.524932861328,337.524932861328,337.524932861328,337.524932861328,344.739219665527,344.739219665527,344.739219665527,344.739219665527,351.460823059082,351.460823059082,351.460823059082,351.460823059082,361.710739135742,361.710739135742,361.710739135742,361.710739135742,368.891242980957,368.891242980957,368.891242980957,368.891242980957,375.615119934082,375.615119934082,375.615119934082,375.615119934082,382.457542419434,382.457542419434,382.457542419434,382.457542419434,389.619895935059,389.619895935059,389.619895935059,389.619895935059,403.310592651367,403.310592651367,403.310592651367,403.310592651367,406.317893981934,406.317893981934,406.317893981934,406.317893981934,406.317893981934,408.026565551758,408.026565551758,408.026565551758,408.026565551758,408.026565551758,408.02685546875,408.02685546875,408.02685546875,408.02685546875,408.02685546875,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923553466797,414.923629760742,414.923629760742,414.923629760742,414.923629760742,414.923629760742,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,417.417503356934,421.898498535156,421.898498535156,421.898498535156,421.898498535156,421.898498535156,424.233703613281,424.233703613281,424.233703613281,424.233703613281,424.233703613281,433.177276611328,433.177276611328,433.177276611328,433.177276611328,433.177276611328,446.01025390625,446.01025390625,446.01025390625,446.01025390625,446.01025390625,450.629661560059,450.629661560059,450.629661560059,450.80982208252,450.80982208252,450.80982208252,450.80982208252,450.80982208252,416.682952880859,416.682952880859,416.682952880859,416.682952880859,416.682952880859,416.682952880859,328.433303833008,328.433303833008,328.433303833008,328.433303833008,328.433303833008,328.433303833008,321.70947265625,321.70947265625,321.70947265625,321.70947265625,321.70947265625,329.478591918945,329.478591918945,329.478591918945,329.478591918945,329.478591918945,339.003761291504,339.003761291504,339.003761291504,339.003761291504,339.003761291504,347.054550170898,347.054550170898,347.054550170898,347.054550170898,347.054550170898,356.541511535645,356.541511535645,356.541511535645,356.541511535645,356.541511535645,388.785064697266,388.785064697266,388.785064697266,400.722854614258,400.722854614258,400.722854614258,421.830436706543,421.830436706543,421.830436706543,436.074775695801,436.074775695801,436.074775695801,436.074775695801,446.627700805664,446.627700805664,446.627700805664,446.627700805664,446.627700805664,453.907073974609,453.907073974609,453.907073974609,453.907073974609,453.907073974609,453.907073974609,384.406440734863,384.406440734863,384.406440734863,384.406440734863,384.406440734863,390.607345581055,390.607345581055,390.607345581055,397.462196350098,397.462196350098,397.462196350098,397.462196350098,397.462196350098,408.74006652832,408.74006652832,408.74006652832,408.74006652832,408.74006652832,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,413.532791137695,354.551338195801,354.551338195801,354.551338195801,354.551338195801,354.551338195801,273.662612915039,273.662612915039,273.662612915039,273.662612915039,273.662612915039,279.44482421875,279.44482421875,279.44482421875,279.44482421875,279.44482421875,290.859741210938,290.859741210938,290.859741210938,290.859741210938,290.859741210938,299.482772827148,299.482772827148,299.482772827148,306.244621276855,306.244621276855,306.244621276855,306.244621276855,306.244621276855,307.593826293945,307.593826293945,307.593826293945,307.593826293945,307.593826293945,307.593826293945,289.510078430176,289.510078430176,289.510078430176,300.561950683594,300.561950683594,300.561950683594,300.561950683594,308.631912231445,308.631912231445,308.631912231445,308.631912231445,315.326072692871,315.326072692871,315.326072692871,315.326072692871,324.497055053711,324.497055053711,324.497055053711,324.497055053711,334.390640258789,334.390640258789,334.390640258789,334.390640258789,341.546821594238,341.546821594238,341.546821594238,341.546821594238,348.587844848633,348.587844848633,348.587844848633,348.587844848633,358.874450683594,358.874450683594,358.874450683594,358.874450683594,370.503219604492,370.503219604492,377.494178771973,377.494178771973,377.494178771973,377.494178771973,377.494178771973,379.245819091797,379.245819091797,379.245819091797,379.245819091797,379.245819091797,381.984085083008,381.984085083008,381.984085083008,381.984085083008,386.78099822998,386.78099822998,386.78099822998,386.78099822998,386.78099822998,386.781074523926,386.781074523926,386.781074523926,386.781074523926,386.781074523926,389.803085327148,389.803085327148,389.803085327148,389.803085327148,389.803085327148,389.803375244141,389.803375244141,389.803375244141,389.803375244141,389.803375244141,395.725677490234,395.725677490234,395.725677490234,395.725677490234,395.725677490234,395.725677490234,399.30712890625,399.30712890625,399.30712890625,399.30712890625,399.30712890625,406.077621459961,406.077621459961,406.077621459961,406.077621459961,406.077621459961,422.033409118652,422.033409118652,422.033409118652,422.033409118652,422.033409118652,423.671867370605,423.671867370605,423.671867370605,425.454208374023,425.454208374023,425.454208374023,425.454208374023,425.454208374023,435.633911132812,435.633911132812,435.633911132812,435.633911132812,435.633911132812,443.212280273438,443.212280273438,443.212280273438,443.212280273438,443.212280273438,451.213729858398,451.213729858398,451.213729858398,451.213729858398,451.213729858398,405.305801391602,405.305801391602,405.305801391602,405.305801391602,405.305801391602,405.305801391602,301.98902130127,301.98902130127,301.98902130127,301.98902130127,301.98902130127,301.98902130127,298.583335876465,298.583335876465,298.583335876465,298.583335876465,298.583335876465,333.293304443359,333.293304443359,333.293304443359,345.044464111328,345.044464111328,345.044464111328,349.371078491211,349.371078491211,349.371078491211,349.371078491211,349.371078491211,349.371078491211,349.371078491211,370.881408691406,370.881408691406,370.881408691406,387.999687194824,387.999687194824,387.999687194824,387.999687194824,387.999687194824,398.835594177246,398.835594177246,398.835594177246,398.835594177246,398.835594177246,411.461906433105,411.461906433105,411.461906433105,420.403396606445,420.403396606445,420.403396606445,420.403396606445,420.403396606445,424.260467529297,424.260467529297,424.260467529297,424.260467529297,424.260467529297,424.260467529297,352.508224487305,352.508224487305,352.508224487305,352.508224487305,352.508224487305,359.556549072266,359.556549072266,359.556549072266,369.556022644043,369.556022644043,369.556022644043,369.556022644043,369.556022644043,378.624801635742,378.624801635742,378.624801635742,378.624801635742,378.624801635742,357.610557556152,357.610557556152,357.610557556152,357.610557556152,357.610557556152,357.610557556152,357.610557556152,354.10831451416,354.10831451416,354.10831451416,354.10831451416,354.10831451416,360.368675231934,360.368675231934,360.368675231934,360.368675231934,360.368675231934,371.207595825195,371.207595825195,371.207595825195,383.735816955566,383.735816955566,383.735816955566,383.735816955566,391.453758239746,391.453758239746,391.453758239746,391.453758239746,398.843780517578,398.843780517578,398.843780517578,398.843780517578,405.989646911621,405.989646911621,405.989646911621,405.989646911621,383.85041809082,383.85041809082,383.85041809082,383.85041809082,383.85041809082,353.746887207031,353.746887207031,353.746887207031,353.746887207031,361.133255004883,361.133255004883,361.133255004883,361.133255004883,368.147941589355,368.147941589355,368.147941589355,368.147941589355,375.521034240723,375.521034240723,375.521034240723,375.521034240723,388.14079284668,388.14079284668,388.14079284668,388.14079284668,399.733291625977,399.733291625977,406.626579284668,406.626579284668,406.626579284668,406.626579284668,406.626579284668,406.626655578613,406.626655578613,406.626655578613,406.626655578613,406.626655578613,408.35270690918,408.35270690918,408.35270690918,408.35270690918,408.35270690918,411.040992736816,411.040992736816,411.040992736816,411.040992736816,415.801826477051,415.801826477051,415.801826477051,415.801826477051,415.801826477051,415.801902770996,415.801902770996,415.801902770996,415.801902770996,415.801902770996,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,418.808532714844,419.561065673828,419.561065673828,419.561065673828,419.561065673828,419.561065673828,424.647033691406,424.647033691406,424.647033691406,424.647033691406,424.647033691406,424.647033691406,427.656326293945,427.656326293945,427.656326293945,427.656326293945,427.656326293945,434.838523864746,434.838523864746,434.838523864746,434.838523864746,434.838523864746,450.56517791748,450.56517791748,450.56517791748,450.56517791748,450.56517791748,421.703430175781,421.703430175781,421.703430175781,421.703430175781,421.703430175781,353.760162353516,353.760162353516,353.760162353516,353.760162353516,353.760162353516,353.760162353516,355.542503356934,355.542503356934,355.542503356934,355.542503356934,355.542503356934,362.332946777344,362.332946777344,362.332946777344,362.332946777344,362.332946777344,373.487564086914,373.487564086914,373.487564086914,373.487564086914,373.487564086914,381.489761352539,381.489761352539,381.489761352539,381.489761352539,381.489761352539,389.49609375,389.49609375,389.49609375,389.49609375,389.49609375,397.494789123535,397.494789123535,397.494789123535,397.494789123535,397.494789123535,406.813041687012,406.813041687012,406.813041687012,431.536933898926,431.536933898926,431.536933898926,443.165351867676,443.165351867676,443.165351867676,445.883499145508,445.883499145508,380.231620788574,380.231620788574,400.22241973877,400.22241973877,400.22241973877,400.22241973877,409.394058227539,409.394058227539,409.394058227539,409.394058227539,409.394058227539,409.394058227539,417.382171630859,417.382171630859,417.382171630859,417.382171630859,428.460151672363,428.460151672363,428.460151672363,435.295402526855,435.295402526855,435.295402526855,435.295402526855,435.295402526855,441.676628112793,441.676628112793,441.676628112793,441.676628112793,327.386756896973,327.386756896973,327.386756896973,327.386756896973,315.61986541748,315.61986541748,315.61986541748,315.61986541748,323.939277648926,323.939277648926,323.939277648926,323.939277648926,323.939277648926,332.143508911133,332.143508911133,332.143508911133,342.498092651367,342.498092651367,342.498092651367,342.498092651367,342.498092651367,350.886001586914,350.886001586914,350.886001586914,350.886001586914,350.886001586914,350.886001586914,329.59351348877,329.59351348877,329.59351348877,329.59351348877,323.268264770508,323.268264770508,323.268264770508,323.268264770508,323.268264770508,328.745162963867,328.745162963867,328.745162963867,328.745162963867,342.41716003418,342.41716003418,342.41716003418,342.41716003418,342.41716003418,354.314041137695,354.314041137695,354.314041137695,354.314041137695,361.060043334961,361.060043334961,361.060043334961,361.060043334961,367.302658081055,367.302658081055,367.302658081055,367.302658081055,374.538909912109,374.538909912109,374.538909912109,374.538909912109,385.37629699707,385.37629699707,385.37629699707,385.37629699707,350.184852600098,350.184852600098,350.184852600098,350.184852600098,350.184852600098,325.731498718262,325.731498718262,325.731498718262,325.731498718262,333.635963439941,333.635963439941,333.635963439941,333.635963439941,340.109519958496,340.109519958496,340.109519958496,340.109519958496,348.986480712891,348.986480712891,348.986480712891,348.986480712891,361.793960571289,361.793960571289,361.793960571289,361.793960571289,361.793960571289,365.942825317383,365.942825317383,365.942825317383,365.942825317383,365.942825317383,367.653282165527,367.653282165527,367.653282165527,367.653282165527,367.653282165527,367.653602600098,367.653602600098,367.653602600098,367.653602600098,367.653602600098,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,374.518013000488,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,376.993301391602,379.708770751953,379.708770751953,379.708770751953,383.090408325195,383.090408325195,383.090408325195,383.090408325195,383.090408325195,390.334419250488,390.334419250488,390.334419250488,390.334419250488,390.334419250488,399.911293029785,399.911293029785,399.911293029785,399.911293029785,399.911293029785,408.05810546875,408.05810546875,408.05810546875,408.05810546875,408.05810546875,408.05810546875,409.840446472168,409.840446472168,409.840446472168,409.840446472168,409.840446472168,420.019218444824,420.019218444824,420.019218444824,420.019218444824,420.019218444824,427.781364440918,427.781364440918,427.781364440918,427.781364440918,427.781364440918,435.779075622559,435.779075622559,435.779075622559,435.779075622559,435.779075622559,443.777351379395,443.777351379395,443.777351379395,443.777351379395,443.777351379395,451.773803710938,451.773803710938,451.773803710938,451.773803710938,451.773803710938,372.472946166992,372.472946166992,372.472946166992,372.472946166992,372.472946166992,372.472946166992,358.304168701172,358.304168701172,358.304168701172,369.158966064453,369.158966064453,369.158966064453,385.110687255859,385.110687255859,400.285041809082,400.285041809082,400.285041809082,400.285041809082,413.219932556152,413.219932556152,413.219932556152,413.219932556152,413.219932556152,422.296989440918,422.296989440918,422.296989440918,422.296989440918,429.915580749512,429.915580749512,429.915580749512,438.416244506836,438.416244506836,438.416244506836,438.416244506836,438.416244506836,446.118461608887,446.118461608887,446.118461608887,446.118461608887,446.118461608887,397.454750061035,397.454750061035,397.454750061035,397.454750061035,397.454750061035,397.454750061035,389.5029296875,389.5029296875,389.5029296875,389.5029296875,389.5029296875,399.759490966797,399.759490966797,399.759490966797,399.759490966797,399.759490966797,407.155578613281,407.155578613281,407.155578613281,407.155578613281,407.155578613281,415.320663452148,415.320663452148,415.320663452148,415.320663452148,415.320663452148,418.408767700195,418.408767700195,418.408767700195,418.408767700195,354.691596984863,354.691596984863,354.691596984863,354.691596984863,359.322715759277,359.322715759277,359.322715759277,366.096733093262,366.096733093262,366.096733093262,366.096733093262,366.096733093262,379.100112915039,379.100112915039,379.100112915039,379.100112915039,389.358428955078,389.358428955078,389.358428955078,389.358428955078,397.210090637207,397.210090637207,397.210090637207,405.69841003418,405.69841003418,405.69841003418,405.69841003418,412.485282897949,412.485282897949,412.485282897949,412.485282897949,419.364608764648,419.364608764648,419.364608764648,419.364608764648,419.364608764648,357.207221984863,357.207221984863,357.207221984863,357.207221984863,367.429992675781,367.429992675781,367.429992675781,367.429992675781,376.85814666748,376.85814666748,376.85814666748,376.85814666748,385.298263549805,385.298263549805,385.298263549805,385.298263549805,391.969497680664,391.969497680664,391.969497680664,391.969497680664,400.806816101074,400.806816101074,411.933219909668,411.933219909668,411.933219909668,411.933219909668,411.933219909668,413.285453796387,413.285453796387,413.285453796387,413.285453796387,413.285453796387,413.285453796387,413.570510864258,413.570510864258,413.570510864258,413.570510864258,413.570510864258,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,420.013465881348,422.345748901367,422.345748901367,422.345748901367,422.345748901367,422.345748901367,422.346038818359,422.346038818359,422.346038818359,422.346038818359,422.346038818359,427.767150878906,427.767150878906,427.767150878906,427.767150878906,427.767150878906,427.767150878906,431.07299041748,431.07299041748,431.07299041748,431.07299041748,431.07299041748,437.273109436035,437.273109436035,437.273109436035,437.273109436035,437.273109436035,449.736770629883,449.736770629883,449.736770629883,449.736770629883,449.736770629883,449.736770629883,451.559661865234,451.559661865234,451.559661865234,451.559661865234,451.559661865234,420.047454833984,420.047454833984,420.047454833984,420.047454833984,420.047454833984,420.047454833984,365.750007629395,365.750007629395,365.750007629395,365.750007629395,365.750007629395,375.594848632812,375.594848632812,375.594848632812,375.594848632812,375.594848632812,383.593849182129,383.593849182129,383.593849182129,383.593849182129,383.593849182129,391.594367980957,391.594367980957,391.594367980957,391.594367980957,391.594367980957,399.591567993164,399.591567993164,399.591567993164,399.591567993164,399.591567993164,408.072113037109,408.072113037109,408.072113037109,431.822807312012,431.822807312012,431.822807312012,442.997756958008,442.997756958008,442.997756958008,439.730392456055,439.730392456055,439.730392456055,420.220993041992,420.220993041992,420.220993041992,434.13582611084,434.13582611084,434.13582611084,434.13582611084,434.13582611084,442.647933959961,442.647933959961,442.647933959961,442.647933959961,442.647933959961,451.664749145508,451.664749145508,451.664749145508,451.664749145508,451.664749145508,438.680068969727,438.680068969727,438.680068969727,438.680068969727,438.680068969727,438.680068969727,401.422409057617,401.422409057617,401.422409057617,401.422409057617,401.422409057617,408.164642333984,408.164642333984,408.164642333984,408.164642333984,408.164642333984,414.683937072754,414.683937072754,414.683937072754,414.683937072754,414.683937072754,422.427825927734,422.427825927734,422.427825927734,422.427825927734,422.427825927734,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,428.028709411621,406.48413848877,406.48413848877,406.48413848877,406.48413848877,292.707748413086,292.707748413086,292.707748413086,292.707748413086,274.393348693848,274.393348693848,274.393348693848,274.393348693848,274.393348693848,281.789451599121,281.789451599121,281.789451599121,281.789451599121,281.789451599121,289.075340270996,289.075340270996,289.075340270996,289.075340270996,289.075340270996,297.762031555176,297.762031555176,297.762031555176,297.762031555176,303.896278381348,303.896278381348,303.896278381348,303.896278381348,300.70352935791,300.70352935791,300.70352935791,300.70352935791,280.944427490234,280.944427490234,280.944427490234,280.944427490234,289.338104248047,289.338104248047,289.338104248047,289.338104248047,289.338104248047,300.173149108887,300.173149108887,300.173149108887,300.173149108887,307.39338684082,307.39338684082,307.39338684082,307.39338684082,315.233940124512,315.233940124512,315.233940124512,315.233940124512,322.343528747559,322.343528747559,322.343528747559,322.343528747559,329.96898651123,329.96898651123,329.96898651123,329.96898651123,337.19066619873,337.19066619873,337.19066619873,337.19066619873,344.091453552246,344.091453552246,344.091453552246,344.091453552246,353.343566894531,353.343566894531,353.343566894531,353.343566894531,366.310119628906,366.310119628906,366.310119628906,366.310119628906,370.535751342773,370.535751342773,370.535751342773,370.535751342773,370.535751342773,372.216163635254,372.216163635254,372.216163635254,372.216163635254,372.216163635254,374.795463562012,374.795463562012,374.795463562012,374.795463562012,378.811996459961,378.811996459961,378.811996459961,378.811996459961,378.811996459961,378.812072753906,378.812072753906,378.812072753906,378.812072753906,378.812072753906,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,381.17455291748,386.704795837402,386.704795837402,386.704795837402,386.704795837402,386.704795837402,386.704795837402,390.573257446289,390.573257446289,390.573257446289,390.573257446289,396.555503845215,396.555503845215,396.555503845215,396.555503845215,396.555503845215,409.337669372559,409.337669372559,409.337669372559,409.337669372559,409.337669372559,409.337669372559,410.051887512207,410.051887512207,410.051887512207,410.051887512207,410.051887512207,416.855697631836,416.855697631836,416.855697631836,416.855697631836,416.855697631836,421.290542602539,421.290542602539,421.290542602539,421.290542602539,421.290542602539,429.055213928223,429.055213928223,429.055213928223,429.055213928223,429.055213928223,437.09065246582,437.09065246582,437.09065246582,437.09065246582,437.09065246582,446.564491271973,446.564491271973,446.564491271973,446.564491271973,446.564491271973,453.083717346191,453.083717346191,453.083717346191,453.083717346191,453.083717346191,406.959243774414,406.959243774414,406.959243774414,406.959243774414,406.959243774414,406.959243774414,345.506591796875,345.506591796875,345.506591796875,345.506591796875,345.506591796875,345.506591796875,312.35555267334,312.35555267334,312.35555267334,323.014274597168,323.014274597168,323.014274597168,338.711730957031,338.711730957031,349.990287780762,349.990287780762,349.990287780762,364.767944335938,364.767944335938,364.767944335938,364.767944335938,364.767944335938,374.125373840332,374.125373840332,374.125373840332,374.125373840332,383.650985717773,383.650985717773,383.650985717773,393.635765075684,393.635765075684,393.635765075684,393.635765075684,393.635765075684,399.530731201172,399.530731201172,399.530731201172,399.530731201172,341.370780944824,341.370780944824,341.370780944824,348.299140930176,348.299140930176,348.299140930176,348.299140930176,348.299140930176,356.662536621094,356.662536621094,356.662536621094,366.306900024414,366.306900024414,366.306900024414,366.306900024414,366.306900024414,363.57527923584,363.57527923584,363.57527923584,363.57527923584,363.57527923584,363.57527923584,343.379829406738,343.379829406738,343.379829406738,343.379829406738,343.379829406738,350.050453186035,350.050453186035,350.050453186035,350.050453186035,362.845184326172,362.845184326172,362.845184326172,362.845184326172,362.845184326172,374.422187805176,374.422187805176,374.422187805176,374.422187805176,381.678207397461,381.678207397461,381.678207397461,381.678207397461,388.481224060059,388.481224060059,388.481224060059,388.481224060059,395.494346618652,395.494346618652,395.494346618652,395.494346618652,388.065711975098,388.065711975098,388.065711975098,388.065711975098,388.065711975098,341.297142028809,341.297142028809,341.297142028809,341.297142028809,348.159286499023,348.159286499023,348.159286499023,348.159286499023,359.213729858398,359.213729858398,359.213729858398,359.213729858398,367.122116088867,367.122116088867,367.122116088867,367.122116088867,374.706596374512,374.706596374512,374.706596374512,374.706596374512,382.291191101074,382.291191101074,382.291191101074,382.291191101074,397.079383850098,397.079383850098,397.079383850098,397.079383850098,397.079383850098,398.428916931152,398.428916931152,398.428916931152,398.428916931152,398.428916931152,398.428916931152,398.712753295898,398.712753295898,398.712753295898,398.712753295898,398.712753295898,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,405.028953552246,407.295257568359,407.295257568359,407.295257568359,407.295257568359,407.295257568359,407.295547485352,407.295547485352,407.295547485352,407.295547485352,407.295547485352,412.58992767334,412.58992767334,412.58992767334,412.58992767334,412.58992767334,412.58992767334,416.826629638672,416.826629638672,416.826629638672,416.826629638672,416.826629638672,422.068733215332,422.068733215332,422.068733215332,422.068733215332,422.068733215332,430.663200378418,430.663200378418,430.663200378418,430.663200378418,430.663200378418,430.663200378418,432.445541381836,432.445541381836,432.445541381836,432.445541381836,432.445541381836,442.604949951172,442.604949951172,442.604949951172,442.604949951172,442.604949951172,450.043182373047,450.043182373047,450.043182373047,450.043182373047,450.043182373047,440.929405212402,440.929405212402,440.929405212402,440.929405212402,440.929405212402,440.929405212402,352.601890563965,352.601890563965,352.601890563965,352.601890563965,352.601890563965,360.601119995117,360.601119995117,360.601119995117,360.601119995117,360.601119995117,370.113883972168,370.113883972168,370.113883972168,370.113883972168,370.113883972168,399.001724243164,399.001724243164,399.001724243164,409.647285461426,409.647285461426,409.647285461426,425.3173828125,425.3173828125,440.240653991699,440.240653991699,440.240653991699,440.240653991699,449.544624328613,449.544624328613,449.544624328613,449.544624328613,449.544624328613,425.512588500977,425.512588500977,425.512588500977,425.512588500977,425.512588500977,412.831024169922,412.831024169922,412.831024169922,422.007080078125,422.007080078125,422.007080078125,428.651351928711,428.651351928711,428.651351928711,428.651351928711,428.651351928711,438.589553833008,438.589553833008,438.589553833008,438.589553833008,438.589553833008,442.293983459473,442.293983459473,442.293983459473,442.293983459473,315.008613586426,315.008613586426,315.008613586426,315.008613586426,318.025253295898,318.025253295898,318.025253295898,318.025253295898,318.025253295898,324.978004455566,324.978004455566,324.978004455566,336.571800231934,336.571800231934,336.571800231934,336.571800231934,336.571800231934,344.61198425293,344.61198425293,344.61198425293,344.61198425293,344.61198425293,314.087364196777,314.087364196777,314.087364196777,314.087364196777,316.607688903809,316.607688903809,316.607688903809,316.607688903809,329.193016052246,329.193016052246,329.193016052246,329.193016052246,329.193016052246,340.400192260742,340.400192260742,340.400192260742,340.400192260742,347.85026550293,347.85026550293,347.85026550293,347.85026550293,355.021713256836,355.021713256836,355.021713256836,355.021713256836,361.946556091309,361.946556091309,361.946556091309,361.946556091309,369.461799621582,369.461799621582,369.461799621582,369.461799621582,380.704772949219,380.704772949219,380.704772949219,380.704772949219,388.140724182129,388.140724182129,388.140724182129,388.140724182129,395.77783203125,395.77783203125,395.77783203125,395.77783203125,349.506385803223,349.506385803223,349.506385803223,349.506385803223,349.506385803223,317.825012207031,317.825012207031,317.825012207031,317.825012207031,324.555313110352,324.555313110352,324.555313110352,324.555313110352,335.663528442383,335.663528442383,341.153297424316,341.153297424316,341.153297424316,341.153297424316,341.153297424316,342.791976928711,342.791976928711,342.791976928711,342.791976928711,342.791976928711,342.792266845703,342.792266845703,342.792266845703,342.792266845703,342.792266845703,349.09944152832,349.09944152832,349.09944152832,349.09944152832,349.09944152832,349.099517822266,349.099517822266,349.099517822266,349.099517822266,349.099517822266,351.355621337891,351.355621337891,351.355621337891,351.355621337891,351.355621337891,351.355911254883,351.355911254883,351.355911254883,351.355911254883,351.355911254883,356.927452087402,356.927452087402,356.927452087402,356.927452087402,356.927452087402,361.766174316406,361.766174316406,361.766174316406,361.766174316406,361.766174316406,371.160957336426,371.160957336426,371.160957336426,371.160957336426,371.160957336426,377.218162536621,377.218162536621,377.218162536621,377.218162536621,377.218162536621,377.218162536621,377.398323059082,377.398323059082,377.398323059082,377.398323059082,377.398323059082,383.788497924805,383.788497924805,383.788497924805,383.788497924805,383.788497924805,396.787269592285,396.787269592285,396.787269592285,396.787269592285,396.787269592285,404.787391662598,404.787391662598,404.787391662598,404.787391662598,404.787391662598,412.78288269043,412.78288269043,412.78288269043,412.78288269043,412.78288269043,420.775428771973,420.775428771973,420.775428771973,420.775428771973,420.775428771973,429.004730224609,429.004730224609,429.004730224609,451.311943054199,451.311943054199,451.311943054199,451.311943054199,345.023780822754,345.023780822754,345.023780822754,345.448356628418,345.448356628418,345.448356628418,368.707870483398,368.707870483398,368.707870483398,384.547721862793,384.547721862793,384.547721862793,384.547721862793,384.547721862793,393.938598632812,393.938598632812,393.938598632812,393.938598632812,393.938598632812,401.620269775391,401.620269775391,401.620269775391,401.620269775391,401.620269775391,413.529891967773,413.529891967773,413.529891967773,413.529891967773,413.529891967773,419.85245513916,419.85245513916,419.85245513916,419.85245513916,419.85245513916,419.85245513916,373.438133239746,373.438133239746,373.438133239746,373.438133239746,373.438133239746,381.240760803223,381.240760803223,381.240760803223,381.240760803223,381.240760803223,389.60905456543,389.60905456543,389.60905456543,395.79776763916,395.79776763916,395.79776763916,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.834678649902,401.725959777832,401.725959777832,401.725959777832,401.725959777832,401.725959777832,401.725959777832,401.725959777832,287.186828613281,287.186828613281,287.186828613281,287.186828613281,287.186828613281,287.186828613281,287.186828613281,269.619239807129,269.619239807129,269.619239807129,269.619239807129,269.619239807129,269.619239807129,269.619239807129,273.062606811523,273.062606811523,273.062606811523,273.062606811523,273.062606811523,280.808891296387,280.808891296387,280.808891296387,280.808891296387,280.808891296387,286.650947570801,286.650947570801,286.650947570801,299.532066345215,299.532066345215,299.532066345215,299.532066345215,310.398109436035,310.398109436035,310.398109436035,310.398109436035,317.202117919922,317.202117919922,317.202117919922,317.202117919922,324.06517791748,324.06517791748,324.06517791748,324.06517791748,330.958824157715,330.958824157715,330.958824157715,330.958824157715,330.958824157715,274.324180603027,274.324180603027,274.324180603027,274.324180603027,282.564483642578,282.564483642578,282.564483642578,282.564483642578,292.231575012207,292.231575012207,292.231575012207,292.231575012207,299.217750549316,299.217750549316,299.217750549316,299.217750549316,307.18147277832,307.18147277832,307.18147277832,307.18147277832,315.561584472656,315.561584472656,315.561584472656,315.561584472656,323.746490478516,323.746490478516,334.695823669434,334.695823669434,334.695823669434,334.695823669434,334.695823669434,335.406143188477,335.406143188477,335.406143188477,335.406143188477,335.406143188477,335.406143188477,336.333206176758,336.333206176758,336.333206176758,336.333206176758,336.333206176758,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,342.62133026123,344.868942260742,344.868942260742,344.868942260742,344.868942260742,344.868942260742,344.869232177734,344.869232177734,344.869232177734,344.869232177734,344.869232177734,350.085075378418,350.085075378418,350.085075378418,350.085075378418,352.950080871582,352.950080871582,352.950080871582,352.950080871582,352.950080871582,359.605377197266,359.605377197266,359.605377197266,359.605377197266,359.605377197266,369.973114013672,369.973114013672,369.973114013672,369.973114013672,369.973114013672,369.973114013672,371.75545501709,371.75545501709,371.75545501709,371.75545501709,371.75545501709,377.655738830566,377.655738830566,377.655738830566,377.655738830566,377.655738830566,389.608451843262,389.608451843262,389.608451843262,389.608451843262,389.608451843262,397.608779907227,397.608779907227,397.608779907227,397.608779907227,397.608779907227,405.604644775391,405.604644775391,405.604644775391,405.604644775391,405.604644775391,413.60391998291,413.60391998291,413.60391998291,413.60391998291,413.60391998291,430.381675720215,430.381675720215,430.381675720215,430.381675720215,445.637084960938,445.637084960938,445.637084960938,445.637084960938,345.973602294922,345.973602294922,345.973602294922,345.973602294922,304.780982971191,304.780982971191,304.780982971191,320.914497375488,320.914497375488,338.141677856445,338.141677856445,338.141677856445,338.141677856445,348.308952331543,348.308952331543,348.308952331543,348.308952331543,348.308952331543,356.974502563477,356.974502563477,356.974502563477,356.974502563477,368.548767089844,368.548767089844,368.548767089844,368.548767089844,368.548767089844,375.653419494629,375.653419494629,375.653419494629,375.653419494629,375.653419494629,383.179267883301,383.179267883301,383.179267883301,383.179267883301,383.179267883301,383.179267883301,334.427574157715,334.427574157715,334.427574157715,334.427574157715,334.427574157715,334.427574157715,344.686622619629,344.686622619629,344.686622619629,344.686622619629,344.686622619629,351.715354919434,351.715354919434,351.715354919434,351.715354919434,351.715354919434,360.380043029785,360.380043029785,360.380043029785,360.380043029785,360.380043029785,364.085243225098,364.085243225098,364.085243225098,364.085243225098,364.085243225098,364.085243225098,364.085243225098,316.599723815918,316.599723815918,316.599723815918,316.599723815918,316.599723815918,329.196716308594,329.196716308594,329.196716308594,329.196716308594,329.196716308594,339.141822814941,339.141822814941,339.141822814941,339.141822814941,350.389213562012,350.389213562012,350.389213562012,350.389213562012,350.389213562012,350.389213562012,357.564765930176,357.564765930176,357.564765930176,357.564765930176,365.693130493164,365.693130493164,365.693130493164,365.693130493164,372.899368286133,372.899368286133,372.899368286133,372.899368286133,320.909126281738,320.909126281738,320.909126281738,320.909126281738,320.909126281738,317.976600646973,317.976600646973,317.976600646973,317.976600646973,325.665550231934,325.665550231934,325.665550231934,325.665550231934,333.878662109375,333.878662109375,333.878662109375,333.878662109375,341.042976379395,341.042976379395,341.042976379395,341.042976379395,349.764083862305,349.764083862305,349.764083862305,349.764083862305,362.575820922852,362.575820922852,362.575820922852,367.267799377441,367.267799377441,367.267799377441,367.267799377441,367.267799377441,368.946151733398,368.946151733398,368.946151733398,368.946151733398,368.946151733398,374.255989074707,374.255989074707,374.255989074707,374.255989074707,374.255989074707,374.255989074707,375.433517456055,375.433517456055,375.433517456055,375.433517456055,375.433517456055,376.110702514648,376.110702514648,376.110702514648,376.110702514648,376.110702514648,377.74015045166,377.74015045166,377.74015045166,377.74015045166,377.74015045166,377.740440368652,377.740440368652,377.740440368652,377.740440368652,377.740440368652,383.195198059082,383.195198059082,383.195198059082,383.195198059082,383.195198059082,383.195198059082,386.574554443359,386.574554443359,386.574554443359,386.574554443359,386.574554443359,392.96036529541,392.96036529541,392.96036529541,392.96036529541,392.96036529541,405.518737792969,405.518737792969,405.518737792969,405.518737792969,405.518737792969,405.518737792969,407.301078796387,407.301078796387,407.301078796387,407.301078796387,407.301078796387,415.43180847168,415.43180847168,415.43180847168,415.43180847168,415.43180847168,424.995735168457,424.995735168457,424.995735168457,424.995735168457,424.995735168457,432.996978759766,432.996978759766,432.996978759766,432.996978759766,432.996978759766,440.99097442627,440.99097442627,440.99097442627,440.99097442627,440.99097442627,448.994361877441,448.994361877441,448.994361877441,448.994361877441,448.994361877441,428.489379882812,428.489379882812,428.489379882812,428.489379882812,428.489379882812,428.489379882812,328.65796661377,328.65796661377,328.65796661377,352.08422088623,352.08422088623,352.08422088623,363.100143432617,363.100143432617,363.100143432617,388.487915039062,388.487915039062,388.487915039062,405.252235412598,405.252235412598,405.252235412598,405.252235412598,405.252235412598,414.976165771484,414.976165771484,414.976165771484,414.976165771484,414.976165771484,427.810585021973,427.810585021973,427.810585021973,427.810585021973,427.810585021973,435.018096923828,435.018096923828,435.018096923828,435.018096923828,435.018096923828,439.249740600586,439.249740600586,439.249740600586,439.249740600586,439.249740600586,439.249740600586,382.271377563477,382.271377563477,382.271377563477,382.271377563477,382.271377563477,389.336845397949,389.336845397949,389.336845397949,389.336845397949,389.336845397949,399.684020996094,399.684020996094,399.684020996094,399.684020996094,399.684020996094,410.721809387207,410.721809387207,410.721809387207,410.721809387207,410.721809387207,410.721809387207,348.149711608887,348.149711608887,348.149711608887,348.149711608887,348.149711608887,348.149711608887,355.63395690918,355.63395690918,355.63395690918,355.63395690918,355.63395690918,362.12882232666,362.12882232666,362.12882232666,362.12882232666,362.12882232666,373.188690185547,373.188690185547,373.188690185547,373.188690185547,373.188690185547,382.072639465332,382.072639465332,382.072639465332,382.072639465332,392.14933013916,392.14933013916,392.14933013916,388.535652160645,388.535652160645,388.535652160645,388.535652160645,388.535652160645,353.547050476074,353.547050476074,353.547050476074,353.547050476074,360.943412780762,360.943412780762,360.943412780762,360.943412780762,369.739204406738,369.739204406738,369.739204406738,369.739204406738,380.000633239746,380.000633239746,380.000633239746,380.000633239746,387.425910949707,387.425910949707,387.425910949707,387.425910949707,394.747718811035,394.747718811035,394.747718811035,394.747718811035,402.032958984375,402.032958984375,402.032958984375,402.032958984375,408.960014343262,408.960014343262,408.960014343262,408.960014343262,420.98787689209,420.98787689209,426.640632629395,426.640632629395,426.640632629395,426.640632629395,426.640632629395,428.329238891602,428.329238891602,428.329238891602,428.329238891602,428.329238891602,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,434.83895111084,436.469985961914,436.469985961914,436.469985961914,436.469985961914,436.469985961914,436.469985961914,437.149185180664,437.149185180664,437.149185180664,437.149185180664,437.149185180664,438.054290771484,438.054290771484,438.054290771484,438.054290771484,442.605491638184,442.605491638184,442.605491638184,442.605491638184,442.605491638184,442.605491638184,445.517593383789,445.517593383789,445.517593383789,445.517593383789,445.517593383789,452.348472595215,452.348472595215,452.348472595215,452.348472595215,452.348472595215,413.971130371094,413.971130371094,413.971130371094,413.971130371094,413.971130371094,362.489791870117,362.489791870117,362.489791870117,362.489791870117,362.489791870117,362.916191101074,362.916191101074,362.916191101074,364.698532104492,364.698532104492,364.698532104492,364.698532104492,364.698532104492,370.448997497559,370.448997497559,370.448997497559,370.448997497559,370.448997497559,382.258293151855,382.258293151855,382.258293151855,382.258293151855,382.258293151855,390.253761291504,390.253761291504,390.253761291504,390.253761291504,390.253761291504,398.254859924316,398.254859924316,398.254859924316,398.254859924316,398.254859924316,406.250770568848,406.250770568848,406.250770568848,406.250770568848,406.250770568848,414.054786682129,414.054786682129,414.054786682129,437.115905761719,437.115905761719,437.115905761719,447.334106445312,447.334106445312,447.334106445312,398.659927368164,398.659927368164,398.659927368164,391.722396850586,391.722396850586,391.722396850586,404.314643859863,404.314643859863,404.314643859863,404.314643859863,404.314643859863,413.43482208252,413.43482208252,413.43482208252,413.43482208252,413.43482208252,424.886764526367,424.886764526367,424.886764526367,424.886764526367,424.886764526367,432.189788818359,432.189788818359,432.189788818359,432.189788818359,432.189788818359,437.038902282715,437.038902282715,437.038902282715,437.038902282715,437.038902282715,392.057250976562,392.057250976562,392.057250976562,392.057250976562,392.057250976562,399.955413818359,399.955413818359,399.955413818359,399.955413818359,399.955413818359,407.258438110352,407.258438110352,407.258438110352,407.258438110352,407.258438110352,416.635734558105,416.635734558105,416.635734558105,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.848007202148,417.739288330078,417.739288330078,417.739288330078,417.739288330078,303.489906311035,303.489906311035,303.489906311035,303.489906311035,269.757919311523,269.757919311523,269.757919311523,269.757919311523,269.794715881348,269.794715881348,269.794715881348,269.794715881348,269.794715881348,276.989944458008,276.989944458008,276.989944458008,276.989944458008,276.989944458008,276.989944458008,286.928161621094,286.928161621094,286.928161621094,286.928161621094,286.928161621094,296.821014404297,296.821014404297,296.821014404297,296.821014404297,296.821014404297,303.235473632812,303.235473632812,303.235473632812,303.235473632812,314.759857177734,314.759857177734,314.759857177734,314.759857177734,320.833526611328,320.833526611328,320.833526611328,320.833526611328,276.659812927246,276.659812927246,276.659812927246,276.659812927246,286.854591369629,286.854591369629,286.854591369629,286.854591369629,294.154579162598,294.154579162598,294.154579162598,294.154579162598,301.698127746582,301.698127746582,301.698127746582,301.698127746582,309.195594787598,309.195594787598,309.195594787598,309.195594787598,315.644020080566,315.644020080566,315.644020080566,315.644020080566,323.636978149414,323.636978149414,323.636978149414,323.636978149414,330.59268951416,330.59268951416,330.59268951416,330.59268951416,341.781890869141,341.781890869141,348.219696044922,348.219696044922,348.219696044922,348.219696044922,348.219696044922,349.88338470459,349.88338470459,349.88338470459,349.88338470459,349.88338470459,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,356.202423095703,358.442176818848,358.442176818848,358.442176818848,358.442176818848,358.442176818848,358.44246673584,358.44246673584,358.44246673584,358.44246673584,358.44246673584,363.647315979004,363.647315979004,363.647315979004,363.647315979004,366.526901245117,366.526901245117,366.526901245117,366.526901245117,366.526901245117,372.990913391113,372.990913391113,372.990913391113,372.990913391113,372.990913391113,383.542343139648,383.542343139648,383.542343139648,383.542343139648,383.542343139648,383.542343139648,383.722503662109,383.722503662109,383.722503662109,383.722503662109,383.722503662109,390.124420166016,390.124420166016,390.124420166016,390.124420166016,390.124420166016,402.954032897949,402.954032897949,402.954032897949,402.954032897949,402.954032897949,410.943313598633,410.943313598633,410.943313598633,410.943313598633,410.943313598633,418.93448638916,418.93448638916,418.93448638916,418.93448638916,418.93448638916,428.729705810547,428.729705810547,428.729705810547,449.849060058594,449.849060058594,449.849060058594,407.946487426758,407.946487426758,407.946487426758,407.946487426758,301.894073486328,301.894073486328,301.894073486328,301.894073486328,301.894073486328,301.894073486328,324.29753112793,324.29753112793,324.29753112793,343.801208496094,343.801208496094,343.801208496094,356.074592590332,356.074592590332,356.074592590332,356.074592590332,356.074592590332,363.142509460449,363.142509460449,363.142509460449,363.142509460449,363.142509460449,371.204734802246,371.204734802246,371.204734802246,371.204734802246,371.204734802246,376.202285766602,376.202285766602,376.202285766602,376.202285766602,376.202285766602,376.202285766602,328.915824890137,328.915824890137,328.915824890137,336.098899841309,336.098899841309,336.098899841309,336.098899841309,336.098899841309,342.787200927734,342.787200927734,342.787200927734,342.787200927734,342.787200927734,349.651832580566,349.651832580566,349.651832580566,349.651832580566,349.651832580566,356.614440917969,356.614440917969,356.614440917969,356.614440917969,356.614440917969,356.614440917969,333.343170166016,333.343170166016,333.343170166016,333.343170166016,333.343170166016,333.343170166016,332.507705688477,332.507705688477,332.507705688477,332.507705688477,332.507705688477,341.84854888916,341.84854888916,341.84854888916,341.84854888916,341.84854888916,348.916465759277,348.916465759277,348.916465759277,348.916465759277,348.916465759277,359.586952209473,359.586952209473,359.586952209473,359.586952209473,367.087295532227,367.087295532227,367.087295532227,367.087295532227,374.376754760742,374.376754760742,374.376754760742,374.376754760742,381.511184692383,381.511184692383,381.511184692383,381.511184692383,376.516189575195,376.516189575195,376.516189575195,376.516189575195,376.516189575195,333.175720214844,333.175720214844,333.175720214844,333.175720214844,339.761741638184,339.761741638184,339.761741638184,339.761741638184,350.110229492188,350.110229492188,350.110229492188,350.110229492188,357.312103271484,357.312103271484,357.312103271484,357.312103271484,364.48706817627,364.48706817627,364.48706817627,364.48706817627,373.533721923828,373.533721923828,382.639984130859,382.639984130859,382.639984130859,382.639984130859,382.639984130859,384.231651306152,384.231651306152,384.231651306152,384.231651306152,384.231651306152,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,390.170112609863,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,392.286926269531,397.228759765625,397.228759765625,397.228759765625,397.228759765625,397.228759765625,397.228759765625,401.67000579834,401.67000579834,401.67000579834,401.67000579834,406.092330932617,406.092330932617,406.092330932617,406.092330932617,406.092330932617,417.212959289551,417.212959289551,417.212959289551,418.311134338379,418.311134338379,418.311134338379,418.49129486084,418.49129486084,418.49129486084,418.49129486084,418.49129486084,424.871528625488,424.871528625488,424.871528625488,424.871528625488,424.871528625488,434.525955200195,434.525955200195,434.525955200195,434.525955200195,434.525955200195,445.574851989746,445.574851989746,445.574851989746,445.574851989746,445.574851989746,450.517997741699,450.517997741699,450.517997741699,450.517997741699,450.517997741699,448.9287109375,448.9287109375,448.9287109375,448.9287109375,448.9287109375,448.9287109375,341.671775817871,341.671775817871,341.671775817871,341.671775817871,341.671775817871,352.269500732422,352.269500732422,352.269500732422,374.541290283203,374.541290283203,374.541290283203,385.014541625977,385.014541625977,385.014541625977,408.42293548584,408.42293548584,408.42293548584,418.50707244873,418.50707244873,418.50707244873,418.50707244873,427.844306945801,427.844306945801,427.844306945801,427.844306945801,427.844306945801,435.966461181641,435.966461181641,435.966461181641,435.966461181641,446.101921081543,446.101921081543,446.101921081543,446.101921081543,446.101921081543,454.938064575195,454.938064575195,454.938064575195,454.938064575195,454.938064575195,454.938064575195,398.721824645996,398.721824645996,398.721824645996,398.721824645996,398.721824645996,405.799537658691,405.799537658691,405.799537658691,405.799537658691,405.799537658691,413.766250610352,413.766250610352,413.766250610352,413.766250610352,413.766250610352,420.650428771973,420.650428771973,420.650428771973,420.650428771973,420.650428771973,424.11442565918,424.11442565918,424.11442565918,424.11442565918,424.11442565918,424.11442565918,424.11442565918,312.284156799316,312.284156799316,312.284156799316,312.284156799316,312.284156799316,325.545745849609,325.545745849609,325.545745849609,325.545745849609,325.545745849609,341.096984863281,341.096984863281,341.096984863281,351.57251739502,351.57251739502,351.57251739502,351.57251739502,345.648406982422,345.648406982422,345.648406982422,345.648406982422,345.648406982422,345.648406982422,313.045631408691,313.045631408691,313.045631408691,313.045631408691,313.045631408691,323.554023742676,323.554023742676,323.554023742676,323.554023742676,335.136840820312,335.136840820312,335.136840820312,335.136840820312,342.756904602051,342.756904602051,342.756904602051,342.756904602051,350.641983032227,350.641983032227,350.641983032227,350.641983032227,357.985984802246,357.985984802246,357.985984802246,357.985984802246,365.121932983398,365.121932983398,365.121932983398,365.121932983398,372.977897644043,372.977897644043,372.977897644043,372.977897644043,380.827507019043,380.827507019043,380.827507019043,380.827507019043,380.827507019043,380.827507019043,392.007270812988,392.007270812988,392.007270812988,392.007270812988,392.007270812988,393.371353149414,393.371353149414,393.371353149414,393.371353149414,393.371353149414,393.371353149414,393.660034179688,393.660034179688,393.660034179688,393.660034179688,393.660034179688,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,399.90071105957,402.114265441895,402.114265441895,402.114265441895,402.114265441895,402.114265441895,402.114555358887,402.114555358887,402.114555358887,402.114555358887,402.114555358887,407.280410766602,407.280410766602,407.280410766602,407.280410766602,407.280410766602,407.280410766602,410.9931640625,410.9931640625,410.9931640625,410.9931640625,410.9931640625,416.520416259766,416.520416259766,416.520416259766,416.520416259766,416.520416259766,426.781829833984,426.781829833984,426.781829833984,426.781829833984,426.781829833984,426.781829833984,428.564170837402,428.564170837402,428.564170837402,428.564170837402,428.564170837402,435.40754699707,435.40754699707,435.40754699707,435.40754699707,435.40754699707,446.296684265137,446.296684265137,446.296684265137,446.296684265137,446.296684265137,454.296264648438,454.296264648438,454.296264648438,454.296264648438,454.296264648438,426.141990661621,426.141990661621,426.141990661621,426.141990661621,426.141990661621,426.141990661621,318.79566192627,318.79566192627,318.79566192627,318.79566192627,318.79566192627,318.79566192627,331.694374084473,331.694374084473,331.694374084473,331.694374084473,331.694374084473,342.447074890137,342.447074890137,342.447074890137,365.118492126465,365.118492126465,365.118492126465,375.783416748047,375.783416748047,375.783416748047,399.564994812012,399.564994812012,399.564994812012,409.794723510742,409.794723510742,409.794723510742,409.794723510742,419.881927490234,419.881927490234,419.881927490234,419.881927490234,429.658096313477,429.658096313477,429.658096313477,429.658096313477,437.134162902832,437.134162902832,437.134162902832,437.134162902832,437.134162902832,445.140060424805,445.140060424805,445.140060424805,445.140060424805,445.140060424805,451.017707824707,451.017707824707,451.017707824707,451.017707824707,451.017707824707,451.017707824707,380.530265808105,380.530265808105,380.530265808105,387.414505004883,387.414505004883,387.414505004883,387.414505004883,387.414505004883,394.097930908203,394.097930908203,394.097930908203,406.624801635742,406.624801635742,406.624801635742,406.624801635742,406.624801635742,368.578018188477,368.578018188477,368.578018188477,368.578018188477,368.578018188477,368.578018188477,368.578018188477,346.969497680664,346.969497680664,346.969497680664,346.969497680664,346.969497680664,346.969497680664,346.969497680664,354.81379699707,354.81379699707,354.81379699707,354.81379699707,354.81379699707,361.771507263184,361.771507263184,361.771507263184,361.771507263184,361.771507263184,372.422004699707,372.422004699707,372.422004699707,372.422004699707,372.422004699707,382.334411621094,382.334411621094,382.334411621094,382.334411621094,393.417007446289,393.417007446289,393.417007446289,393.417007446289,393.417007446289,347.774459838867,347.774459838867,347.774459838867,347.774459838867,347.774459838867,356.785537719727,356.785537719727,356.785537719727,356.785537719727,364.488845825195,364.488845825195,364.488845825195,364.488845825195,372.717697143555,372.717697143555,372.717697143555,372.717697143555,380.622329711914,380.622329711914,380.622329711914,380.622329711914,387.631591796875,387.631591796875,387.631591796875,387.631591796875,395.107574462891,395.107574462891,395.107574462891,395.107574462891,402.462783813477,402.462783813477,402.462783813477,402.462783813477,412.353073120117,412.353073120117,412.353073120117,412.353073120117,427.018676757812,427.018676757812,427.018676757812,427.018676757812,427.018676757812,427.018676757812,427.315330505371,427.315330505371,427.315330505371,427.315330505371,427.315330505371,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,429.001251220703,435.327651977539,435.327651977539,435.327651977539,435.327651977539,435.327651977539,435.327728271484,435.327728271484,435.327728271484,435.327728271484,435.327728271484,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,437.54810333252,442.774131774902,442.774131774902,442.774131774902,442.774131774902,442.774131774902,442.774131774902,447.014610290527,447.014610290527,447.014610290527,447.014610290527,447.014610290527,452.258979797363,452.258979797363,452.258979797363,452.258979797363,452.258979797363,409.617080688477,409.617080688477,409.617080688477,409.617080688477,409.617080688477,358.155128479004,358.155128479004,358.155128479004,358.155128479004,358.155128479004,358.581642150879,358.581642150879,358.581642150879,360.363983154297,360.363983154297,360.363983154297,360.363983154297,360.363983154297,365.167373657227,365.167373657227,365.167373657227,365.167373657227,365.167373657227,378.049331665039,378.049331665039,378.049331665039,378.049331665039,378.049331665039,386.04517364502,386.04517364502,386.04517364502,386.04517364502,386.04517364502,394.041954040527,394.041954040527,394.041954040527,394.041954040527,394.041954040527,402.038612365723,402.038612365723,402.038612365723,402.038612365723,402.038612365723,409.207740783691,409.207740783691,409.207740783691,409.207740783691,409.207740783691,432.19654083252,432.19654083252,432.19654083252,442.798332214355,442.798332214355,442.798332214355,407.125549316406,407.125549316406,407.125549316406,387.975852966309,387.975852966309,387.975852966309,404.375526428223,404.375526428223,404.375526428223,404.375526428223,404.375526428223,404.375526428223,413.417526245117,413.417526245117,413.417526245117,413.417526245117,426.498672485352,426.498672485352,426.498672485352,426.498672485352,426.498672485352,433.782043457031,433.782043457031,433.782043457031,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,434.602493286133,325.518600463867,325.518600463867,325.518600463867,325.518600463867,325.518600463867,325.518600463867,273.534645080566,273.534645080566,273.534645080566,273.534645080566,273.534645080566,281.383804321289,281.383804321289,281.383804321289,281.383804321289,281.383804321289,288.865631103516,288.865631103516,288.865631103516,288.865631103516,288.865631103516,300.317260742188,300.317260742188,300.317260742188,300.317260742188,300.317260742188,298.882888793945,298.882888793945,298.882888793945,298.882888793945,298.882888793945,298.882888793945,274.45809173584,274.45809173584,274.45809173584,274.45809173584,274.45809173584,281.58723449707,281.58723449707,281.58723449707,281.58723449707,281.58723449707,293.564552307129,293.564552307129,293.564552307129,304.864845275879,304.864845275879,304.864845275879,304.864845275879,314.031356811523,314.031356811523,314.031356811523,314.031356811523,322.28328704834,322.28328704834,322.28328704834,322.28328704834,329.563529968262,329.563529968262,329.563529968262,329.563529968262,337.995056152344,337.995056152344,337.995056152344,337.995056152344,337.995056152344,266.974670410156,266.974670410156,266.974670410156,266.974670410156,266.974670410156,264.645721435547,264.645721435547,264.645721435547,264.645721435547,264.645721435547,268.35424041748,268.35424041748,268.35424041748,268.35424041748,275.935287475586,275.935287475586,275.935287475586,275.935287475586,282.715995788574,282.715995788574,282.715995788574,282.715995788574,294.749870300293,294.749870300293,294.749870300293,294.749870300293,301.81453704834,301.81453704834,301.81453704834,301.81453704834,310.59489440918,310.59489440918,310.59489440918,310.59489440918,310.59489440918,310.59489440918,310.59489440918,310.59489440918,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,322.165046691895,323.864761352539,323.864761352539,323.864761352539,323.864761352539,323.864761352539,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173698425293,330.173774719238,330.173774719238,330.173774719238,330.173774719238,330.173774719238,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,332.374801635742,337.275863647461,337.275863647461,337.275863647461,337.275863647461,337.275863647461,338.465950012207,338.465950012207,338.465950012207,338.465950012207,338.465950012207,346.899787902832,346.899787902832,346.899787902832,346.899787902832,346.899787902832,355.44213104248,355.44213104248,355.44213104248,355.44213104248,355.44213104248,355.44213104248,357.224472045898,357.224472045898,357.224472045898,357.224472045898,357.224472045898,362.992568969727,362.992568969727,362.992568969727,362.992568969727,362.992568969727,374.757385253906,374.757385253906,374.757385253906,374.757385253906,374.757385253906,382.756965637207,382.756965637207,382.756965637207,382.756965637207,382.756965637207,390.756736755371,390.756736755371,390.756736755371,390.756736755371,390.756736755371,398.75227355957,398.75227355957,398.75227355957,398.75227355957,398.75227355957,406.833457946777,406.833457946777,406.833457946777,429.758926391602,429.758926391602,429.758926391602,440.53685760498,440.53685760498,440.53685760498,428.294372558594,428.294372558594,428.294372558594,284.95223236084,284.95223236084,284.95223236084,309.928405761719,309.928405761719,309.928405761719,309.928405761719,322.481132507324,322.481132507324,322.481132507324,334.026748657227,334.026748657227,334.026748657227,334.026748657227,334.026748657227,340.88159942627,340.88159942627,340.88159942627,340.88159942627,340.88159942627,348.419700622559,348.419700622559,348.419700622559,348.419700622559,348.419700622559,354.826347351074,354.826347351074,354.826347351074,354.826347351074,354.826347351074,309.712753295898,309.712753295898,309.712753295898,309.712753295898,311.754699707031,311.754699707031,311.754699707031,311.754699707031,311.754699707031,320.429183959961,320.429183959961,320.429183959961,320.429183959961,320.429183959961,331.856346130371,331.856346130371,331.856346130371,331.856346130371,331.856346130371,331.856346130371,325.99373626709,325.99373626709,325.99373626709,325.99373626709,325.99373626709,325.99373626709,311.88500213623,311.88500213623,311.88500213623,311.88500213623,321.880508422852,321.880508422852,321.880508422852,321.880508422852,321.880508422852,321.880508422852,332.666877746582,332.666877746582,332.666877746582,332.666877746582,340.613792419434,340.613792419434,340.613792419434,340.613792419434,340.613792419434,347.168830871582,347.168830871582,347.168830871582,347.168830871582,353.408683776855,353.408683776855,353.408683776855,353.408683776855,360.904067993164,360.904067993164,360.904067993164,360.904067993164,368.216285705566,368.216285705566,368.216285705566,368.216285705566,375.379028320312,375.379028320312,375.379028320312,375.379028320312,382.10636138916,382.10636138916,382.10636138916,382.10636138916,384.928283691406,384.928283691406,384.928283691406,384.928283691406,384.928283691406,317.858390808105,317.858390808105,317.858390808105,317.858390808105,317.858390808105,312.043838500977,312.043838500977,312.043838500977,312.043838500977,319.937835693359,319.937835693359,319.937835693359,319.937835693359,328.362716674805,328.362716674805,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,339.549919128418,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,341.272811889648,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,347.674873352051,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,349.900024414062,355.139984130859,355.139984130859,355.139984130859,355.139984130859,355.139984130859,355.139984130859,359.4072265625,359.4072265625,359.4072265625,359.4072265625,359.4072265625,364.627563476562,364.627563476562,364.627563476562,364.627563476562,364.627563476562,375.141944885254,375.141944885254,375.141944885254,375.141944885254,375.141944885254,375.141944885254,376.924285888672,376.924285888672,376.924285888672,376.924285888672,376.924285888672,387.114730834961,387.114730834961,387.114730834961,387.114730834961,387.114730834961,394.387161254883,394.387161254883,394.387161254883,394.387161254883,394.387161254883,402.382255554199,402.382255554199,402.382255554199,402.382255554199,402.382255554199,410.375877380371,410.375877380371,410.375877380371,410.375877380371,410.375877380371,422.91276550293,422.91276550293,422.91276550293,452.408882141113,452.408882141113,452.408882141113,452.408882141113,452.408882141113,452.408882141113,415.879928588867,415.879928588867,415.879928588867,340.564270019531,340.564270019531,340.564270019531,360.339401245117,360.339401245117,360.339401245117,360.339401245117,370.28165435791,370.28165435791,370.28165435791,370.28165435791,379.457504272461,379.457504272461,379.457504272461,379.457504272461,379.457504272461,387.103393554688,387.103393554688,387.103393554688,387.103393554688,387.103393554688,392.809837341309,392.809837341309,392.809837341309,392.809837341309,392.809837341309,392.809837341309,392.809837341309,346.075836181641,346.075836181641,346.075836181641,346.075836181641,346.075836181641,353.016403198242,353.016403198242,353.016403198242,353.016403198242,353.016403198242,359.680252075195,359.680252075195,359.680252075195,359.680252075195,359.680252075195,359.680252075195,367.737617492676,367.737617492676,367.737617492676,367.737617492676,367.737617492676,368.96183013916,368.96183013916,368.96183013916,368.96183013916,351.585304260254,351.585304260254,351.585304260254,351.585304260254,351.585304260254,360.245788574219,360.245788574219,360.245788574219,373.171424865723,373.171424865723,373.171424865723,373.171424865723,383.310470581055,383.310470581055,383.310470581055,383.310470581055,391.061233520508,391.061233520508,391.061233520508,391.061233520508,398.514762878418,398.514762878418,398.514762878418,398.514762878418,393.930503845215,393.930503845215,393.930503845215,393.930503845215,393.930503845215,344.965965270996,344.965965270996,344.965965270996,344.965965270996,352.923873901367,352.923873901367,352.923873901367,352.923873901367,366.739791870117,366.739791870117,366.739791870117,366.739791870117,374.256576538086,374.256576538086,374.256576538086,374.256576538086,381.595008850098,381.595008850098,381.595008850098,381.595008850098,390.334045410156,390.334045410156,400.947540283203,400.947540283203,400.947540283203,400.947540283203,400.947540283203,402.591514587402,402.591514587402,402.591514587402,402.591514587402,402.591514587402,404.16429901123,404.16429901123,404.16429901123,404.16429901123,404.16429901123,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,408.63623046875,410.754188537598,410.754188537598,410.754188537598,410.754188537598,410.754188537598,411.360847473145,411.360847473145,411.360847473145,411.360847473145,411.360847473145,415.73934173584,415.73934173584,415.73934173584,415.73934173584,415.73934173584,415.73934173584,419.825172424316,419.825172424316,419.825172424316,419.825172424316,419.825172424316,424.781440734863,424.781440734863,424.781440734863,424.781440734863,424.781440734863,435.019760131836,435.019760131836,435.019760131836,435.445281982422,435.445281982422,435.445281982422,435.445281982422,435.445281982422,435.445281982422,442.04020690918,442.04020690918,442.04020690918,442.04020690918,442.04020690918,447.419288635254,447.419288635254,447.419288635254,447.419288635254,447.419288635254,454.760528564453,454.760528564453,454.760528564453,454.760528564453,454.760528564453,399.238868713379,399.238868713379,399.238868713379,399.238868713379,399.238868713379,399.238868713379,356.322387695312,356.322387695312,356.322387695312,356.322387695312,356.322387695312,365.830780029297,365.830780029297,365.830780029297,365.830780029297,365.830780029297,395.821838378906,395.821838378906,395.821838378906,405.886421203613,405.886421203613,405.886421203613,422.665863037109,422.665863037109,438.29833984375,438.29833984375,438.29833984375,438.29833984375,447.308059692383,447.308059692383,447.308059692383,447.308059692383,447.308059692383,453.464004516602,453.464004516602,453.464004516602,453.464004516602,453.464004516602,453.464004516602,411.723182678223,411.723182678223,411.723182678223,411.723182678223,411.723182678223,418.729858398438,418.729858398438,418.729858398438,418.729858398438,418.729858398438,425.582290649414,425.582290649414,425.582290649414,425.582290649414,425.582290649414,432.924499511719,432.924499511719,432.924499511719,432.924499511719,432.924499511719,438.096855163574,438.096855163574,438.096855163574,438.096855163574,438.096855163574,438.096855163574,337.756820678711,337.756820678711,337.756820678711,337.756820678711,337.756820678711,337.756820678711,306.787895202637,306.787895202637,306.787895202637,306.787895202637,306.787895202637,314.296653747559,314.296653747559,314.296653747559,314.296653747559,314.296653747559,320.642105102539,320.642105102539,320.642105102539,320.642105102539,320.642105102539,327.212867736816,327.212867736816,327.212867736816,327.212867736816,327.212867736816,332.5615234375,332.5615234375,332.5615234375,332.5615234375,332.5615234375,334.148574829102,334.148574829102,334.148574829102,334.148574829102,334.148574829102,334.148574829102,308.032409667969,308.032409667969,308.032409667969,317.007759094238,317.007759094238,317.007759094238,317.007759094238,327.942489624023,327.942489624023,327.942489624023,335.236656188965,335.236656188965,335.236656188965,335.236656188965,345.841751098633,345.841751098633,345.841751098633,345.841751098633,354.05330657959,354.05330657959,354.05330657959,354.05330657959,361.154655456543,361.154655456543,361.154655456543,361.154655456543,369.476974487305,369.476974487305,369.476974487305,369.476974487305,377.330718994141,377.330718994141,377.330718994141,377.330718994141,384.424812316895,384.424812316895,384.424812316895,384.424812316895,392.607757568359,392.607757568359,392.607757568359,392.607757568359,399.232986450195,399.232986450195,399.232986450195,399.232986450195,412.84748840332,412.84748840332,412.84748840332,412.84748840332,412.84748840332,412.847564697266,412.847564697266,412.847564697266,412.847564697266,412.847564697266,414.458824157715,414.458824157715,414.458824157715,414.458824157715,414.458824157715,416.854309082031,416.854309082031,416.854309082031,416.854309082031,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,420.449653625488,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,422.570297241211,427.558074951172,427.558074951172,427.558074951172,427.558074951172,427.558074951172,427.558074951172,431.618515014648,431.618515014648,431.618515014648,431.618515014648,431.618515014648,436.546676635742,436.546676635742,436.546676635742,436.546676635742,436.546676635742,448.209884643555,448.209884643555,448.209884643555,448.209884643555,448.209884643555,448.209884643555,449.992225646973,449.992225646973,449.992225646973,449.992225646973,449.992225646973,454.35530090332,454.35530090332,454.35530090332,454.35530090332,454.35530090332,454.35530090332,379.704620361328,379.704620361328,379.704620361328,379.704620361328,379.704620361328,379.704620361328,311.799415588379,311.799415588379,311.799415588379,311.799415588379,311.799415588379,320.640785217285,320.640785217285,320.640785217285,320.640785217285,320.640785217285,330.186416625977,330.186416625977,330.186416625977,330.186416625977,330.186416625977,338.099136352539,338.099136352539,338.099136352539,338.099136352539,338.099136352539,367.704383850098,367.704383850098,367.704383850098,378.445915222168,378.445915222168,378.445915222168,401.167144775391,401.167144775391,401.167144775391,411.14111328125,411.14111328125,411.14111328125,411.14111328125,421.134094238281,421.134094238281,421.134094238281,421.134094238281,429.402206420898,429.402206420898,429.402206420898,429.402206420898,438.085220336914,438.085220336914,438.085220336914,438.085220336914,438.085220336914,447.472381591797,447.472381591797,447.472381591797,447.472381591797,447.472381591797,453.022857666016,453.022857666016,453.022857666016,453.022857666016,363.51416015625,363.51416015625,363.51416015625,363.51416015625,363.51416015625,369.619621276855,369.619621276855,369.619621276855,369.619621276855,369.619621276855,379.552909851074,379.552909851074,379.552909851074,379.552909851074,379.552909851074,388.452690124512,388.452690124512,388.452690124512,388.452690124512,388.452690124512,395.101806640625,395.101806640625,395.101806640625,395.101806640625,395.101806640625,361.987327575684,361.987327575684,361.987327575684,361.987327575684,361.987327575684,367.497688293457,367.497688293457,367.497688293457,367.497688293457,367.497688293457,373.088302612305,373.088302612305,373.088302612305,373.088302612305,386.667289733887,386.667289733887,386.667289733887,386.667289733887,386.667289733887,398.247062683105,398.247062683105,398.247062683105,398.247062683105,404.686027526855,404.686027526855,404.686027526855,404.686027526855,404.686027526855,411.463562011719,411.463562011719,411.463562011719,411.463562011719,418.68775177002,418.68775177002,418.68775177002,418.68775177002,414.163307189941,414.163307189941,414.163307189941,414.163307189941,414.163307189941,366.906219482422,366.906219482422,366.906219482422,366.906219482422,375.080726623535,375.080726623535,375.080726623535,375.080726623535,381.543434143066,381.543434143066,381.543434143066,381.543434143066,390.517036437988,390.517036437988,390.517036437988,390.517036437988,397.029403686523,397.029403686523,397.029403686523,397.029403686523,404.875778198242,404.875778198242,404.875778198242,404.875778198242,416.491432189941,416.491432189941,421.928070068359,421.928070068359,421.928070068359,421.928070068359,421.928070068359,423.296592712402,423.296592712402,423.296592712402,423.296592712402,423.296592712402,423.296592712402,423.586753845215,423.586753845215,423.586753845215,423.586753845215,423.586753845215,426.888977050781,426.888977050781,426.888977050781,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,429.714126586914,431.856025695801,431.856025695801,431.856025695801,431.856025695801,431.856025695801,431.85620880127,431.85620880127,431.85620880127,431.85620880127,431.85620880127,436.927925109863,436.927925109863,436.927925109863,436.927925109863,436.927925109863,436.927925109863,440.135231018066,440.135231018066,440.135231018066,440.135231018066,440.135231018066,446.112831115723,446.112831115723,446.112831115723,446.112831115723,446.112831115723,439.980361938477,439.980361938477,439.980361938477,439.980361938477,439.980361938477,366.44450378418,366.44450378418,366.44450378418,366.44450378418,366.44450378418,366.44450378418,368.226844787598,368.226844787598,368.226844787598,368.226844787598,368.226844787598,375.048583984375,375.048583984375,375.048583984375,375.048583984375,375.048583984375,385.867210388184,385.867210388184,385.867210388184,385.867210388184,385.867210388184,393.863426208496,393.863426208496,393.863426208496,393.863426208496,393.863426208496,401.855346679688,401.855346679688,401.855346679688,401.855346679688,401.855346679688,411.152503967285,411.152503967285,411.152503967285,411.152503967285,411.152503967285,434.035873413086,434.035873413086,434.035873413086,444.292434692383,444.292434692383,444.292434692383,448.758483886719,448.758483886719,448.758483886719,332.167625427246,332.167625427246,332.167625427246,351.921585083008,351.921585083008,351.921585083008,370.930786132812,370.930786132812,370.930786132812,370.930786132812,380.494606018066,380.494606018066,380.494606018066,380.494606018066,391.377449035645,391.377449035645,391.377449035645,391.377449035645,391.377449035645,399.238838195801,399.238838195801,399.238838195801,399.238838195801,399.238838195801,404.826850891113,404.826850891113,404.826850891113,404.826850891113,356.419662475586,356.419662475586,356.419662475586,356.419662475586,356.419662475586,364.557823181152,364.557823181152,364.557823181152,364.557823181152,364.557823181152,373.026588439941,373.026588439941,373.026588439941,373.026588439941,373.026588439941,382.357376098633,382.357376098633,382.357376098633,382.357376098633,388.399124145508,388.399124145508,388.399124145508,388.399124145508,358.687042236328,358.687042236328,358.687042236328,358.687042236328,358.687042236328,368.094261169434,368.094261169434,368.094261169434,368.094261169434,368.094261169434,380.432235717773,380.432235717773,380.432235717773,380.432235717773,390.619728088379,390.619728088379,390.619728088379,390.619728088379,397.274208068848,397.274208068848,397.274208068848,397.274208068848,406.042449951172,406.042449951172,406.042449951172,406.042449951172,413.752105712891,413.752105712891,413.752105712891,413.752105712891,421.249862670898,421.249862670898,421.249862670898,421.249862670898,429.165077209473,429.165077209473,429.165077209473,429.165077209473,437.530166625977,437.530166625977,437.530166625977,437.530166625977,382.272933959961,382.272933959961,382.272933959961,382.272933959961,382.272933959961,358.54842376709,358.54842376709,358.54842376709,358.54842376709,366.161651611328,366.161651611328,366.161651611328,366.161651611328,372.298889160156,372.298889160156,372.298889160156,372.298889160156,384.771499633789,384.771499633789,384.771499633789,384.771499633789,384.771499633789,388.173439025879,388.173439025879,388.173439025879,388.173439025879,388.173439025879,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,389.821380615234,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,395.895027160645,396.908424377441,396.908424377441,396.908424377441,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,398.016952514648,402.783226013184,402.783226013184,402.783226013184,402.783226013184,402.783226013184,405.354995727539,405.354995727539,405.354995727539,405.354995727539,405.354995727539,412.05460357666,412.05460357666,412.05460357666,412.05460357666,412.05460357666,422.319267272949,422.319267272949,422.319267272949,422.319267272949,422.319267272949,422.319267272949,424.101608276367,424.101608276367,424.101608276367,424.101608276367,424.101608276367,429.998840332031,429.998840332031,429.998840332031,429.998840332031,429.998840332031,441.766815185547,441.766815185547,441.766815185547,441.766815185547,441.766815185547,449.759666442871,449.759666442871,449.759666442871,449.759666442871,449.759666442871,454.700775146484,454.700775146484,454.700775146484,454.700775146484,454.700775146484,368.881385803223,368.881385803223,368.881385803223,368.881385803223,368.881385803223,400.586212158203,400.586212158203,400.586212158203,410.729095458984,410.729095458984,410.729095458984,428.714111328125,428.714111328125,428.714111328125,443.353218078613,443.353218078613,443.353218078613,443.353218078613,452.33097076416,452.33097076416,452.33097076416,452.33097076416,452.33097076416,381.630645751953,381.630645751953,381.630645751953,381.630645751953,381.630645751953,383.68367767334,383.68367767334,383.68367767334,383.68367767334,383.68367767334,390.376846313477,390.376846313477,390.376846313477,398.279907226562,398.279907226562,398.279907226562,405.573173522949,405.573173522949,405.573173522949,405.573173522949,405.573173522949,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,411.943054199219,360.281875610352,360.281875610352,360.281875610352,360.281875610352,268.09300994873,268.09300994873,268.09300994873,268.09300994873,268.09300994873,268.09300994873,268.09300994873,268.09300994873,273.302169799805,273.302169799805,273.302169799805,273.302169799805,273.302169799805,285.704086303711,285.704086303711,285.704086303711,285.704086303711,285.704086303711,293.670738220215,293.670738220215,293.670738220215,300.378646850586,300.378646850586,300.378646850586,300.378646850586,300.378646850586,305.311134338379,305.311134338379,305.311134338379,305.311134338379,276.276580810547,276.276580810547,276.276580810547,276.276580810547,276.276580810547,286.415802001953,286.415802001953,286.415802001953,286.415802001953,294.441780090332,294.441780090332,294.441780090332,294.441780090332,294.441780090332,304.537017822266,304.537017822266,304.537017822266,304.537017822266,310.260818481445,310.260818481445,310.260818481445,310.260818481445,316.278755187988,316.278755187988,316.278755187988,316.278755187988,322.74772644043,322.74772644043,322.74772644043,322.74772644043,331.422798156738,331.422798156738,331.422798156738,331.422798156738,338.463081359863,338.463081359863,338.463081359863,338.463081359863,345.998802185059,345.998802185059,345.998802185059,345.998802185059,351.990852355957,351.990852355957,351.990852355957,351.990852355957,358.142852783203,358.142852783203,358.142852783203,358.142852783203,366.17512512207,366.17512512207,366.17512512207,366.17512512207,379.24585723877,379.24585723877,379.24585723877,380.452041625977,380.452041625977,380.452041625977,380.452041625977,380.452041625977,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,382.08211517334,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,388.079177856445,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,390.17650604248,394.903358459473,394.903358459473,394.903358459473,394.903358459473,394.903358459473,395.507553100586,395.507553100586,395.507553100586,395.507553100586,395.507553100586,402.050010681152,402.050010681152,402.050010681152,402.050010681152,402.050010681152,411.354415893555,411.354415893555,411.354415893555,411.354415893555,411.354415893555,417.784782409668,417.784782409668,417.784782409668,417.784782409668,417.784782409668,417.784782409668,419.567123413086,419.567123413086,419.567123413086,419.567123413086,419.567123413086,426.417518615723,426.417518615723,426.417518615723,426.417518615723,426.417518615723,437.383827209473,437.383827209473,437.383827209473,437.383827209473,437.383827209473,442.323211669922,442.323211669922,442.323211669922,442.323211669922,442.323211669922,448.492523193359,448.492523193359,448.492523193359,448.492523193359,448.492523193359,453.408027648926,453.408027648926,453.408027648926,453.408027648926,453.408027648926,393.716209411621,393.716209411621,393.716209411621,393.716209411621,393.716209411621,393.716209411621,286.753776550293,286.753776550293,286.753776550293,286.753776550293,286.753776550293,286.753776550293,311.921333312988,311.921333312988,311.921333312988,322.16577911377,322.16577911377,322.16577911377,324.214683532715,324.214683532715,324.214683532715,345.154144287109,345.154144287109,345.154144287109,355.064331054688,355.064331054688,355.064331054688,355.064331054688,364.817947387695,364.817947387695,364.817947387695,364.817947387695,374.591354370117,374.591354370117,374.591354370117,374.591354370117,384.271881103516,384.271881103516,384.271881103516,384.271881103516,384.271881103516,392.510398864746,392.510398864746,392.510398864746,392.510398864746,392.510398864746,399.671379089355,399.671379089355,399.671379089355,399.671379089355,399.671379089355,399.671379089355,399.671379089355,338.568626403809,338.568626403809,338.568626403809,346.324722290039,346.324722290039,346.324722290039,353.167388916016,353.167388916016,353.167388916016,353.167388916016,353.167388916016,363.225578308105,363.225578308105,363.225578308105,363.225578308105,363.225578308105,369.384269714355,369.384269714355,369.384269714355,369.384269714355,369.384269714355,369.384269714355,342.704650878906,342.704650878906,342.704650878906,342.704650878906,342.704650878906,351.581878662109,351.581878662109,351.581878662109,351.581878662109,351.581878662109,351.581878662109,363.08634185791,363.08634185791,363.08634185791,363.08634185791,371.061645507812,371.061645507812,371.061645507812,371.061645507812,371.061645507812,379.94612121582,379.94612121582,379.94612121582,379.94612121582,386.248504638672,386.248504638672,386.248504638672,386.248504638672,393.14412689209,393.14412689209,393.14412689209,393.14412689209,404.451652526855,404.451652526855,404.451652526855,404.451652526855,413.874954223633,413.874954223633,413.874954223633,413.874954223633,412.046073913574,412.046073913574,412.046073913574,412.046073913574,412.046073913574,342.521987915039,342.521987915039,342.521987915039,342.521987915039,342.521987915039,342.325744628906,342.325744628906,342.325744628906,342.325744628906,349.181739807129,349.181739807129,349.181739807129,349.181739807129,357.981147766113,357.981147766113,357.981147766113,357.981147766113,371.475463867188,371.475463867188,371.475463867188,371.475463867188,371.475463867188,371.475540161133,371.475540161133,371.475540161133,371.475540161133,371.475540161133,373.115653991699,373.115653991699,373.115653991699,373.115653991699,373.115653991699,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,379.16716003418,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,381.28214263916,386.353164672852,386.353164672852,386.353164672852,386.353164672852,386.353164672852,386.353164672852,389.583564758301,389.583564758301,389.583564758301,389.583564758301,389.583564758301,395.510269165039,395.510269165039,395.510269165039,395.510269165039,395.510269165039,408.711448669434,408.711448669434,408.711448669434,409.81468963623,409.81468963623,409.81468963623,409.81468963623,409.81468963623,409.81468963623,416.437950134277,416.437950134277,416.437950134277,416.437950134277,416.437950134277,421.824775695801,421.824775695801,421.824775695801,421.824775695801,421.824775695801,429.372299194336,429.372299194336,429.372299194336,429.372299194336,429.372299194336,437.367767333984,437.367767333984,437.367767333984,437.367767333984,437.367767333984,445.36213684082,445.36213684082,445.36213684082,445.36213684082,445.36213684082,453.358589172363,453.358589172363,453.358589172363,453.358589172363,453.358589172363,351.751251220703,351.751251220703,351.751251220703,351.751251220703,351.751251220703,385.634948730469,385.634948730469,385.634948730469,385.634979248047,385.634979248047,385.634979248047,409.082885742188,409.082885742188,409.082885742188,420.529693603516,420.529693603516,420.529693603516,420.529693603516,428.868949890137,428.868949890137,428.868949890137,428.868949890137,428.868949890137,436.645347595215,436.645347595215,436.645347595215,436.645347595215,445.723739624023,445.723739624023,445.723739624023,445.723739624023,445.723739624023,454.93701171875,454.93701171875,454.93701171875,454.93701171875,454.93701171875,454.93701171875,405.493782043457,405.493782043457,405.493782043457,414.092407226562,414.092407226562,414.092407226562,414.092407226562,414.092407226562,425.86247253418,425.86247253418,425.86247253418,425.86247253418,425.86247253418,432.560523986816,432.560523986816,432.560523986816,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,434.647125244141,433.451217651367,433.451217651367,433.451217651367,433.451217651367,433.451217651367,433.451217651367,433.451217651367,328.342628479004,328.342628479004,328.342628479004,328.342628479004,328.342628479004,328.342628479004,328.342628479004,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,269.168167114258,278.060653686523,278.060653686523,278.060653686523,278.060653686523,278.060653686523,285.393005371094,285.393005371094,285.393005371094,285.393005371094,285.393005371094,294.3701171875,294.3701171875,294.3701171875,294.3701171875,294.3701171875,300.69352722168,300.69352722168,300.69352722168,300.69352722168,300.69352722168,311.097412109375,311.097412109375,311.097412109375,311.097412109375,319.177375793457,319.177375793457,319.177375793457,319.177375793457,284.262481689453,284.262481689453,284.262481689453,284.262481689453,284.262481689453,276.386001586914,276.386001586914,276.386001586914,276.386001586914,283.180793762207,283.180793762207,283.180793762207,283.180793762207,289.510833740234,289.510833740234,289.510833740234,289.510833740234,299.053840637207,299.053840637207,299.053840637207,299.053840637207,306.98754119873,306.98754119873,306.98754119873,306.98754119873,315.375549316406,315.375549316406,315.375549316406,315.375549316406,323.522071838379,323.522071838379,323.522071838379,323.522071838379,329.93977355957,329.93977355957,329.93977355957,329.93977355957,340.150909423828,340.150909423828,340.150909423828,340.150909423828,340.150909423828,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,352.228057861328,353.894981384277,353.894981384277,353.894981384277,353.894981384277,353.894981384277,353.89527130127,353.89527130127,353.89527130127,353.89527130127,353.89527130127,360.084846496582,360.084846496582,360.084846496582,360.084846496582,360.084846496582,360.084922790527,360.084922790527,360.084922790527,360.084922790527,360.084922790527,362.245468139648,362.245468139648,362.245468139648,362.245468139648,362.245468139648,362.245651245117,362.245651245117,362.245651245117,362.245651245117,362.245651245117,367.429328918457,367.429328918457,367.429328918457,367.429328918457,367.429328918457,367.429328918457,370.716972351074,370.716972351074,370.716972351074,370.716972351074,370.716972351074,376.586242675781,376.586242675781,376.586242675781,376.586242675781,376.586242675781,391.343574523926,391.343574523926,391.343574523926,391.343574523926,391.343574523926,394.255973815918,394.255973815918,394.255973815918,394.436134338379,394.436134338379,394.436134338379,394.436134338379,394.436134338379,400.81664276123,400.81664276123,400.81664276123,400.81664276123,400.81664276123,407.160568237305,407.160568237305,407.160568237305,407.160568237305,407.160568237305,415.267349243164,415.267349243164,415.267349243164,415.267349243164,415.267349243164,423.264137268066,423.264137268066,423.264137268066,423.264137268066,423.264137268066,429.743438720703,429.743438720703,429.743438720703,429.743438720703,429.743438720703,450.51872253418,450.51872253418,450.51872253418,390.100791931152,390.100791931152,390.100791931152,390.100791931152,299.417556762695,299.417556762695,299.417556762695,309.871047973633,309.871047973633,309.871047973633,313.762908935547,313.762908935547,313.762908935547,313.762908935547,313.762908935547,313.762908935547,313.762908935547,333.248886108398,333.248886108398,333.248886108398,350.560455322266,350.560455322266,350.560455322266,350.560455322266,350.560455322266,359.482788085938,359.482788085938,359.482788085938,371.339286804199,371.339286804199,371.339286804199,378.740272521973,378.740272521973,378.740272521973,378.740272521973,378.740272521973,385.950904846191,385.950904846191,385.950904846191,385.950904846191,385.950904846191,385.950904846191,340.659683227539,340.659683227539,340.659683227539,340.659683227539,340.659683227539,340.659683227539,347.529228210449,347.529228210449,347.529228210449,347.529228210449,347.529228210449,355.544960021973,355.544960021973,355.544960021973,355.544960021973,355.544960021973,367.643196105957,367.643196105957,367.643196105957,367.643196105957,367.643196105957,336.379089355469,336.379089355469,336.379089355469,336.379089355469,336.379089355469,336.379089355469,340.570617675781,340.570617675781,340.570617675781,340.570617675781,340.570617675781,346.615409851074,346.615409851074,346.615409851074,346.615409851074,364.513999938965,364.513999938965,364.513999938965,364.513999938965,371.868446350098,371.868446350098,371.868446350098,380.106323242188,380.106323242188,380.106323242188,380.106323242188,387.06559753418,387.06559753418,387.06559753418,387.06559753418,393.620292663574,393.620292663574,393.620292663574,393.620292663574,396.795188903809,396.795188903809,396.795188903809,396.795188903809,396.795188903809,338.761451721191,338.761451721191,338.761451721191,338.761451721191,345.874099731445,345.874099731445,345.874099731445,345.874099731445,354.62703704834,354.62703704834,354.62703704834,354.62703704834,362.103096008301,362.103096008301,362.103096008301,362.103096008301,369.186882019043,369.186882019043,369.186882019043,369.186882019043,375.503601074219,375.503601074219,375.503601074219,375.503601074219,383.44556427002,383.44556427002,383.44556427002,383.44556427002,383.44556427002,383.44556427002,394.741897583008,394.741897583008,394.741897583008,394.741897583008,394.741897583008,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,396.405342102051,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,402.584625244141,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,404.744956970215,409.924201965332,409.924201965332,409.924201965332,409.924201965332,409.924201965332,409.924201965332,412.767318725586,412.767318725586,412.767318725586,412.767318725586,412.767318725586,419.036987304688,419.036987304688,419.036987304688,419.036987304688,419.036987304688,433.29557800293,433.29557800293,433.29557800293,433.29557800293,433.29557800293,434.854072570801,434.854072570801,434.854072570801,435.034233093262,435.034233093262,435.034233093262,435.034233093262,435.034233093262,441.394607543945,441.394607543945,441.394607543945,441.394607543945,441.394607543945,449.225914001465,449.225914001465,449.225914001465,454.227745056152,454.227745056152,454.227745056152,454.227745056152,454.227745056152,454.227745056152,343.668098449707,343.668098449707,343.668098449707,343.668098449707,343.668098449707,356.244018554688,356.244018554688,356.244018554688,356.244018554688,356.244018554688,364.240844726562,364.240844726562,364.240844726562,364.240844726562,364.240844726562,371.718215942383,371.718215942383,371.718215942383,404.444709777832,404.444709777832,404.444709777832,404.44474029541,404.44474029541,404.44474029541,427.845634460449,427.845634460449,427.845634460449,437.926490783691,437.926490783691,437.926490783691,437.926490783691,447.024940490723,447.024940490723,447.024940490723,447.024940490723,447.024940490723,453.458396911621,453.458396911621,453.458396911621,453.458396911621,453.458396911621,401.372505187988,401.372505187988,401.372505187988,408.288581848145,408.288581848145,408.288581848145,408.288581848145,408.288581848145,414.829956054688,414.829956054688,414.829956054688,425.089004516602,425.089004516602,425.089004516602,425.089004516602,425.089004516602,431.135612487793,431.135612487793,431.135612487793,431.135612487793,353.326034545898,353.326034545898,353.326034545898,353.326034545898,313.267272949219,313.267272949219,313.267272949219,313.267272949219,313.267272949219,313.267272949219,321.148246765137,321.148246765137,321.148246765137,330.011367797852,330.011367797852,330.011367797852,330.011367797852,330.011367797852,341.477722167969,341.477722167969,341.477722167969,341.477722167969,341.477722167969,318.927825927734,318.927825927734,318.927825927734,318.927825927734,318.927825927734,318.927825927734,321.223533630371,321.223533630371,321.223533630371,321.223533630371,321.223533630371,332.468811035156,332.468811035156,332.468811035156,332.468811035156,338.187370300293,338.187370300293,338.187370300293,338.187370300293,338.187370300293,345.456260681152,345.456260681152,345.456260681152,345.456260681152,352.957344055176,352.957344055176,352.957344055176,352.957344055176,359.969482421875,359.969482421875,359.969482421875,359.969482421875,367.099418640137,367.099418640137,367.099418640137,367.099418640137,374.83423614502,374.83423614502,374.83423614502,374.83423614502,381.766304016113,381.766304016113,381.766304016113,381.766304016113,391.488388061523,391.488388061523,391.488388061523,391.488388061523,399.646583557129,399.646583557129,399.646583557129,399.646583557129,407.912551879883,407.912551879883,407.912551879883,407.912551879883,420.332916259766,420.332916259766,420.332916259766,424.956871032715,424.956871032715,424.956871032715,424.956871032715,424.956871032715,426.353546142578,426.353546142578,426.353546142578,426.353546142578,426.353546142578,426.353546142578,426.653091430664,426.653091430664,426.653091430664,426.653091430664,426.653091430664,430.917045593262,430.917045593262,430.917045593262,430.917045593262,432.851623535156,432.851623535156,432.851623535156,432.851623535156,432.851623535156,432.851699829102,432.851699829102,432.851699829102,432.851699829102,432.851699829102,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,434.991371154785,438.156303405762,438.156303405762,438.156303405762,438.156303405762,438.156303405762,438.156303405762,438.156303405762,368.058868408203,368.058868408203,368.058868408203,368.058868408203,368.058868408203,368.058868408203,368.058868408203,311.604957580566,311.604957580566,311.604957580566,311.604957580566,311.604957580566,313.32218170166,313.32218170166,313.32218170166,313.32218170166,313.32218170166,321.182662963867,321.182662963867,321.182662963867,321.182662963867,321.182662963867,336.424293518066,336.424293518066,336.850524902344,336.850524902344,336.850524902344,338.632865905762,338.632865905762,338.632865905762,338.632865905762,338.632865905762,344.389869689941,344.389869689941,344.389869689941,344.389869689941,344.389869689941,356.231033325195,356.231033325195,356.231033325195,356.231033325195,356.231033325195,364.225379943848,364.225379943848,364.225379943848,364.225379943848,364.225379943848,372.217674255371,372.217674255371,372.217674255371,372.217674255371,372.217674255371,381.521347045898,381.521347045898,381.521347045898,381.521347045898,381.521347045898,404.37239074707,404.37239074707,404.37239074707,414.612312316895,414.612312316895,414.612312316895,437.584327697754,437.584327697754,437.584327697754,447.491088867188,447.491088867188,447.491088867188,447.491088867188,454.573448181152,454.573448181152,454.573448181152,454.573448181152,454.573448181152,454.573448181152,351.561614990234,351.561614990234,351.561614990234,361.673393249512,361.673393249512,361.673393249512,373.399421691895,373.399421691895,373.399421691895,373.399421691895,373.399421691895,380.526054382324,380.526054382324,380.526054382324,380.526054382324,380.526054382324,385.039649963379,385.039649963379,385.039649963379,385.039649963379,385.039649963379,385.039649963379,353.932350158691,353.932350158691,353.932350158691,361.301559448242,361.301559448242,361.301559448242,361.301559448242,361.301559448242,368.592338562012,368.592338562012,368.592338562012,368.592338562012,368.592338562012,376.108390808105,376.108390808105,376.108390808105,376.108390808105,376.108390808105,363.773559570312,363.773559570312,363.773559570312,363.773559570312,363.773559570312,363.773559570312,350.626106262207,350.626106262207,350.626106262207,350.626106262207,350.626106262207,357.195518493652,357.195518493652,357.195518493652,357.195518493652,366.285934448242,366.285934448242,366.285934448242,366.285934448242,366.285934448242,377.229133605957,377.229133605957,377.229133605957,377.229133605957,384.951438903809,384.951438903809,384.951438903809,384.951438903809,384.951438903809,392.904373168945,392.904373168945,392.904373168945,392.904373168945,400.419235229492,400.419235229492,400.419235229492,400.419235229492,408.156181335449,408.156181335449,408.156181335449,408.156181335449,370.116096496582,370.116096496582,370.116096496582,370.116096496582,370.116096496582,351.588691711426,351.588691711426,351.588691711426,351.588691711426,360.061027526855,360.061027526855,360.061027526855,360.061027526855,367.670143127441,367.670143127441,367.670143127441,367.670143127441,375.625923156738,375.625923156738,375.625923156738,375.625923156738,383.44702911377,383.44702911377,383.44702911377,383.44702911377,391.682235717773,391.682235717773,391.682235717773,391.682235717773,404.095062255859,404.095062255859,404.095062255859,404.095062255859,407.091209411621,407.091209411621,407.091209411621,407.091209411621,407.091209411621,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,408.766067504883,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,414.831405639648,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,416.92227935791,421.651313781738,421.651313781738,421.651313781738,421.651313781738,421.651313781738,422.906509399414,422.906509399414,422.906509399414,422.906509399414,422.906509399414,431.064292907715,431.064292907715,431.064292907715,431.064292907715,431.064292907715,446.670196533203,446.670196533203,446.670196533203,446.670196533203,446.670196533203,448.216438293457,448.216438293457,448.216438293457,448.216438293457,448.216438293457,448.216438293457,454.858703613281,454.858703613281,454.858703613281,454.858703613281,454.858703613281,427.671455383301,427.671455383301,427.671455383301,427.671455383301,427.671455383301,427.671455383301,356.805946350098,356.805946350098,356.805946350098,356.805946350098,356.805946350098,364.536270141602,364.536270141602,364.536270141602,364.536270141602,364.536270141602,374.047080993652,374.047080993652,374.047080993652,374.047080993652,374.047080993652,383.64860534668,383.64860534668,383.64860534668,383.64860534668,383.64860534668,394.860023498535,394.860023498535,394.860023498535,394.860023498535,394.860023498535,418.586349487305,418.586349487305,418.586349487305,429.654098510742,429.654098510742,429.654098510742,452.976959228516,452.976959228516,452.976959228516,419.544311523438,419.544311523438,419.544311523438,419.544311523438,346.384658813477,346.384658813477,346.384658813477,346.384658813477,355.683120727539,355.683120727539,355.683120727539,355.683120727539,363.731468200684,363.731468200684,363.731468200684,363.731468200684,363.731468200684,372.329933166504,372.329933166504,372.329933166504,372.329933166504,381.909683227539,381.909683227539,381.909683227539,381.909683227539,381.909683227539,391.186645507812,391.186645507812,391.186645507812,391.186645507812,391.186645507812,397.977760314941,397.977760314941,397.977760314941,351.552627563477,351.552627563477,351.552627563477,351.552627563477,351.552627563477,359.198539733887,359.198539733887,359.198539733887,359.198539733887,359.198539733887,366.687683105469,366.687683105469,366.687683105469,366.687683105469,366.687683105469,366.687683105469,376.865882873535,376.865882873535,376.865882873535,376.865882873535,376.865882873535,383.818634033203,383.818634033203,383.818634033203,383.818634033203,350.726318359375,350.726318359375,350.726318359375,357.649803161621,357.649803161621,357.649803161621,357.649803161621,357.649803161621,367.953475952148,367.953475952148,367.953475952148,367.953475952148,367.953475952148,374.96314239502,374.96314239502,374.96314239502,374.96314239502,386.766235351562,386.766235351562,386.766235351562,386.766235351562,393.654624938965,393.654624938965,393.654624938965,400.267379760742,400.267379760742,400.267379760742,400.267379760742,408.094543457031,408.094543457031,408.094543457031,408.094543457031,408.375442504883,408.375442504883,408.375442504883,408.375442504883,408.375442504883,352.718635559082,352.718635559082,352.718635559082,352.718635559082,360.037147521973,360.037147521973,360.037147521973,360.037147521973,368.449203491211,368.449203491211,368.449203491211,368.449203491211,376.291664123535,376.291664123535,376.291664123535,376.291664123535,383.983085632324,383.983085632324,383.983085632324,383.983085632324,391.33618927002,391.33618927002,391.33618927002,391.33618927002,400.502578735352,400.502578735352,411.585052490234,411.585052490234,411.585052490234,411.585052490234,411.585052490234,411.58512878418,411.58512878418,411.58512878418,411.58512878418,411.58512878418,413.303398132324,413.303398132324,413.303398132324,413.303398132324,413.303398132324,413.303932189941,413.303932189941,413.303932189941,413.303932189941,413.303932189941,419.57642364502,419.57642364502,419.57642364502,419.57642364502,419.57642364502,419.576499938965,419.576499938965,419.576499938965,419.576499938965,419.576499938965,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,421.728088378906,426.62442779541,426.62442779541,426.62442779541,426.62442779541,426.62442779541,427.239471435547,427.239471435547,427.239471435547,427.239471435547,427.239471435547,432.579132080078,432.579132080078,432.579132080078,432.579132080078,432.579132080078,441.400573730469,441.400573730469,441.400573730469,441.400573730469,441.400573730469,454.824523925781,454.824523925781,454.824523925781,454.824523925781,454.824523925781,454.824523925781,385.14282989502,385.14282989502,385.14282989502,385.14282989502,385.14282989502,385.14282989502,358.304016113281,358.304016113281,358.304016113281,358.304016113281,358.304016113281,358.304016113281,358.484176635742,358.484176635742,358.484176635742,358.484176635742,358.484176635742,364.887298583984,364.887298583984,364.887298583984,364.887298583984,364.887298583984,373.131530761719,373.131530761719,373.131530761719,381.094505310059,381.094505310059,381.094505310059,381.094505310059,381.094505310059,386.01097869873,386.01097869873,386.01097869873,386.01097869873,386.01097869873,393.959938049316,393.959938049316,393.959938049316,393.959938049316,393.959938049316,412.727828979492,412.727828979492,412.727828979492,412.727828979492,437.366737365723,437.366737365723,437.366737365723,437.786499023438,437.786499023438,437.786499023438,454.322166442871,454.322166442871,454.322166442871,454.322166442871,394.102142333984,394.102142333984,394.102142333984,394.102142333984,404.002746582031,404.002746582031,404.002746582031,404.002746582031,404.002746582031,413.323173522949,413.323173522949,413.323173522949,413.323173522949,413.323173522949,423.829093933105,423.829093933105,423.829093933105,423.829093933105,423.829093933105,430.65943145752,430.65943145752,430.65943145752,430.65943145752,430.65943145752,438.321136474609,438.321136474609,438.321136474609,438.321136474609,438.321136474609,438.321136474609,380.778610229492,380.778610229492,380.778610229492,380.778610229492,380.778610229492,386.874237060547,386.874237060547,386.874237060547,386.874237060547,386.874237060547,396.153633117676,396.153633117676,396.153633117676,398.272087097168,398.272087097168,398.272087097168,398.272087097168,398.272087097168,398.272087097168,404.355514526367,404.355514526367,404.355514526367,404.355514526367,404.355514526367,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,413.306678771973,412.110771179199,412.110771179199,412.110771179199,412.110771179199,284.836463928223,284.836463928223,284.836463928223,284.836463928223,269.27954864502,269.27954864502,269.27954864502,269.27954864502,277.072441101074,277.072441101074,277.072441101074,277.072441101074,277.072441101074,284.866012573242,284.866012573242,284.866012573242,284.866012573242,294.321578979492,294.321578979492,294.321578979492,294.321578979492,294.321578979492,304.255043029785,304.255043029785,304.255043029785,304.255043029785,311.837272644043,311.837272644043,311.837272644043,311.837272644043,311.837272644043,322.608627319336,322.608627319336,322.608627319336,322.608627319336,330.194793701172,330.194793701172,330.194793701172,330.194793701172,338.828582763672,338.828582763672,338.828582763672,338.828582763672,338.828582763672,279.070518493652,279.070518493652,279.070518493652,279.070518493652,286.626319885254,286.626319885254,286.626319885254,286.626319885254,295.676383972168,295.676383972168,295.676383972168,295.676383972168,304.0107421875,304.0107421875,304.0107421875,304.0107421875,311.324905395508,311.324905395508,311.324905395508,311.324905395508,319.584091186523,319.584091186523,319.584091186523,319.584091186523,319.584091186523,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,331.837814331055,333.539039611816,333.539039611816,333.539039611816,333.539039611816,333.539039611816,333.539360046387,333.539360046387,333.539360046387,333.539360046387,333.539360046387,339.747459411621,339.747459411621,339.747459411621,339.747459411621,339.747459411621,339.747535705566,339.747535705566,339.747535705566,339.747535705566,339.747535705566,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,341.88655090332,347.031753540039,347.031753540039,347.031753540039,347.031753540039,347.031753540039,347.031753540039,349.861640930176,349.861640930176,349.861640930176,349.861640930176,349.861640930176,356.165962219238,356.165962219238,356.165962219238,356.165962219238,356.165962219238,370.927520751953,370.927520751953,370.927520751953,370.927520751953,370.927520751953,377.454177856445,377.454177856445,377.454177856445,377.454177856445,377.454177856445,377.454177856445,384.033416748047,384.033416748047,384.033416748047,384.033416748047,384.033416748047,389.424781799316,389.424781799316,389.424781799316,389.424781799316,389.424781799316,397.101821899414,397.101821899414,397.101821899414,397.101821899414,397.101821899414,405.132026672363,405.132026672363,405.132026672363,405.132026672363,405.132026672363,414.595153808594,414.595153808594,414.595153808594,414.595153808594,414.595153808594,443.821151733398,443.821151733398,443.821151733398,453.769866943359,453.769866943359,453.769866943359,438.079727172852,438.079727172852,438.079727172852,438.079727172852,315.405731201172,315.405731201172,315.405731201172,315.405731201172,324.228843688965,324.228843688965,324.228843688965,338.624015808105,338.624015808105,338.624015808105,338.624015808105,338.624015808105,349.771286010742,349.771286010742,349.771286010742,349.771286010742,358.88501739502,358.88501739502,358.88501739502,369.528587341309,369.528587341309,369.528587341309,369.528587341309,369.528587341309,375.310905456543,375.310905456543,375.310905456543,375.310905456543,329.275817871094,329.275817871094,329.275817871094,337.898918151855,337.898918151855,337.898918151855,337.898918151855,337.898918151855,348.789772033691,348.789772033691,348.789772033691,348.789772033691,348.789772033691,358.661804199219,358.661804199219,358.661804199219,358.661804199219,358.661804199219,358.661804199219,358.661804199219,328.336883544922,328.336883544922,328.336883544922,335.407264709473,335.407264709473,335.407264709473,335.407264709473,335.407264709473,343.493919372559,343.493919372559,343.493919372559,343.493919372559,343.493919372559,354.207405090332,354.207405090332,354.207405090332,354.207405090332,362.12703704834,362.12703704834,362.12703704834,362.12703704834,362.12703704834,374.389541625977,374.389541625977,374.389541625977,374.389541625977,382.311820983887,382.311820983887,382.311820983887,382.311820983887,390.423797607422,390.423797607422,390.423797607422,390.423797607422,390.423797607422,327.411140441895,327.411140441895,327.411140441895,327.411140441895,340.080543518066,340.080543518066,340.080543518066,340.080543518066,348.086532592773,348.086532592773,348.086532592773,348.086532592773,355.076210021973,355.076210021973,355.076210021973,355.076210021973,363.628959655762,363.628959655762,363.628959655762,363.628959655762,371.580200195312,371.580200195312,371.580200195312,371.580200195312,384.218139648438,384.218139648438,384.218139648438,384.218139648438,384.218139648438,386.584121704102,386.584121704102,386.584121704102,386.584121704102,386.584121704102,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,388.236167907715,394.149742126465,394.149742126465,394.149742126465,394.149742126465,394.149742126465,394.14981842041,394.14981842041,394.14981842041,394.14981842041,394.14981842041,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,396.187149047852,401.066795349121,401.066795349121,401.066795349121,401.066795349121,401.066795349121,401.066795349121,404.653480529785,404.653480529785,404.653480529785,404.653480529785,409.960510253906,409.960510253906,409.960510253906,409.960510253906,409.960510253906,424.297637939453,424.297637939453,424.297637939453,424.297637939453,424.297637939453,430.125549316406,430.125549316406,430.125549316406,430.125549316406,430.125549316406,430.125549316406,431.907890319824,431.907890319824,431.907890319824,431.907890319824,431.907890319824,442.125625610352,442.125625610352,442.125625610352,442.125625610352,442.125625610352,449.420204162598,449.420204162598,449.420204162598,449.420204162598,449.420204162598,433.569641113281,433.569641113281,433.569641113281,433.569641113281,433.569641113281,433.569641113281,338.999519348145,338.999519348145,338.999519348145,338.999519348145,338.999519348145,350.0380859375,350.0380859375,350.0380859375,350.0380859375,350.0380859375,379.672561645508,379.672561645508,379.672561645508,390.034027099609,390.034027099609,390.034027099609,405.338706970215,405.338706970215,415.464302062988,415.464302062988,415.464302062988,427.921943664551,427.921943664551,427.921943664551,437.009582519531,437.009582519531,437.009582519531,437.009582519531,437.009582519531,445.16919708252,445.16919708252,445.16919708252,445.16919708252,445.16919708252,454.938400268555,454.938400268555,454.938400268555,454.938400268555,454.938400268555,454.938400268555,395.379531860352,395.379531860352,395.379531860352,395.379531860352,395.379531860352,405.59449005127,405.59449005127,405.59449005127,405.59449005127,405.59449005127,414.376731872559,414.376731872559,414.376731872559,414.376731872559,414.376731872559,423.068328857422,423.068328857422,423.068328857422,423.068328857422,423.068328857422,411.725616455078,411.725616455078,411.725616455078,411.725616455078,411.725616455078,411.725616455078,310.445213317871,310.445213317871,310.445213317871,310.445213317871,310.445213317871,310.445213317871,314.644035339355,314.644035339355,314.644035339355,314.644035339355,314.644035339355,323.842575073242,323.842575073242,323.842575073242,323.842575073242,332.35050201416,332.35050201416,332.35050201416,344.297386169434,344.297386169434,344.297386169434,344.297386169434,344.297386169434,324.881278991699,324.881278991699,324.881278991699,324.881278991699,324.881278991699,317.852897644043,317.852897644043,317.852897644043,317.852897644043,325.077842712402,325.077842712402,325.077842712402,325.077842712402,332.21215057373,332.21215057373,332.21215057373,332.21215057373,339.542373657227,339.542373657227,339.542373657227,339.542373657227,347.573402404785,347.573402404785,347.573402404785,347.573402404785,359.896751403809,359.896751403809,359.896751403809,359.896751403809,367.145599365234,367.145599365234,367.145599365234,367.145599365234,377.226547241211,377.226547241211,377.226547241211,377.226547241211,384.984169006348,384.984169006348,384.984169006348,384.984169006348,393.223739624023,393.223739624023,393.223739624023,393.223739624023,403.799697875977,403.799697875977,411.525856018066,411.525856018066,411.525856018066,411.525856018066,411.525856018066,411.525932312012,411.525932312012,411.525932312012,411.525932312012,411.525932312012,413.222579956055,413.222579956055,413.222579956055,413.222579956055,413.222579956055,419.349060058594,419.349060058594,419.349060058594,419.349060058594,419.349060058594,419.349136352539,419.349136352539,419.349136352539,419.349136352539,419.349136352539,421.448600769043,421.448600769043,421.448600769043,421.448600769043,421.448600769043,421.448890686035,421.448890686035,421.448890686035,421.448890686035,421.448890686035,426.507064819336,426.507064819336,426.507064819336,426.507064819336,426.507064819336,426.507064819336,429.760375976562,429.760375976562,429.760375976562,429.760375976562,429.760375976562,435.720733642578,435.720733642578,435.720733642578,435.720733642578,435.720733642578,450.613990783691,450.613990783691,450.613990783691,450.613990783691,450.613990783691,453.058158874512,453.058158874512,453.058158874512,453.058158874512,453.058158874512,453.058158874512,454.404487609863,454.404487609863,454.404487609863,454.404487609863,454.404487609863,454.404487609863,385.649612426758,385.649612426758,385.649612426758,385.649612426758,385.649612426758,385.649612426758,316.668243408203,316.668243408203,316.668243408203,316.668243408203,316.668243408203,324.346504211426,324.346504211426,324.346504211426,324.346504211426,324.346504211426,333.076141357422,333.076141357422,333.076141357422,333.076141357422,333.076141357422,345.64778137207,345.64778137207,345.64778137207,345.64778137207,345.64778137207,355.166076660156,355.166076660156,355.166076660156,355.166076660156,355.166076660156,378.48063659668,378.48063659668,378.48063659668,389.352294921875,389.352294921875,389.352294921875,412.316390991211,412.316390991211,412.316390991211,422.385452270508,422.385452270508,422.385452270508,422.385452270508,432.413467407227,432.413467407227,432.413467407227,432.413467407227,442.52906036377,442.52906036377,442.52906036377,442.52906036377,449.329299926758,449.329299926758,449.329299926758,454.629127502441,454.629127502441,454.629127502441,454.629127502441,454.629127502441,454.629127502441,366.84375,366.84375,366.84375,377.433380126953,377.433380126953,377.433380126953,384.479301452637,384.479301452637,384.479301452637,384.479301452637,384.479301452637,392.196228027344,392.196228027344,392.196228027344,392.196228027344,392.196228027344,398.237976074219,398.237976074219,398.237976074219,398.237976074219,398.237976074219,398.237976074219,367.738914489746,367.738914489746,367.738914489746,367.738914489746,367.738914489746,367.738914489746,345.492576599121,345.492576599121,345.492576599121,345.492576599121,345.492576599121,345.492576599121,352.697662353516,352.697662353516,352.697662353516,352.697662353516,352.697662353516,361.509292602539,361.509292602539,361.509292602539,361.509292602539,361.509292602539,369.893257141113,369.893257141113,369.893257141113,379.702407836914,379.702407836914,379.702407836914,379.702407836914,379.702407836914,379.702407836914,372.145561218262,372.145561218262,372.145561218262,372.145561218262,372.145561218262,372.145561218262,354.698837280273,354.698837280273,354.698837280273,354.698837280273,362.267555236816,362.267555236816,362.267555236816,369.709320068359,369.709320068359,369.709320068359,369.709320068359,379.601196289062,379.601196289062,379.601196289062,379.601196289062,388.420791625977,388.420791625977,388.420791625977,388.420791625977,395.96460723877,395.96460723877,395.96460723877,395.96460723877,402.927291870117,402.927291870117,402.927291870117,402.927291870117,410.274261474609,410.274261474609,410.274261474609,410.274261474609,418.706665039062,418.706665039062,418.706665039062,418.706665039062,429.388580322266,429.388580322266,429.388580322266,429.388580322266,436.387565612793,436.387565612793,436.387565612793,436.387565612793,449.314041137695,449.314041137695,449.314041137695,449.314041137695,450.868263244629,450.868263244629,450.868263244629,450.868263244629,450.868263244629,452.573516845703,452.573516845703,452.573516845703,452.573516845703,452.573516845703,452.573806762695,452.573806762695,452.573806762695,452.573806762695,452.573806762695,410.835899353027,410.835899353027,410.835899353027,410.835899353027,410.835899353027,352.918319702148,352.918319702148,352.918319702148,352.918319702148,352.918319702148,352.918319702148,353.320159912109,353.320159912109,353.320159912109,353.320159912109,353.320159912109,353.320236206055,353.320236206055,353.320236206055,353.320236206055,353.320236206055,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,355.426643371582,360.815574645996,360.815574645996,360.815574645996,360.815574645996,360.815574645996,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,365.389549255371,369.745628356934,369.745628356934,369.745628356934,384.414268493652,384.414268493652,384.414268493652,384.414268493652,384.414268493652,385.521171569824,385.521171569824,385.521171569824,386.235397338867,386.235397338867,386.235397338867,386.235397338867,386.235397338867,392.109397888184,392.109397888184,392.109397888184,392.109397888184,392.109397888184,405.14868927002,405.14868927002,405.14868927002,405.14868927002,405.14868927002,413.1484375,413.1484375,413.1484375,413.1484375,413.1484375,421.134956359863,421.134956359863,421.134956359863,421.134956359863,421.134956359863,430.571937561035,430.571937561035,430.571937561035,430.571937561035,430.571937561035,453.824478149414,453.824478149414,453.824478149414,380.162452697754,380.162452697754,380.162452697754,380.162452697754,380.162452697754,380.162452697754,404.395973205566,404.395973205566,404.395973205566,419.823944091797,419.823944091797,419.823944091797,419.823944091797,419.823944091797,430.535369873047,430.535369873047,430.535369873047,430.535369873047,441.363586425781,441.363586425781,441.363586425781,441.363586425781,441.363586425781,451.71321105957,451.71321105957,451.71321105957,451.71321105957,451.71321105957,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,452.736869812012,299.370307922363,299.370307922363,299.370307922363,299.370307922363,299.370307922363,299.370307922363,268.934173583984,268.934173583984,268.934173583984,268.934173583984,268.934173583984,268.934173583984,277.278076171875,277.278076171875,277.278076171875,277.278076171875,277.278076171875,287.661987304688,287.661987304688,287.661987304688,287.661987304688,287.661987304688,298.09977722168,298.09977722168,298.09977722168,298.09977722168,298.09977722168,294.687026977539,294.687026977539,294.687026977539,294.687026977539,294.687026977539,294.687026977539,278.840675354004,278.840675354004,278.840675354004,278.840675354004,278.840675354004,278.840675354004,294.65168762207,294.65168762207,294.65168762207,294.65168762207,294.65168762207,306.20002746582,306.20002746582,306.20002746582,306.20002746582,313.725196838379,313.725196838379,313.725196838379,313.725196838379,320.685401916504,320.685401916504,320.685401916504,320.685401916504,330.422233581543,330.422233581543,330.422233581543,330.422233581543,337.922538757324,337.922538757324,337.922538757324,337.922538757324,272.259834289551,272.259834289551,272.259834289551,272.259834289551,280.050819396973,280.050819396973,280.050819396973,280.050819396973,287.783699035645,287.783699035645,287.783699035645,287.783699035645,296.061744689941,296.061744689941,296.061744689941,296.061744689941,304.052345275879,304.052345275879,304.052345275879,304.052345275879,312.283638000488,312.283638000488,312.283638000488,312.283638000488,322.417121887207,322.417121887207,333.337577819824,333.337577819824,333.337577819824,333.337577819824,333.337577819824,333.33765411377,333.33765411377,333.33765411377,333.33765411377,333.33765411377,335.051574707031,335.051574707031,335.051574707031,335.051574707031,335.051574707031,335.355255126953,335.355255126953,335.355255126953,335.355255126953,335.355255126953,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,341.198608398438,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,343.287635803223,348.04517364502,348.04517364502,348.04517364502,348.04517364502,348.04517364502,349.749366760254,349.749366760254,349.749366760254,349.749366760254,349.749366760254,357.359275817871,357.359275817871,357.359275817871,357.359275817871,357.359275817871,368.155731201172,368.155731201172,368.155731201172,368.155731201172,368.155731201172,372.19750213623,372.19750213623,372.19750213623,372.19750213623,372.19750213623,372.19750213623,373.979843139648,373.979843139648,373.979843139648,373.979843139648,373.979843139648,379.867027282715,379.867027282715,379.867027282715,379.867027282715,379.867027282715,391.89965057373,391.89965057373,391.89965057373,391.89965057373,391.89965057373,399.896034240723,399.896034240723,399.896034240723,399.896034240723,399.896034240723,407.884590148926,407.884590148926,407.884590148926,407.884590148926,407.884590148926,416.903091430664,416.903091430664,416.903091430664,416.903091430664,416.903091430664,439.675392150879,439.675392150879,439.675392150879,449.897361755371,449.897361755371,449.897361755371,425.128341674805,425.128341674805,425.128341674805,280.589416503906,280.589416503906,280.589416503906,280.589416503906,280.589416503906,280.589416503906,301.165390014648,301.165390014648,301.165390014648,314.299407958984,314.299407958984,314.299407958984,314.299407958984,314.299407958984,325.226341247559,325.226341247559,325.226341247559,325.226341247559,325.226341247559,334.086471557617,334.086471557617,334.086471557617,334.086471557617,341.707885742188,341.707885742188,341.707885742188,341.707885742188,341.707885742188,351.82487487793,351.82487487793,351.82487487793,351.82487487793,351.82487487793,303.103576660156,303.103576660156,303.103576660156,303.103576660156,303.103576660156,303.103576660156,314.479385375977,314.479385375977,314.479385375977,314.479385375977,314.479385375977,321.53995513916,321.53995513916,321.53995513916,321.53995513916,321.53995513916,330.564636230469,330.564636230469,330.564636230469,330.564636230469,330.564636230469,322.987258911133,322.987258911133,322.987258911133,322.987258911133,322.987258911133,322.987258911133,322.987258911133,308.287826538086,308.287826538086,308.287826538086,321.256088256836,321.256088256836,321.256088256836,321.256088256836,321.256088256836,332.78800201416,332.78800201416,332.78800201416,332.78800201416,339.647506713867,339.647506713867,339.647506713867,339.647506713867,347.587219238281,347.587219238281,347.587219238281,347.587219238281,354.834457397461,354.834457397461,354.834457397461,354.834457397461,368.305931091309,368.305931091309,368.305931091309,368.305931091309,375.620681762695,375.620681762695,375.620681762695,375.620681762695,385.458892822266,385.458892822266,385.458892822266,385.458892822266,361.567672729492,361.567672729492,361.567672729492,361.567672729492,361.567672729492,304.280204772949,304.280204772949,304.280204772949,304.280204772949,311.366523742676,311.366523742676,311.366523742676,311.366523742676,318.216567993164,318.216567993164,318.216567993164,318.216567993164,327.214370727539,327.214370727539,337.957862854004,337.957862854004,337.957862854004,337.957862854004,337.957862854004,339.653793334961,339.653793334961,339.653793334961,339.653793334961,339.653793334961,339.654083251953,339.654083251953,339.654083251953,339.654083251953,339.654083251953,345.679618835449,345.679618835449,345.679618835449,345.679618835449,345.679618835449,345.679695129395,345.679695129395,345.679695129395,345.679695129395,345.679695129395,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,347.722808837891,352.970664978027,352.970664978027,352.970664978027,352.970664978027,352.970664978027,357.574501037598,357.574501037598,357.574501037598,357.574501037598,357.574501037598,365.844024658203,365.844024658203,365.844024658203,365.844024658203,365.844024658203,375.470436096191,375.470436096191,375.470436096191,375.470436096191,375.470436096191,375.470436096191,377.252777099609,377.252777099609,377.252777099609,377.252777099609,377.252777099609,383.17805480957,383.17805480957,383.17805480957,383.17805480957,383.17805480957,395.072563171387,395.072563171387,395.072563171387,395.072563171387,395.072563171387,403.072143554688,403.072143554688,403.072143554688,403.072143554688,403.072143554688,411.062194824219,411.062194824219,411.062194824219,411.062194824219,411.062194824219,420.456069946289,420.456069946289,420.456069946289,420.456069946289,420.456069946289,443.625762939453,443.625762939453,443.625762939453,454.015647888184,454.015647888184,454.015647888184,433.951866149902,433.951866149902,433.951866149902,433.951866149902,348.31665802002,348.31665802002,366.251586914062,366.251586914062,366.251586914062,366.251586914062,376.261779785156,376.261779785156,376.261779785156,376.261779785156,385.894927978516,385.894927978516,385.894927978516,385.894927978516,394.900375366211,394.900375366211,394.900375366211,394.900375366211,394.900375366211,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,400.738914489746,407.062309265137,407.062309265137,407.062309265137,407.062309265137,407.062309265137,356.670478820801,356.670478820801,356.670478820801,356.670478820801,356.670478820801,364.122924804688,364.122924804688,364.122924804688,364.122924804688,364.122924804688,371.230026245117,371.230026245117,371.230026245117,371.230026245117,371.230026245117,380.837554931641,380.837554931641,380.837554931641,380.837554931641,380.837554931641,391.52759552002,391.52759552002,391.52759552002,391.52759552002,391.52759552002,391.52759552002,359.686698913574,359.686698913574,359.686698913574,366.877128601074,366.877128601074,366.877128601074,366.877128601074,366.877128601074,376.044868469238,376.044868469238,376.044868469238,376.044868469238,376.044868469238,376.044868469238,389.042015075684,389.042015075684,389.042015075684,389.042015075684,397.35181427002,397.35181427002,397.35181427002,397.35181427002,397.35181427002,404.018463134766,404.018463134766,404.018463134766,404.018463134766,410.397399902344,410.397399902344,410.397399902344,410.397399902344,417.18342590332,417.18342590332,417.18342590332,417.18342590332,423.776672363281,423.776672363281,423.776672363281,423.776672363281,365.284652709961,365.284652709961,365.284652709961,365.284652709961,365.284652709961,367.44654083252,367.44654083252,367.44654083252,367.44654083252,376.593894958496,376.593894958496,376.593894958496,376.593894958496,385.472549438477,385.472549438477,385.472549438477,385.472549438477,392.133728027344,392.133728027344,392.133728027344,392.133728027344,398.67822265625,398.67822265625,398.67822265625,398.67822265625,404.914840698242,404.914840698242,404.914840698242,404.914840698242,417.355529785156,417.355529785156,417.355529785156,417.355529785156,417.355529785156,421.355072021484,421.355072021484,421.355072021484,421.355072021484,421.355072021484,423.101051330566,423.101051330566,423.101051330566,423.101051330566,423.101051330566,423.101371765137,423.101371765137,423.101371765137,423.101371765137,423.101371765137,429.247520446777,429.247520446777,429.247520446777,429.247520446777,429.247520446777,429.247596740723,429.247596740723,429.247596740723,429.247596740723,429.247596740723,431.308837890625,431.308837890625,431.308837890625,431.308837890625,431.308837890625,431.309020996094,431.309020996094,431.309020996094,431.309020996094,431.309020996094,436.296112060547,436.296112060547,436.296112060547,436.296112060547,436.296112060547,436.296112060547,439.535041809082,439.535041809082,439.535041809082,439.535041809082,439.535041809082,445.550689697266,445.550689697266,445.550689697266,445.550689697266,445.550689697266,440.075042724609,440.075042724609,440.075042724609,440.075042724609,440.075042724609,440.075042724609,362.803237915039,362.803237915039,362.803237915039,362.803237915039,362.803237915039,368.833824157715,368.833824157715,368.833824157715,368.833824157715,368.833824157715,368.833824157715,370.970634460449,370.970634460449,370.970634460449,370.970634460449,370.970634460449,380.87744140625,380.87744140625,380.87744140625,380.87744140625,380.87744140625,388.672340393066,388.672340393066,388.672340393066,388.672340393066,388.672340393066,396.66722869873,396.66722869873,396.66722869873,396.66722869873,396.66722869873,404.657279968262,404.657279968262,404.657279968262,404.657279968262,404.657279968262,412.658592224121,412.658592224121,412.658592224121,412.658592224121,412.658592224121,428.266288757324,428.266288757324,428.266288757324,428.266288757324,453.224136352539,453.224136352539,453.224136352539,453.224166870117,453.224166870117,453.224166870117,406.24006652832,406.24006652832,422.509910583496,422.509910583496,422.509910583496,422.509910583496,431.595169067383,431.595169067383,431.595169067383,431.595169067383,431.595169067383,439.49577331543,439.49577331543,439.49577331543,439.49577331543,439.49577331543,452.68172454834,452.68172454834,452.68172454834,452.68172454834,452.68172454834,403.460693359375,403.460693359375,403.460693359375,403.460693359375,403.460693359375,403.460693359375,305.04564666748,305.04564666748,305.04564666748,305.04564666748,305.04564666748,311.609062194824,311.609062194824,311.609062194824,311.609062194824,311.609062194824,317.878593444824,317.878593444824,317.878593444824,317.878593444824,317.878593444824,327.841270446777,327.841270446777,327.841270446777,327.841270446777,327.841270446777,335.203071594238,335.203071594238,335.203071594238,335.203071594238,335.203071594238,339.905204772949,339.905204772949,339.905204772949,339.905204772949,339.905204772949,339.905204772949,308.036743164062,308.036743164062,308.036743164062,308.036743164062,308.036743164062,314.89404296875,314.89404296875,314.89404296875,314.89404296875,314.89404296875,324.70484161377,324.70484161377,324.70484161377,324.70484161377,324.70484161377,334.081047058105,334.081047058105,334.081047058105,334.081047058105,334.081047058105,334.081047058105,342.135345458984,342.135345458984,342.135345458984,342.135345458984,342.207122802734,342.207122802734,342.207122802734,342.207122802734,342.207122802734,342.207122802734,309.784889221191,309.784889221191,309.784889221191,309.784889221191,316.905487060547,316.905487060547,316.905487060547,316.905487060547,323.480895996094,323.480895996094,323.480895996094,323.480895996094,330.720626831055,330.720626831055,330.720626831055,330.720626831055,343.456916809082,343.456916809082,343.456916809082,343.456916809082,350.209785461426,350.209785461426,350.209785461426,350.209785461426,359.424331665039,359.424331665039,359.424331665039,359.424331665039,365.581832885742,365.581832885742,365.581832885742,365.581832885742,372.501167297363,372.501167297363,372.501167297363,372.501167297363,378.382621765137,378.382621765137,378.382621765137,378.382621765137,386.376876831055,386.376876831055,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,395.255004882812,397.036933898926,397.036933898926,397.036933898926,397.036933898926,397.036933898926,397.517707824707,397.517707824707,397.517707824707,397.517707824707,397.517707824707,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,403.303329467773,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,405.388328552246,410.162841796875,410.162841796875,410.162841796875,410.162841796875,410.162841796875,411.403099060059,411.403099060059,411.403099060059,411.403099060059,411.403099060059,419.977569580078,419.977569580078,419.977569580078,419.977569580078,419.977569580078,434.038726806641,434.038726806641,434.038726806641,434.038726806641,434.038726806641,434.038726806641,434.218887329102,434.218887329102,434.218887329102,434.218887329102,434.218887329102,440.672271728516,440.672271728516,440.672271728516,440.672271728516,440.672271728516,453.5498046875,453.5498046875,453.5498046875,453.5498046875,453.5498046875,442.332023620605,442.332023620605,442.332023620605,442.332023620605,442.332023620605,442.332023620605,334.724227905273,334.724227905273,334.724227905273,334.724227905273,334.724227905273,334.724227905273,320.608917236328,320.608917236328,320.608917236328,320.608917236328,320.608917236328,328.603080749512,328.603080749512,328.603080749512,328.603080749512,328.603080749512,339.766799926758,339.766799926758,339.766799926758,339.766799926758,339.766799926758,363.199645996094,363.199645996094,363.199645996094,373.700187683105,373.700187683105,373.700187683105,397.17253112793,397.17253112793,397.17253112793,407.277305603027,407.277305603027,407.277305603027,407.277305603027,417.318473815918,417.318473815918,417.318473815918,417.318473815918,425.655426025391,425.655426025391,425.655426025391,425.655426025391,438.987312316895,438.987312316895,438.987312316895,438.987312316895,438.987312316895,446.606262207031,446.606262207031,446.606262207031,446.606262207031,446.606262207031,415.917907714844,415.917907714844,415.917907714844,415.917907714844,368.539405822754,368.539405822754,368.539405822754,368.539405822754,368.539405822754,377.691413879395,377.691413879395,377.691413879395,377.691413879395,387.093276977539,387.093276977539,387.093276977539,387.093276977539,387.093276977539,394.528549194336,394.528549194336,394.528549194336,394.528549194336,394.528549194336,391.248489379883,391.248489379883,391.248489379883,391.248489379883,368.973968505859,368.973968505859,368.973968505859,368.973968505859,368.973968505859,375.637771606445,375.637771606445,375.637771606445,375.637771606445,375.637771606445,375.637771606445,384.706764221191,384.706764221191,384.706764221191,384.706764221191,384.706764221191,396.559394836426,396.559394836426,396.559394836426,396.559394836426,404.343818664551,404.343818664551,404.343818664551,404.343818664551,404.343818664551,413.940086364746,413.940086364746,413.940086364746,413.940086364746,423.861808776855,423.861808776855,423.861808776855,423.861808776855,422.733848571777,422.733848571777,422.733848571777,422.733848571777,422.733848571777,370.20027923584,370.20027923584,370.20027923584,370.20027923584,379.123550415039,379.123550415039,379.123550415039,379.123550415039,388.57201385498,388.57201385498,388.57201385498,388.57201385498,397.073196411133,397.073196411133,397.073196411133,397.073196411133,405.264671325684,405.264671325684,405.264671325684,405.264671325684,412.239860534668,412.239860534668,412.239860534668,412.239860534668,419.864837646484,419.864837646484,419.864837646484,419.864837646484,419.864837646484,430.930244445801,430.930244445801,430.930244445801,430.930244445801,430.930244445801,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,432.711502075195,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,438.93058013916,440.996551513672,440.996551513672,440.996551513672,440.996551513672,440.996551513672,440.996734619141,440.996734619141,440.996734619141,440.996734619141,440.996734619141,445.992691040039,445.992691040039,445.992691040039,445.992691040039,445.992691040039,445.992691040039,449.679962158203,449.679962158203,449.679962158203,449.679962158203,454.494232177734,454.494232177734,454.494232177734,454.494232177734,454.494232177734,374.732002258301,374.732002258301,374.732002258301,374.732002258301,374.732002258301,327.049156188965,327.049156188965,327.049156188965,327.049156188965,327.049156188965,327.75505065918,327.75505065918,327.75505065918,327.75505065918,327.75505065918,340.044357299805,340.044357299805,340.044357299805,340.044357299805,340.044357299805,340.044357299805,340.044357299805,340.044357299805,340.044357299805,341.826698303223,341.826698303223,341.826698303223,341.826698303223,341.826698303223,349.034278869629,349.034278869629,349.034278869629,349.034278869629,349.034278869629,359.786911010742,359.786911010742,359.786911010742,359.786911010742,359.786911010742,367.790229797363,367.790229797363,367.790229797363,367.790229797363,367.790229797363,375.781234741211,375.781234741211,375.781234741211,375.781234741211,375.781234741211,383.777519226074,383.777519226074,383.777519226074,383.777519226074,383.777519226074,391.394393920898,391.394393920898,391.394393920898,414.16975402832,414.16975402832,414.16975402832,424.886650085449,424.886650085449,424.886650085449,440.669136047363,440.669136047363,451.079086303711,451.079086303711,451.079086303711,365.548851013184,365.548851013184,365.548851013184,373.736755371094,373.736755371094,373.736755371094,384.315460205078,384.315460205078,384.315460205078,384.315460205078,394.836975097656,394.836975097656,394.836975097656,394.836975097656,394.836975097656,400.67308807373,400.67308807373,400.67308807373,400.67308807373,400.67308807373,406.665817260742,406.665817260742,406.665817260742,406.665817260742,406.665817260742,411.241744995117,411.241744995117,411.241744995117,411.241744995117,411.241744995117,411.241744995117,369.361663818359,369.361663818359,369.361663818359,369.361663818359,369.361663818359,375.680160522461,375.680160522461,375.680160522461,375.680160522461,375.680160522461,375.680160522461,382.405250549316,382.405250549316,382.405250549316,382.405250549316,382.405250549316,391.33683013916,391.33683013916,391.33683013916,400.934616088867,400.934616088867,400.934616088867,400.934616088867,400.934616088867,400.934616088867,400.934616088867,366.151237487793,366.151237487793,366.151237487793,366.151237487793,366.151237487793,366.151237487793,372.331260681152,372.331260681152,372.331260681152,372.331260681152,382.750297546387,382.750297546387,382.750297546387,393.44514465332,393.44514465332,393.44514465332,393.44514465332,401.767288208008,401.767288208008,401.767288208008,401.767288208008,410.569648742676,410.569648742676,410.569648742676,410.569648742676,418.342765808105,418.342765808105,418.342765808105,418.342765808105,426.610366821289,426.610366821289,426.610366821289,426.610366821289,437.377510070801,437.377510070801,437.377510070801,437.377510070801,447.35334777832,447.35334777832,447.35334777832,447.35334777832,429.540260314941,429.540260314941,429.540260314941,429.540260314941,429.540260314941,365.817726135254,365.817726135254,365.817726135254,365.817726135254,365.817726135254,370.009170532227,370.009170532227,370.009170532227,370.009170532227,377.940101623535,377.940101623535,377.940101623535,377.940101623535,384.240440368652,384.240440368652,384.240440368652,384.240440368652,392.982063293457,392.982063293457,402.858390808105,402.858390808105,402.858390808105,402.858390808105,402.858390808105,402.858467102051,402.858467102051,402.858467102051,402.858467102051,402.858467102051,404.662475585938,404.662475585938,404.662475585938,404.662475585938,404.662475585938,404.662796020508,404.662796020508,404.662796020508,404.662796020508,404.662796020508,410.980606079102,410.980606079102,410.980606079102,410.980606079102,410.980606079102,410.980682373047,410.980682373047,410.980682373047,410.980682373047,410.980682373047,413.070610046387,413.070610046387,413.070610046387,413.070610046387,413.070610046387,413.666786193848,413.666786193848,413.666786193848,413.666786193848,413.666786193848,418.651153564453,418.651153564453,418.651153564453,418.651153564453,418.651153564453,425.335273742676,425.335273742676,425.335273742676,425.335273742676,425.335273742676,435.235061645508,435.235061645508,435.235061645508,435.235061645508,435.235061645508,440.752265930176,440.752265930176,440.752265930176,440.752265930176,440.752265930176,440.752265930176,440.932426452637,440.932426452637,440.932426452637,440.932426452637,440.932426452637,447.414291381836,447.414291381836,447.414291381836,447.414291381836,447.414291381836,440.82884979248,440.82884979248,440.82884979248,440.82884979248,440.82884979248,440.82884979248,375.351211547852,375.351211547852,375.351211547852,375.351211547852,375.351211547852,383.347595214844,383.347595214844,383.347595214844,383.347595214844,383.347595214844,392.864456176758,392.864456176758,392.864456176758,392.864456176758,392.864456176758,400.85791015625,400.85791015625,400.85791015625,400.85791015625,400.85791015625,430.292289733887,430.292289733887,430.292289733887,441.122863769531,441.122863769531,441.122863769531,445.89835357666,445.89835357666,445.89835357666,380.711791992188,380.711791992188,380.711791992188,403.752288818359,403.752288818359,403.752288818359,416.83194732666,416.83194732666,416.83194732666,426.775825500488,426.775825500488,426.775825500488,426.775825500488,426.775825500488,436.612121582031,436.612121582031,436.612121582031,436.612121582031,436.612121582031,444.632736206055,444.632736206055,444.632736206055,444.632736206055,444.632736206055,444.632736206055,452.87133026123,452.87133026123,452.87133026123,452.87133026123,452.87133026123,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,453.706413269043,341.186683654785,341.186683654785,341.186683654785,341.186683654785,341.186683654785,341.186683654785,273.519058227539,273.519058227539,273.519058227539,273.519058227539,273.519058227539,281.997581481934,281.997581481934,281.997581481934,281.997581481934,281.997581481934,281.997581481934,289.197746276855,289.197746276855,289.197746276855,289.197746276855,289.197746276855,296.549789428711,296.549789428711,296.549789428711,296.549789428711,296.549789428711,306.823455810547,306.823455810547,306.823455810547,306.823455810547,274.82633972168,274.82633972168,274.82633972168,274.82633972168,274.82633972168,281.132041931152,281.132041931152,281.132041931152,281.132041931152,291.280952453613,291.280952453613,291.280952453613,291.280952453613,291.280952453613,302.407402038574,302.407402038574,302.407402038574,302.407402038574,311.88550567627,311.88550567627,311.88550567627,311.88550567627,320.724784851074,320.724784851074,320.724784851074,320.724784851074,329.072280883789,329.072280883789,329.072280883789,329.072280883789,337.05687713623,337.05687713623,337.05687713623,337.05687713623,344.26732635498,344.26732635498,344.26732635498,344.26732635498,351.487037658691,351.487037658691,351.487037658691,351.487037658691,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,353.916458129883,310.072486877441,310.072486877441,310.072486877441,310.072486877441,310.072486877441,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,264.134124755859,267.935134887695,267.935134887695,267.935134887695,267.935134887695,277.565612792969,277.565612792969,277.565612792969,277.565612792969,286.867118835449,286.867118835449,286.867118835449,286.867118835449,295.590965270996,295.590965270996,295.590965270996,295.590965270996,303.529823303223,303.529823303223,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,312.613311767578,314.466026306152,314.466026306152,314.466026306152,314.466026306152,314.466026306152,316.790260314941,316.790260314941,316.790260314941,316.790260314941,316.790260314941,320.874496459961,320.874496459961,320.874496459961,320.874496459961,320.874496459961,322.569549560547,322.569549560547,322.569549560547,322.569549560547,322.569549560547,322.569549560547,322.968360900879,322.968360900879,322.968360900879,322.968360900879,322.968360900879,328.056274414062,328.056274414062,328.056274414062,328.056274414062,328.056274414062,328.056274414062,332.348075866699,332.348075866699,332.348075866699,332.348075866699,332.348075866699,337.638336181641,337.638336181641,337.638336181641,346.32593536377,346.32593536377,346.32593536377,346.50609588623,346.50609588623,346.50609588623,346.50609588623,346.50609588623,352.930671691895,352.930671691895,352.930671691895,352.930671691895,352.930671691895,365.98762512207,365.98762512207,365.98762512207,365.98762512207,365.98762512207,373.984382629395,373.984382629395,373.984382629395,373.984382629395,373.984382629395,381.978172302246,381.978172302246,381.978172302246,381.978172302246,381.978172302246,389.975578308105,389.975578308105,389.975578308105,389.975578308105,389.975578308105,398.088882446289,398.088882446289,398.088882446289,419.930725097656,419.930725097656,419.930725097656,430.52465057373,430.52465057373,430.52465057373,454.17643737793,454.17643737793,454.17643737793,406.353645324707,406.353645324707,406.353645324707,406.353645324707,310.700653076172,310.700653076172,310.700653076172,310.700653076172,310.700653076172,321.319892883301,321.319892883301,321.319892883301,321.319892883301,331.734298706055,331.734298706055,331.734298706055,339.786277770996,339.786277770996,339.786277770996,339.786277770996,339.786277770996,347.466453552246,347.466453552246,347.466453552246,347.466453552246,347.466453552246,354.061729431152,354.061729431152,354.061729431152,354.061729431152,354.061729431152,324.611511230469,324.611511230469,324.611511230469,324.611511230469,324.611511230469,324.611511230469,314.812675476074,314.812675476074,314.812675476074,314.812675476074,314.812675476074,321.574424743652,321.574424743652,321.574424743652,321.574424743652,321.574424743652,330.239151000977,330.239151000977,330.239151000977,330.239151000977,330.239151000977,327.798736572266,327.798736572266,327.798736572266,327.798736572266,327.798736572266,327.798736572266,311.657066345215,311.657066345215,311.657066345215,311.657066345215,322.974029541016,322.974029541016,322.974029541016,322.974029541016,322.974029541016,333.75373840332,333.75373840332,333.75373840332,333.75373840332,342.144309997559,342.144309997559,342.144309997559,342.144309997559,350.98356628418,350.98356628418,350.98356628418,350.98356628418,359.248161315918,359.248161315918,359.248161315918,359.248161315918,367.430702209473,367.430702209473,367.430702209473,367.430702209473,375.482231140137,375.482231140137,375.482231140137,375.482231140137,382.608665466309,382.608665466309,382.608665466309,382.608665466309,390.512626647949,390.512626647949,390.512626647949,390.512626647949,376.042594909668,376.042594909668,376.042594909668,376.042594909668,376.042594909668,307.245864868164,307.245864868164,307.245864868164,307.245864868164,316.54271697998,316.54271697998,316.54271697998,316.54271697998,325.121337890625,325.121337890625,325.121337890625,325.121337890625,335.141143798828,335.141143798828,335.141143798828,343.156150817871,343.156150817871,343.156150817871,343.156150817871,343.156150817871,343.156227111816,343.156227111816,343.156227111816,343.156227111816,343.156227111816,344.985565185547,344.985565185547,344.985565185547,344.985565185547,344.985565185547,351.262596130371,351.262596130371,351.262596130371,351.262596130371,351.262596130371,351.262672424316,351.262672424316,351.262672424316,351.262672424316,351.262672424316,353.311706542969,353.311706542969,353.311706542969,353.311706542969,353.311706542969,353.311889648438,353.311889648438,353.311889648438,353.311889648438,353.311889648438,358.604217529297,358.604217529297,358.604217529297,358.604217529297,358.604217529297,363.44832611084,363.44832611084,363.44832611084,363.44832611084,363.44832611084,371.444686889648,371.444686889648,371.444686889648,371.444686889648,371.444686889648,376.230224609375,376.230224609375,376.230224609375,376.410385131836,376.410385131836,376.410385131836,376.410385131836,376.410385131836,382.864471435547,382.864471435547,382.864471435547,382.864471435547,382.864471435547,395.702491760254,395.702491760254,395.702491760254,395.702491760254,395.702491760254,403.701698303223,403.701698303223,403.701698303223,403.701698303223,403.701698303223,411.69660949707,411.69660949707,411.69660949707,411.69660949707,411.69660949707,419.691192626953,419.691192626953,419.691192626953,419.691192626953,419.691192626953,429.569946289062,429.569946289062,429.569946289062,437.172821044922,437.172821044922,437.172821044922,437.172821044922,336.60807800293,336.60807800293,336.60807800293,355.676597595215,355.676597595215,355.676597595215,370.378715515137,370.378715515137,370.378715515137,370.378715515137,380.255470275879,380.255470275879,380.255470275879,380.255470275879,388.806732177734,388.806732177734,388.806732177734,388.806732177734,396.233451843262,396.233451843262,396.233451843262,396.233451843262,396.233451843262,405.380599975586,405.380599975586,405.380599975586,405.380599975586,405.380599975586,405.380599975586,413.31551361084,413.31551361084,413.31551361084,413.31551361084,413.31551361084,365.791358947754,365.791358947754,365.791358947754,365.791358947754,365.791358947754,375.562950134277,375.562950134277,375.562950134277,381.876564025879,381.876564025879,381.876564025879,388.253913879395,388.253913879395,388.253913879395,388.253913879395,388.253913879395,394.986274719238,394.986274719238,394.986274719238,394.986274719238,394.986274719238,394.986274719238,363.767082214355,363.767082214355,363.767082214355,363.767082214355,363.767082214355,363.767082214355,371.121513366699,371.121513366699,371.121513366699,379.961273193359,379.961273193359,379.961273193359,379.961273193359,379.961273193359,386.70337677002,386.70337677002,386.70337677002,398.280685424805,398.280685424805,398.280685424805,398.280685424805,407.19132232666,407.19132232666,407.19132232666,407.19132232666,414.104759216309,414.104759216309,414.104759216309,414.104759216309,424.113616943359,424.113616943359,424.113616943359,424.113616943359,407.106773376465,407.106773376465,407.106773376465,407.106773376465,407.106773376465,364.174018859863,364.174018859863,364.174018859863,364.174018859863,373.788665771484,373.788665771484,373.788665771484,373.788665771484,382.370185852051,382.370185852051,382.370185852051,382.370185852051,392.198867797852,392.198867797852,392.198867797852,392.198867797852,403.004806518555,403.004806518555,403.004806518555,403.004806518555,412.788162231445,412.788162231445,412.788162231445,412.788162231445,427.69694519043,427.69694519043,427.69694519043,427.69694519043,427.69694519043,427.69694519043,428.196617126465,428.196617126465,428.196617126465,428.196617126465,428.196617126465,430.028961181641,430.028961181641,430.028961181641,430.028961181641,430.028961181641,430.528610229492,430.528610229492,430.528610229492,430.528610229492,430.528610229492,436.291358947754,436.291358947754,436.291358947754,436.291358947754,436.291358947754,436.291435241699,436.291435241699,436.291435241699,436.291435241699,436.291435241699,438.329238891602,438.329238891602,438.329238891602,438.329238891602,438.329238891602,438.713737487793,438.713737487793,438.713737487793,438.713737487793,438.713737487793,443.026092529297,443.026092529297,443.026092529297,443.026092529297,443.026092529297,446.124542236328,446.124542236328,446.124542236328,446.124542236328,446.124542236328,452.708595275879,452.708595275879,452.708595275879,452.708595275879,452.708595275879,401.981834411621,401.981834411621,401.981834411621,401.981834411621,401.981834411621,401.981834411621,372.618827819824,372.618827819824,372.618827819824,372.618827819824,372.618827819824,372.618827819824,374.401168823242,374.401168823242,374.401168823242,374.401168823242,374.401168823242,380.164321899414,380.164321899414,380.164321899414,380.164321899414,380.164321899414,392.027160644531,392.027160644531,392.027160644531,392.027160644531,392.027160644531,400.031394958496,400.031394958496,400.031394958496,400.031394958496,400.031394958496,408.029876708984,408.029876708984,408.029876708984,408.029876708984,408.029876708984,416.027450561523,416.027450561523,416.027450561523,416.027450561523,416.027450561523,426.070693969727,426.070693969727,426.070693969727,448.011627197266,448.011627197266,448.011627197266,368.740028381348,368.740028381348,368.740028381348,368.740028381348,324.358116149902,324.358116149902,324.358116149902,328.445434570312,328.445434570312,328.445434570312,328.445434570312,328.445434570312,328.445434570312,328.445434570312,353.580688476562,353.580688476562,353.580688476562,365.820739746094,365.820739746094,365.820739746094,365.820739746094,365.820739746094,374.452537536621,374.452537536621,374.452537536621,374.452537536621,374.452537536621,387.233222961426,387.233222961426,387.233222961426,387.233222961426,387.233222961426,396.522476196289,396.522476196289,396.522476196289,396.522476196289,396.522476196289,404.160095214844,404.160095214844,404.160095214844,404.160095214844,404.160095214844,404.160095214844,404.160095214844,356.590209960938,356.590209960938,356.590209960938,364.953674316406,364.953674316406,364.953674316406,364.953674316406,364.953674316406,364.953674316406,371.392189025879,371.392189025879,371.392189025879,371.392189025879,371.392189025879,378.445449829102,378.445449829102,378.445449829102,378.445449829102,378.445449829102,376.407318115234,376.407318115234,376.407318115234,376.407318115234,357.889457702637,357.889457702637,357.889457702637,357.889457702637,367.529556274414,367.529556274414,367.529556274414,378.395950317383,378.395950317383,378.395950317383,378.395950317383,386.875625610352,386.875625610352,386.875625610352,386.875625610352,386.875625610352,395.812438964844,395.812438964844,395.812438964844,395.812438964844,404.936943054199,404.936943054199,404.936943054199,404.936943054199,416.325004577637,416.325004577637,416.325004577637,416.325004577637,423.519638061523,423.519638061523,423.519638061523,423.519638061523,431.759674072266,431.759674072266,431.759674072266,431.759674072266,438.421722412109,438.421722412109,438.421722412109,438.421722412109,390.105850219727,390.105850219727,390.105850219727,390.105850219727,390.105850219727,354.817649841309,354.817649841309,354.817649841309,354.817649841309,367.983306884766,367.983306884766,367.983306884766,367.983306884766,375.049835205078,375.049835205078,375.049835205078,375.049835205078,390.164779663086,390.164779663086,390.164779663086,390.164779663086,390.164779663086,390.164779663086,390.518882751465,390.518882751465,390.518882751465,390.518882751465,390.518882751465,390.51895904541,390.51895904541,390.51895904541,390.51895904541,390.51895904541,392.434600830078,392.434600830078,392.434600830078,392.434600830078,392.434600830078,392.965545654297,392.965545654297,392.965545654297,392.965545654297,392.965545654297,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,398.946533203125,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,401.027931213379,402.806701660156,402.806701660156,402.806701660156,407.114364624023,407.114364624023,407.114364624023,407.114364624023,407.114364624023,413.475410461426,413.475410461426,413.475410461426,413.475410461426,413.475410461426,422.152145385742,422.152145385742,422.152145385742,422.152145385742,422.152145385742,428.585746765137,428.585746765137,428.585746765137,428.585746765137,428.585746765137,428.585746765137,430.368087768555,430.368087768555,430.368087768555,430.368087768555,430.368087768555,436.312515258789,436.312515258789,436.312515258789,436.312515258789,436.312515258789,448.334495544434,448.334495544434,448.334495544434,448.334495544434,448.334495544434,446.371315002441,446.371315002441,446.371315002441,446.371315002441,446.371315002441,446.371315002441,364.457084655762,364.457084655762,364.457084655762,364.457084655762,364.457084655762,372.452949523926,372.452949523926,372.452949523926,372.452949523926,372.452949523926,380.451271057129,380.451271057129,380.451271057129,380.451271057129,380.451271057129,411.01155090332,411.01155090332,411.01155090332,421.773368835449,421.773368835449,421.773368835449,425.781875610352,425.781875610352,425.781875610352,425.781875610352,425.781875610352,425.781875610352,425.781875610352,445.748832702637,445.748832702637,445.748832702637,415.786758422852,415.786758422852,415.786758422852,415.786758422852,346.901779174805,346.901779174805,346.901779174805,346.901779174805,346.901779174805,346.901779174805,346.901779174805,346.901779174805,360.898979187012,360.898979187012,360.898979187012,360.898979187012,370.368255615234,370.368255615234,370.368255615234,377.404388427734,377.404388427734,377.404388427734,377.404388427734,377.404388427734,384.937622070312,384.937622070312,384.937622070312,384.937622070312,384.937622070312,391.977607727051,391.977607727051,391.977607727051,391.977607727051,352.663970947266,352.663970947266,352.663970947266,360.388290405273,360.388290405273,360.388290405273,360.388290405273,360.388290405273,371.791000366211,371.791000366211,371.791000366211,371.791000366211,371.791000366211,379.992782592773,379.992782592773,379.992782592773,379.992782592773,379.992782592773,374.431228637695,374.431228637695,374.431228637695,374.431228637695,374.431228637695,374.431228637695,374.431228637695,356.126976013184,356.126976013184,356.126976013184,356.126976013184,368.544990539551,368.544990539551,368.544990539551,368.544990539551,368.544990539551,379.983985900879,379.983985900879,379.983985900879,379.983985900879,387.662384033203,387.662384033203,387.662384033203,387.662384033203,395.862121582031,395.862121582031,395.862121582031,395.862121582031,404.380661010742,404.380661010742,404.380661010742,404.380661010742,416.165145874023,416.165145874023,416.165145874023,416.165145874023,423.325294494629,423.325294494629,423.325294494629,423.325294494629,434.149833679199,434.149833679199,434.149833679199,434.149833679199,431.728958129883,431.728958129883,431.728958129883,431.728958129883,431.728958129883,357.428825378418,357.428825378418,357.428825378418,357.428825378418,357.428825378418,354.876327514648,354.876327514648,354.876327514648,354.876327514648,362.663696289062,362.663696289062,362.663696289062,362.663696289062,370.856582641602,370.856582641602,370.856582641602,370.856582641602,383.631652832031,383.631652832031,383.631652832031,383.631652832031,383.631652832031,387.377822875977,387.377822875977,387.377822875977,387.377822875977,387.377822875977,389.23201751709,389.23201751709,389.23201751709,389.23201751709,389.23201751709,389.23233795166,389.23233795166,389.23233795166,389.23233795166,389.23233795166,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,395.556854248047,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.596397399902,397.981254577637,397.981254577637,397.981254577637,397.981254577637,397.981254577637,402.97029876709,402.97029876709,402.97029876709,402.97029876709,402.97029876709,406.986671447754,406.986671447754,406.986671447754,406.986671447754,406.986671447754,412.153335571289,412.153335571289,412.153335571289,412.153335571289,412.153335571289,422.381996154785,422.381996154785,422.381996154785,423.492881774902,423.492881774902,423.492881774902,423.673042297363,423.673042297363,423.673042297363,423.673042297363,423.673042297363,430.145042419434,430.145042419434,430.145042419434,430.145042419434,430.145042419434,438.370742797852,438.370742797852,438.370742797852,446.290115356445,446.290115356445,446.290115356445,446.290115356445,446.290115356445,454.285377502441,454.285377502441,454.285377502441,454.285377502441,454.285377502441,364.913688659668,364.913688659668,364.913688659668,364.913688659668,364.913688659668,372.910720825195,372.910720825195,372.910720825195,372.910720825195,372.910720825195,402.771965026855,402.771965026855,402.771965026855,413.343811035156,413.343811035156,413.343811035156,436.957565307617,436.957565307617,436.957565307617,447.116554260254,447.116554260254,447.116554260254,447.116554260254,453.412590026855,453.412590026855,453.412590026855,453.412590026855,453.412590026855,453.412590026855,423.391845703125,423.391845703125,423.391845703125,436.882675170898,436.882675170898,436.882675170898,436.882675170898,436.882675170898,446.056701660156,446.056701660156,446.056701660156,452.553993225098,452.553993225098,452.553993225098,395.635009765625,395.635009765625,395.635009765625,395.635009765625,384.162567138672,384.162567138672,384.162567138672,384.162567138672,384.162567138672,394.896690368652,394.896690368652,394.896690368652,394.896690368652,394.896690368652,401.766235351562,401.766235351562,401.766235351562,401.766235351562,401.766235351562,409.676620483398,409.676620483398,409.676620483398,409.676620483398,409.676620483398,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,415.461181640625,366.836463928223,366.836463928223,366.836463928223,366.836463928223,269.595733642578,269.595733642578,269.595733642578,269.595733642578,272.314208984375,272.314208984375,272.314208984375,272.314208984375,272.314208984375,283.176254272461,283.176254272461,283.176254272461,283.176254272461,283.176254272461,291.778884887695,291.778884887695,291.778884887695,291.778884887695,302.632476806641,302.632476806641,302.632476806641,302.632476806641,302.632476806641,302.632476806641,309.622871398926,309.622871398926,309.622871398926,309.622871398926,316.513221740723,316.513221740723,316.513221740723,316.513221740723,323.094268798828,323.094268798828,323.094268798828,323.094268798828,331.841873168945,331.841873168945,331.841873168945,331.841873168945,339.676086425781,339.676086425781,339.676086425781,339.676086425781,347.949417114258,347.949417114258,347.949417114258,347.949417114258,354.878105163574,354.878105163574,354.878105163574,354.878105163574,362.873832702637,362.873832702637,362.873832702637,362.873832702637,369.420539855957,369.420539855957,369.420539855957,369.420539855957,353.332389831543,353.332389831543,353.332389831543,353.332389831543,353.332389831543,295.789115905762,295.789115905762,295.789115905762,295.789115905762,295.789115905762,275.868698120117,275.868698120117,275.868698120117,275.868698120117,286.304656982422,286.304656982422,293.86515045166,293.86515045166,293.86515045166,293.86515045166,293.86515045166,293.865226745605,293.865226745605,293.865226745605,293.865226745605,293.865226745605,295.701278686523,295.701278686523,295.701278686523,295.701278686523,295.701278686523,301.921279907227,301.921279907227,301.921279907227,301.921279907227,301.921279907227,301.921356201172,301.921356201172,301.921356201172,301.921356201172,301.921356201172,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,303.924751281738,309.102973937988,309.102973937988,309.102973937988,309.102973937988,309.102973937988,311.760833740234,311.760833740234,311.760833740234,311.760833740234,311.760833740234,318.362007141113,318.362007141113,318.362007141113,318.362007141113,318.362007141113,330.508087158203,330.508087158203,330.508087158203,330.508087158203,330.508087158203,330.508087158203,332.290428161621,332.290428161621,332.290428161621,332.290428161621,332.290428161621,337.161605834961,337.161605834961,337.161605834961,337.161605834961,337.161605834961,349.946998596191,349.946998596191,349.946998596191,349.946998596191,349.946998596191,357.943756103516,357.943756103516,357.943756103516,357.943756103516,357.943756103516,365.938293457031,365.938293457031,365.938293457031,365.938293457031,365.938293457031,373.937568664551,373.937568664551,373.937568664551,373.937568664551,373.937568664551,382.318511962891,382.318511962891,382.318511962891,414.862869262695,414.862869262695,414.862869262695,414.862899780273,414.862899780273,414.862899780273,438.573905944824,438.573905944824,438.573905944824,448.774787902832,448.774787902832,448.774787902832,448.774787902832,420.484588623047,420.484588623047,420.484588623047,420.484588623047,420.484588623047,420.484588623047,316.215103149414,316.215103149414,316.215103149414,316.215103149414,316.215103149414,326.5380859375,326.5380859375,326.5380859375,326.5380859375,326.5380859375,333.468818664551,333.468818664551,333.468818664551,333.468818664551,333.468818664551,333.468818664551,343.042137145996,343.042137145996,343.042137145996,343.042137145996,343.042137145996,349.505790710449,349.505790710449,349.505790710449,349.505790710449,349.505790710449,349.505790710449,309.663291931152,309.663291931152,309.663291931152,309.663291931152,309.663291931152,320.424392700195,320.424392700195,320.424392700195,320.424392700195,320.424392700195,327.262062072754,327.262062072754,327.262062072754,327.262062072754,327.262062072754,339.999534606934,339.999534606934,339.999534606934,339.999534606934,339.999534606934,317.663902282715,317.663902282715,317.663902282715,317.663902282715,317.663902282715,317.663902282715,317.663902282715,314.006317138672,314.006317138672,314.006317138672,314.006317138672,314.006317138672,328.065017700195,328.065017700195,328.065017700195,339.224952697754,339.224952697754,339.224952697754,339.224952697754,346.865539550781,346.865539550781,346.865539550781,346.865539550781,353.474922180176,353.474922180176,353.474922180176,353.474922180176,360.508361816406,360.508361816406,360.508361816406,360.508361816406,367.336624145508,367.336624145508,367.336624145508,367.336624145508,380.526336669922,380.526336669922,380.526336669922,380.526336669922,387.56583404541,387.56583404541,387.56583404541,387.56583404541,386.621246337891,386.621246337891,386.621246337891,386.621246337891,386.621246337891,316.059265136719,316.059265136719,316.059265136719,316.059265136719,316.059265136719,318.208396911621,318.208396911621,318.208396911621,318.208396911621,324.725601196289,324.725601196289,324.725601196289,324.725601196289,332.551223754883,332.551223754883,332.551223754883,332.551223754883,341.847007751465,341.847007751465,341.847007751465,341.847007751465,341.847007751465,353.259895324707,353.259895324707,353.259895324707,353.259895324707,353.259895324707,353.259971618652,353.259971618652,353.259971618652,353.259971618652,353.259971618652,355.112991333008,355.112991333008,355.112991333008,355.112991333008,355.112991333008,355.11328125,355.11328125,355.11328125,355.11328125,355.11328125,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,361.366012573242,363.370338439941,363.370338439941,363.370338439941,363.370338439941,363.370338439941,363.370628356934,363.370628356934,363.370628356934,363.370628356934,363.370628356934,368.308006286621,368.308006286621,368.308006286621,368.308006286621,371.219596862793,371.219596862793,371.219596862793,371.219596862793,371.219596862793,377.735618591309,377.735618591309,377.735618591309,377.735618591309,377.735618591309,393.15788269043,393.15788269043,393.15788269043,393.15788269043,393.15788269043,393.767120361328,393.767120361328,393.767120361328,393.947280883789,393.947280883789,393.947280883789,393.947280883789,393.947280883789,400.44694519043,400.44694519043,400.44694519043,400.44694519043,400.44694519043,410.35627746582,410.35627746582,410.35627746582,410.35627746582,410.35627746582,416.830520629883,416.830520629883,416.830520629883,416.830520629883,416.830520629883,424.82836151123,424.82836151123,424.82836151123,424.82836151123,434.352828979492,434.352828979492,434.352828979492,434.352828979492,434.352828979492,444.626861572266,444.626861572266,444.626861572266,444.626861572266,444.626861572266,437.560913085938,437.560913085938,437.560913085938,437.560913085938,437.560913085938,340.614036560059,340.614036560059,340.614036560059,351.705635070801,351.705635070801,351.705635070801,355.822937011719,355.822937011719,355.822937011719,355.822937011719,355.822937011719,355.822937011719,355.822937011719,377.254104614258,377.254104614258,377.254104614258,395.124435424805,395.124435424805,395.124435424805,404.213722229004,404.213722229004,404.213722229004,404.213722229004,414.029571533203,414.029571533203,414.029571533203,414.029571533203,414.029571533203,421.60684967041,421.60684967041,421.60684967041,428.00617980957,428.00617980957,428.00617980957,428.00617980957,428.00617980957,428.00617980957,374.657737731934,374.657737731934,374.657737731934,382.982055664062,382.982055664062,382.982055664062,382.982055664062,382.982055664062,390.032829284668,390.032829284668,390.032829284668,390.032829284668,390.032829284668,396.745574951172,396.745574951172,396.745574951172,396.745574951172,396.745574951172,405.677268981934,405.677268981934,405.677268981934,405.677268981934,405.677268981934,392.396499633789,392.396499633789,392.396499633789,392.396499633789,346.418594360352,346.418594360352,346.418594360352,346.418594360352,349.813003540039,349.813003540039,349.813003540039,349.813003540039,349.813003540039,361.671249389648,361.671249389648,361.671249389648,361.671249389648,361.671249389648,371.01830291748,371.01830291748,371.01830291748,371.01830291748,371.01830291748,376.776481628418,376.776481628418,376.776481628418,376.776481628418,387.937973022461,387.937973022461,387.937973022461,387.937973022461,394.815528869629,394.815528869629,394.815528869629,394.815528869629,395.223014831543,395.223014831543,395.223014831543,395.223014831543,395.223014831543,353.282104492188,353.282104492188,353.282104492188,353.282104492188,360.693367004395,360.693367004395,360.693367004395,360.693367004395,367.380195617676,367.380195617676,367.380195617676,367.380195617676,375.163047790527,375.163047790527,375.163047790527,375.163047790527,382.142906188965,382.142906188965,382.142906188965,382.142906188965,389.986068725586,389.986068725586,389.986068725586,389.986068725586,396.790870666504,396.790870666504,396.790870666504,396.790870666504,404.424240112305,404.424240112305,404.424240112305,404.424240112305,413.293037414551,413.293037414551,413.293037414551,413.293037414551,421.989860534668,421.989860534668,421.989860534668,421.989860534668,421.989860534668,421.989860534668,433.970596313477,433.970596313477,433.970596313477,433.970596313477,433.970596313477,433.970672607422,433.970672607422,433.970672607422,433.970672607422,433.970672607422,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,435.874717712402,442.363716125488,442.363716125488,442.363716125488,442.363716125488,442.363716125488,442.363792419434,442.363792419434,442.363792419434,442.363792419434,442.363792419434,444.434371948242,444.434371948242,444.434371948242,444.434371948242,444.434371948242,445.219589233398,445.219589233398,445.219589233398,445.219589233398,449.453033447266,449.453033447266,449.453033447266,449.453033447266,449.453033447266,452.358154296875,452.358154296875,452.358154296875,452.358154296875,452.358154296875,399.916091918945,399.916091918945,399.916091918945,399.916091918945,399.916091918945,399.916091918945,352.337142944336,352.337142944336,352.337142944336,352.337142944336,352.337142944336,360.673530578613,360.673530578613,360.673530578613,360.673530578613,360.673530578613,369.986663818359,369.986663818359,369.986663818359,369.986663818359,369.986663818359,369.986663818359,371.769004821777,371.769004821777,371.769004821777,371.769004821777,371.769004821777,380.016059875488,380.016059875488,380.016059875488,380.016059875488,380.016059875488,389.741088867188,389.741088867188,389.741088867188,389.741088867188,389.741088867188,397.73747253418,397.73747253418,397.73747253418,397.73747253418,397.73747253418,405.730514526367,405.730514526367,405.730514526367,405.730514526367,405.730514526367,413.732200622559,413.732200622559,413.732200622559,413.732200622559,413.732200622559,429.807106018066,429.807106018066,429.807106018066,429.807106018066,386.431198120117,386.431198120117,386.431198120117,386.431198120117,381.534446716309,381.534446716309,381.534446716309,405.097969055176,405.097969055176,405.097969055176,424.406478881836,424.406478881836,424.406478881836,424.406478881836,424.406478881836,432.58277130127,432.58277130127,432.58277130127,432.58277130127,445.671089172363,445.671089172363,445.671089172363,445.671089172363,445.671089172363,452.550430297852,452.550430297852,452.550430297852,452.550430297852,452.550430297852,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,454.93824005127,326.983016967773,326.983016967773,326.983016967773,326.983016967773,326.983016967773,326.983016967773,274.772705078125,274.772705078125,274.772705078125,274.772705078125,274.772705078125,285.790855407715,285.790855407715,285.790855407715,285.790855407715,285.790855407715,295.231910705566,295.231910705566,295.231910705566,295.231910705566,295.231910705566,295.231910705566,302.108833312988,302.108833312988,302.108833312988,302.108833312988,302.108833312988,307.004440307617,307.004440307617,307.004440307617,307.004440307617,307.004440307617,307.004440307617,280.973472595215,280.973472595215,280.973472595215,280.973472595215,280.973472595215,285.865295410156,285.865295410156,285.865295410156,285.865295410156,304.957862854004,304.957862854004,304.957862854004,304.957862854004,313.344108581543,313.344108581543,313.344108581543,313.344108581543,313.344108581543,321.4619140625,321.4619140625,321.4619140625,321.4619140625,330.654266357422,330.654266357422,330.654266357422,330.654266357422,339.996444702148,339.996444702148,339.996444702148,339.996444702148,298.499938964844,298.499938964844,298.499938964844,298.499938964844,298.499938964844,280.349517822266,280.349517822266,280.349517822266,280.349517822266,287.290557861328,287.290557861328,287.290557861328,287.290557861328,297.246597290039,297.246597290039,297.246597290039,297.246597290039,305.038436889648,305.038436889648,305.038436889648,305.038436889648,312.286949157715,312.286949157715,312.286949157715,312.286949157715,319.83544921875,319.83544921875,319.83544921875,319.83544921875,327.745140075684,327.745140075684,327.745140075684,327.745140075684,327.745140075684,327.745140075684,339.401664733887,339.401664733887,339.401664733887,339.401664733887,339.401664733887,339.401741027832,339.401741027832,339.401741027832,339.401741027832,339.401741027832,341.2412109375,341.2412109375,341.2412109375,341.2412109375,341.2412109375,341.241500854492,341.241500854492,341.241500854492,341.241500854492,341.241500854492,347.561668395996,347.561668395996,347.561668395996,347.561668395996,347.561668395996,347.561744689941,347.561744689941,347.561744689941,347.561744689941,347.561744689941,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,349.611755371094,353.840919494629,353.840919494629,353.840919494629,353.840919494629,355.029747009277,355.029747009277,355.029747009277,355.029747009277,355.029747009277,363.989715576172,363.989715576172,363.989715576172,363.989715576172,363.989715576172,374.440162658691,374.440162658691,374.865325927734,374.865325927734,374.865325927734,376.647666931152,376.647666931152,376.647666931152,376.647666931152,376.647666931152,382.588844299316,382.588844299316,382.588844299316,382.588844299316,382.588844299316,394.432350158691,394.432350158691,394.432350158691,394.432350158691,394.432350158691,402.427444458008,402.427444458008,402.427444458008,402.427444458008,402.427444458008,410.431533813477,410.431533813477,410.431533813477,410.431533813477,410.431533813477,418.429107666016,418.429107666016,418.429107666016,418.429107666016,418.429107666016,427.335014343262,427.335014343262,427.335014343262,449.688026428223,449.688026428223,449.688026428223,401.687942504883,401.687942504883,401.687942504883,401.687942504883,305.135833740234,305.135833740234,305.135833740234,305.571685791016,305.571685791016,305.571685791016,329.358749389648,329.358749389648,329.358749389648,343.929168701172,343.929168701172,343.929168701172,343.929168701172,343.929168701172,352.250579833984,352.250579833984,352.250579833984,352.250579833984,363.35139465332,363.35139465332,363.35139465332,363.35139465332,363.35139465332,374.401443481445,374.401443481445,374.401443481445,374.401443481445,374.401443481445,381.199928283691,381.199928283691,381.199928283691,337.506660461426,337.506660461426,337.506660461426,337.506660461426,337.506660461426,337.506660461426,335.950660705566,335.950660705566,335.950660705566,335.950660705566,335.950660705566,342.986740112305,342.986740112305,342.986740112305,342.986740112305,342.986740112305,354.92333984375,354.92333984375,354.92333984375,354.92333984375,354.92333984375,362.174873352051,362.174873352051,362.174873352051,362.174873352051,362.174873352051,335.607200622559,335.607200622559,335.607200622559,335.607200622559,335.607200622559,335.607200622559,339.498031616211,339.498031616211,339.498031616211,339.498031616211,339.498031616211,350.019660949707,350.019660949707,350.019660949707,350.019660949707,350.019660949707,362.341117858887,362.341117858887,362.341117858887,362.341117858887,372.763633728027,372.763633728027,372.763633728027,372.763633728027,381.86905670166,381.86905670166,381.86905670166,381.86905670166,389.249519348145,389.249519348145,389.249519348145,389.249519348145,397.677207946777,397.677207946777,397.677207946777,397.677207946777,340.010437011719,340.010437011719,340.010437011719,340.010437011719,340.010437011719,339.428176879883,339.428176879883,339.428176879883,339.428176879883,347.826736450195,347.826736450195,347.826736450195,347.826736450195,355.481956481934,355.481956481934,355.481956481934,355.481956481934,363.325904846191,363.325904846191,363.325904846191,363.325904846191,372.507545471191,372.507545471191,372.507545471191,372.507545471191,382.210876464844,382.210876464844,382.210876464844,382.210876464844,395.053642272949,395.053642272949,395.053642272949,395.053642272949,399.296951293945,399.296951293945,399.296951293945,399.296951293945,399.296951293945,401.16089630127,401.16089630127,401.16089630127,401.16089630127,401.16089630127,401.672393798828,401.672393798828,401.672393798828,401.672393798828,401.672393798828,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,407.56177520752,409.23860168457,409.23860168457,409.23860168457,409.23860168457,409.23860168457,409.23860168457,409.631530761719,409.631530761719,409.631530761719,409.631530761719,409.631530761719,409.631820678711,409.631820678711,409.631820678711,409.631820678711,409.631820678711,414.601455688477,414.601455688477,414.601455688477,414.601455688477,414.601455688477,416.517158508301,416.517158508301,416.517158508301,416.517158508301,416.517158508301,424.755012512207,424.755012512207,424.755012512207,424.755012512207,424.755012512207,438.674751281738,438.674751281738,438.674751281738,439.78685760498,439.78685760498,439.78685760498,439.964431762695,439.964431762695,439.964431762695,446.397842407227,446.397842407227,446.397842407227,446.397842407227,446.397842407227,452.746856689453,452.746856689453,452.746856689453,452.746856689453,452.746856689453,410.556579589844,410.556579589844,410.556579589844,410.556579589844,340.133926391602,340.133926391602,340.133926391602,340.133926391602,340.133926391602,349.652420043945,349.652420043945,349.652420043945,349.652420043945,349.652420043945,357.647857666016,357.647857666016,357.647857666016,357.647857666016,357.647857666016,365.649169921875,365.649169921875,365.649169921875,365.649169921875,365.649169921875,395.058082580566,395.058082580566,395.058082580566,405.919746398926,405.919746398926,405.919746398926,421.884887695312,421.884887695312,432.410652160645,432.410652160645,432.410652160645,446.459129333496,446.459129333496,446.459129333496,446.459129333496,446.459129333496,454.708297729492,454.708297729492,454.708297729492,454.708297729492,454.708297729492,454.708297729492,395.473098754883,395.473098754883,395.473098754883,402.261848449707,402.261848449707,402.261848449707,409.440010070801,409.440010070801,409.440010070801,409.440010070801,409.440010070801,420.409233093262,420.409233093262,420.409233093262,420.409233093262,420.409233093262,426.024841308594,426.024841308594,426.024841308594,426.024841308594,426.024841308594,426.024841308594,329.568984985352,329.568984985352,329.568984985352,329.568984985352,329.568984985352,329.568984985352,304.030799865723,304.030799865723,304.030799865723,304.030799865723,304.030799865723,304.030799865723,310.68238067627,310.68238067627,310.68238067627,317.11848449707,317.11848449707,317.11848449707,317.11848449707,317.11848449707,327.203575134277,327.203575134277,327.203575134277,327.203575134277,334.340065002441,334.340065002441,334.340065002441,334.340065002441,334.340065002441,334.340065002441,340.609588623047,340.609588623047,340.609588623047,340.609588623047,317.096153259277,317.096153259277,317.096153259277,317.096153259277,317.096153259277,327.506202697754,327.506202697754,327.506202697754,327.506202697754,337.277862548828,337.277862548828,337.277862548828,337.277862548828,337.277862548828,343.855903625488,343.855903625488,343.855903625488,343.855903625488,351.38697052002,351.38697052002,351.38697052002,351.38697052002,358.419059753418,358.419059753418,358.419059753418,358.419059753418,366.36376953125,366.36376953125,366.36376953125,366.36376953125,373.014038085938,373.014038085938,373.014038085938,373.014038085938,379.916473388672,379.916473388672,379.916473388672,379.916473388672,388.080215454102,388.080215454102,388.080215454102,388.080215454102,395.106712341309,395.106712341309,395.106712341309,395.106712341309,403.230903625488,403.230903625488,403.230903625488,403.230903625488,412.47925567627,412.47925567627,412.47925567627,412.47925567627,420.216613769531,420.216613769531,420.216613769531,420.216613769531,420.216613769531,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,431.941619873047,433.782127380371,433.782127380371,433.782127380371,433.782127380371,433.782127380371,439.754486083984,439.754486083984,439.754486083984,439.754486083984,439.754486083984,439.754486083984,440.147483825684,440.147483825684,440.147483825684,440.147483825684,440.147483825684,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,442.218780517578,447.195556640625,447.195556640625,447.195556640625,447.195556640625,447.195556640625,449.596649169922,449.596649169922,449.596649169922,449.596649169922,449.596649169922,441.44261932373,441.44261932373,441.44261932373,441.44261932373,441.44261932373,377.60228729248,377.60228729248,377.60228729248,377.60228729248,377.60228729248,310.135917663574,310.135917663574,310.135917663574,310.135917663574,310.135917663574,323.995613098145,323.995613098145,323.995613098145,323.995613098145,323.995613098145,323.995613098145,324.175773620605,324.175773620605,324.175773620605,324.175773620605,324.175773620605,330.667182922363,330.667182922363,330.667182922363,330.667182922363,330.667182922363,343.389106750488,343.389106750488,343.389106750488,343.389106750488,343.389106750488,351.393920898438,351.393920898438,351.393920898438,351.393920898438,351.393920898438,359.387336730957,359.387336730957,359.387336730957,359.387336730957,359.387336730957,367.384742736816,367.384742736816,367.384742736816,367.384742736816,367.384742736816,374.316932678223,374.316932678223,374.316932678223,374.316932678223,374.316932678223,398.48429107666,398.48429107666,398.48429107666,409.299705505371,409.299705505371,409.299705505371,425.197883605957,425.197883605957,434.29515838623,434.29515838623,434.29515838623,451.51099395752,451.51099395752,451.51099395752,451.51099395752,451.51099395752,364.341415405273,364.341415405273,364.341415405273,364.341415405273,364.341415405273,352.816848754883,352.816848754883,352.816848754883,361.625602722168,361.625602722168,361.625602722168,361.625602722168,361.625602722168,369.24942779541,369.24942779541,369.24942779541,369.24942779541,369.24942779541,369.24942779541,376.011199951172,376.011199951172,376.011199951172,382.692184448242,382.692184448242,382.692184448242,382.692184448242,382.692184448242,346.293403625488,346.293403625488,346.293403625488,346.293403625488,346.293403625488,352.927864074707,352.927864074707,352.927864074707,352.927864074707,352.927864074707,360.135375976562,360.135375976562,360.135375976562,360.135375976562,360.135375976562,367.805755615234,367.805755615234,367.805755615234,367.805755615234,367.805755615234,374.557746887207,374.557746887207,374.557746887207,374.557746887207,374.557746887207,367.761352539062,367.761352539062,367.761352539062,367.761352539062,347.256309509277,347.256309509277,347.256309509277,347.256309509277,347.256309509277,357.924530029297,357.924530029297,357.924530029297,357.924530029297,357.924530029297,369.253509521484,369.253509521484,369.253509521484,369.253509521484,378.900001525879,378.900001525879,378.900001525879,378.900001525879,386.355758666992,386.355758666992,386.355758666992,386.355758666992,393.450416564941,393.450416564941,393.450416564941,393.450416564941,401.216423034668,401.216423034668,401.216423034668,401.216423034668,408.895095825195,408.895095825195,408.895095825195,408.895095825195,416.515510559082,416.515510559082,416.515510559082,416.515510559082,427.17440032959,427.17440032959,427.17440032959,427.17440032959,434.398452758789,434.398452758789,434.398452758789,434.398452758789,441.553558349609,441.553558349609,441.553558349609,441.553558349609,448.574577331543,448.574577331543,448.574577331543,448.574577331543,448.574577331543,375.532852172852,375.532852172852,375.532852172852,375.532852172852,375.532852172852,342.731758117676,342.731758117676,342.731758117676,342.731758117676,350.460037231445,350.460037231445,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,361.831298828125,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,363.667549133301,367.674591064453,367.674591064453,367.674591064453,367.674591064453,367.674591064453,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,370.001182556152,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,372.058853149414,377.014129638672,377.014129638672,377.014129638672,377.014129638672,377.014129638672,378.952362060547,378.952362060547,378.952362060547,378.952362060547,378.952362060547,387.129737854004,387.129737854004,387.129737854004,387.129737854004,387.129737854004,401.681709289551,401.681709289551,401.681709289551,401.681709289551,401.681709289551,405.117233276367,405.117233276367,405.117233276367,405.117233276367,405.117233276367,405.117233276367,411.743560791016,411.743560791016,411.743560791016,411.743560791016,411.743560791016,417.129959106445,417.129959106445,417.129959106445,417.129959106445,417.129959106445,426.204490661621,426.204490661621,426.204490661621,426.204490661621,426.204490661621,434.254379272461,434.254379272461,434.254379272461,434.254379272461,434.254379272461,443.807861328125,443.807861328125,443.807861328125,443.807861328125,443.807861328125,450.288871765137,450.288871765137,450.288871765137,450.288871765137,450.288871765137,450.288871765137,364.84992980957,364.84992980957,364.84992980957,364.84992980957,391.530296325684,391.530296325684,391.530296325684,391.530296325684,391.530296325684,391.530296325684,416.646621704102,416.646621704102,416.646621704102,427.41081237793,427.41081237793,427.41081237793,427.41081237793,435.622169494629,435.622169494629,435.622169494629,435.622169494629,435.622169494629,444.496940612793,444.496940612793,444.496940612793,444.496940612793,444.496940612793,454.44962310791,454.44962310791,454.44962310791,454.44962310791,454.44962310791,454.44962310791,414.300354003906,414.300354003906,414.300354003906,414.300354003906,420.102119445801,420.102119445801,420.102119445801,420.102119445801,420.102119445801,425.739814758301,425.739814758301,425.739814758301,425.739814758301,425.739814758301,431.556259155273,431.556259155273,431.556259155273,431.556259155273,431.556259155273,441.389175415039,441.389175415039,441.389175415039,441.389175415039,441.389175415039,403.245101928711,403.245101928711,403.245101928711,403.245101928711,403.245101928711,403.245101928711,403.245101928711,375.872032165527,375.872032165527,375.872032165527,375.872032165527,375.872032165527,375.872032165527,375.872032165527,380.29500579834,380.29500579834,380.29500579834,380.29500579834,380.29500579834,386.466598510742,386.466598510742,386.466598510742,386.466598510742,386.466598510742,395.537788391113,395.537788391113,395.537788391113,395.537788391113,395.537788391113,402.76383972168,402.76383972168,402.76383972168,402.76383972168,413.553596496582,413.553596496582,413.553596496582,413.553596496582,413.553596496582,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,422.603591918945,388.856941223145,388.856941223145,388.856941223145,388.856941223145,388.856941223145,388.856941223145,388.856941223145,277.511154174805,277.511154174805,277.511154174805,277.511154174805,277.511154174805,277.511154174805,277.511154174805,266.150733947754,266.150733947754,266.150733947754,266.150733947754,275.657981872559,275.657981872559,275.657981872559,275.657981872559,284.892013549805,284.892013549805,284.892013549805,284.892013549805,292.221855163574,292.221855163574,292.221855163574,292.221855163574,302.185333251953,302.185333251953,302.185333251953,302.185333251953,311.174903869629,311.174903869629,311.174903869629,311.174903869629,319.904472351074,319.904472351074,319.904472351074,319.904472351074,326.902351379395,326.902351379395,326.902351379395,326.902351379395,335.337501525879,335.337501525879,335.337501525879,335.337501525879,347.954299926758,347.954299926758,347.954299926758,347.954299926758,354.988700866699,354.988700866699,354.988700866699,354.988700866699,370.769546508789,370.769546508789,370.769546508789,370.769546508789,370.769546508789,370.769546508789,371.118179321289,371.118179321289,371.118179321289,371.118179321289,371.118179321289,371.118255615234,371.118255615234,371.118255615234,371.118255615234,371.118255615234,373.012031555176,373.012031555176,373.012031555176,373.012031555176,373.012031555176,374.928031921387,374.928031921387,374.928031921387,379.646499633789,379.646499633789,379.646499633789,379.646499633789,379.646499633789,379.646575927734,379.646575927734,379.646575927734,379.646575927734,379.646575927734,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,381.80103302002,387.003005981445,387.003005981445,387.003005981445,387.003005981445,387.003005981445,387.787040710449,387.787040710449,387.787040710449,387.787040710449,387.787040710449,396.973945617676,396.973945617676,396.973945617676,396.973945617676,405.473419189453,405.473419189453,405.473419189453,405.473419189453,405.473419189453,414.37727355957,414.37727355957,414.37727355957,414.37727355957,414.37727355957,414.37727355957,414.557434082031,414.557434082031,414.557434082031,414.557434082031,414.557434082031,421.052391052246,421.052391052246,421.052391052246,421.052391052246,421.052391052246,433.855201721191,433.855201721191,433.855201721191,433.855201721191,433.855201721191,437.273773193359,437.273773193359,437.273773193359,437.273773193359,437.273773193359,446.80241394043,446.80241394043,446.80241394043,446.80241394043,446.80241394043,454.799446105957,454.799446105957,454.799446105957,454.799446105957,454.799446105957,393.713905334473,393.713905334473,393.713905334473,393.713905334473,393.713905334473,393.713905334473,282.261222839355,282.261222839355,282.261222839355,282.261222839355,282.261222839355,313.700439453125,313.700439453125,313.700439453125,324.618850708008,324.618850708008,324.618850708008,340.653022766113,340.653022766113,355.903694152832,355.903694152832,355.903694152832,355.903694152832,369.387451171875,369.387451171875,369.387451171875,369.387451171875,369.387451171875,379.372909545898,379.372909545898,379.372909545898,379.372909545898,389.702445983887,389.702445983887,389.702445983887,389.702445983887,389.702445983887,397.451194763184,397.451194763184,397.451194763184,397.451194763184,397.451194763184,404.146820068359,404.146820068359,404.146820068359,404.146820068359,404.146820068359,340.744529724121,340.744529724121,340.744529724121,340.744529724121,340.744529724121,350.834617614746,350.834617614746,350.834617614746,350.834617614746,350.834617614746,359.5654296875,359.5654296875,359.5654296875,359.5654296875,359.5654296875,368.83992767334,368.83992767334,368.83992767334,368.83992767334,368.83992767334,341.103141784668,341.103141784668,341.103141784668,341.103141784668,341.103141784668,341.103141784668,342.039306640625,342.039306640625,342.039306640625,342.039306640625,342.039306640625,355.873527526855,355.873527526855,355.873527526855,355.873527526855,355.873527526855,367.358840942383,367.358840942383,367.358840942383,367.358840942383,374.870788574219,374.870788574219,374.870788574219,374.870788574219,383.352249145508,383.352249145508,383.352249145508,383.352249145508,390.633895874023,390.633895874023,390.633895874023,390.633895874023,401.007942199707,401.007942199707,401.007942199707,401.007942199707,408.405715942383,408.405715942383,408.405715942383,408.405715942383,416.164123535156,416.164123535156,416.164123535156,416.164123535156,423.470321655273,423.470321655273,423.470321655273,423.470321655273,383.039123535156,383.039123535156,383.039123535156,383.039123535156,383.039123535156,339.991477966309,339.991477966309,339.991477966309,339.991477966309,349.409454345703,349.409454345703,349.409454345703,349.409454345703,358.508148193359,358.508148193359,358.508148193359,358.508148193359,367.623336791992,367.623336791992,377.659713745117,377.659713745117,377.659713745117,377.659713745117,377.659713745117,377.659790039062,377.659790039062,377.659790039062,377.659790039062,377.659790039062,379.490898132324,379.490898132324,379.490898132324,379.490898132324,379.490898132324,381.321090698242,381.321090698242,381.321090698242,381.321090698242,381.321090698242,385.873886108398,385.873886108398,385.873886108398,385.873886108398,385.873886108398,387.563529968262,387.563529968262,387.563529968262,387.563529968262,387.563529968262,387.563529968262,387.96053314209,387.96053314209,387.96053314209,387.96053314209,387.96053314209,393.302947998047,393.302947998047,393.302947998047,393.302947998047,393.302947998047,393.302947998047,396.364204406738,396.364204406738,396.364204406738,396.364204406738,396.364204406738,403.182220458984,403.182220458984,403.182220458984,403.182220458984,403.182220458984,417.400840759277,417.400840759277,417.400840759277,417.400840759277,417.400840759277,425.075187683105,425.075187683105,425.075187683105,425.075187683105,425.075187683105,425.075187683105,431.707557678223,431.707557678223,431.707557678223,431.707557678223,431.707557678223,438.046363830566,438.046363830566,438.046363830566,438.046363830566,438.046363830566,444.537780761719,444.537780761719,444.537780761719,444.537780761719,444.537780761719,452.577537536621,452.577537536621,452.577537536621,452.577537536621,452.577537536621,351.447593688965,351.447593688965,351.447593688965,351.447593688965,351.447593688965,359.445541381836,359.445541381836,359.445541381836,359.445541381836,359.445541381836,369.511497497559,369.511497497559,369.511497497559,369.511497497559,400.503158569336,400.503158569336,400.503158569336,400.503189086914,400.503189086914,400.503189086914,424.27335357666,424.27335357666,424.27335357666,434.49829864502,434.49829864502,434.49829864502,434.49829864502,443.551872253418,443.551872253418,443.551872253418,443.551872253418,443.551872253418,443.551872253418,452.983940124512,452.983940124512,452.983940124512,452.983940124512,405.912078857422,405.912078857422,405.912078857422,405.912078857422,405.912078857422,416.707382202148,416.707382202148,416.707382202148,426.763168334961,426.763168334961,426.763168334961,426.763168334961,426.763168334961,435.334754943848,435.334754943848,435.334754943848,435.334754943848,435.334754943848,435.334754943848,435.334754943848,313.892333984375,313.892333984375,313.892333984375,313.892333984375,313.892333984375,313.892333984375,313.892333984375,303.755821228027,303.755821228027,303.755821228027,303.755821228027,303.755821228027,303.755821228027,303.755821228027,313.652412414551,313.652412414551,313.652412414551,313.652412414551,313.652412414551,320.330894470215,320.330894470215,320.330894470215,320.330894470215,320.330894470215,327.249458312988,327.249458312988,327.249458312988,327.249458312988,327.249458312988,336.031700134277,336.031700134277,336.031700134277,336.031700134277,336.031700134277,334.903358459473,334.903358459473,334.903358459473,334.903358459473,334.903358459473,334.903358459473,316.775291442871,316.775291442871,316.775291442871,316.775291442871,325.54744720459,325.54744720459,325.54744720459,325.54744720459,325.54744720459,333.533599853516,333.533599853516,333.533599853516,333.533599853516,340.962661743164,340.962661743164,340.962661743164,340.962661743164,349.198043823242,349.198043823242,349.198043823242,349.198043823242,357.817459106445,357.817459106445,357.817459106445,357.817459106445,365.144653320312,365.144653320312,365.144653320312,365.144653320312,373.169311523438,373.169311523438,373.169311523438,373.169311523438,380.112411499023,380.112411499023,380.112411499023,380.112411499023,387.769470214844,387.769470214844,387.769470214844,387.769470214844,396.813766479492,396.813766479492,396.813766479492,396.813766479492,403.407112121582,403.407112121582,403.407112121582,403.407112121582,411.780265808105,411.780265808105,411.780265808105,411.780265808105,411.780265808105,423.863983154297,423.863983154297,423.863983154297,423.863983154297,423.863983154297,423.863983154297,424.187393188477,424.187393188477,424.187393188477,424.187393188477,424.187393188477,424.671997070312,424.671997070312,424.671997070312,424.671997070312,425.980354309082,425.980354309082,425.980354309082,425.980354309082,425.980354309082,426.465232849121,426.465232849121,426.465232849121,426.465232849121,426.465232849121,432.229446411133,432.229446411133,432.229446411133,432.229446411133,432.229446411133,432.61873626709,432.61873626709,432.61873626709,432.61873626709,432.61873626709,434.287162780762,434.287162780762,434.287162780762,434.287162780762,434.287162780762,434.28734588623,434.28734588623,434.28734588623,434.28734588623,434.28734588623,439.204895019531,439.204895019531,439.204895019531,439.204895019531,439.204895019531,439.961570739746,439.961570739746,439.961570739746,439.961570739746,439.961570739746,449.194412231445,449.194412231445,449.194412231445,449.194412231445,449.194412231445,418.948837280273,418.948837280273,418.948837280273,418.948837280273,418.948837280273,418.948837280273,357.307716369629,357.307716369629,357.307716369629,357.307716369629,357.307716369629,357.307716369629,316.469017028809,316.469017028809,316.469017028809,316.469017028809,316.469017028809,318.26734161377,318.26734161377,318.26734161377,318.26734161377,318.26734161377,318.26734161377,320.84969329834,320.84969329834,320.84969329834,320.84969329834,320.84969329834,330.279403686523,330.279403686523,330.279403686523,330.279403686523,330.279403686523,337.961738586426,337.961738586426,337.961738586426,337.961738586426,337.961738586426,345.967300415039,345.967300415039,345.967300415039,345.967300415039,345.967300415039,353.969688415527,353.969688415527,353.969688415527,353.969688415527,353.969688415527,361.966720581055,361.966720581055,361.966720581055,361.966720581055,361.966720581055,381.109703063965,381.109703063965,381.109703063965,381.109703063965,406.735176086426,406.735176086426,406.735176086426,406.735176086426,406.735176086426,406.735176086426,425.526702880859,425.526702880859,440.789604187012,440.789604187012,440.789604187012,440.789604187012,450.926078796387,450.926078796387,450.926078796387,450.926078796387,450.926078796387,368.313415527344,368.313415527344,368.313415527344,368.313415527344,368.313415527344,355.469223022461,355.469223022461,355.469223022461,364.909828186035,364.909828186035,364.909828186035,364.909828186035,364.909828186035,372.061012268066,372.061012268066,372.061012268066,372.061012268066,372.061012268066,379.175422668457,379.175422668457,379.175422668457,379.175422668457,379.175422668457,385.947006225586,385.947006225586,385.947006225586,385.947006225586,385.947006225586,385.947006225586,349.941261291504,349.941261291504,349.941261291504,349.941261291504,349.941261291504,360.121963500977,360.121963500977,360.121963500977,360.121963500977,360.121963500977,369.401359558105,369.401359558105,369.401359558105,369.401359558105,369.401359558105,376.552543640137,376.552543640137,376.552543640137,376.552543640137,376.552543640137,368.057373046875,368.057373046875,368.057373046875,368.057373046875,368.057373046875,368.057373046875,368.057373046875,350.798164367676,350.798164367676,350.798164367676,350.798164367676,359.784851074219,359.784851074219,359.784851074219,359.784851074219,359.784851074219,371.824035644531,371.824035644531,371.824035644531,371.824035644531,379.614677429199,379.614677429199,379.614677429199,379.614677429199,379.614677429199,390.306037902832,390.306037902832,390.306037902832,390.306037902832,397.037567138672,397.037567138672,397.037567138672,397.037567138672,404.747329711914,404.747329711914,404.747329711914,404.747329711914,411.967575073242,411.967575073242,411.967575073242,411.967575073242,418.667236328125,418.667236328125,418.667236328125,418.667236328125,428.090179443359,428.090179443359,428.090179443359,428.090179443359,438.061790466309,438.061790466309,438.061790466309,438.061790466309,444.75756072998,444.75756072998,444.75756072998,444.75756072998,445.64387512207,445.64387512207,445.64387512207,445.64387512207,445.64387512207,352.59644317627,352.59644317627,352.59644317627,352.59644317627,352.59644317627,357.034172058105,357.034172058105,357.034172058105,357.034172058105,365.424247741699,365.424247741699,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,377.309860229492,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,379.186683654785,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841033935547,385.841110229492,385.841110229492,385.841110229492,385.841110229492,385.841110229492,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,388.018699645996,391.302932739258,391.302932739258,391.302932739258,391.302932739258,393.587867736816,393.587867736816,393.587867736816,393.587867736816,393.587867736816,393.587867736816,396.234649658203,396.234649658203,396.234649658203,396.234649658203,396.234649658203,403.872871398926,403.872871398926,403.872871398926,403.872871398926,403.872871398926,418.463088989258,418.463088989258,418.463088989258,418.463088989258,418.463088989258,418.889595031738,418.889595031738,418.889595031738,420.671936035156,420.671936035156,420.671936035156,420.671936035156,420.671936035156,425.58952331543,425.58952331543,425.58952331543,425.58952331543,425.58952331543,438.792495727539,438.792495727539,438.792495727539,438.792495727539,438.792495727539,446.789627075195,446.789627075195,446.789627075195,446.789627075195,446.789627075195,451.735389709473,451.735389709473,451.735389709473,451.735389709473,451.735389709473,451.338447570801,451.338447570801,451.338447570801,451.338447570801,451.338447570801,451.338447570801,367.6689453125,367.6689453125,367.6689453125,367.6689453125,367.6689453125,398.611572265625,398.611572265625,398.611572265625,409.500228881836,409.500228881836,409.500228881836,413.181266784668,413.181266784668,427.502449035645,427.502449035645,427.502449035645,442.125686645508,442.125686645508,442.125686645508,442.125686645508,454.27352142334,454.27352142334,454.27352142334,454.27352142334,425.50910949707,425.50910949707,425.50910949707,425.50910949707,433.3134765625,433.3134765625,433.3134765625,433.3134765625,433.3134765625,440.863876342773,440.863876342773,440.863876342773,440.863876342773,440.863876342773,453.162933349609,453.162933349609,453.162933349609,453.162933349609,453.162933349609,454.702537536621,454.702537536621,454.702537536621,454.702537536621,454.702537536621,454.702537536621,348.38688659668,348.38688659668,348.38688659668,348.38688659668,348.38688659668,356.507888793945,356.507888793945,356.507888793945,356.507888793945,356.507888793945,365.596199035645,365.596199035645,365.596199035645,365.596199035645,365.596199035645,372.470642089844,372.470642089844,372.470642089844,368.239517211914,368.239517211914,368.239517211914,368.239517211914,368.239517211914,368.239517211914,368.239517211914,351.040985107422,351.040985107422,351.040985107422,351.040985107422,351.040985107422,359.872146606445,359.872146606445,359.872146606445,359.872146606445,359.872146606445,359.872146606445,370.259132385254,370.259132385254,370.259132385254,370.259132385254,379.853790283203,379.853790283203,379.853790283203,379.853790283203,379.853790283203,390.826400756836,390.826400756836,390.826400756836,390.826400756836,397.714744567871,397.714744567871,397.714744567871,397.714744567871,407.311592102051,407.311592102051,407.311592102051,407.311592102051,415.733108520508,415.733108520508,415.733108520508,415.733108520508,424.435836791992,424.435836791992,424.435836791992,424.435836791992,433.736068725586,433.736068725586,433.736068725586,433.736068725586,441.169609069824,441.169609069824,441.169609069824,441.169609069824,441.169609069824,368.277366638184,368.277366638184,368.277366638184,368.277366638184,368.277366638184,351.247467041016,351.247467041016,351.247467041016,351.247467041016,361.55322265625,361.55322265625,361.55322265625,361.55322265625,367.713424682617,367.713424682617,367.713424682617,367.713424682617,382.416763305664,382.416763305664,382.416763305664,382.416763305664,382.416763305664,382.416763305664,382.905906677246,382.905906677246,382.905906677246,382.905906677246,382.905906677246,383.720642089844,383.720642089844,383.720642089844,384.710174560547,384.710174560547,384.710174560547,384.710174560547,384.710174560547,386.014274597168,386.014274597168,386.014274597168,391.053260803223,391.053260803223,391.053260803223,391.053260803223,391.053260803223,391.053337097168,391.053337097168,391.053337097168,391.053337097168,391.053337097168,393.141265869141,393.141265869141,393.141265869141,393.141265869141,393.141265869141,393.538284301758,393.538284301758,393.538284301758,393.538284301758,393.538284301758,398.165458679199,398.165458679199,398.165458679199,398.165458679199,398.165458679199,399.66667175293,399.66667175293,399.66667175293,399.66667175293,399.66667175293,408.00023651123,408.00023651123,408.00023651123,408.00023651123,408.00023651123,415.979278564453,415.979278564453,415.979278564453,415.979278564453,415.979278564453,419.038078308105,419.038078308105,419.038078308105,419.038078308105,419.038078308105,419.038078308105,425.737586975098,425.737586975098,425.737586975098,425.737586975098,425.737586975098,431.128524780273,431.128524780273,431.128524780273,431.128524780273,431.128524780273,438.832572937012,438.832572937012,438.832572937012,438.832572937012,438.832572937012,443.778144836426,443.778144836426,443.778144836426,443.778144836426,443.778144836426,448.346290588379,448.346290588379,448.346290588379,448.346290588379,448.346290588379,454.865745544434,454.865745544434,454.865745544434,454.865745544434,454.865745544434,454.865745544434,365.233642578125,365.233642578125,365.233642578125,365.233642578125,365.233642578125,382.25659942627,382.25659942627,382.25659942627,406.22883605957,406.22883605957,406.22883605957,423.956268310547,423.956268310547,423.956268310547,438.824493408203,438.824493408203,438.824493408203,438.824493408203,450.450981140137,450.450981140137,450.450981140137,450.450981140137,413.497749328613,413.497749328613,413.497749328613,413.497749328613,413.497749328613,425.191184997559,425.191184997559,425.191184997559,425.191184997559,425.191184997559,434.774261474609,434.774261474609,434.774261474609,434.774261474609,434.774261474609,434.774261474609,441.442939758301,441.442939758301,441.442939758301,448.040641784668,448.040641784668,448.040641784668,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,448.797393798828,335.664047241211,335.664047241211,335.664047241211,335.664047241211,269.910751342773,269.910751342773,269.910751342773,269.910751342773,274.314178466797,274.314178466797,274.314178466797,274.314178466797,274.314178466797,281.697982788086,281.697982788086,281.697982788086,281.697982788086,281.697982788086,292.299896240234,292.299896240234,292.299896240234,292.299896240234,292.299896240234,301.422523498535,301.422523498535,301.422523498535,301.422523498535,301.422523498535,306.494499206543,306.494499206543,306.494499206543,306.494499206543,306.494499206543,306.494499206543,283.910903930664,283.910903930664,283.910903930664,294.946449279785,294.946449279785,294.946449279785,294.946449279785,302.696197509766,302.696197509766,302.696197509766,302.696197509766,302.696197509766,310.286079406738,310.286079406738,310.286079406738,310.286079406738,318.895919799805,318.895919799805,318.895919799805,318.895919799805,325.501853942871,325.501853942871,325.501853942871,325.501853942871,333.17756652832,333.17756652832,333.17756652832,333.17756652832,340.615798950195,340.615798950195,340.615798950195,340.615798950195,349.455322265625,349.455322265625,349.455322265625,349.455322265625,359.806205749512,359.806205749512,359.806205749512,359.806205749512,367.984954833984,367.984954833984,367.984954833984,367.984954833984,377.683174133301,377.683174133301,377.683174133301,377.683174133301,385.040618896484,385.040618896484,385.040618896484,385.040618896484,399.320892333984,399.320892333984,399.320892333984,400.297233581543,400.297233581543,400.297233581543,400.297233581543,400.297233581543,402.067077636719,402.067077636719,402.067077636719,402.067077636719,402.067077636719,402.54328918457,402.54328918457,402.54328918457,402.54328918457,402.54328918457,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,408.318519592285,410.396026611328,410.396026611328,410.396026611328,410.396026611328,410.396026611328,410.396194458008,410.396194458008,410.396194458008,410.396194458008,410.396194458008,415.355949401855,415.355949401855,415.355949401855,415.355949401855,415.355949401855,417.745223999023,417.745223999023,417.745223999023,417.745223999023,417.745223999023,421.01293182373,421.01293182373,426.325981140137,426.325981140137,426.325981140137,426.325981140137,426.325981140137,407.31322479248,407.31322479248,407.31322479248,407.31322479248,407.31322479248,367.777137756348,367.777137756348,367.777137756348,367.777137756348,367.777137756348,340.799674987793,340.799674987793,340.799674987793,340.799674987793,340.799674987793,274.384407043457,274.384407043457,274.384407043457,274.384407043457,274.384407043457,279.836303710938,279.836303710938,279.836303710938,279.836303710938,279.836303710938,279.836303710938,281.618644714355,281.618644714355,281.618644714355,281.618644714355,281.618644714355,291.904937744141,291.904937744141,291.904937744141,291.904937744141,291.904937744141,299.570236206055,299.570236206055,299.570236206055,299.570236206055,299.570236206055,307.569068908691,307.569068908691,307.569068908691,307.569068908691,307.569068908691,315.572410583496,315.572410583496,315.572410583496,315.572410583496,315.572410583496,323.57430267334,323.57430267334,323.57430267334,323.57430267334,323.57430267334,335.049491882324,335.049491882324,335.049491882324,368.296531677246,368.296531677246,368.296531677246,368.296531677246,368.296531677246,368.296531677246,387.08659362793,387.08659362793,402.832809448242,402.832809448242,402.832809448242,402.832809448242,409.403167724609,409.403167724609,409.403167724609,409.403167724609,409.403167724609,413.652244567871,413.652244567871,413.652244567871,420.074752807617,420.074752807617,420.074752807617,420.074752807617,420.074752807617,426.509727478027,426.509727478027,426.509727478027,426.509727478027,430.903274536133,430.903274536133,430.903274536133,434.640563964844,434.640563964844,434.640563964844,434.640563964844,434.640563964844,439.648780822754,439.648780822754,439.648780822754,439.648780822754,439.648780822754,445.115089416504,445.115089416504,445.115089416504,445.115089416504,445.115089416504,405.198516845703,405.198516845703,405.198516845703,405.198516845703,405.198516845703,405.198516845703,311.809257507324,311.809257507324,311.809257507324,311.809257507324,311.809257507324,317.750679016113,317.750679016113,317.750679016113,317.750679016113,317.750679016113,324.990013122559,324.990013122559,324.990013122559,324.990013122559,324.990013122559,331.308540344238,331.308540344238,331.308540344238,331.308540344238,331.308540344238,337.739707946777,337.739707946777,337.739707946777,337.739707946777,337.739707946777,344.383918762207,344.383918762207,344.383918762207,344.383918762207,344.383918762207,344.383918762207,314.574165344238,314.574165344238,314.574165344238,314.574165344238,314.574165344238,314.574165344238,314.574165344238,316.48331451416,316.48331451416,316.48331451416,316.48331451416,316.48331451416,322.654884338379,322.654884338379,322.654884338379,322.654884338379,322.654884338379,335.852645874023,335.852645874023,335.852645874023,335.852645874023,335.852645874023,346.58528137207,346.58528137207,346.58528137207,346.58528137207,352.882652282715,352.882652282715,352.882652282715,352.882652282715,352.882652282715,358.397720336914,358.397720336914,358.397720336914,358.397720336914,364.407470703125,364.407470703125,364.407470703125,364.407470703125,370.902862548828,370.902862548828,370.902862548828,370.902862548828,377.282493591309,377.282493591309,377.282493591309,377.282493591309,334.661315917969,334.661315917969,334.661315917969,334.661315917969,334.661315917969,315.918434143066,315.918434143066,315.918434143066,315.918434143066,326.284790039062,326.284790039062,326.284790039062,326.284790039062,333.440757751465,333.440757751465,333.440757751465,333.440757751465,340.250854492188,340.250854492188,340.250854492188,340.250854492188,346.796737670898,346.796737670898,346.796737670898,346.796737670898,353.96866607666,353.96866607666,353.96866607666,353.96866607666,360.247444152832,360.247444152832,360.247444152832,360.247444152832,367.371650695801,367.371650695801,367.371650695801,367.371650695801,376.503219604492,376.503219604492,385.899909973145,385.899909973145,385.899909973145,385.899909973145,385.899909973145,385.89998626709,385.89998626709,385.89998626709,385.89998626709,385.89998626709,387.745498657227,387.745498657227,387.745498657227,387.745498657227,387.745498657227,388.250114440918,388.250114440918,388.250114440918,388.250114440918,388.250114440918,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,394.367324829102,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,396.553108215332,398.659912109375,398.659912109375,398.659912109375,401.826881408691,401.826881408691,401.826881408691,401.826881408691,401.826881408691,402.897308349609,402.897308349609,402.897308349609,402.897308349609,411.939033508301,411.939033508301,411.939033508301,411.939033508301,411.939033508301,411.939033508301,420.36540222168,420.36540222168,420.36540222168,420.36540222168,420.36540222168,427.525993347168,427.525993347168,427.525993347168,427.706153869629,427.706153869629,427.706153869629,427.706153869629,427.706153869629,434.161659240723,434.161659240723,434.161659240723,434.161659240723,434.161659240723,440.974678039551,440.974678039551,440.974678039551,440.974678039551,440.974678039551,449.089973449707,449.089973449707,449.089973449707,449.089973449707,449.089973449707,418.926826477051,418.926826477051,418.926826477051,418.926826477051,418.926826477051,418.926826477051,326.377067565918,326.377067565918,326.377067565918,326.377067565918,326.377067565918,334.376670837402,334.376670837402,334.376670837402,334.376670837402,334.376670837402,342.370712280273,342.370712280273,342.370712280273,342.370712280273,342.370712280273,358.819038391113,358.819038391113,358.819038391113,358.819038391113,384.636100769043,384.636100769043,384.636100769043,384.636131286621,384.636131286621,384.636131286621,409.057739257812,409.057739257812,409.057739257812,419.537666320801,419.537666320801,419.537666320801,419.537666320801,429.71704864502,429.71704864502,429.71704864502,429.71704864502,439.193420410156,439.193420410156,439.193420410156,439.193420410156,445.926612854004,445.926612854004,445.926612854004,454.939125061035,454.939125061035,454.939125061035,454.939125061035,454.939125061035,454.939125061035,385.247657775879,385.247657775879,385.247657775879,385.247657775879,385.247657775879,393.91975402832,393.91975402832,393.91975402832,393.91975402832,393.91975402832,401.499496459961,401.499496459961,401.499496459961,401.499496459961,401.499496459961,408.249061584473,408.249061584473,408.249061584473,408.249061584473,408.249061584473,413.071174621582,413.071174621582,413.071174621582,413.071174621582,413.071174621582,413.071174621582,331.197723388672,331.197723388672,331.197723388672,331.197723388672,331.197723388672,331.197723388672,310.823219299316,310.823219299316,310.823219299316,310.823219299316,310.823219299316,310.823219299316,314.325378417969,314.325378417969,314.325378417969,314.325378417969,314.325378417969,320.212821960449,320.212821960449,320.212821960449,320.212821960449,320.212821960449,320.212821960449,329.710220336914,329.710220336914,329.710220336914,329.710220336914,329.710220336914,337.575576782227,337.575576782227,337.575576782227,337.575576782227,347.064392089844,347.064392089844,347.064392089844,357.843894958496,357.843894958496,357.843894958496,357.843894958496,318.630256652832,318.630256652832,318.630256652832,318.630256652832,318.630256652832,318.630256652832,318.690795898438,318.690795898438,318.690795898438,318.690795898438,325.682815551758,325.682815551758,325.682815551758,325.682815551758,332.116882324219,332.116882324219,332.116882324219,332.116882324219,338.088790893555,338.088790893555,338.088790893555,338.088790893555,344.997901916504,344.997901916504,344.997901916504,344.997901916504,352.25968170166,352.25968170166,352.25968170166,352.25968170166,359.569770812988,359.569770812988,359.569770812988,359.569770812988,366.358848571777,366.358848571777,366.358848571777,366.358848571777,373.574584960938,373.574584960938,373.574584960938,373.574584960938,380.270370483398,380.270370483398,380.270370483398,380.270370483398,386.983123779297,386.983123779297,386.983123779297,386.983123779297,393.870361328125,393.870361328125,393.870361328125,393.870361328125,401.531875610352,401.531875610352,401.531875610352,401.531875610352,401.531875610352,401.531875610352,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,413.282409667969,415.07054901123,415.07054901123,415.07054901123,415.07054901123,415.07054901123,415.070838928223,415.070838928223,415.070838928223,415.070838928223,415.070838928223,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,421.413711547852,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,423.50562286377,424.500663757324,424.500663757324,424.500663757324,424.500663757324,428.598655700684,428.598655700684,428.598655700684,428.598655700684,428.598655700684,429.759613037109,429.759613037109,429.759613037109,429.759613037109,438.573684692383,438.573684692383,438.573684692383,438.573684692383,438.573684692383,447.625183105469,447.625183105469,447.625183105469,447.625183105469,453.112174987793,453.112174987793,453.112174987793,453.112174987793,453.112174987793,453.112174987793,454.228843688965,454.228843688965,454.228843688965,454.228843688965,454.228843688965,454.228843688965,454.409004211426,454.409004211426,454.409004211426,454.409004211426,454.409004211426,454.409004211426,391.264572143555,391.264572143555,391.264572143555,391.264572143555,391.264572143555,391.264572143555,317.190979003906,317.190979003906,317.190979003906,317.190979003906,317.190979003906,326.153846740723,326.153846740723,326.153846740723,326.153846740723,326.153846740723,333.85245513916,333.85245513916,333.85245513916,333.85245513916,333.85245513916,341.852035522461,341.852035522461,341.852035522461,341.852035522461,341.852035522461,349.857040405273,349.857040405273,349.857040405273,349.857040405273,349.857040405273,357.853492736816,357.853492736816,357.853492736816,357.853492736816,357.853492736816,368.137268066406,368.137268066406,368.137268066406,401.918746948242,401.918746948242,401.918746948242,401.918746948242,401.918746948242,401.918746948242,426.928153991699,426.928153991699,426.928153991699,437.646392822266,437.646392822266,437.646392822266,437.646392822266,446.987030029297,446.987030029297,446.987030029297,446.987030029297,446.987030029297,453.870590209961,453.870590209961,453.870590209961,453.870590209961,453.870590209961,453.870590209961,381.406715393066,381.406715393066,381.406715393066,389.584106445312,389.584106445312,389.584106445312,389.584106445312,389.584106445312,399.431678771973,399.431678771973,399.431678771973,399.431678771973,399.431678771973,407.013893127441,407.013893127441,407.013893127441,407.013893127441,407.013893127441,371.331275939941,371.331275939941,371.331275939941,371.331275939941,371.331275939941,358.445930480957,358.445930480957,358.445930480957,358.445930480957,358.445930480957,367.855125427246,367.855125427246,367.855125427246,367.855125427246,367.855125427246,374.638931274414,374.638931274414,374.638931274414,374.638931274414,374.638931274414,382.551788330078,382.551788330078,382.551788330078,382.551788330078,382.551788330078,359.342788696289,359.342788696289,359.342788696289,359.342788696289,356.36743927002,356.36743927002,356.36743927002,356.36743927002,370.780937194824,370.780937194824,370.780937194824,370.780937194824,381.427337646484,381.427337646484,381.427337646484,381.427337646484,388.378211975098,388.378211975098,388.378211975098,394.297843933105,394.297843933105,394.297843933105,394.297843933105,402.282493591309,402.282493591309,402.282493591309,402.282493591309,409.374099731445,409.374099731445,409.374099731445,409.374099731445,416.730270385742,416.730270385742,416.730270385742,416.730270385742,423.584175109863,423.584175109863,423.584175109863,423.584175109863,433.243064880371,433.243064880371,433.243064880371,433.243064880371,441.557929992676,441.557929992676,441.557929992676,441.557929992676,444.494087219238,444.494087219238,444.494087219238,444.494087219238,444.494087219238,368.811737060547,368.811737060547,368.811737060547,368.811737060547,368.811737060547,360.893920898438,360.893920898438,360.893920898438,360.893920898438,367.581520080566,367.581520080566,367.581520080566,367.581520080566,374.487579345703,374.487579345703,374.487579345703,374.487579345703,374.487579345703,388.557518005371,388.557518005371,388.557518005371,388.557518005371,388.557518005371,388.88973236084,388.88973236084,388.88973236084,388.88973236084,388.88973236084,389.720558166504,389.720558166504,389.720558166504,389.720558166504,389.720558166504,389.720558166504,390.719635009766,390.719635009766,390.719635009766,390.719635009766,390.719635009766,391.883255004883,391.883255004883,391.883255004883,397.235824584961,397.235824584961,397.235824584961,397.235824584961,397.235824584961,397.235900878906,397.235900878906,397.235900878906,397.235900878906,397.235900878906,399.375328063965,399.375328063965,399.375328063965,399.375328063965,399.375328063965,400.400115966797,400.400115966797,400.400115966797,400.400115966797,404.603843688965,404.603843688965,404.603843688965,404.603843688965,404.603843688965,406.220100402832,406.220100402832,406.220100402832,406.220100402832,406.220100402832,415.011009216309,415.011009216309,415.011009216309,415.011009216309,415.011009216309,427.740692138672,427.740692138672,427.740692138672,427.740692138672,427.740692138672,428.167205810547,428.167205810547,428.167205810547,428.347366333008,428.347366333008,428.347366333008,428.347366333008,428.347366333008,434.795974731445,434.795974731445,434.795974731445,434.795974731445,434.795974731445,447.927093505859,447.927093505859,447.927093505859,447.927093505859,447.927093505859,451.406929016113,451.406929016113,451.406929016113,451.406929016113,451.406929016113,451.406929016113,366.798454284668,366.798454284668,366.798454284668,366.798454284668,366.798454284668,374.79224395752,374.79224395752,374.79224395752,374.79224395752,374.79224395752,382.833358764648,382.833358764648,382.833358764648,382.833358764648,382.833358764648,415.350158691406,415.350158691406,415.350158691406,426.612365722656,426.612365722656,426.612365722656,443.096420288086,443.096420288086,451.534133911133,451.534133911133,451.534133911133,390.157676696777,390.157676696777,390.157676696777,390.157676696777,397.449195861816,397.449195861816,397.449195861816,397.449195861816,397.449195861816,405.668251037598,405.668251037598,405.668251037598,405.668251037598,405.668251037598,414.920387268066,414.920387268066,414.920387268066,414.920387268066,425.327690124512,425.327690124512,425.327690124512,425.327690124512,425.327690124512,431.839691162109,431.839691162109,431.839691162109,431.839691162109,431.839691162109,439.169616699219,439.169616699219,439.169616699219,439.169616699219,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,439.363090515137,302.998611450195,302.998611450195,302.998611450195,302.998611450195,302.998611450195,302.998611450195,302.998611450195,277.731605529785,277.731605529785,277.731605529785,277.731605529785,277.731605529785,285.247634887695,285.247634887695,285.247634887695,285.247634887695,285.247634887695,292.398880004883,292.398880004883,292.398880004883,292.398880004883,292.398880004883,303.730567932129,303.730567932129,303.730567932129,303.730567932129,303.730567932129,302.405624389648,302.405624389648,302.405624389648,302.405624389648,302.405624389648,302.405624389648,302.405624389648,276.771171569824,276.771171569824,276.771171569824,276.771171569824,276.771171569824,276.771171569824,284.249992370605,284.249992370605,284.249992370605,284.249992370605,296.97859954834,296.97859954834,296.97859954834,296.97859954834,296.97859954834,308.668991088867,308.668991088867,308.668991088867,308.668991088867,316.467445373535,316.467445373535,316.467445373535,316.467445373535,316.467445373535,316.467445373535,324.892944335938,324.892944335938,324.892944335938,324.892944335938,332.78199005127,332.78199005127,332.78199005127,332.78199005127,343.661842346191,343.661842346191,343.661842346191,343.661842346191,352.750511169434,352.750511169434,352.750511169434,352.750511169434,286.103019714355,286.103019714355,286.103019714355,286.103019714355,286.103019714355,281.984870910645,281.984870910645,281.984870910645,281.984870910645,294.392883300781,294.392883300781,294.392883300781,294.392883300781,305.967727661133,305.967727661133,305.967727661133,305.967727661133,315.011100769043,315.011100769043,315.011100769043,315.011100769043,323.301246643066,323.301246643066,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,334.511947631836,336.342872619629,336.342872619629,336.342872619629,336.342872619629,336.342872619629,337.507392883301,337.507392883301,337.507392883301,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,342.801856994629,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,344.904022216797,350.084602355957,350.084602355957,350.084602355957,350.084602355957,350.084602355957,350.91780090332,350.91780090332,350.91780090332,350.91780090332,350.91780090332,356.104377746582,356.104377746582,356.104377746582,356.104377746582,356.104377746582,364.579132080078,364.579132080078,364.579132080078,364.579132080078,364.579132080078,373.659645080566,373.659645080566,373.659645080566,373.659645080566,373.659645080566,373.659645080566,375.441986083984,375.441986083984,375.441986083984,375.441986083984,375.441986083984,385.698089599609,385.698089599609,385.698089599609,385.698089599609,385.698089599609,393.432929992676,393.432929992676,393.432929992676,393.432929992676,393.432929992676,401.431015014648,401.431015014648,401.431015014648,401.431015014648,401.431015014648,409.430038452148,409.430038452148,409.430038452148,409.430038452148,409.430038452148,417.42781829834,417.42781829834,417.42781829834,417.42781829834,417.42781829834,425.673461914062,425.673461914062,425.673461914062,449.198852539062,449.198852539062,449.198852539062,389.317642211914,389.317642211914,389.317642211914,389.317642211914,307.159004211426,307.159004211426,307.159004211426,307.159004211426,307.159004211426,307.159004211426,331.715270996094,331.715270996094,331.715270996094,346.360122680664,346.360122680664,346.360122680664,353.873558044434,353.873558044434,353.873558044434,353.873558044434,364.620376586914,364.620376586914,364.620376586914,364.620376586914,364.620376586914,372.403373718262,372.403373718262,372.403373718262,382.412620544434,382.412620544434,382.412620544434,382.412620544434,382.412620544434,345.059532165527,345.059532165527,345.059532165527,345.059532165527,338.042762756348,338.042762756348,338.042762756348,338.042762756348,338.042762756348,349.367065429688,349.367065429688,349.367065429688,349.367065429688,349.367065429688,355.795845031738,355.795845031738,355.795845031738,355.795845031738,355.795845031738,364.592781066895,364.592781066895,364.592781066895,364.592781066895,364.592781066895,331.625,331.625,331.625,331.625,340.228500366211,340.228500366211,340.228500366211,340.228500366211,340.228500366211,349.919250488281,349.919250488281,349.919250488281,349.919250488281,349.919250488281,357.827247619629,357.827247619629,357.827247619629,357.827247619629,357.827247619629,370.311195373535,370.311195373535,370.311195373535,370.311195373535,377.239562988281,377.239562988281,377.239562988281,377.239562988281,377.239562988281,384.206687927246,384.206687927246,384.206687927246,384.206687927246,391.245933532715,391.245933532715,391.245933532715,391.245933532715,398.403663635254,398.403663635254,398.403663635254,398.403663635254,368.876121520996,368.876121520996,368.876121520996,368.876121520996,368.876121520996,339.868782043457,339.868782043457,339.868782043457,339.868782043457,346.79891204834,346.79891204834,346.79891204834,346.79891204834,355.33821105957,355.33821105957,355.33821105957,355.33821105957,365.422523498535,365.422523498535,365.422523498535,365.422523498535,373.224044799805,373.224044799805,373.224044799805,373.224044799805,383.131576538086,383.131576538086,383.131576538086,383.131576538086,391.716239929199,391.716239929199,391.716239929199,391.716239929199,391.716239929199,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,405.165832519531,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,406.975517272949,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,413.309547424316,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,415.364639282227,416.336471557617,416.336471557617,416.336471557617,420.463905334473,420.463905334473,420.463905334473,420.463905334473,420.463905334473,421.307586669922,421.307586669922,421.307586669922,421.307586669922,421.307586669922,428.433700561523,428.433700561523,428.433700561523,428.433700561523,428.433700561523,434.790802001953,434.790802001953,434.790802001953,434.790802001953,434.790802001953,445.635429382324,445.635429382324,445.635429382324,445.635429382324,445.635429382324,445.635429382324,445.815589904785,445.815589904785,445.815589904785,445.815589904785,445.815589904785,452.347473144531,452.347473144531,452.347473144531,452.347473144531,452.347473144531,424.111862182617,424.111862182617,424.111862182617,424.111862182617,424.111862182617,424.111862182617,342.667762756348,342.667762756348,342.667762756348,342.667762756348,342.667762756348,350.19408416748,350.19408416748,350.19408416748,350.19408416748,350.19408416748,358.192710876465,358.192710876465,358.192710876465,358.192710876465,358.192710876465,366.190444946289,366.190444946289,366.190444946289,366.190444946289,366.190444946289,374.18839263916,374.18839263916,374.18839263916,374.18839263916,374.18839263916,405.949562072754,405.949562072754,405.949562072754,416.978408813477,416.978408813477,416.978408813477,416.978408813477,416.978408813477,416.978408813477,433.162384033203,433.162384033203,442.404792785645,442.404792785645,442.404792785645,454.800498962402,454.800498962402,454.800498962402,454.800498962402,454.800498962402,403.310958862305,403.310958862305,403.310958862305,403.310958862305,403.310958862305,413.691963195801,413.691963195801,413.691963195801,413.691963195801,424.203765869141,424.203765869141,424.203765869141,430.999877929688,430.999877929688,430.999877929688,430.999877929688,430.999877929688,438.552665710449,438.552665710449,438.552665710449,438.552665710449,361.731773376465,361.731773376465,361.731773376465,361.731773376465,311.725090026855,311.725090026855,311.725090026855,311.725090026855,313.579032897949,313.579032897949,313.579032897949,313.579032897949,313.579032897949,313.579032897949,321.124488830566,321.124488830566,321.124488830566,321.124488830566,321.124488830566,328.564659118652,328.564659118652,328.564659118652,335.06201171875,335.06201171875,335.06201171875,335.06201171875,335.06201171875,343.080154418945,343.080154418945,343.080154418945,343.080154418945,343.080154418945,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,348.507179260254,270.987884521484,270.987884521484,270.987884521484,270.987884521484,270.987884521484,277.78148651123,277.78148651123,277.78148651123,277.78148651123,277.78148651123,288.923370361328,288.923370361328,288.923370361328,288.923370361328,288.923370361328,295.63304901123,295.63304901123,295.63304901123,295.63304901123,295.63304901123,306.896789550781,306.896789550781,306.896789550781,306.896789550781,314.171829223633,314.171829223633,314.171829223633,314.171829223633,314.171829223633,320.653045654297,320.653045654297,320.653045654297,320.653045654297,327.38801574707,327.38801574707,327.38801574707,327.38801574707,333.913375854492,333.913375854492,333.913375854492,333.913375854492,341.087677001953,341.087677001953,341.087677001953,341.087677001953,347.636764526367,347.636764526367,347.636764526367,347.636764526367,354.612762451172,354.612762451172,354.612762451172,354.612762451172,360.414054870605,360.414054870605,360.414054870605,360.414054870605,360.414054870605,294.840667724609,294.840667724609,294.840667724609,294.840667724609,294.840667724609,278.387496948242,278.387496948242,278.387496948242,278.387496948242,285.384605407715,285.384605407715,285.384605407715,285.384605407715,292.052589416504,292.052589416504,292.052589416504,292.052589416504,299.063400268555,299.063400268555,299.063400268555,299.063400268555,305.960250854492,305.960250854492,305.960250854492,305.960250854492,313.156982421875,313.156982421875,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,324.172256469727,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,325.97859954834,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298355102539,332.298431396484,332.298431396484,332.298431396484,332.298431396484,332.298431396484,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,334.351203918457,338.672332763672,338.672332763672,338.672332763672,338.672332763672,339.442161560059,339.442161560059,339.442161560059,339.442161560059,339.442161560059,340.286804199219,340.286804199219,340.286804199219,340.286804199219,340.286804199219,348.878211975098,348.878211975098,348.878211975098,348.878211975098,348.878211975098,357.624504089355,357.624504089355,357.624504089355,357.624504089355,357.624504089355,360.714996337891,360.714996337891,360.714996337891,360.714996337891,360.714996337891,360.714996337891,367.413383483887,367.413383483887,367.413383483887,367.413383483887,367.413383483887,372.804481506348,372.804481506348,372.804481506348,372.804481506348,372.804481506348,380.548194885254,380.548194885254,380.548194885254,380.548194885254,380.548194885254,388.541046142578,388.541046142578,388.541046142578,388.541046142578,388.541046142578,396.536163330078,396.536163330078,396.536163330078,396.536163330078,396.536163330078,404.53971862793,404.53971862793,404.53971862793,404.53971862793,404.53971862793,435.49925994873,435.49925994873,435.49925994873,446.376754760742,446.376754760742,446.376754760742,450.429794311523,450.429794311523,450.429794311523,450.429794311523,450.429794311523,450.429794311523,450.429794311523,315.738426208496,315.738426208496,315.738426208496,315.814926147461,315.814926147461,315.814926147461,329.957901000977,329.957901000977,329.957901000977,329.957901000977,329.957901000977,339.244895935059,339.244895935059,339.244895935059,339.244895935059,349.810920715332,349.810920715332,349.810920715332,349.810920715332,349.810920715332,357.390686035156,357.390686035156,357.390686035156,357.390686035156,357.390686035156,363.517150878906,363.517150878906,363.517150878906,363.517150878906,363.517150878906,363.517150878906,317.108726501465,317.108726501465,317.108726501465,324.125213623047,324.125213623047,324.125213623047,324.125213623047,324.125213623047,324.125213623047,331.085388183594,331.085388183594,331.085388183594,331.085388183594,331.085388183594,331.085388183594,340.572975158691,340.572975158691,340.572975158691,340.572975158691,340.572975158691,346.188598632812,346.188598632812,346.188598632812,346.188598632812,346.188598632812,346.188598632812,315.713935852051,315.713935852051,315.713935852051,323.801628112793,323.801628112793,323.801628112793,323.801628112793,334.46418762207,334.46418762207,334.46418762207,334.46418762207,334.46418762207,346.084594726562,346.084594726562,346.084594726562,346.084594726562,354.737045288086,354.737045288086,354.737045288086,354.737045288086,361.553863525391,361.553863525391,361.553863525391,361.553863525391,369.31420135498,369.31420135498,369.31420135498,369.31420135498,377.962593078613,377.962593078613,377.962593078613,377.962593078613,375.753349304199,375.753349304199,375.753349304199,375.753349304199,375.753349304199,313.205871582031,313.205871582031,313.205871582031,313.205871582031,322.209060668945,322.209060668945,322.209060668945,322.209060668945,329.793640136719,329.793640136719,329.793640136719,329.793640136719,335.939064025879,335.939064025879,335.939064025879,335.939064025879,343.13671875,343.13671875,343.13671875,343.13671875,351.462951660156,351.462951660156,351.462951660156,351.462951660156,359.49674987793,359.49674987793,359.49674987793,359.49674987793,366.493354797363,366.493354797363,366.493354797363,366.493354797363,375.771583557129,375.771583557129,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,384.784294128418,386.566696166992,386.566696166992,386.566696166992,386.566696166992,386.566696166992,386.566986083984,386.566986083984,386.566986083984,386.566986083984,386.566986083984,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,392.784172058105,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,394.804183959961,395.754409790039,395.754409790039,395.754409790039,395.754409790039,399.83423614502,399.83423614502,399.83423614502,399.83423614502,399.83423614502,400.684875488281,400.684875488281,400.684875488281,400.684875488281,400.684875488281,405.784736633301,405.784736633301,405.784736633301,405.784736633301,405.784736633301,413.042259216309,413.042259216309,413.042259216309,413.042259216309,413.042259216309,422.361259460449,422.361259460449,423.476341247559,423.476341247559,423.476341247559,423.476341247559,423.476341247559,423.476341247559,425.258682250977,425.258682250977,425.258682250977,425.258682250977,425.258682250977,430.17041015625,430.17041015625,430.17041015625,430.17041015625,430.17041015625,438.194412231445,438.194412231445,438.194412231445,438.194412231445,438.194412231445,443.581092834473,443.581092834473,443.581092834473,443.581092834473,443.581092834473,451.576187133789,451.576187133789,451.576187133789,451.576187133789,451.576187133789,416.08283996582,416.08283996582,416.08283996582,416.08283996582,416.08283996582,328.918647766113,328.918647766113,328.918647766113,328.918647766113,328.918647766113,336.91381072998,336.91381072998,336.91381072998,336.91381072998,336.91381072998,355.709861755371,355.709861755371,355.709861755371,378.963554382324,378.963554382324,378.963554382324,378.963554382324,378.963554382324,378.963554382324,395.083030700684,395.083030700684,405.694465637207,405.694465637207,405.694465637207,417.631256103516,417.631256103516,417.631256103516,417.631256103516,417.631256103516,425.387382507324,425.387382507324,425.387382507324,425.387382507324,433.911682128906,433.911682128906,433.911682128906,433.911682128906,441.840667724609,441.840667724609,441.840667724609,452.538078308105,452.538078308105,452.538078308105,452.538078308105,452.538078308105,452.538078308105,423.004539489746,423.004539489746,423.004539489746,423.004539489746,423.004539489746,423.004539489746,385.10718536377,385.10718536377,385.10718536377,394.403755187988,394.403755187988,394.403755187988,394.403755187988,394.403755187988,401.087188720703,401.087188720703,401.087188720703,401.087188720703,401.087188720703,408.142868041992,408.142868041992,408.142868041992,408.142868041992,408.142868041992,413.596832275391,413.596832275391,413.596832275391,413.596832275391,413.596832275391,413.596832275391,315.251838684082,315.251838684082,315.251838684082,315.251838684082,315.251838684082,315.251838684082,314.52906036377,314.52906036377,314.52906036377,314.52906036377,314.52906036377,326.120338439941,326.120338439941,326.120338439941,326.120338439941,326.120338439941,336.15795135498,336.15795135498,336.15795135498,342.415733337402,342.415733337402,342.415733337402,342.415733337402,355.542984008789,355.542984008789,355.542984008789,355.542984008789,355.542984008789,362.174324035645,362.174324035645,362.174324035645,362.174324035645,330.682312011719,330.682312011719,330.682312011719,330.682312011719,330.682312011719,323.543838500977,323.543838500977,323.543838500977,323.543838500977,331.939956665039,331.939956665039,331.939956665039,331.939956665039,338.905899047852,338.905899047852,338.905899047852,338.905899047852,349.566856384277,349.566856384277,349.566856384277,349.566856384277,356.920509338379,356.920509338379,356.920509338379,356.920509338379,364.855392456055,364.855392456055,364.855392456055,364.855392456055,372.183822631836,372.183822631836,372.183822631836,372.183822631836,379.364715576172,379.364715576172,379.364715576172,379.364715576172,386.162528991699,386.162528991699,386.162528991699,386.162528991699,395.732437133789,395.732437133789,395.732437133789,395.732437133789,395.732437133789,395.732437133789,407.470504760742,407.470504760742,407.470504760742,407.470504760742,407.470504760742,407.470581054688,407.470581054688,407.470581054688,407.470581054688,407.470581054688,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,409.262565612793,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,415.493675231934,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,417.503128051758,420.048408508301,420.048408508301,420.048408508301,420.048408508301,420.048408508301,422.572395324707,422.572395324707,422.572395324707,422.572395324707,422.572395324707,423.451675415039,423.451675415039,423.451675415039,423.451675415039,423.451675415039,432.081726074219,432.081726074219,432.081726074219,432.081726074219,432.081726074219,440.773849487305,440.773849487305,440.773849487305,440.773849487305,440.773849487305,445.736610412598,445.736610412598,445.736610412598,445.736610412598,445.736610412598,445.736610412598,447.518951416016,447.518951416016,447.518951416016,447.518951416016,447.518951416016,451.535957336426,451.535957336426,451.535957336426,451.535957336426,451.535957336426,451.535957336426,356.098915100098,356.098915100098,356.098915100098,356.098915100098,356.098915100098,356.098915100098,330.36360168457,330.36360168457,330.36360168457,330.36360168457,330.36360168457,335.304481506348,335.304481506348,335.304481506348,335.304481506348,335.304481506348,341.480827331543,341.480827331543,341.480827331543,341.480827331543,341.480827331543,346.397689819336,346.397689819336,346.397689819336,346.397689819336,346.397689819336,354.356414794922,354.356414794922,354.356414794922,354.356414794922,354.356414794922,370.686302185059,370.686302185059,370.686302185059,370.686302185059,396.196838378906,396.196838378906,396.196838378906,396.196838378906,396.196838378906,396.196838378906,412.168975830078,412.168975830078,420.367851257324,420.367851257324,420.367851257324,432.146240234375,432.146240234375,432.146240234375,432.146240234375,439.585754394531,439.585754394531,439.585754394531,439.585754394531,439.585754394531,447.977027893066,447.977027893066,447.977027893066,447.977027893066,452.877365112305,452.877365112305,452.877365112305,452.877365112305,452.877365112305,452.877365112305,378.767608642578,378.767608642578,378.767608642578,386.295936584473,386.295936584473,386.295936584473,394.020195007324,394.020195007324,394.020195007324,400.576263427734,400.576263427734,400.576263427734,409.752822875977,409.752822875977,409.752822875977,409.752822875977,409.752822875977,409.752822875977,361.458160400391,361.458160400391,361.458160400391,361.458160400391,361.458160400391,361.458160400391,357.793418884277,357.793418884277,357.793418884277,357.793418884277,357.793418884277,365.040092468262,365.040092468262,365.040092468262,365.040092468262,365.040092468262,365.040092468262,374.833824157715,374.833824157715,374.833824157715,374.833824157715,374.833824157715,380.971069335938,380.971069335938,380.971069335938,380.971069335938,380.971069335938,355.907836914062,355.907836914062,355.907836914062,355.907836914062,355.907836914062,355.907836914062,359.7216796875,359.7216796875,359.7216796875,359.7216796875,359.7216796875,369.593955993652,369.593955993652,369.593955993652,369.593955993652,377.97282409668,377.97282409668,377.97282409668,377.97282409668,377.97282409668,384.869003295898,384.869003295898,384.869003295898,384.869003295898,391.350708007812,391.350708007812,391.350708007812,391.350708007812,397.842132568359,397.842132568359,397.842132568359,397.842132568359,405.104843139648,405.104843139648,405.104843139648,405.104843139648,412.313484191895,412.313484191895,412.313484191895,412.313484191895,419.684051513672,419.684051513672,419.684051513672,419.684051513672,426.475959777832,426.475959777832,426.475959777832,426.475959777832,434.716423034668,434.716423034668,434.716423034668,434.716423034668,441.613609313965,441.613609313965,441.613609313965,441.613609313965,449.061790466309,449.061790466309,449.061790466309,449.061790466309,454.396430969238,454.396430969238,454.396430969238,454.396430969238,454.396430969238,385.334663391113,385.334663391113,385.334663391113,385.334663391113,385.334663391113,358.058792114258,358.058792114258,358.058792114258,358.058792114258,364.943168640137,364.943168640137,364.943168640137,364.943168640137,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,379.297882080078,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,381.092018127441,387.292373657227,387.292373657227,387.292373657227,387.292373657227,387.292373657227,387.292449951172,387.292449951172,387.292449951172,387.292449951172,387.292449951172,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,389.289558410645,394.297592163086,394.297592163086,394.297592163086,394.297592163086,394.297592163086,395.156593322754,395.156593322754,395.156593322754,395.156593322754,395.156593322754,400.72486114502,400.72486114502,400.72486114502,400.72486114502,400.72486114502,408.938705444336,408.938705444336,408.938705444336,408.938705444336,408.938705444336,417.232574462891,417.232574462891,417.232574462891,417.232574462891,417.232574462891,417.232574462891,419.014915466309,419.014915466309,419.014915466309,419.014915466309,419.014915466309,425.879997253418,425.879997253418,425.879997253418,425.879997253418,425.879997253418,436.853820800781,436.853820800781,436.853820800781,436.853820800781,436.853820800781,444.850410461426,444.850410461426,444.850410461426,444.850410461426,444.850410461426,452.847938537598,452.847938537598,452.847938537598,452.847938537598,452.847938537598,430.266502380371,430.266502380371,430.266502380371,430.266502380371,430.266502380371,430.266502380371,369.81649017334,369.81649017334,369.81649017334,369.81649017334,369.81649017334,400.67546081543,400.67546081543,400.67546081543,411.484481811523,411.484481811523,411.484481811523,427.377685546875,427.377685546875,441.106369018555,441.106369018555,441.106369018555,451.309722900391,451.309722900391,451.309722900391,451.309722900391,451.309722900391,454.936805725098,454.936805725098,454.936805725098,454.936805725098,454.936805725098,454.936805725098,388.707878112793,388.707878112793,388.707878112793,388.707878112793,388.707878112793,388.707878112793,400.093620300293,400.093620300293,400.093620300293,400.093620300293,407.937194824219,407.937194824219,407.937194824219,407.937194824219,407.937194824219,415.994499206543,415.994499206543,415.994499206543,415.994499206543,415.994499206543,423.863273620605,423.863273620605,423.863273620605,423.863273620605,423.863273620605,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,426.922080993652,312.657562255859,312.657562255859,312.657562255859,312.657562255859,312.657562255859,312.657562255859,312.657562255859,271.528305053711,271.528305053711,271.528305053711,271.528305053711,271.528305053711,280.413467407227,280.413467407227,280.413467407227,280.413467407227,280.413467407227,288.416854858398,288.416854858398,288.416854858398,295.771308898926,295.771308898926,295.771308898926,295.771308898926,295.771308898926,301.842529296875,301.842529296875,301.842529296875,301.842529296875,301.842529296875,306.86840057373,306.86840057373,306.86840057373,306.86840057373,306.86840057373,306.86840057373,306.86840057373,276.545616149902,276.545616149902,276.545616149902,276.545616149902,276.545616149902,285.069068908691,285.069068908691,285.069068908691,294.969291687012,294.969291687012,294.969291687012,294.969291687012,302.943450927734,302.943450927734,302.943450927734,302.943450927734,310.361801147461,310.361801147461,310.361801147461,310.361801147461,317.49568939209,317.49568939209,317.49568939209,317.49568939209,324.058311462402,324.058311462402,324.058311462402,324.058311462402,330.4208984375,330.4208984375,330.4208984375,330.4208984375,337.279975891113,337.279975891113,337.279975891113,337.279975891113,344.926277160645,344.926277160645,344.926277160645,344.926277160645,351.46703338623,351.46703338623,351.46703338623,351.46703338623,358.276252746582,358.276252746582,358.276252746582,358.276252746582,366.661178588867,366.661178588867,366.661178588867,366.661178588867,373.382301330566,373.382301330566,373.382301330566,373.382301330566,344.099571228027,344.099571228027,344.099571228027,344.099571228027,344.099571228027,273.597473144531,273.597473144531,273.597473144531,273.597473144531,273.597473144531,279.953079223633,279.953079223633,279.953079223633,279.953079223633,290.587936401367,290.587936401367,303.026695251465,303.026695251465,303.026695251465,303.026695251465,303.026695251465,303.849891662598,303.849891662598,303.849891662598,303.849891662598,303.849891662598,303.849891662598,304.844390869141,304.844390869141,304.844390869141,304.844390869141,304.844390869141,305.668167114258,305.668167114258,305.668167114258,305.668167114258,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,311.037689208984,313.012596130371,313.012596130371,313.012596130371,313.012596130371,313.012596130371,313.01277923584,313.01277923584,313.01277923584,313.01277923584,313.01277923584,317.976417541504,317.976417541504,317.976417541504,317.976417541504,317.976417541504,318.831954956055,318.831954956055,318.831954956055,318.831954956055,318.831954956055,324.383163452148,324.383163452148,324.383163452148,324.383163452148,324.383163452148,332.509887695312,332.509887695312,332.509887695312,332.509887695312,332.509887695312,338.890502929688,338.890502929688,338.890502929688,338.890502929688,338.890502929688,338.890502929688,340.672843933105,340.672843933105,340.672843933105,340.672843933105,340.672843933105,350.888442993164,350.888442993164,350.888442993164,350.888442993164,350.888442993164,358.372039794922,358.372039794922,358.372039794922,358.372039794922,358.372039794922,366.371620178223,366.371620178223,366.371620178223,366.371620178223,366.371620178223,374.368026733398,374.368026733398,374.368026733398,374.368026733398,374.368026733398,382.361694335938,382.361694335938,382.361694335938,382.361694335938,382.361694335938,388.844413757324,388.844413757324,388.844413757324,388.844413757324,388.844413757324,412.50749206543,412.50749206543,412.50749206543,423.108139038086,423.108139038086,423.108139038086,446.767738342285,446.767738342285,446.767738342285,444.551864624023,444.551864624023,444.551864624023,444.551864624023,444.551864624023,321.401824951172,321.401824951172,321.401824951172,321.401824951172,321.401824951172,331.819137573242,331.819137573242,331.819137573242,331.819137573242,339.794410705566,339.794410705566,339.794410705566,339.794410705566,339.794410705566,350.526084899902,350.526084899902,350.526084899902,350.526084899902,350.526084899902,355.159912109375,355.159912109375,355.159912109375,355.159912109375,355.159912109375,355.159912109375,314.296279907227,314.296279907227,314.296279907227,321.351951599121,321.351951599121,321.351951599121,321.351951599121,321.351951599121,328.782386779785,328.782386779785,328.782386779785,328.782386779785,328.782386779785,338.301788330078,338.301788330078,338.301788330078,338.301788330078,338.301788330078,345.521522521973,345.521522521973,345.521522521973,345.521522521973,345.521522521973,345.521522521973,345.521522521973,314.135841369629,314.135841369629,314.135841369629,314.135841369629,314.135841369629,314.135841369629,322.575202941895,322.575202941895,322.575202941895,322.575202941895,322.575202941895,338.573181152344,338.573181152344,338.573181152344,338.573181152344,353.718284606934,353.718284606934,353.718284606934,353.718284606934,361.361541748047,361.361541748047,361.361541748047,361.361541748047,369.211654663086,369.211654663086,369.211654663086,369.211654663086,377.261032104492,377.261032104492,377.261032104492,377.261032104492,376.820976257324,376.820976257324,376.820976257324,376.820976257324,376.820976257324,312.962600708008,312.962600708008,312.962600708008,312.962600708008,323.862014770508,323.862014770508,323.862014770508,323.862014770508,331.17601776123,331.17601776123,331.17601776123,331.17601776123,341.444358825684,341.444358825684,341.444358825684,341.444358825684,348.297836303711,348.297836303711,348.297836303711,348.297836303711,355.371398925781,355.371398925781,355.371398925781,355.371398925781,366.242485046387,366.242485046387,366.242485046387,366.242485046387,373.468597412109,373.468597412109,373.468597412109,373.468597412109,373.468597412109,373.468597412109,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,384.956481933594,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,386.764701843262,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,392.865310668945,394.806526184082,394.806526184082,394.806526184082,394.806526184082,394.806526184082,394.806709289551,394.806709289551,394.806709289551,394.806709289551,394.806709289551,399.665924072266,399.665924072266,399.665924072266,399.665924072266,399.665924072266,400.504386901855,400.504386901855,400.504386901855,400.504386901855,400.504386901855,409.295776367188,409.295776367188,409.295776367188,409.295776367188,418.598739624023,418.598739624023,418.598739624023,418.598739624023,418.598739624023,420.214973449707,420.214973449707,420.214973449707,420.395133972168,420.395133972168,420.395133972168,420.395133972168,420.395133972168,426.90007019043,426.90007019043,426.90007019043,426.90007019043,426.90007019043,432.336524963379,432.336524963379,432.336524963379,432.336524963379,432.336524963379,440.047912597656,440.047912597656,440.047912597656,440.047912597656,440.047912597656,448.041305541992,448.041305541992,448.041305541992,448.041305541992,448.041305541992,413.857200622559,413.857200622559,413.857200622559,413.857200622559,413.857200622559,413.857200622559,328.061477661133,328.061477661133,328.061477661133,328.061477661133,328.061477661133,336.059257507324,336.059257507324,336.059257507324,336.059257507324,336.059257507324,366.463737487793,366.463737487793,366.463737487793,377.203712463379,377.203712463379,377.203712463379,393.018501281738,393.018501281738,408.055068969727,408.055068969727,408.055068969727,408.055068969727,417.317314147949,417.317314147949,417.317314147949,417.317314147949,417.317314147949,428.588150024414,428.588150024414,428.588150024414,428.588150024414,438.871223449707,438.871223449707,438.871223449707,446.683708190918,446.683708190918,446.683708190918,446.683708190918,446.683708190918,452.722969055176,452.722969055176,452.722969055176,452.722969055176,352.113090515137,352.113090515137,352.113090515137,352.113090515137,309.359420776367,309.359420776367,309.359420776367,309.359420776367,309.359420776367,309.359420776367,309.359420776367,309.359420776367,318.438018798828,318.438018798828,318.438018798828,324.176086425781,324.176086425781,324.176086425781,324.176086425781,324.176086425781,331.07746887207,331.07746887207,331.07746887207,338.098876953125,338.098876953125,338.098876953125,338.098876953125,338.098876953125,338.098876953125,346.192970275879,346.192970275879,346.192970275879,346.192970275879,346.192970275879,346.192970275879,315.006477355957,315.006477355957,315.006477355957,315.006477355957,315.006477355957,321.969078063965,321.969078063965,321.969078063965,321.969078063965,334.105209350586,334.105209350586,334.105209350586,334.105209350586,334.105209350586,345.4580078125,345.4580078125,345.4580078125,345.4580078125,352.860450744629,352.860450744629,352.860450744629,352.860450744629,360.621795654297,360.621795654297,360.621795654297,360.621795654297,369.191116333008,369.191116333008,369.191116333008,369.191116333008,376.529243469238,376.529243469238,376.529243469238,376.529243469238,383.344383239746,383.344383239746,383.344383239746,383.344383239746,390.053733825684,390.053733825684,390.053733825684,390.053733825684,390.053733825684,316.747894287109,316.747894287109,316.747894287109,316.747894287109,316.747894287109,319.633644104004,319.633644104004,319.633644104004,319.633644104004,331.517753601074,331.517753601074,331.517753601074,331.517753601074,340.719696044922,340.719696044922,340.719696044922,340.719696044922,348.200248718262,348.200248718262,348.200248718262,348.200248718262,356.701057434082,356.701057434082,356.701057434082,356.701057434082,365.313873291016,365.313873291016,375.217185974121,375.217185974121,375.217185974121,375.217185974121,375.217185974121,375.217262268066,375.217262268066,375.217262268066,375.217262268066,375.217262268066,377.030426025391,377.030426025391,377.030426025391,377.030426025391,377.030426025391,377.030715942383,377.030715942383,377.030715942383,377.030715942383,377.030715942383,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,383.182884216309,385.140579223633,385.140579223633,385.140579223633,385.140579223633,385.140579223633,385.505035400391,385.505035400391,385.505035400391,385.505035400391,385.505035400391,390.075309753418,390.075309753418,390.075309753418,390.075309753418,390.075309753418,390.93586730957,390.93586730957,390.93586730957,390.93586730957,390.93586730957,399.403854370117,399.403854370117,399.403854370117,399.403854370117,399.403854370117,409.202453613281,409.202453613281,409.202453613281,409.202453613281,409.202453613281,411.512702941895,411.512702941895,411.512702941895,411.512702941895,411.512702941895,411.512702941895,413.295043945312,413.295043945312,413.295043945312,413.295043945312,413.295043945312,423.62419128418,423.62419128418,423.62419128418,423.62419128418,423.62419128418,431.117202758789,431.117202758789,431.117202758789,431.117202758789,431.117202758789,439.112670898438,439.112670898438,439.112670898438,439.112670898438,439.112670898438,447.104591369629,447.104591369629,447.104591369629,447.104591369629,447.104591369629,420.641502380371,420.641502380371,420.641502380371,420.641502380371,420.641502380371,420.641502380371,337.578155517578,337.578155517578,337.578155517578,337.578155517578,361.931686401367,361.931686401367,361.931686401367,361.931716918945,361.931716918945,361.931716918945,385.163444519043,385.163444519043,385.163444519043,394.973579406738,394.973579406738,394.973579406738,394.973579406738,394.973579406738,403.562232971191,403.562232971191,403.562232971191,403.562232971191,403.562232971191,412.07585144043,412.07585144043,412.07585144043,421.095077514648,421.095077514648,421.095077514648,421.095077514648,421.095077514648,428.145851135254,428.145851135254,428.145851135254,428.145851135254,428.145851135254,437.983589172363,437.983589172363,437.983589172363,437.983589172363,437.983589172363,437.983589172363,375.645927429199,375.645927429199,375.645927429199,375.645927429199,375.645927429199,383.891830444336,383.891830444336,383.891830444336,392.027503967285,392.027503967285,392.027503967285,392.027503967285,392.027503967285,399.088073730469,399.088073730469,399.088073730469,406.577285766602,406.577285766602,406.577285766602,406.577285766602,406.577285766602,410.603477478027,410.603477478027,410.603477478027,410.603477478027,410.603477478027,410.603477478027,347.268180847168,347.268180847168,347.268180847168,352.931327819824,352.931327819824,352.931327819824,352.931327819824,364.680839538574,364.680839538574,364.680839538574,364.680839538574,364.680839538574,375.22794342041,375.22794342041,375.22794342041,375.22794342041,383.297782897949,383.297782897949,383.297782897949,383.297782897949,392.124214172363,392.124214172363,392.124214172363,392.124214172363,399.656883239746,399.656883239746,399.656883239746,399.656883239746,407.015167236328,407.015167236328,407.015167236328,407.015167236328,414.640655517578,414.640655517578,414.640655517578,414.640655517578,413.230270385742,413.230270385742,413.230270385742,413.230270385742,413.230270385742,342.314170837402,342.314170837402,342.314170837402,342.314170837402,349.611824035645,349.611824035645,349.611824035645,349.611824035645,359.635765075684,359.635765075684,359.635765075684,359.635765075684,369.912536621094,369.912536621094,369.912536621094,369.912536621094,377.170372009277,377.170372009277,377.170372009277,377.170372009277,384.40079498291,384.40079498291,384.40079498291,384.40079498291,391.080078125,391.080078125,391.080078125,391.080078125,405.054122924805,405.054122924805,405.054122924805,406.029571533203,406.029571533203,406.029571533203,406.029571533203,406.029571533203,407.797035217285,407.797035217285,407.797035217285,407.797035217285,407.797035217285,407.797325134277,407.797325134277,407.797325134277,407.797325134277,407.797325134277,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,413.766357421875,415.679862976074,415.679862976074,415.679862976074,415.679862976074,415.679862976074,415.680046081543,415.680046081543,415.680046081543,415.680046081543,415.680046081543,420.466926574707,420.466926574707,420.466926574707,420.466926574707,420.466926574707,421.307373046875,421.307373046875,421.307373046875,421.307373046875,421.307373046875,429.518585205078,429.518585205078,429.518585205078,429.518585205078,429.518585205078,437.648139953613,437.648139953613,437.648139953613,437.648139953613,437.648139953613,440.591598510742,440.591598510742,440.591598510742,440.591598510742,440.591598510742,440.591598510742,447.249771118164,447.249771118164,447.249771118164,447.249771118164,447.249771118164,452.641242980957,452.641242980957,452.641242980957,452.641242980957,452.641242980957,405.324806213379,405.324806213379,405.324806213379,405.324806213379,405.324806213379,405.324806213379,353.758895874023,353.758895874023,353.758895874023,353.758895874023,353.758895874023,363.324806213379,363.324806213379,363.324806213379,363.324806213379,363.324806213379,373.167709350586,373.167709350586,373.167709350586,373.167709350586,373.167709350586,385.136245727539,385.136245727539,385.136245727539,418.343627929688,418.343627929688,418.343627929688,418.768783569336,418.768783569336,418.768783569336,442.068519592285,442.068519592285,442.068519592285,452.270362854004,452.270362854004,452.270362854004,452.270362854004,406.36695098877,406.36695098877,406.36695098877,419.575607299805,419.575607299805,419.575607299805,419.575607299805,429.555572509766,429.555572509766,429.555572509766,429.555572509766,429.555572509766,439.381042480469,439.381042480469,439.381042480469,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,444.800758361816,409.584396362305,409.584396362305,409.584396362305,409.584396362305,304.058753967285,304.058753967285,304.058753967285,304.058753967285,269.570938110352,269.570938110352,269.570938110352,269.570938110352,269.570945739746,269.570945739746,269.570945739746,278.088745117188,278.088745117188,278.088745117188,278.088745117188,278.088745117188,284.532119750977,284.532119750977,284.532119750977,284.532119750977,284.532119750977,284.532119750977,293.419708251953,293.419708251953,293.419708251953,293.419708251953,293.419708251953,300.94310760498,300.94310760498,300.94310760498,300.94310760498,300.94310760498,300.94310760498,306.321212768555,306.321212768555,306.321212768555,306.321212768555,306.321212768555,306.321212768555,306.321212768555,274.110740661621,274.110740661621,274.110740661621,283.472747802734,283.472747802734,283.472747802734,283.472747802734,298.812797546387,298.812797546387,298.812797546387,298.812797546387,308.518104553223,308.518104553223,308.518104553223,308.518104553223,308.518104553223,316.903350830078,316.903350830078,316.903350830078,316.903350830078,325.613021850586,325.613021850586,325.613021850586,325.613021850586,333.007385253906,333.007385253906,333.007385253906,333.007385253906,340.657371520996,340.657371520996,340.657371520996,340.657371520996,348.362251281738,348.362251281738,348.362251281738,348.362251281738,356.745002746582,356.745002746582,356.745002746582,356.745002746582,364.153823852539,364.153823852539,364.153823852539,364.153823852539,353.753700256348,353.753700256348,353.753700256348,353.753700256348,353.753700256348,277.462814331055,277.462814331055,277.462814331055,277.462814331055,288.351585388184,288.351585388184,288.351585388184,288.351585388184,295.293029785156,295.293029785156,295.293029785156,295.293029785156,306.741828918457,306.741828918457,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,313.368301391602,315.17163848877,315.17163848877,315.17163848877,315.17163848877,315.17163848877,315.171928405762,315.171928405762,315.171928405762,315.171928405762,315.171928405762,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,321.262954711914,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,323.199089050293,328.078887939453,328.078887939453,328.078887939453,328.078887939453,328.933296203613,328.933296203613,328.933296203613,328.933296203613,328.933296203613,337.409591674805,337.409591674805,337.409591674805,337.409591674805,337.409591674805,346.647987365723,346.647987365723,346.647987365723,346.647987365723,346.647987365723,350.542747497559,350.542747497559,350.542747497559,350.72290802002,350.72290802002,350.72290802002,350.72290802002,350.72290802002,357.202972412109,357.202972412109,357.202972412109,357.202972412109,357.202972412109,367.112548828125,367.112548828125,367.112548828125,367.112548828125,367.112548828125,378.163688659668,378.163688659668,378.163688659668,378.163688659668,378.163688659668,386.158226013184,386.158226013184,386.158226013184,386.158226013184,386.158226013184,394.154884338379,394.154884338379,394.154884338379,394.154884338379,394.154884338379,401.831970214844,401.831970214844,401.831970214844,424.568023681641,424.568023681641,424.568023681641,435.264228820801,435.264228820801,435.264228820801,451.014282226562,451.014282226562,410.555084228516,410.555084228516,410.555084228516,410.555084228516,311.976997375488,311.976997375488,311.976997375488,326.980400085449,326.980400085449,326.980400085449,326.980400085449,326.980400085449,335.691970825195,335.691970825195,335.691970825195,335.691970825195,346.124473571777,346.124473571777,346.124473571777,346.124473571777,346.124473571777,356.909965515137,356.909965515137,356.909965515137,361.788444519043,361.788444519043,361.788444519043,361.788444519043,317.514694213867,317.514694213867,317.514694213867,317.514694213867,317.514694213867,330.734588623047,330.734588623047,330.734588623047,330.734588623047,330.734588623047,337.942039489746,337.942039489746,337.942039489746,344.725891113281,344.725891113281,344.725891113281,344.725891113281,344.725891113281,344.725891113281,318.385200500488,318.385200500488,318.385200500488,327.308265686035,327.308265686035,327.308265686035,327.308265686035,342.680953979492,342.680953979492,342.680953979492,342.680953979492,353.043579101562,353.043579101562,353.043579101562,353.043579101562,359.7294921875,359.7294921875,359.7294921875,359.7294921875,368.573745727539,368.573745727539,368.573745727539,368.573745727539,376.082427978516,376.082427978516,376.082427978516,376.082427978516,376.829124450684,376.829124450684,376.829124450684,376.829124450684,376.829124450684,317.88346862793,317.88346862793,317.88346862793,317.88346862793,317.88346862793,319.070617675781,319.070617675781,319.070617675781,319.070617675781,326.98072052002,326.98072052002,326.98072052002,326.98072052002,335.547927856445,335.547927856445,335.547927856445,335.547927856445,342.833778381348,342.833778381348,342.833778381348,342.833778381348,350.608215332031,350.608215332031,350.608215332031,350.608215332031,359.075675964355,359.075675964355,359.075675964355,359.075675964355,366.893188476562,366.893188476562,366.893188476562,366.893188476562,377.226409912109,377.226409912109,377.226409912109,385.2744140625,385.2744140625,385.2744140625,385.2744140625,385.2744140625,385.274490356445,385.274490356445,385.274490356445,385.274490356445,385.274490356445,387.093925476074,387.093925476074,387.093925476074,387.093925476074,387.093925476074,387.918838500977,387.918838500977,387.918838500977,387.918838500977,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,393.231872558594,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,395.177833557129,400.091430664062,400.091430664062,400.091430664062,400.091430664062,400.091430664062,400.952522277832,400.952522277832,400.952522277832,400.952522277832,400.952522277832,406.00749206543,406.00749206543,406.00749206543,406.00749206543,406.00749206543,415.351875305176,415.351875305176,415.351875305176,415.351875305176,415.351875305176,420.738143920898,420.738143920898,420.738143920898,420.738143920898,420.738143920898,420.738143920898,423.806396484375,423.806396484375,423.806396484375,423.806396484375,423.806396484375,432.75025177002,432.75025177002,432.75025177002,432.75025177002,432.75025177002,440.36092376709,440.36092376709,440.36092376709,440.36092376709,440.36092376709,448.361793518066,448.361793518066,448.361793518066,448.361793518066,448.361793518066,429.515083312988,429.515083312988,429.515083312988,429.515083312988,429.515083312988,429.515083312988,327.207206726074,327.207206726074,327.207206726074,327.207206726074,327.207206726074,342.366760253906,342.366760253906,342.366760253906,342.366760253906,342.366760253906,367.05052947998,367.05052947998,367.05052947998,378.105651855469,378.105651855469,378.105651855469,402.630859375,402.630859375,402.630859375,412.360389709473,412.360389709473,412.360389709473,412.360389709473,412.360389709473,423.353645324707,423.353645324707,423.353645324707,423.353645324707,433.332740783691,433.332740783691,433.332740783691,433.332740783691,441.101097106934,441.101097106934,441.101097106934,448.169075012207,448.169075012207,448.169075012207,448.169075012207,448.169075012207,454.717781066895,454.717781066895,454.717781066895,454.717781066895,454.717781066895,454.717781066895,386.216957092285,386.216957092285,386.216957092285,386.216957092285,386.216957092285,396.630218505859,396.630218505859,396.630218505859,396.630218505859,396.630218505859,396.630218505859,399.933944702148,399.933944702148,399.933944702148,399.933944702148,399.933944702148,407.37907409668,407.37907409668,407.37907409668,407.37907409668,407.37907409668,414.263252258301,414.263252258301,414.263252258301,414.263252258301,314.858535766602,314.858535766602,314.858535766602,314.858535766602,314.858535766602,322.864456176758,322.864456176758,322.864456176758,322.864456176758,322.864456176758,331.070930480957,331.070930480957,331.070930480957,331.070930480957,340.212600708008,340.212600708008,340.212600708008,340.212600708008,352.281669616699,352.281669616699,352.281669616699,352.281669616699,359.421699523926,359.421699523926,359.421699523926,366.854591369629,366.854591369629,366.854591369629,366.854591369629,372.052055358887,372.052055358887,372.052055358887,372.052055358887,372.052055358887,311.583076477051,311.583076477051,311.583076477051,311.583076477051,318.998611450195,318.998611450195,318.998611450195,318.998611450195,331.265296936035,331.265296936035,331.265296936035,331.265296936035,339.579345703125,339.579345703125,339.579345703125,339.579345703125,346.303924560547,346.303924560547,346.303924560547,346.303924560547,354.581382751465,354.581382751465,354.581382751465,354.581382751465,361.812835693359,361.812835693359,361.812835693359,361.812835693359,370.639961242676,370.639961242676,370.639961242676,370.639961242676,377.607803344727,377.607803344727,377.607803344727,377.607803344727,387.119041442871,387.119041442871,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,396.381637573242,398.277702331543,398.277702331543,398.277702331543,398.277702331543,398.277702331543,398.277992248535,398.277992248535,398.277992248535,398.277992248535,398.277992248535,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,404.620239257812,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,406.596672058105,410.347900390625,410.347900390625,410.347900390625,410.347900390625,410.347900390625,411.598823547363,411.598823547363,411.598823547363,411.598823547363,411.598823547363,412.452239990234,412.452239990234,412.452239990234,412.452239990234,412.452239990234,420.100860595703,420.100860595703,420.100860595703,420.100860595703,420.100860595703,429.748352050781,429.748352050781,429.748352050781,429.748352050781,429.748352050781,434.703094482422,434.703094482422,434.703094482422,434.724624633789,434.724624633789,434.724624633789,441.331825256348,441.331825256348,441.331825256348,441.331825256348,441.331825256348,447.685554504395,447.685554504395,447.685554504395,447.685554504395,447.685554504395,452.408805847168,452.408805847168,452.408805847168,452.408805847168,452.408805847168,452.408805847168,370.4990234375,370.4990234375,370.4990234375,370.4990234375,370.4990234375,370.4990234375,325.547172546387,325.547172546387,325.547172546387,325.547172546387,325.547172546387,333.583213806152,333.583213806152,333.583213806152,333.583213806152,333.583213806152,343.055519104004,343.055519104004,343.055519104004,343.055519104004,343.055519104004,372.315315246582,372.315315246582,372.315315246582,383.125419616699,383.125419616699,383.125419616699,407.18985748291,407.18985748291,407.18985748291,417.529899597168,417.529899597168,417.529899597168,417.529899597168,426.692016601562,426.692016601562,426.692016601562,426.692016601562,426.692016601562,434.727699279785,434.727699279785,434.727699279785,434.727699279785,443.771644592285,443.771644592285,443.771644592285,443.771644592285,443.771644592285,453.087768554688,453.087768554688,453.087768554688,453.087768554688,453.087768554688,383.249145507812,383.249145507812,383.249145507812,383.249145507812,383.249145507812,383.249145507812,378.575256347656,378.575256347656,378.575256347656,378.575256347656,378.575256347656,384.744316101074,384.744316101074,384.744316101074,384.744316101074,384.744316101074,390.759147644043,390.759147644043,390.759147644043,398.449180603027,398.449180603027,398.449180603027,398.449180603027,398.449180603027,405.203620910645,405.203620910645,405.203620910645,405.203620910645,405.203620910645,407.829689025879,407.829689025879,407.829689025879,407.829689025879,407.829689025879,407.829689025879,407.829689025879,348.51537322998,348.51537322998,348.51537322998,348.51537322998,348.51537322998,348.51537322998,348.51537322998,351.728546142578,351.728546142578,351.728546142578,351.728546142578,351.728546142578,362.905906677246,362.905906677246,362.905906677246,362.905906677246,362.905906677246,362.905906677246,372.313827514648,372.313827514648,372.313827514648,372.313827514648,372.313827514648,378.669013977051,378.669013977051,378.669013977051,388.997360229492,388.997360229492,388.997360229492,388.997360229492,397.323890686035,397.323890686035,397.323890686035,397.323890686035,397.323890686035,397.323890686035,352.04679107666,352.04679107666,352.04679107666,352.04679107666,359.600563049316,359.600563049316,359.600563049316,359.600563049316,366.727554321289,366.727554321289,366.727554321289,366.727554321289,373.969009399414,373.969009399414,373.969009399414,373.969009399414,380.943801879883,380.943801879883,380.943801879883,380.943801879883,388.342651367188,388.342651367188,388.342651367188,388.342651367188,395.346336364746,395.346336364746,395.346336364746,395.346336364746,405.156806945801,405.156806945801,405.156806945801,405.156806945801,416.480964660645,416.480964660645,416.480964660645,416.480964660645,429.966781616211,429.966781616211,429.966781616211,429.966781616211,436.998107910156,436.998107910156,436.998107910156,436.998107910156,450.898643493652,450.898643493652,450.898643493652,450.898643493652,452.590400695801,452.590400695801,452.590400695801,452.590400695801,452.590400695801,454.452835083008,454.452835083008,454.452835083008,454.452835083008,454.452835083008,454.453125,454.453125,454.453125,454.453125,454.453125,399.868606567383,399.868606567383,399.868606567383,399.868606567383,399.868606567383,399.868606567383,359.19263458252,359.19263458252,359.19263458252,359.19263458252,359.19263458252,359.192710876465,359.192710876465,359.192710876465,359.192710876465,359.192710876465,361.135787963867,361.135787963867,361.135787963867,361.135787963867,361.135787963867,363.583564758301,363.583564758301,363.583564758301,363.583564758301,363.583564758301,366.04948425293,366.04948425293,366.04948425293,366.04948425293,366.04948425293,366.900352478027,366.900352478027,366.900352478027,366.900352478027,366.900352478027,375.403076171875,375.403076171875,375.403076171875,375.403076171875,375.403076171875,384.313102722168,384.313102722168,384.313102722168,384.313102722168,384.313102722168],"meminc":[0,0,0,0,0,0,6.26935577392578,0,0,0,0,7.05803680419922,0,0,0,0,12.7523040771484,0,0,10.6403198242188,0,0,10.633415222168,0,0,0,0,0,11.5401840209961,0,0,0,0,-9.91434478759766,0,0,0,0,-29.0293273925781,0,0,0,0,7.13404083251953,0,0,0,0,6.70297241210938,0,0,0,0,0,0,-16.2022094726562,0,0,0,0,7.68017578125,0,0,0,0,-6.82122802734375,0,0,0,0,0,2.56845092773438,0,0,0,0,6.1234130859375,0,0,0,0,7.63285064697266,0,0,0,0,-13.6125869750977,0,0,0,0,7.09253692626953,0,0,0,2.61982727050781,0,0,0,-15.9348678588867,0,0,0,7.82487487792969,0,0,0,1.54334259033203,0,0,0,0,0.906059265136719,0,0,0,0,5.81713104248047,0,0,0,0,0,3.03615570068359,0,0,0,0,10.8583068847656,0,0,0,0,9.23480987548828,0,0,17.0454025268555,0,0,12.5645217895508,0,0,-38.1368560791016,0,0,0,0,0,-6.260986328125,0,0,0,0,8.68177032470703,0,0,0,0,-12.8799819946289,0,0,0,0,6.79607391357422,0,0,0,0,-2.78218841552734,0,0,0,0,0,0,-1.74098968505859,0,0,0,0,8.14304351806641,0,0,0,0,-11.827766418457,0,0,0,0,8.40210723876953,0,0,0,0,6.96022033691406,0,0,0,0,-11.9263687133789,0,0,0,0,0,5.40258026123047,0,0,0,2.50961303710938,0,0,0,-13.1808776855469,0,0,0,7.37681579589844,0,0,0,0,2.49903106689453,0,0,0,0,1.07747650146484,0,0,0,0,4.70815277099609,0,0,0,0,2.57801818847656,0,0,1.78234100341797,0,0,0,0,12.1309432983398,0,0,0,0,7.89191436767578,0,0,0,0,7.49755096435547,0,0,0,15.9039916992188,0,10.7350387573242,0,0,0,0,6.70877838134766,0,0,0,3.21601867675781,0,0,0,0,0,0,-98.4082870483398,0,0,0,0,0,0,9.41886138916016,0,0,0,0,7.14132690429688,0,0,6.96505737304688,0,0,-17.9053268432617,0,0,0,0,10.5431365966797,0,0,0,0,6.8695068359375,0,0,0,0,0,0,-14.391487121582,0,0,0,0,7.58709716796875,0,0,0,0,0,6.30132293701172,0,0,0,-13.087043762207,0,0,0,0,8.44681549072266,0,0,0,9.21794891357422,0,0,0,0,-24.2560653686523,0,0,0,2.73119354248047,0,0,0,4.18377685546875,0,0,0,0,6.26744079589844,0,0,0,0,2.85048675537109,0,0,0,0,7.62939453125e-05,0,0,0,0,1.20209503173828,0,0,0,0,2.59911346435547,0,0,0,0,8.74169158935547,0,0,0,0,0,1.78234100341797,0,0,0,0,4.56870269775391,0,0,0,0,7.86381530761719,0,0,0,0,7.90853118896484,0,0,0,0,18.7585067749023,0,0,17.5912094116211,0,0,0,-69.1118087768555,0,0,0,0,9.69027709960938,0,0,9.11071014404297,0,0,0,0,-0.767929077148438,0,0,0,0,0,-8.70748901367188,0,0,0,0,11.1455459594727,0,0,0,0,0,-14.1739501953125,0,0,0,0,11.091682434082,0,0,0,0,-17.3031387329102,0,0,0,0,6.51939392089844,0,0,0,0,6.62458038330078,0,0,0,0,7.39835357666016,0,0,0,0,-12.0124588012695,0,0,0,10.2654342651367,0,0,0,-2.70790100097656,0,0,0,0,-11.8350143432617,0,0,0,7.06330108642578,0,3.30263519287109,0,0,0,0,3.39568328857422,0,0,0,0,1.56295013427734,0,0,0,0,3.98451995849609,0,0,0,0,9.33015441894531,0,0,0,0,0,1.78234100341797,0,0,0,0,9.47862243652344,0,0,0,0,10.9702224731445,0,0,0,0,5.58376312255859,0,0,14.9305038452148,0,0,18.5700225830078,0,0,0,0.285842895507812,0,0,0,0,0,-66.8076095581055,0,0,0,0,10.1915969848633,0,0,0,0,1.19856262207031,0,0,0,0,0,-8.68988037109375,0,0,0,0,6.60748291015625,0,0,0,0,-13.602897644043,0,0,0,0,8.77736663818359,0,0,0,0,-2.98813629150391,0,0,0,-2.57363128662109,0,0,0,0,6.72260284423828,0,0,0,0,-1.58721160888672,0,0,0,0,0,0,-5.67184448242188,0,0,0,12.1508941650391,0,0,0,3.37471008300781,0,0,0,0,0,-14.4446640014648,0,0,0,2.96286010742188,0,0,0,2.85421752929688,0,0,0,-9.05335998535156,0,0,0,8.76967620849609,0,0,0,0,3.60147094726562,0,0,0,0,1.62674713134766,0,0,0,0,3.28641510009766,0,0,0,0,10.8685913085938,0,0,0,0,0,2.6866455078125,0,0,0,0,11.7259750366211,0,0,0,0,7.93170928955078,0,0,0,0,5.90621948242188,0,0,16.3943481445312,0,0,-52.4818267822266,0,0,11.4720993041992,0,0,0,0,0,7.51953887939453,0,0,0,5.67588806152344,0,0,0,0,0,0,-19.5414276123047,0,0,0,0,9.40680694580078,0,0,0,0,-10.6817855834961,0,0,0,0,11.4320983886719,0,0,0,0,-20.0052337646484,0,0,0,0,0,-36.0423355102539,0,0,0,0,6.14706420898438,0,0,0,0,5.82135009765625,0,0,0,0,5.72825622558594,0,0,0,-15.5189056396484,0,0,0,0,8.80594635009766,0,0,5.92182159423828,0,0,0,0,7.61360168457031,0,0,0,0,0,-19.5772171020508,0,0,0,3.71046447753906,0,0,0,2.24294281005859,0,0,0,0,-5.24819946289062,0,0,0,0,1.52848052978516,0,0,0,0,2.893798828125,0,0,0,0,1.71578216552734,0,0,0,0,0.0005340576171875,0,0,0,0,4.24542236328125,0,0,0,0,10.8081207275391,0,0,0,0,0,1.82289123535156,0,0,0,0,12.8191909790039,0,0,0,0,7.93955993652344,0,0,0,0,7.13486480712891,0,0,16.8098907470703,0,0,18.7669830322266,0,0,0,5.18489074707031,0,0,0,0,0,-72.1008758544922,0,0,0,0,7.73263549804688,0,0,0,0,0,6.44587707519531,0,0,0,0,-19.1132736206055,0,0,0,5.18851470947266,0,0,0,0,9.94792175292969,0,0,4.29560852050781,0,0,0,-10.515022277832,0,0,0,0,5.84340667724609,0,0,0,0,-5.09869384765625,0,0,0,0,-4.34046936035156,0,0,0,0,8.84832763671875,0,0,0,0,-1.03605651855469,0,0,0,0,0,-4.38188171386719,0,0,0,7.45998382568359,0,0,0,0,5.71543121337891,0,0,0,-19.9734497070312,0,0,0,4.07008361816406,0,0,0,0,7.62806701660156,0,0,0,0,1.77395629882812,0,0,0,0,3.00985717773438,0,0,0,0,1.76804351806641,0,0,0,0,1.10963439941406,0,0,4.17569732666016,0,0,0,0,11.6595611572266,0,0,0,0,0,3.35849761962891,0,0,0,0,11.3556900024414,0,0,0,0,7.94649505615234,0,0,0,0,6.95474243164062,0,0,-49.5929565429688,0,0,7.13228607177734,0,20.2338104248047,0,0,0,7.51535034179688,0,0,0,0,6.85459136962891,0,0,0,8.32011413574219,0,0,0,0,0,0,-22.8276901245117,0,0,0,0,5.82132720947266,0,0,0,0,0,5.99527740478516,0,0,0,0,-18.1651916503906,0,0,0,0,0,0,-31.4620132446289,0,0,0,0,5.48586273193359,0,0,0,0,5.40502166748047,0,0,0,0,-5.10132598876953,0,0,0,-2.23761749267578,0,0,0,0,5.84823608398438,0,0,0,0,4.16584014892578,0,0,0,0,0,-15.9333648681641,0,0,0,10.9684524536133,0,0,0,0,8.38423156738281,0,0,0,0.813095092773438,0,0,0,0,0,0,-19.9138107299805,0,0,0,3.47503662109375,0,0,0,3.00624084472656,0,0,0,9.58180999755859,0,0,0,0,0.810188293457031,0,0,0,0,4.19102478027344,0,0,0,0,1.50714111328125,0,0,0,0,0,0.336769104003906,0,0,0,0,3.86410522460938,0,0,0,0,13.4518356323242,0,0.426292419433594,0,0,1.78234100341797,0,0,0,0,10.0720672607422,0,0,0,0,11.006103515625,0,0,0,0,6.87245178222656,0,0,0,0,-63.7447967529297,0,0,0,14.8831481933594,0,0,21.2159194946289,0,0,0,0,8.24148559570312,0,0,0,0,6.91043090820312,0,0,0,0,5.85436248779297,0,0,0,-25.8040466308594,0,0,0,0,5.6939697265625,0,0,7.84181976318359,0,0,0,-23.8121566772461,0,0,5.71604919433594,0,0,-4.76393127441406,0,0,0,0,0,0.1524658203125,0,0,0,0,5.72825622558594,0,0,0,0,-5.83396148681641,0,0,0,0,0,0,4.17738342285156,0,0,0,0,6.65164184570312,0,0,0,0,2.96014404296875,0,0,0,0,0,-14.6551818847656,0,0,0,0,4.59742736816406,0,0,0,2.97377014160156,0,0,0,-5.41871643066406,0,0,3.12528991699219,0,0,0,0,1.63125610351562,0,0,0,0,3.59684753417969,0,0,0,0,7.62939453125e-05,0,0,0,0,1.92591094970703,0,0,0,0,1.96012878417969,0,0,4.14626312255859,0,0,0,0,12.6461410522461,0,0,0,0,0,1.78234100341797,0,0,0,0,4.71321105957031,0,0,0,0,8.53884124755859,0,0,0,0,-48.4346237182617,0,0,0,0,0,10.85205078125,0,0,0,0,26.786979675293,0,0,10.7018051147461,0,0.124908447265625,0,0,0,0,0,-58.9513320922852,0,0,-59.6614761352539,0,21.3241424560547,0,0,0,0,9.40227508544922,0,0,0,0,6.51688385009766,0,0,-27.2028274536133,0,0,0,0,0,0,6.71883392333984,0,0,0,0,9.98961639404297,0,0,0,0,-13.9788589477539,0,0,7.09487915039062,0,0,8.08430480957031,0,0,0,0,-13.0426712036133,0,0,0,0,6.42084503173828,0,0,0,4.55862426757812,0,0,0,0,0,0,-10.7881393432617,0,0,0,7.68748474121094,0,0,0,5.46701049804688,0,0,0,0.788352966308594,0,0,0,0,-15.3539199829102,0,6.89360046386719,0,0,0,0,0.860115051269531,0,0,0,0,4.67237854003906,0,0,0,0,0,0,0,0,0,2.04019165039062,0,0,0,0,0.0005340576171875,0,0,0,0,4.38166046142578,0,0,0,0,14.135612487793,0,0,0,0,0.553779602050781,0,0,1.78234100341797,0,0,0,0,13.396240234375,0,0,0,0,7.96182250976562,0,0,0,0,8.41294860839844,0,0,22.2161407470703,0,0,10.973747253418,0,-76.1788864135742,0,0,14.0463638305664,0,0,0,9.86522674560547,0,0,0,0,6.6099853515625,0,0,0,0,-21.5466384887695,0,0,0,0,8.30465698242188,0,0,0,0,-3.65457153320312,0,0,0,0,0,-7.19072723388672,0,0,0,0,10.9006576538086,0,0,0,0,-13.3534393310547,0,0,0,0,0,5.34239196777344,0,0,0,0,10.5528793334961,0,0,0,0,-7.51121520996094,0,0,0,0,9.86695098876953,0,0,0,7.44176483154297,0,0,-26.4468231201172,0,0,0,4.234375,0,0,0,9.22263336181641,0,0,2.98845672607422,0,0,0,0,0.873252868652344,0,0,0,0,4.7679443359375,0,0,0,0,0.981582641601562,0,0,0,0,0,1.08992767333984,0,0,0,0,4.64794921875,0,0,0,0,14.0138549804688,0,0,0,0,3.56491088867188,0,0,1.82289123535156,0,0,0,0,10.4285659790039,0,0,0,0,11.0180740356445,0,0,0,0,7.96558380126953,0,0,0,0,0.0177841186523438,0,0,0,0,0,-51.1892776489258,0,0,7.20559692382812,0,0,21.027946472168,0,0,10.3331985473633,0,0,0,0,8.10100555419922,0,0,0,0,6.38408660888672,0,0,0,0,0,-28.1782073974609,0,0,0,0,0,11.471321105957,0,0,0,0,0.555892944335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-71.9780197143555,0,0,0,-19.081298828125,0,0,8.48107147216797,0,0,0,0,-1.62622833251953,0,0,0,0,0,-5.85881805419922,0,0,0,0,11.7970657348633,0,0,0,0,-13.3591537475586,0,0,0,0,0,6.03241729736328,0,0,0,0,10.1677169799805,0,0,0,8.82151031494141,0,0,0,-13.3232421875,0,0,0,0,-10.2533416748047,0,0,0,5.34534454345703,0,0,0,8.45447540283203,0,0,0,0,0.889595031738281,0,0,0,0,4.86695098876953,0,0,0,0,7.62939453125e-05,0,0,0,0,2.10908508300781,0,0,0,0,0,0,0,0,0,3.61894226074219,0,0,0,2.39191436767578,0,0,0,0,14.2908325195312,0,0,0,0,2.34004974365234,0,0,1.78234100341797,0,0,0,0,7.47261810302734,0,0,0,0,7.67857360839844,0,0,0,0,9.50232696533203,0,0,0,0,10.3977966308594,0,0,0,0,24.7813262939453,0,0,0.297767639160156,0,0,0,-75.4245910644531,0,15.2588272094727,0,0,0,8.23558044433594,0,0,0,10.180793762207,0,0,0,0,6.93808746337891,0,0,0,0,-27.0096969604492,0,0,0,0,6.88417816162109,0,0,-2.0106201171875,0,0,0,0,0,0,-2.17511749267578,0,0,0,0,8.93659210205078,0,0,0,0,-16.7559127807617,0,0,0,0,10.609245300293,0,0,0,0,8.36280822753906,0,0,0,-24.4727325439453,0,0,0,0,10.0067520141602,0,0,0,9.7723388671875,0,0,0,-27.5503540039062,0,0,0,3.6619873046875,0,0,0,9.12380981445312,0,0,3.19638824462891,0,0,0,0,0.944404602050781,0,0,0,0,5.13570404052734,0,0,0,0,7.62939453125e-05,0,0,0,0,2.19496917724609,0,0,0,0,0.0005340576171875,0,0,0,0,4.93514251708984,0,0,0,0,13.780891418457,0,0,0,0,6.49421691894531,0,0,0.180160522460938,0,0,0,0,6.36859893798828,0,0,0,0,8.88764953613281,0,0,0,0,9.47407531738281,0,0,0,0,-60.9226989746094,0,0,0,0,23.2151489257812,0,0,7.83842468261719,0,0,19.087646484375,0,0,15.2126617431641,0,0,0,0,-19.8307876586914,0,0,0,0,10.3476791381836,0,0,6.86056518554688,0,0,0,0,0,-44.1442947387695,0,0,0,0,6.99196624755859,0,0,0,0,6.32095336914062,0,0,0,0,-12.4224853515625,0,0,0,0,7.09730529785156,0,0,0,0,6.04907989501953,0,0,0,0,0,0,-13.905876159668,0,0,0,0,11.8035888671875,0,0,-4.7098388671875,0,0,0,0,0,0,-4.23118591308594,0,0,0,7.37236022949219,0,0,0,4.76915740966797,0,0,0,3.90831756591797,0,0,0,0,-20.7369079589844,0,0,0,10.9374694824219,0,0,0,0,0.950691223144531,0,0,0,0,5.2147216796875,0,0,0,0,7.62939453125e-05,0,0,0,0,2.22632598876953,0,0,0,0,0,0,0,0,0,5.05376434326172,0,0,0,0,14.0475997924805,0,0,0,0,9.35886383056641,0,0,0.180160522460938,0,0,0,0,-43.0289306640625,0,0,0,0,9.14812469482422,0,0,0,0,7.97939300537109,0,0,0,0,7.98838806152344,0,0,0,0,14.5796661376953,0,0,0,-25.68798828125,0,0,10.7066497802734,0,20.5771179199219,0,0,0,0,0,0,0,-108.226371765137,0,0,0,3.02244567871094,0,0,0,12.5696563720703,0,0,0,11.7214660644531,0,0,0,0,7.51850891113281,0,0,0,0,-25.114616394043,0,0,0,0,8.65975189208984,0,0,0,0,6.14705657958984,0,0,0,-15.5093994140625,0,0,9.78883361816406,0,0,0,0,-4.40992736816406,0,0,0,0,0,0,-6.13963317871094,0,0,0,0,8.23554229736328,0,0,0,9.27554321289062,0,0,0,0,-15.8799514770508,0,0,0,9.61643218994141,0,0,0,5.25848388671875,0,0,0,3.97560119628906,0,0,0,-23.4044189453125,0,0,0,12.3957748413086,0,0,0,0,1.01552581787109,0,0,0,0,5.66542053222656,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,2.39412689208984,0,0,0,0,0.0005340576171875,0,0,0,0,5.50978088378906,0,0,0,0,14.2588806152344,0,0,0,0,8.28488159179688,0,0,0.180160522460938,0,0,0,0,6.36934661865234,0,0,0,0,8.98822021484375,0,0,0,0,9.51212310791016,0,0,0,0,9.77111053466797,0,0,0,0,-26.1836929321289,0,0,0,-27.017463684082,0,0,13.1716918945312,0,15.6796035766602,0,0,0,9.54586791992188,0,0,0,9.15129852294922,0,0,0,7.69174957275391,0,0,0,0,-27.7785186767578,0,0,0,0,6.67364501953125,0,0,0,0,6.27195739746094,0,0,0,0,0,-13.2283096313477,0,0,6.55604553222656,0,0,-8.55438995361328,0,0,0,0,0,0,4.28064727783203,0,0,0,0,6.60015106201172,0,0,0,0,-15.4117279052734,0,0,0,9.37258911132812,0,0,0,0,9.99443817138672,0,0,0,8.02790832519531,0,0,0,0,3.94435882568359,0,0,0,0,-63.6375732421875,0,0,0,4.68396759033203,0,0,0,5.73435974121094,0,8.82218170166016,0,0,0,0,1.02803802490234,0,0,0,0,5.69551086425781,0,0,0,0,7.62939453125e-05,0,0,0,0,2.39472198486328,0,0,0,0,0.0005340576171875,0,0,0,0,5.11329650878906,0,0,0,0,9.83564758300781,0,0,0,0,16.78857421875,0,0,0,0,1.08085632324219,0,0,0.180160522460938,0,0,0,0,6.39691925048828,0,0,0,0,9.08970642089844,0,0,0,0,-65.2777557373047,0,0,0,0,10.9899597167969,0,0,0,0,31.210693359375,0,0,1.70182800292969,0,0,17.9749755859375,0,0,9.70590972900391,0,0,0,0,-16.8549346923828,0,0,8.83610534667969,0,0,0,0,7.89881896972656,0,0,0,0,0,-52.4548721313477,0,0,0,0,9.34064483642578,0,0,0,0,7.01152801513672,0,0,3.97480773925781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11.3905334472656,0,0,0,0,0,0,-57.2917938232422,0,0,13.4256744384766,0,0,0,0,-18.6828994750977,0,0,0,0,13.0177459716797,0,0,0,10.8368301391602,0,0,0,0,-17.6781311035156,0,0,0,7.86707305908203,0,0,0,0,6.09175872802734,0,0,0,4.75851440429688,0,0,0,-24.4314651489258,0,0,0,10.2670669555664,0,0,0,0,2.80119323730469,0,0,0,0,1.02593994140625,0,0,0,0,5.57124328613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.33333587646484,0,0,0,0,0.0005340576171875,0,0,0,0,5.37047576904297,0,0,0,0,13.6922607421875,0,0,0,0,7.04861450195312,0,0,0.180160522460938,0,0,0,0,6.41725921630859,0,0,0,0,8.92230987548828,0,0,0,0,7.98105621337891,0,0,0,0,9.48859405517578,0,0,0,0,24.5464172363281,0,0,-79.6955413818359,0,0,1.71258544921875,0,0,22.5449600219727,0,0,10.4589691162109,0,0,0,0,9.53693389892578,0,0,0,0,9.84017944335938,0,0,0,0,-29.3534622192383,0,0,0,0,7.58711242675781,0,0,0,0,8.11361694335938,0,0,0,0,0,-10.9971618652344,0,0,0,0,6.85729217529297,0,0,0,0,-6.70001220703125,0,0,0,0,0,0.395965576171875,0,0,0,0,7.57976531982422,0,0,0,0,-17.0119552612305,0,0,0,17.2469787597656,0,0,0,8.75272369384766,0,0,4.93030548095703,0,0,0,0,-26.1784286499023,0,0,0,5.29864501953125,0,0,0,12.1707382202148,0,0,0,0,7.62939453125e-05,0,0,0,0,1.02228546142578,0,0,0,0,5.58895111083984,0,0,0,0,7.62939453125e-05,0,0,0,0,2.34352874755859,0,0,0,0,0,0,0,0,0,2.07379913330078,0,0,3.34834289550781,0,0,0,0,13.3995742797852,0,0,0,0,8.95869445800781,0,0,-1.60983276367188,0,0,0,0,0,-47.8352279663086,0,0,0,0,8.95822143554688,0,0,0,0,7.99002838134766,0,0,0,0,7.98780822753906,0,0,0,0,15.9755477905273,0,0,0,-14.1484909057617,0,0,2.14364624023438,0,20.6642227172852,0,0,0,-73.034553527832,0,0,0,16.7290191650391,0,0,0,12.6295700073242,0,0,0,0,4.62776947021484,0,0,0,0,0,-26.6658935546875,0,0,0,0,12.7007293701172,0,0,0,0,-17.9688873291016,0,0,0,0,6.24014282226562,0,0,7.92756652832031,0,0,0,0,-0.4951171875,0,0,0,0,-8.07850646972656,0,0,0,0,8.70381164550781,0,0,0.125625610351562,0,0,0,0,0,-2.85061645507812,0,0,0,0,10.805793762207,0,0,0,6.57910919189453,0,0,0,3.54921722412109,0,0,0,0,-27.3908157348633,0,0,0,5.25800323486328,0,0,0,12.8364486694336,0,0,0,0,7.62939453125e-05,0,0,0,0,1.06279754638672,0,0,0,0,5.89767456054688,0,0,0,0,7.62939453125e-05,0,0,0,0,2.46285247802734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.2867431640625,0,0,0,0,7.11165618896484,0,0,0,0,15.3864593505859,0,0,0,0,0,1.78234100341797,0,0,0,0,5.6837158203125,0,0,0,0,-57.4645080566406,0,0,0,0,7.990234375,0,0,0,0,7.98689270019531,0,0,0,0,11.1095428466797,0,0,0,27.0207061767578,0,0,3.48246002197266,0,0,0,0,0,0,-15.2988586425781,0,0,16.8951568603516,0,0,-30.9689865112305,0,0,0,0,0,7.08509826660156,0,0,0,0,6.72991943359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32.1150054931641,0,0,0,0,0,-54.9999237060547,0,0,0,0,0,9.54147338867188,0,0,0,0,7.02379608154297,0,0,0,0,6.16177368164062,0,0,0,0,0,-13.3744583129883,0,0,0,0,6.72511291503906,0,0,0,0,0.790534973144531,0,0,0,0,0,-8.79420471191406,0,0,0,10.7247848510742,0,0,0,0,10.0165939331055,0,0,0,5.40835571289062,0,0,0,-29.3452835083008,0,0,0,5.43476867675781,0,0,0,5.52172088623047,0,0,0,10.3931884765625,0,0,0,0,2.96821594238281,0,0,0,0,1.05635833740234,0,0,0,0,6.47359466552734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.00444030761719,0,0,0,0,0.0005340576171875,0,0,0,0,5.39718627929688,0,0,0,0,10.9283218383789,0,0,0,0,13.6138229370117,0,0,0,0,0,1.78234100341797,0,0,0,0,10.8860855102539,0,0,0,0,11.0427474975586,0,0,0,0,7.98930358886719,0,0,0,0,1.62352752685547,0,0,0,0,0,-83.8746643066406,0,0,0,27.7598648071289,0,0,22.4700164794922,0,0,15.6429138183594,0,0,0,0,9.40119934082031,0,0,0,11.0364151000977,0,0,0,0,-42.5212020874023,0,0,0,0,6.35032653808594,0,0,0,0,6.82546234130859,0,0,6.38220977783203,0,0,0,0,0,-46.8402481079102,0,0,0,0,10.0067749023438,0,0,0,0,7.71197509765625,0,0,-13.3339767456055,0,0,7.05812072753906,0,0,9.58812713623047,0,0,0,0,-16.7604827880859,0,0,0,11.4391860961914,0,0,0,0,7.22911834716797,0,0,0,3.96117401123047,0,0,0,-20.2738037109375,0,0,0,0,-2.25083160400391,0,0,0,12.5651092529297,0,0,0,0,0.875099182128906,0,0,0,0,0.208419799804688,0,0,0,0,6.62228393554688,0,0,0,0,0,0,0,0,0,3.05582427978516,0,0,0,0,0.0005340576171875,0,0,0,0,5.50820159912109,0,0,0,0,10.7857208251953,0,0,0,0,12.6951751708984,0,0,0,0,0,1.78234100341797,0,0,0,0,10.8401794433594,0,0,0,0,-60.362060546875,0,0,0,0,7.99227142333984,0,0,0,0,9.49359893798828,0,0,0,0,26.7768325805664,0,0,9.15232849121094,0,0,-8.3192138671875,0,0,13.8766708374023,0,0,0,0,0,-24.643928527832,0,0,0,7.00993347167969,0,0,0,0,7.84664916992188,0,0,0,0,0,0,0,0,0,0,0,-1.19590759277344,0,0,0,-92.9027328491211,0,0,0,7.88350677490234,0,0,0,0,8.33161926269531,0,0,0,0,6.58052062988281,0,0,0,0,-12.1692962646484,0,0,0,0,7.36908721923828,0,0,-14.6055755615234,0,0,0,0,0,4.64107513427734,0,0,0,0,11.0400924682617,0,0,0,0,10.5863342285156,0,0,0,0,-26.2032928466797,0,0,7.42533111572266,0,0,0,5.08826446533203,0,0,0,8.70523834228516,0,9.14684295654297,0,0,0,0,1.03920745849609,0,0,0,0,-27.0373840332031,0,0,0,0,0,0.497322082519531,0,0,0,0,7.62939453125e-05,0,0,0,0,2.48892211914062,0,0,0,0,0.0005340576171875,0,0,0,0,5.43824768066406,0,0,0,0,12.2591323852539,0,0,0,0,11.8417434692383,0,0,0,0,0,1.78234100341797,0,0,0,0,10.8269729614258,0,0,0,0,6.16555786132812,0,0,0,0,8.29221343994141,0,0,0,0,9.19503021240234,0,0,0,0,26.5640716552734,0,0,-71.2139663696289,0,0,23.1332397460938,0,0,18.210578918457,0,0,0,12.4003448486328,0,0,0,0,5.56620025634766,0,0,0,0,0,-28.1668853759766,0,0,0,0,7.07035064697266,0,0,0,0,0,-12.9114074707031,0,0,0,3.33783721923828,0,0,0,0,7.38139343261719,0,0,0,0,-3.22827911376953,0,0,0,0,0,-3.54783630371094,0,0,0,0,11.9855804443359,0,0,0,0,-7.48004150390625,0,0,0,0,10.8177871704102,0,0,0,7.12432861328125,0,0,0,4.65605926513672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-46.2979507446289,0,0,0,0,-43.638786315918,0,0,0,5.70510101318359,0,0,0,6.31665802001953,0,9.754638671875,0,0,0,0,1.09963226318359,0,0,0,0,6.25810241699219,0,0,0,0,0,0.530693054199219,0,0,0,0,7.62939453125e-05,0,0,0,0,3.12239837646484,0,0,0,0,0.0005340576171875,0,0,0,0,5.67263031005859,0,0,0,0,9.01116180419922,0,0,0,0,13.4859008789062,0,0,0,0,0,1.78234100341797,0,0,0,0,10.9162368774414,0,0,0,0,11.0464859008789,0,0,0,0,7.99212646484375,0,0,0,0,8.00019073486328,0,0,0,0,4.49586486816406,0,0,0,-89.1838912963867,0,0,0,24.0371780395508,0,0,3.0517578125e-05,0,0,23.8423461914062,0,0,17.4427871704102,0,0,0,0,8.46475219726562,0,0,0,10.8933792114258,0,0,-39.1289215087891,0,0,0,1.44340515136719,0,0,0,0,7.01644897460938,0,0,0,0,0,6.81325531005859,0,0,0,-13.1853942871094,0,0,0,0,8.0989990234375,0,0,0,0,-1.90629577636719,0,0,0,-8.98622131347656,0,0,8.12049865722656,0,0,0,11.1011810302734,0,0,0,0,-46.9247970581055,0,0,0,10.6345367431641,0,0,0,7.99900054931641,0,0,0,5.7947998046875,0,0,0,4.60137939453125,0,0,0,1.4735107421875,0,0,0,0,-24.427848815918,0,10.0760803222656,0,0,0,0,1.13346099853516,0,0,0,0,6.99494934082031,0,0,0,0,0,0,0,0,0,3.19496917724609,0,0,0,0,0.0005340576171875,0,0,0,0,5.85703277587891,0,0,0,0,5.55748748779297,0,0,0,0,13.4958801269531,0,0,0,0,5.96330261230469,0,0,0.180160522460938,0,0,0,0,6.38621520996094,0,0,0,0,9.24278259277344,0,0,0,0,-59.0801391601562,0,0,0,0,7.99640655517578,0,0,0,0,7.99777984619141,0,0,0,0,29.4232482910156,0,0,10.3038635253906,0,0,-15.5434799194336,0,0,0,0,0,0,0,9.31011199951172,0,0,10.2889251708984,0,0,0,0,0,-26.6699295043945,0,0,0,13.5346527099609,0,0,0,0,3.67596435546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-93.39306640625,0,0,0,0,8.686767578125,0,0,0,0,6.63686370849609,0,0,0,0,-1.96955108642578,0,0,0,0,0,-6.08039093017578,0,0,0,0,9.39205169677734,0,0,0,0,-3.97632598876953,0,0,0,0,0,0,-5.34404754638672,0,0,0,0,11.9233474731445,0,0,0,0,8.82975006103516,0,0,0,-25.2545623779297,0,0,0,8.68142700195312,0,0,4.93277740478516,0,0,0,4.39100646972656,0,0,0,5.07831573486328,0,0,0,0,-14.7400283813477,0,0,3.90695953369141,0,0,0,0,1.12905120849609,0,0,0,0,7.0355224609375,0,0,0,0,0,0,0,0,0,2.66626739501953,0,0,0,0,0,0.556480407714844,0,0,0,0,0,0,0,0,0,6.03218078613281,0,0,0,0,11.8914108276367,0,0,0,0,13.11474609375,0,0,0,0,0,0.180160522460938,0,0,0,0,6.3565673828125,0,0,0,0,9.15357208251953,0,0,0,0,8.03639221191406,0,0,0,0,9.47217559814453,0,0,0,0,8.08547973632812,0,0,0,0,0,-58.4011077880859,0,0,10.2209243774414,0,0,23.7958145141602,0,0,17.5512619018555,0,0,0,0,8.32868194580078,0,0,0,-27.195426940918,0,0,6.8377685546875,0,0,0,0,7.17073822021484,0,0,0,0,0,-42.6567535400391,0,0,6.74709320068359,0,0,0,0,0,6.56339263916016,0,0,-15.1307678222656,0,0,0,7.20020294189453,0,0,0,0,-1.65202331542969,0,0,0,0,0,0,-1.51927947998047,0,0,0,0,7.05326080322266,0,0,0,0,10.8886184692383,0,0,0,7.11674499511719,0,0,0,0,-32.0484619140625,0,0,0,6.10605621337891,0,0,0,4.57498931884766,0,0,0,11.4878463745117,0,0,0,0,2.77295684814453,0,0,0,0,1.12569427490234,0,0,0,0,6.98661041259766,0,0,0,0,0,0,0,0,0,3.19918060302734,0,0,0,0,0.0005340576171875,0,0,0,0,5.84843444824219,0,0,0,0,5.53579711914062,0,0,0,0,14.3568954467773,0,0,0,0,-57.3268661499023,0,0.426231384277344,0,0,0,0,0,6.51300048828125,0,0,0,0,6.22151947021484,0,0,0,0,7.99696350097656,0,0,0,0,11.0455551147461,0,0,0,0,8.00205993652344,0,0,0,0,7.95259857177734,0,0,-25.2907943725586,0,0,10.5404663085938,0,0,23.5219879150391,0,0,-28.774543762207,0,0,0,9.22941589355469,0,0,0,9.59954071044922,0,0,0,9.71147155761719,0,0,0,1.82851409912109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-91.2660598754883,0,0,0,0,0,-6.62061309814453,0,0,0,0,10.5284194946289,0,0,0,0,8.16753387451172,0,0,0,0,-18.5087585449219,0,0,0,0,8.11612701416016,0,0,0,0,9.65409851074219,0,0,0,0,-17.1686248779297,0,0,0,0,6.98950958251953,0,0,0,0,6.55123138427734,0,0,0,0,-17.0337829589844,0,0,0,12.2595672607422,0,0,0,0,11.2247924804688,0,0,0,7.58908081054688,0,0,0,5.14260101318359,0,0,0,0,-31.6904754638672,0,0,0,5.88664245605469,0,0,0,12.0756912231445,0,0,0,0,2.84812927246094,0,0,0,0,1.15315246582031,0,0,0,0,7.15605163574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.25876617431641,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.48526000976562,0,0,0,0,11.3661499023438,0,0,0,0,13.8252182006836,0,0,0,0,0,1.78234100341797,0,0,0,0,10.9368896484375,0,0,0,0,11.0492706298828,0,0,0,0,7.99827575683594,0,0,0,0,-7.96461486816406,0,0,0,0,0,-73.3660583496094,0,0,0,0,30.1754302978516,0,0,10.4861373901367,0,0,23.417121887207,0,0,16.0179748535156,0,0,0,0,0,-23.3524169921875,0,0,0,12.587532043457,0,0,0,0,-17.5678253173828,0,0,0,-30.9258041381836,0,0,0,0,7.39125061035156,0,0,0,0,10.1708450317383,0,0,0,0,0.668563842773438,0,0,0,0,0,0,0,0,0,0,0,-4.63695526123047,0,0,0,0,0,-48.4167175292969,0,0,7.26631927490234,0,0,0,0,0,-0.0391693115234375,0,0,0,0,0,-3.15774536132812,0,0,0,12.5710372924805,0,0,0,0,6.09024810791016,0,0,0,0,0,-20.9813537597656,0,0,0,5.63436889648438,0,0,0,5.97312927246094,0,0,0,4.92621612548828,0,0,0,-20.2902450561523,0,8.93550872802734,0,0,0,0,1.15840148925781,0,0,0,0,7.11854553222656,0,0,0,0,0,0,0,0,0,3.23256683349609,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.94122314453125,0,0,0,0,8.21725463867188,0,0,0,0,13.7644882202148,0,0,0,0,0,0.714225769042969,0,0,0,0,6.75006103515625,0,0,0,0,8.35234069824219,0,0,0,0,9.50981140136719,0,0,0,0,8.04643249511719,0,0,0,0,-47.6252746582031,0,0,0,0,2.68166351318359,0,0,0,0,0,23.5273590087891,0,0,17.615104675293,0,0,0,0,8.09431457519531,0,0,0,9.06574249267578,0,0,0,0,0,-35.3309173583984,0,0,0,0,7.88347625732422,0,0,0,0,5.41970825195312,0,0,0,0,0,-41.2847518920898,0,0,0,0,0,10.0876159667969,0,0,0,0,6.84995269775391,0,0,0,0,-5.15963745117188,0,0,0,0,0,0,-5.79930877685547,0,0,0,0,8.26788330078125,0,0,6.04616546630859,0,0,0,-10.0829315185547,0,0,0,0,10.6175994873047,0,0,0,9.11341857910156,0,0,0,4.95121765136719,0,0,0,0,-27.4522705078125,0,0,0,5.09613800048828,0,0,0,8.21410369873047,0,7.79139709472656,0,0,0,0,1.13722991943359,0,0,0,0,1.65430450439453,0,0,0,0,5.24753570556641,0,0,0,0,7.62939453125e-05,0,0,0,0,3.14199066162109,0,0,0,0,0,0,0,0,0,1.07125091552734,0,0,0,5.07611846923828,0,0,0,0,10.5421676635742,0,0,0,0,-3.04597473144531,0,0,0,0,0,-43.909065246582,0,0,0.180160522460938,0,0,0,0,6.35784149169922,0,0,0,0,9.46359252929688,0,0,0,0,9.52472686767578,0,0,0,0,8.05078887939453,0,0,0,0,14.31591796875,0,0,0,0,-34.0099563598633,0,0,23.8697280883789,0,0,18.5043258666992,0,0,0,-15.3273696899414,0,0,0,9.77207183837891,0,0,0,5.62055206298828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-92.5478744506836,0,0,0,0,0,-2.79967498779297,0,0,11.6128921508789,0,0,0,0,6.42137908935547,0,0,0,0,-15.1244277954102,0,0,0,0,10.5823440551758,0,0,0,0,-2.68441772460938,0,0,0,0,0,0,-7.93312072753906,0,0,0,0,6.76177215576172,0,0,0,0,-2.75367736816406,0,0,0,0,0,1.87388610839844,0,0,0,0,11.0287094116211,0,0,11.215690612793,0,0,0,-31.9562530517578,0,0,0,5.00499725341797,0,0,0,5.90716552734375,0,0,0,8.32845306396484,0,8.5682373046875,0,0,0,0,0.871627807617188,0,0,0,0,0,0.37396240234375,0,0,0,0,5.66043090820312,0,0,1.88755035400391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.36679840087891,0,0,0,0,0,0,0,0,0,6.01332855224609,0,0,0,0,0,4.86984252929688,0,0,0,0,13.3758926391602,0,0,0,0,9.32575225830078,0,0,0,0,0,2.11886596679688,0,0,0,0,9.76750183105469,0,0,0,0,7.32572174072266,0,0,0,0,-43.754997253418,0,0,0,0,0,-29.0665588378906,0,0,0,0,8.00413513183594,0,0,0,0,8.64031219482422,0,0,34.5189971923828,0,0,0,0,0,24.4705200195312,0,0,-24.749641418457,0,0,0,12.1506118774414,0,0,0,0,8.48245239257812,0,0,0,-48.0802230834961,0,0,0,0,0,1.14605712890625,0,0,0,0,9.04177856445312,0,0,-13.1558380126953,0,0,0,2.29790496826172,0,0,0,0,8.59856414794922,0,0,0,0,-3.00893402099609,0,0,0,-7.86565399169922,0,0,0,0,6.86464691162109,0,0,0,0,9.27933502197266,0,0,0,0,-18.7886352539062,0,0,0,10.4921493530273,0,0,0,0,11.5938034057617,0,0,0,7.41089630126953,0,0,0,4.60790252685547,0,0,0,0,-32.3258819580078,0,0,0,5.66278076171875,0,0,0,7.92098999023438,0,10.3144149780273,0,0,0,0,1.22660064697266,0,0,0,0,7.41650390625,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.31594085693359,0,0,0,0,0,0,0,0,0,6.15673828125,0,0,0,0,9.15320587158203,0,0,0,0,-42.8449249267578,0,0,0,0,0,-1.98747253417969,0,0,0,0,0,1.78234100341797,0,0,0,0,7.98738861083984,0,0,0,0,9.24594879150391,0,0,0,0,8.29727172851562,0,0,0,0,9.52291107177734,0,0,0,0,10.5749435424805,0,0,0,0,-26.7557220458984,0,0,10.6047439575195,0,0,15.6051254272461,0,-16.6851196289062,0,0,10.7818145751953,0,0,0,0,8.15650177001953,0,0,0,0,1.27839660644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-24.1315536499023,0,0,0,0,0,-72.2354888916016,0,0,8.5662841796875,0,0,0,0,6.86221313476562,0,0,0,0,4.25123596191406,0,0,0,0,0,-16.9415969848633,0,0,0,0,9.796142578125,0,0,0,0,-7.58329010009766,0,0,0,0,0,0,-1.95903015136719,0,0,0,0,7.33243560791016,0,0,0,0,-1.74513244628906,0,0,0,0,0,0,-8.62480926513672,0,0,0,10.893798828125,0,0,11.0082168579102,0,0,0,7.37184143066406,0,0,0,0,-29.9322814941406,0,0,0,5.21825408935547,0,0,0,5.63613128662109,0,0,0,6.23319244384766,0,0,0,0,0,0,0,10.9517211914062,0,0,0,0,1.18233489990234,0,0,0,0,7.16758728027344,0,0,0,0,0,0,0,0,0,2.67208099365234,0,0,0,0,0,0.55841064453125,0,0,0,0,0,0,0,0,0,5.06161499023438,0,0,0,1.37911224365234,0,0,0,0,10.1521072387695,0,0,0,0,11.6136169433594,0,0,0,0,0,1.78234100341797,0,0,0,0,9.64398956298828,0,0,0,0,9.52487945556641,0,0,0,0,7.81262969970703,0,0,0,0,0,-84.9822845458984,0,0,0,0,10.6618270874023,0,0,0,0,30.2797470092773,0,0,11.2234878540039,0,0,16.4079360961914,0,10.8152236938477,0,0,-17.7502670288086,0,0,0,6.74969482421875,0,0,0,0,9.70900726318359,0,0,0,7.36631774902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-97.3794326782227,0,0,0,0,0,3.32377624511719,0,0,0,0,9.88919067382812,0,0,0,0,6.6956787109375,0,0,0,0,-16.5107421875,0,0,0,0,9.17157745361328,0,0,6.70301818847656,0,0,-15.8023452758789,0,0,0,0,9.74226379394531,0,0,0,0,8.75459289550781,0,0,-22.1453170776367,0,0,0,0,11.7774963378906,0,0,0,9.42851257324219,0,0,0,7.51103210449219,0,0,0,-1.82656097412109,0,0,0,0,-23.9063949584961,0,0,0,8.47425079345703,0,10.4591827392578,0,0,0,0,1.23799896240234,0,0,0,0,7.49923706054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.34310150146484,0,0,0,0,0,0,0,0,0,4.181884765625,0,0,0,2.58394622802734,0,0,0,0,9.77975463867188,0,0,0,0,11.2311096191406,0,0,0,0,0,1.78234100341797,0,0,0,0,5.77194976806641,0,0,0,0,11.6188507080078,0,0,0,0,8.00647735595703,0,0,0,0,7.99960327148438,0,0,0,0,-34.6561965942383,0,0,0,0,0,-43.6786117553711,0,0,0,0,32.5959625244141,0,0,11.1471939086914,0,0,16.3069229125977,0,14.571044921875,0,0,0,-18.7493362426758,0,0,0,0,9.34181976318359,0,0,12.2981491088867,0,0,0,0,-40.6181259155273,0,0,0,0,0,-10.8279571533203,0,0,0,0,6.81566619873047,0,0,0,0,6.63198852539062,0,0,0,0,-20.250732421875,0,0,0,0,7.08264923095703,0,0,0,0,12.495002746582,0,0,0,0,-13.422233581543,0,0,0,0,8.89633941650391,0,0,0,9.64295196533203,0,0,0,0,-22.2197952270508,0,0,0,0,12.54736328125,0,0,0,9.85057067871094,0,0,0,5.09896850585938,0,0,0,0.998634338378906,0,0,0,0,-26.4292678833008,0,0,0,12.0945739746094,0,0,0,0,3.51277923583984,0,0,0,0,1.23659515380859,0,0,0,0,7.45623779296875,0,0,0,0,0,0,0,0,0,3.32303619384766,0,0,0,0,0,0,0,0,0,6.73169708251953,0,0,0,0,9.70705413818359,0,0,0,0,9.84912872314453,0,0,0,-55.0730590820312,0,0,0,0,0,6.50833129882812,0,0,0,0,9.42807769775391,0,0,0,0,8.00182342529297,0,0,0,0,7.99864959716797,0,0,0,0,8.00002288818359,0,0,0,0,10.2137985229492,0,0,0,0,-9.74349975585938,0,0,0,0,0,-12.2956848144531,0,0,15.5403442382812,0,0,0,9.68436431884766,0,0,0,2.80181884765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-88.7465438842773,0,0,0,0,-3.30883026123047,0,0,9.69038391113281,0,0,0,0,8.61083221435547,0,0,0,0,-17.9498062133789,0,0,0,0,8.47368621826172,0,0,0,0,5.64659881591797,0,0,0,0,0,-14.7942657470703,0,0,0,0,7.22955322265625,0,0,0,0,6.53645324707031,0,0,0,0,0,0,-15.8235549926758,0,0,0,12.3217926025391,0,0,0,0,11.5080871582031,0,0,0,-0.171699523925781,0,0,0,0,0,0,-23.3477172851562,0,0,0,5.34590911865234,0,0,0,6.51521301269531,0,0,0,7.05238342285156,0,10.6526260375977,0,0,0,0,1.20509338378906,0,0,0,0,7.32548522949219,0,0,0,0,0,0,0,0,0,2.71635437011719,0,0,0,0,0.571632385253906,0,0,0,0,0.0005340576171875,0,0,0,0,6.10630798339844,0,0,0,0,4.5087890625,0,0,0,0,13.421142578125,0,0,0,0,2.98068237304688,0,0,0.714218139648438,0,0,0,0,5.79308319091797,0,0,0,0,9.30876922607422,0,0,0,0,7.99920654296875,0,0,0,0,-15.2804489135742,0,0,0,0,0,-67.2067489624023,0,0,0,0,10.4507446289062,0,0,0,0,29.614372253418,0,0,10.96533203125,0,0,4.79167938232422,0,0,0,0,0,20.9447250366211,0,0,-22.1823883056641,0,0,10.0257186889648,0,0,0,0,9.46994781494141,0,0,0,0,4.8427734375,0,0,0,0,0,-52.4567184448242,0,0,0,0,8.07692718505859,0,0,0,0,7.38629150390625,0,0,0,0,-13.7565612792969,0,0,9.48514556884766,0,0,0,0,-4.07243347167969,0,0,0,0,0,0,-3.44315338134766,0,0,0,0,7.32750701904297,0,0,0,0,0,5.91012573242188,0,0,0,0,-9.11874389648438,0,0,0,0,11.7562484741211,0,0,0,7.28343963623047,0,0,0,6.42122650146484,0,0,0,0,-30.2440643310547,0,0,0,5.46144104003906,0,0,0,6.59737396240234,0,0,0,0,12.7782287597656,0,0,0,0,7.62939453125e-05,0,0,0,0,1.21977996826172,0,0,0,0,7.35630035400391,0,0,0,0,0,0,0,0,0,3.28731536865234,0,0,0,0,0,0,0,0,0,6.13202667236328,0,0,0,0,8.66154479980469,0,0,0,0,-45.1754608154297,0,0,0,3.46827697753906,0,0,0.177574157714844,0,0,6.35826873779297,0,0,0,0,9.43485260009766,0,0,0,0,8.00070190429688,0,0,0,0,8.00147247314453,0,0,0,0,8.00019073486328,0,0,0,0,-36.1895980834961,0,0,0,0,24.75,0,0,11.0606994628906,0,0,4.72144317626953,0,0,-18.0554962158203,0,0,15.992073059082,0,0,0,2.84184265136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-60.2614822387695,0,0,0,0,-34.8303985595703,0,0,11.9164886474609,0,0,0,0,8.53733825683594,0,0,0,0,-20.3738479614258,0,0,7.38877868652344,0,0,0,0,10.9324951171875,0,0,0,0,-17.4228744506836,0,0,0,0,11.2680282592773,0,0,0,0,-0.817352294921875,0,0,0,0,0,0,-8.90663909912109,0,0,0,9.87633514404297,0,0,0,0,11.4990615844727,0,0,0,7.76499938964844,0,0,0,0,-28.6214828491211,0,0,0,5.9071044921875,0,0,0,5.66693115234375,0,0,0,7.74955749511719,0,0,0,0,0,11.316764831543,0,0,0,0,1.20397186279297,0,0,0,0,2.84071350097656,0,0,4.56638336181641,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.45505523681641,0,0,0,0,0,1.87400817871094,0,0,0,0,0,0,0,0,0,1.45612335205078,0,0,0,4.75968933105469,0,0,0,0,8.68687438964844,0,0,0,0,17.095573425293,0,0,0,0,3.00989532470703,0,0,1.78234100341797,0,0,0,0,11.1011276245117,0,0,0,0,-87.4878692626953,0,0,0,0,7.99958038330078,0,0,0,0,7.99922943115234,0,0,0,0,7.99703216552734,0,0,0,0,10.5306549072266,0,0,0,31.154411315918,0,0,3.0517578125e-05,0,0,16.2120056152344,0,0,0,-20.3183135986328,0,0,0,0,10.0857086181641,0,0,0,0,8.83966827392578,0,0,0,8.76290893554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-101.514167785645,0,0,0,0,0,4.68010711669922,0,0,0,0,7.42547607421875,0,0,0,0,8.68421936035156,0,0,0,0,-14.2209167480469,0,0,0,0,6.99930572509766,0,0,0,0,-3.758544921875,0,0,0,0,0,0,-3.08277893066406,0,0,0,0,7.42302703857422,0,0,0,0,10.3011474609375,0,0,0,0,-10.8772354125977,0,0,0,8.511474609375,0,0,0,0,6.20321655273438,0,0,0,5.28746032714844,0,0,0,-26.6011962890625,0,0,0,0,0.906684875488281,0,0,0,8.45733642578125,0,8.19674682617188,0,0,0,0,1.18474578857422,0,0,0,0,7.22718048095703,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.25745391845703,0,0,0,0,0.0005340576171875,0,0,0,0,5.93083953857422,0,0,0,0,0,4.53483581542969,0,0,0,0,13.6825103759766,0,0,0,0,11.7168960571289,0,0,0,0,0,1.78234100341797,0,0,0,0,8.87220764160156,0,0,0,0,8.61491394042969,0,0,0,0,9.17918395996094,0,0,0,0,0,-88.0614700317383,0,0,0,0,0,11.0487899780273,0,0,0,0,18.4013366699219,0,0,23.0005111694336,0,0,15.6560516357422,0,11.2694931030273,0,0,-19.8032608032227,0,0,0,0,9.69938659667969,0,0,0,0,11.2155609130859,0,0,0,0,5.34130096435547,0,0,0,-55.3982467651367,0,0,0,0,7.13404083251953,0,0,0,0,7.56996917724609,0,0,0,0,-13.6597747802734,0,0,0,0,0,0.807273864746094,0,0,0,0,10.4206848144531,0,0,0,0,-4.5399169921875,0,0,0,0,0,-0.744400024414062,0,0,12.0174255371094,0,0,0,0,-15.9626388549805,0,0,0,9.25895690917969,0,0,0,6.76625061035156,0,0,0,4.95842742919922,0,0,0,6.3460693359375,0,0,0,-28.0928573608398,0,0,0,0,1.29630279541016,0,9.07204437255859,0,0,0,0,1.18421173095703,0,0,0,0,7.18790435791016,0,0,0,0,0,0,0,0,0,3.23738861083984,0,0,0,0,0,0,0,0,0,1.39882659912109,0,0,0,5.048583984375,0,0,0,0,9.75691223144531,0,0,0,0,17.1761779785156,0,0.426292419433594,0,0,-0.5830078125,0,0,0,0,0,-51.8415679931641,0,0,0,0,9.41878509521484,0,0,0,0,8.00444030761719,0,0,0,0,8.00276184082031,0,0,0,0,7.99383544921875,0,0,0,0,11.2131958007812,0,0,0,-22.0535430908203,0,0,11.0345687866211,0,0,19.2629089355469,0,0,0,-26.0466461181641,0,0,15.0064010620117,0,0,0,0,8.53044891357422,0,0,0,2.61672210693359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-95.8092422485352,0,0,0,0,0,2.360107421875,0,0,0,12.9553756713867,0,0,0,0,3.91313934326172,0,0,0,-12.7661819458008,0,0,0,0,7.7977294921875,0,0,0,0,-11.1464614868164,0,0,0,0,6.78133392333984,0,0,0,0,-2.90827178955078,0,0,0,0,0,0,-5.72913360595703,0,0,0,9.92813873291016,0,0,0,0,10.9274444580078,0,0,0,8.62769317626953,0,0,0,-32.5386047363281,0,0,0,6.34189605712891,0,0,0,7.84909057617188,0,0,0,6.56833648681641,0,0,0,0,12.1073913574219,0,0,0,0,7.62939453125e-05,0,0,0,0,1.21718597412109,0,0,0,0,7.39794921875,0,0,0,0,0,0,0,0,0,1.44480133056641,0,0,0,0,0,1.86786651611328,0,0,0,0,0,0,0,0,0,1.44586944580078,0,0,0,5.22512817382812,0,0,0,0,10.0694808959961,0,0,0,0,10.5914916992188,0,0,0,0,0,1.78234100341797,0,0,0,0,7.98387145996094,0,0,0,0,9.40835571289062,0,0,0,0,-2.03759002685547,0,0,0,0,0,-76.6154708862305,0,0,0,0,11.1217880249023,0,0,0,0,12.3874282836914,0,0,0,0,24.7489852905273,0,0,11.0663223266602,0,0,18.2206039428711,0,-21.8588638305664,0,0,0,13.3705749511719,0,0,0,0,10.8724060058594,0,0,0,-37.2237396240234,0,0,0,0,0,-16.3465423583984,0,0,0,0,7.30545043945312,0,0,0,0,7.16587829589844,0,0,-6.96125030517578,0,0,0,-2.04033660888672,0,0,0,0,6.94056701660156,0,0,0,0,3.90427398681641,0,0,0,-10.8506393432617,0,0,0,0,8.1112060546875,0,0,0,0,3.83638000488281,0,0,0,-6.60957336425781,0,0,11.8027114868164,0,0,0,7.28900146484375,0,0,0,5.03731536865234,0,0,0,0,-32.7934494018555,0,0,0,6.51934814453125,0,0,0,5.42728424072266,0,0,0,14.2560501098633,0,0,0,0,7.62939453125e-05,0,0,0,0,1.20963287353516,0,0,0,0,7.42229461669922,0,0,0,0,0,0,0,0,0,3.33370208740234,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.20269775390625,0,0,0,0,8.67998504638672,0,0,0,0,-35.9475860595703,0,0,0,0,-6.90789031982422,0,0,0,0,0,1.78234100341797,0,0,0,0,5.78708648681641,0,0,0,0,8.40230560302734,0,0,0,0,9.51796722412109,0,0,0,0,8.05045318603516,0,0,0,0,8.25376892089844,0,0,0,0,0,-13.9712448120117,0,0,10.906867980957,0,0,-35.7231292724609,0,0,29.2614898681641,0,0,0,10.1549606323242,0,0,0,3.84426879882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-81.2180480957031,0,0,0,0,0,-13.4165802001953,0,0,9.09527587890625,0,0,0,0,8.47118377685547,0,0,-17.0557632446289,0,0,0,0,7.01155090332031,0,0,0,0,6.56339263916016,0,0,2.267822265625,0,0,0,0,0,0,0,0,0,0,0,-21.2555999755859,0,0,0,6.57510375976562,0,0,0,0,10.2883987426758,0,0,0,0,8.89734649658203,0,0,0,0,9.01372528076172,0,0,0,0,0,-7.27174377441406,0,0,0,0,-18.8505401611328,0,0,0,8.12677001953125,0,0,0,6.30220031738281,0,0,0,5.52938079833984,0,0,0,5.30975341796875,0,0,0,6.99355316162109,0,0,0,13.860725402832,0,0,0,0,1.18877410888672,0,0,0,0,1.29063415527344,0,0,0,0,6.03614807128906,0,0,0,0,0,0,0,0,0,3.30376434326172,0,0,0,0,0,0,0,0,0,5.8602294921875,0,0,0,0,0,4.79254913330078,0,0,0,0,12.0236206054688,0,0,0,0,4.40225982666016,0,0,0.180160522460938,0,0,0,0,-22.7588272094727,0,0,0,0,0,-65.3634185791016,0,0,0,0,9.40133666992188,0,0,0,0,9.52295684814453,0,0,0,0,9.85448455810547,0,0,0,0,11.4836120605469,0,0,0,0,24.2469482421875,0,0,10.2233276367188,0,0,17.6167144775391,0,-32.7836990356445,0,0,0,12.7857055664062,0,0,0,0,9.96807861328125,0,0,0,11.486198425293,0,0,0,0,0,-62.7476272583008,0,0,0,0,0,8.76020050048828,0,0,0,0,7.30791473388672,0,0,0,0,7.454833984375,0,0,0,0,0,9.98230743408203,0,0,0,0,-31.570426940918,0,0,0,0,7.594482421875,0,0,0,0,7.90793609619141,0,0,0,0,7.13102722167969,0,0,0,13.4728851318359,0,0,0,0,-28.6581497192383,0,0,0,0,0,1.49838256835938,0,0,0,7.05466461181641,0,0,0,7.18883514404297,0,0,0,5.33470153808594,0,0,0,7.86457824707031,0,0,0,0,0,10.7365646362305,0,0,0,0,0.93951416015625,0,0,0,0,0.229484558105469,0,0,0,0,7.18166351318359,0,0,0,0,0,0,0,0,0,3.24794769287109,0,0,0,0,0,0,0,0,0,-18.0127334594727,0,0,0,-33.754524230957,0,0,0,0,0,4.70236206054688,0,0,0,0,13.5905838012695,0,0,0,0,2.49573516845703,0,0,0.714225769042969,0,0,0,0,5.82370758056641,0,0,0,0,9.21114349365234,0,0,0,0,9.51695251464844,0,0,0,0,6.23951721191406,0,0,0,0,0,-32.0379104614258,0,0,0,0,24.1498260498047,0,0,-20.1838531494141,0,0,15.8343353271484,0,13.7052383422852,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-101.397438049316,0,0,0,0,0,0,0,0,0,5.23287200927734,0,0,0,9.65877532958984,0,0,0,13.6668167114258,0,0,0,0,7.300537109375,0,0,0,0,0,7.66549682617188,0,0,0,0,5.55963897705078,0,0,0,0,0,0,-40.678840637207,0,0,0,0,8.58386993408203,0,0,0,0,12.027214050293,0,0,0,0,6.73483276367188,0,0,0,0,-22.1831588745117,0,0,0,-2.76600646972656,0,0,0,10.8763961791992,0,0,0,0,10.4518356323242,0,0,0,9.18316650390625,0,0,0,7.43382263183594,0,0,0,6.92023468017578,0,0,0,-12.9570541381836,0,0,0,0,-36.7862396240234,0,0,0,7.00458526611328,0,0,0,0,10.8822326660156,0,0,0,0,7.62939453125e-05,0,0,0,0,1.20127105712891,0,0,0,0,7.25724792480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.40878295898438,0,0,0,0,0,0.84625244140625,0,0,0,0,0,0,0,0,0,3.10048675537109,0,0,0,0,3.40341186523438,0,0,0,0,8.99278259277344,0,0,0,0,15.0316925048828,0,0,0.180160522460938,0,0,0,0,6.32131195068359,0,0,0,0,9.33709716796875,0,0,0,0,9.51790618896484,0,0,0,0,9.60420989990234,0,0,0,0,-80.1011581420898,0,0,0,0,31.58935546875,0,0,10.8523178100586,0,0,24.1131439208984,0,0,10.3721694946289,0,0,0,-16.1143112182617,0,0,0,11.4199676513672,0,0,0,0,8.3463134765625,0,0,0,0,0,-60.9080352783203,0,0,0,0,6.9478759765625,0,0,0,6.64665985107422,0,0,6.56837463378906,0,0,0,0,6.99689483642578,0,0,0,0,-19.1825866699219,0,0,0,-10.2688369750977,0,0,0,0,11.8679885864258,0,0,15.1358108520508,0,0,0,0,10.9602432250977,0,0,0,-3.21597290039062,0,0,0,0,0,-34.5149078369141,0,0,0,6.01192474365234,0,0,0,6.63717651367188,0,0,0,6.56753540039062,0,0,0,12.3996658325195,0,0,0,2.50033569335938,0,0,0,0,1.21045684814453,0,0,0,0,3.38214874267578,0,0,0,0,3.91057586669922,0,0,0,0,0,0,0,0,0,3.26364898681641,0,0,0,0,0,0,0,0,0,6.04323577880859,0,0,0,0,4.50235748291016,0,0,0,0,-7.58821868896484,0,0,0,0,-40.5119323730469,0,0,0,0,1.1097412109375,0,0,2.5609130859375,0,0,0,0,9.32903289794922,0,0,0,0,7.26997375488281,0,0,0,0,7.99658966064453,0,0,0,0,8.0010986328125,0,0,0,0,9.51700592041016,0,0,0,0,-41.8705062866211,0,0,0,24.9945907592773,0,0,4.69367980957031,0,0,0,0,0,20.309211730957,0,0,0,-31.4890289306641,0,0,0,9.30507659912109,0,0,0,9.62624359130859,0,0,0,11.888801574707,0,0,0,0,1.39597320556641,0,0,0,0,0,-1.85078430175781,0,0,0,0,0,-93.8099365234375,0,0,0,0,7.21243286132812,0,0,6.38218688964844,0,0,7.47449493408203,0,0,0,0,6.75688934326172,0,0,0,0,-15.6926879882812,0,0,0,-10.2778549194336,0,0,0,0,8.89244842529297,0,0,0,0,9.86710357666016,0,0,0,0,14.5383987426758,0,0,0,0,0,-30.4712677001953,0,0,0,9.27574157714844,0,0,0,5.82883453369141,0,0,0,4.8690185546875,0,0,0,6.92664337158203,0,0,0,5.69757843017578,0,0,0,8.91423034667969,0,0,7.26283264160156,0,0,0,0,1.19670867919922,0,0,0,0,4.50547027587891,0,0,0,2.65030670166016,0,0,0,0,0,0,0,0,0,3.20114135742188,0,0,0,0,0,0,0,0,0,5.68201446533203,0,0,0,0,0,4.70590209960938,0,0,0,0,12.7623672485352,0,0,0,0,7.08009338378906,0,0,0.180160522460938,0,0,0,0,0,-96.1112747192383,0,0,0,0,6.67646026611328,0,0,0,0,8.9857177734375,0,0,0,0,9.85410308837891,0,0,0,0,12.5802841186523,0,0,0,0,7.97052001953125,0,0,0,0,25.1943054199219,0,0,11.251335144043,0,0,3.76040649414062,0,-31.1900787353516,0,0,13.5630264282227,0,0,0,7.36380767822266,0,0,0,9.59984588623047,0,0,0,8.09835815429688,0,0,0,0,-27.5551910400391,0,0,0,0,0,-32.3726501464844,0,0,0,0,0,4.39601898193359,0,0,0,0,6.81566619873047,0,0,0,0,6.49725341796875,0,0,0,7.98630523681641,0,0,0,0,6.25728607177734,0,0,0,0,5.28744506835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-71.291259765625,0,0,7.68513488769531,0,0,0,0,9.50470733642578,0,0,0,0,14.2213134765625,0,0,0,0,10.1663665771484,0,0,0,-9.15386962890625,0,0,0,0,0,-30.6846160888672,0,0,6.47139739990234,0,0,0,6.49957275390625,0,0,0,5.62793731689453,0,0,0,5.49333190917969,0,0,0,14.7051239013672,0,0,0,0,0.248558044433594,0,0,0,0,1.24529266357422,0,0,0,0,7.47225952148438,0,0,0,0,0,0,0,0,0,3.31295776367188,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,5.98410797119141,0,0,0,0,0,4.95691680908203,0,0,0,0,12.4542388916016,0,0,0,0,8.35975646972656,0,0,0.180160522460938,0,0,0,0,6.29209136962891,0,0,0,0,-19.8130416870117,0,0,0,0,0,-64.8190460205078,0,0,0,0,9.51805877685547,0,0,0,0,9.59697723388672,0,0,0,0,11.4845504760742,0,0,0,0,23.9017868041992,0,0,10.0848083496094,0,0,23.4569320678711,0,0,-32.2390365600586,0,0,0,12.0250930786133,0,0,0,9.69305419921875,0,0,0,7.76600646972656,0,0,0,0,4.91531372070312,0,0,0,0,0,-62.1756744384766,0,0,0,0,0,7.51119232177734,0,0,0,0,7.88828277587891,0,0,6.44341278076172,0,0,0,0,6.00507354736328,0,0,0,0,0,5.83116149902344,0,0,0,0,0,-20.0048065185547,0,0,0,0,0,-5.39659118652344,0,0,0,0,9.64186859130859,0,0,0,0,6.2314453125,0,0,0,12.4982757568359,0,0,0,11.8557052612305,0,0,0,-40.458366394043,0,0,0,7.50867462158203,0,0,0,6.08927154541016,0,0,0,5.6102294921875,0,0,0,7.50373077392578,0,10.3507080078125,0,0,0,0,1.19304656982422,0,0,0,0,7.04689788818359,0,0,0,0,0,0,0,0,0,3.14267730712891,0,0,0,0,0,0,0,0,0,5.60709381103516,0,0,0,0,0,0,-57.4266510009766,0,0,0,0,8.82756042480469,0,0,0,0,12.4395446777344,0,0,0,0,0,1.78234100341797,0,0,0,0,9.51427459716797,0,0,0,0,12.577766418457,0,0,0,0,8.00051879882812,0,0,0,0,3.29792022705078,0,0,0,0,0,-35.0727081298828,0,0,0,0,24.5974197387695,0,0,10.9900588989258,0,0,-12.3189849853516,0,12.0409164428711,0,0,0,0,0,0,0,0,0,0,0,-71.4784622192383,0,0,0,-28.1328277587891,0,0,0,3.29574584960938,0,0,0,10.8514556884766,0,0,0,0,9.86163330078125,0,0,0,8.91553497314453,0,0,0,0,7.73649597167969,0,0,0,0,6.55117034912109,0,0,0,0,-11.1939239501953,0,0,0,-23.4599685668945,0,0,0,0,7.27118682861328,0,0,0,0,9.02959442138672,0,0,0,0,6.7813720703125,0,0,0,0,-33.3072357177734,0,0,0,0,8.02250671386719,0,0,0,11.3715133666992,0,0,0,0,11.0519943237305,0,0,0,8.42934417724609,0,0,0,7.41618347167969,0,0,0,7.54233551025391,0,0,0,-3.94590759277344,0,0,0,0,-46.5559234619141,0,0,0,7.74272155761719,0,10.7853851318359,0,0,0,0,1.25055694580078,0,0,0,0,6.75054168701172,0,0,0,0,0,0.554122924804688,0,0,0,0,7.62939453125e-05,0,0,0,0,3.21614837646484,0,0,0,0,0,0,0,0,0,1.38558959960938,0,0,0,4.71755981445312,0,0,0,0,4.59952545166016,0,0,0,0,12.2040100097656,0,0,0,0,10.0849227905273,0,0,0,0,0,1.78234100341797,0,0,0,0,10.0895538330078,0,0,0,0,7.33737182617188,0,0,0,0,8.00481414794922,0,0,0,0,-77.3460540771484,0,0,0,0,7.99703216552734,0,0,0,0,32.4009399414062,0,0,11.1059036254883,0,0,19.369758605957,0,0,-15.8666152954102,0,0,0,11.2990417480469,0,0,0,0,0,10.9202499389648,0,0,0,-59.5790481567383,0,0,0,0,9.78883361816406,0,0,0,0,10.4108505249023,0,0,0,0,6.49478149414062,0,0,-4.96719360351562,0,0,0,0,0,-20.4031753540039,0,0,0,0,7.00424194335938,0,0,0,0,7.72909545898438,0,0,0,0,6.65895080566406,0,0,0,0,6.09873199462891,0,0,0,0,-5.48978424072266,0,0,0,-14.368522644043,0,0,0,9.37053680419922,0,0,6.00811767578125,0,0,0,6.81313323974609,0,0,0,5.76118469238281,0,0,0,6.10654449462891,0,0,0,8.44916534423828,0,8.76389312744141,0,0,0,0,1.51526641845703,0,0,0,0,-22.4430770874023,0,0,0,0,-34.2064514160156,0,0,0,0,0,0.556877136230469,0,0,0,0,7.62939453125e-05,0,0,0,0,3.22713470458984,0,0,0,0,0,0,0,0,0,6.13530731201172,0,0,0,0,7.08938598632812,0,0,0,0,12.7802505493164,0,0,0,0,1.59208679199219,0,0,1.78234100341797,0,0,0,0,6.79131317138672,0,0,0,0,7.38437652587891,0,0,0,0,7.99845886230469,0,0,0,0,-45.1782302856445,0,0,0,0,14.5041122436523,0,0,0,0,23.7802734375,0,0,9.92172241210938,0,0,0,-35.5789031982422,0,0,0,15.4068374633789,0,18.0213088989258,0,0,0,2.24674987792969,0,0,0,0,0,0,0,0,0,-94.7742538452148,0,0,14.3207092285156,0,0,0,0,7.8883056640625,0,0,0,0,7.76831817626953,0,0,7.45731353759766,0,0,-32.7721405029297,0,0,0,0,8.84349060058594,0,0,0,0,9.38715362548828,0,0,0,0,-3.24922180175781,0,0,0,-18.7514724731445,0,0,0,9.862060546875,0,0,0,0,10.90869140625,0,0,0,9.35748291015625,0,0,0,7.89100646972656,0,0,0,6.33974456787109,0,0,0,6.68672180175781,0,0,0,-34.6613235473633,0,0,0,0,-18.8921203613281,0,0,0,11.9577789306641,0,0,0,0,3.35720825195312,0,0,0,0,1.20354461669922,0,0,0,0,6.9986572265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.10363006591797,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.33772277832031,0,0,0,0,8.80545043945312,0,0,0,0,16.014518737793,0,0.425559997558594,0,0,0.180160522460938,0,0,0,0,7.26705169677734,0,0,0,0,8.54196166992188,0,0,0,0,9.52149963378906,0,0,0,0,8.05078887939453,0,0,0,0,-77.2714233398438,0,0,0,0,17.8983459472656,0,0,0,26.3768539428711,0,0,3.0517578125e-05,0,0,24.8605575561523,0,0,10.6703491210938,0,0,0,-65.7111434936523,0,0,0,0,0,0,0,0,0,11.2372512817383,0,0,0,0,9.33507537841797,0,0,0,0,6.57810211181641,0,0,0,0,8.50308990478516,0,0,0,0,8.99428558349609,0,0,0,0,-39.7063446044922,0,0,0,0,12.0933380126953,0,0,0,0,6.96995544433594,0,0,0,0,8.78469085693359,0,0,0,0,-4.01795959472656,0,0,0,-20.9857940673828,0,0,0,10.3265838623047,0,0,0,0,11.0605010986328,0,0,0,9.53608703613281,0,0,0,6.99154663085938,0,0,0,5.98129272460938,0,0,0,5.92334747314453,0,0,0,-2.47939300537109,0,0,0,0,-52.5932998657227,0,0,0,6.18674468994141,0,0,0,0,12.6543045043945,0,0,0,0,1.50263214111328,0,0,0,0,7.40182495117188,0,0,0,0,0,0,0,0,0,3.25516510009766,0,0,0,0,0,0,0,0,0,5.96420288085938,0,0,0,0,0,5.05622863769531,0,0,0,0,12.0189361572266,0,0,0,0,10.7667083740234,0,0,0,0,0,-36.4792785644531,0,0,0,0,0,-19.4696655273438,0,0,0,0,12.6530456542969,0,0,0,0,7.99750518798828,0,0,0,0,8.00276184082031,0,0,0,0,7.99815368652344,0,0,0,0,10.7223281860352,0,0,-25.3087463378906,0,0,10.851936340332,0,0,19.4673919677734,0,0,0,0,0,0,0,-27.5924835205078,0,0,0,-69.6022109985352,0,0,16.9447631835938,0,0,0,0,10.6483001708984,0,0,0,11.600227355957,0,0,0,0,9.12755584716797,0,0,0,0,7.34217071533203,0,0,0,0,0,-50.9798049926758,0,0,0,0,6.96747589111328,0,0,0,0,10.5235443115234,0,0,0,0,10.6997985839844,0,0,0,0,5.44667053222656,0,0,0,0,0,-31.5536651611328,0,0,0,0,11.675178527832,0,0,0,0,12.2662353515625,0,0,0,10.2331466674805,0,0,0,6.78559875488281,0,0,0,5.90365600585938,0,0,0,5.94070434570312,0,0,0,-26.8708572387695,0,0,0,0,-26.8884201049805,0,0,0,6.13031005859375,0,0,0,0,12.648551940918,0,0,0,0,1.23082733154297,0,0,0,0,7.20201110839844,0,0,0,0,0,0,0,0,0,3.17735290527344,0,0,0,0,0.0005340576171875,0,0,0,0,6.02774810791016,0,0,0,0,4.62380218505859,0,0,0,0,12.0818099975586,0,0,0,0,8.11951446533203,0,0,0.180160522460938,0,0,0,0,6.34168243408203,0,0,0,0,9.41539764404297,0,0,0,0,8.04179382324219,0,0,0,0,9.47560119628906,0,0,0,0,-79.9339065551758,0,0,0,0,31.0620346069336,0,0,10.7425537109375,0,0,3.60637664794922,0,20.3034362792969,0,0,13.7962799072266,0,0,0,0,0,-21.7601852416992,0,0,0,0,9.42220306396484,0,0,0,0,6.50959777832031,0,0,0,0,6.91365814208984,0,0,0,0,0,-68.6227264404297,0,0,0,0,0,6.42134857177734,0,0,0,0,6.95770263671875,0,0,0,0,6.65895843505859,0,0,0,0,8.9732666015625,0,0,0,0,7.89813995361328,0,0,0,0,-33.9262313842773,0,0,8.78963470458984,0,0,0,0,5.80776214599609,0,0,0,18.3429107666016,0,0,0,8.6837158203125,0,0,0,0,7.08155822753906,0,0,0,-8.21421051025391,0,0,0,0,-37.8150253295898,0,0,0,6.97911071777344,0,0,0,7.87628173828125,0,0,0,9.30472564697266,0,6.89381408691406,0,0,0,0,1.23375701904297,0,0,0,0,7.13944244384766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.14163970947266,0,0,0,0,0.0005340576171875,0,0,0,0,5.96274566650391,0,0,0,0,4.59246826171875,0,0,0,0,5.38095092773438,0,0,0,0,-50.7527236938477,0,0,0,0,2.95458221435547,0,0,1.78234100341797,0,0,0,0,7.67673492431641,0,0,0,0,7.91000366210938,0,0,0,0,8.05018615722656,0,0,0,0,9.85833740234375,0,0,0,0,12.8105163574219,0,0,0,0,-28.8506393432617,0,0,11.3927688598633,0,0,0.455741882324219,0,0,19.7016372680664,0,0,0,-17.7403335571289,0,0,0,0,10.1857147216797,0,0,0,0,0,7.68702697753906,0,0,0,1.46077728271484,0,0,0,0,0,0,0,0,0,-40.2094345092773,0,0,0,0,-58.0220489501953,0,0,0,0,2.1678466796875,0,0,8.64711761474609,0,0,0,0,6.92826080322266,0,0,8.72107696533203,0,0,0,0,8.46874237060547,0,0,0,0,3.9609375,0,0,0,-33.1894607543945,0,0,0,0,7.04096221923828,0,0,0,0,8.76511383056641,0,0,0,0,9.14714813232422,0,0,0,0,10.5775299072266,0,0,-34.9413604736328,0,0,0,0,16.2343292236328,0,0,0,0,7.13177490234375,0,0,0,6.63825988769531,0,0,0,5.97047424316406,0,0,0,6.07900238037109,0,0,0,7.64483642578125,0,0,0,0,0,11.700798034668,0,0,0,0,0,0,0,0,0,1.54264068603516,0,0,0,0,7.52005004882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.28440093994141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.49032592773438,0,0,0,0,0,1.35688018798828,0,0,0,0,9.02294158935547,0,0,0,0,-41.354118347168,0,0,0,0,0,-38.7605133056641,0,0,0,0,-14.160774230957,0,0,0,0,0,0,0,0,-11.5935440063477,0,108.718872070312,0,0,0,0,0,0,0,0,0,2.46549987792969,0,0,0.428581237792969,0,0,1.78234100341797,0,0,0,0,10.0823593139648,0,0,0,0,7.28475952148438,0,0,0,0,7.99883270263672,0,0,0,0,8.00408935546875,0,0,0,0,8.00189208984375,0,0,0,0,-24.0613403320312,0,0,0,26.6660842895508,0,0,0,0,0,-30.5011901855469,0,0,0,0,0,25.9960708618164,0,0,10.0587997436523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-28.2592010498047,0,0,0,0,0,-3.33715057373047,0,0,0,0,10.7241363525391,0,0,0,0,7.95448303222656,0,0,0,0,8.41484832763672,0,0,0,0,-0.34442138671875,0,0,0,-33.0830383300781,0,0,0,0,7.13648986816406,0,0,0,0,8.00338745117188,0,0,6.70545959472656,0,0,6.60755157470703,0,0,0,0,-16.2386779785156,0,0,0,0,0,0,-17.2960510253906,0,0,0,0,0,0,5.47306823730469,0,0,0,11.9844818115234,0,0,0,0,11.6484375,0,0,0,7.64239501953125,0,0,0,6.109130859375,0,0,0,6.08853912353516,0,0,0,5.72296142578125,0,0,0,6.63877868652344,0,0,0,-37.9360656738281,0,0,0,0,-16.1256408691406,0,11.3763732910156,0,0,0,0,7.62939453125e-05,0,0,0,0,1.54654693603516,0,0,0,0,7.50285339355469,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.27063751220703,0,0,0,0,0,0,0,0,0,1.41965484619141,0,0,0,5.41107177734375,0,0,0,0,9.0076904296875,0,0,0,0,14.3029022216797,0,0,0,0,0,1.78234100341797,0,0,0,0,7.02606201171875,0,0,0,0,10.7041168212891,0,0,0,0,8.00460815429688,0,0,0,0,8.00446319580078,0,0,0,0,8.00450897216797,0,0,0,0,-81.3143997192383,0,0,0,0,26.5874633789062,0,0,11.8880615234375,0,0,26.0906753540039,0,0,11.1593475341797,0,0,0,-7.334228515625,0,0,0,0,0,-6.03301239013672,0,0,0,0,11.1385192871094,0,0,0,0,8.40509033203125,0,0,0,0,-48.4862518310547,0,0,0,0,0,-7.55604553222656,0,0,0,0,8.85810089111328,0,0,0,0,6.55609130859375,0,0,6.56096649169922,0,0,5.91439819335938,0,0,0,0,0,0,0,0,0,0,0,-49.8433303833008,0,0,0,-25.6946029663086,0,0,0,6.63204956054688,0,0,0,0,6.95032501220703,0,0,0,0,0,10.88037109375,0,0,7.65847015380859,0,0,0,11.7806091308594,0,0,0,7.38153839111328,0,0,0,0,-21.1277084350586,0,0,0,0,-23.4497146606445,0,0,0,7.17919158935547,0,0,0,6.28920745849609,0,0,0,6.33512878417969,0,0,0,15.1660537719727,0,0,0,0,0,0,0,0,0,1.59467315673828,0,0,0,0,7.77322387695312,0,0,0,0,0,0,0,0,0,3.35836029052734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.24076080322266,0,0,0,0,0,5.21533966064453,0,0,0,0,12.6903457641602,0,0,0,0,5.20360565185547,0,0,0,0,0,6.57598876953125,0,0,0,0,6.33254241943359,0,0,0,0,9.70101165771484,0,0,0,0,8.00396728515625,0,0,0,0,9.82688140869141,0,0,0,0,11.023193359375,0,0,0,0,25.6206130981445,0,0,11.4605712890625,0,0,4.22832489013672,0,0,0,0,0,0,-79.3869781494141,0,0,-56.0809555053711,0,0,17.979377746582,0,0,0,0,9.67209625244141,0,0,0,0,10.240478515625,0,0,0,0,10.6605911254883,0,0,0,0,6.25975799560547,0,0,0,0,0,0,-44.8010025024414,0,0,0,0,0,6.60499572753906,0,0,11.0158233642578,0,0,0,0,8.47362518310547,0,0,0,0,0,-28.8628158569336,0,0,6.24453735351562,0,0,0,11.1652679443359,0,0,0,0,11.803840637207,0,0,0,8.40355682373047,0,0,0,0,6.78573608398438,0,0,0,-6.49576568603516,0,0,0,0,-39.1013107299805,0,0,0,6.09738922119141,0,0,0,5.80442047119141,0,0,0,8.27311706542969,0,9.98097991943359,0,0,0,0,0.655647277832031,0,0,0,0,0,0.893966674804688,0,0,0,0,7.52413940429688,0,0,0,0,0,0,0,0,0,3.27201080322266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.42012023925781,0,0,0,4.63447570800781,0,0,0,0,0,5.17269134521484,0,0,0,0,13.1474838256836,0,0,0,0,4.07719421386719,0,0,0,0,0,6.54354858398438,0,0,0,0,7.48879241943359,0,0,0,0,8.69285583496094,0,0,0,0,9.52997589111328,0,0,0,0,11.0504531860352,0,0,0,0,9.09611511230469,0,0,-2.69673156738281,0,0,0,-92.8960647583008,0,0,11.3174285888672,0,0,16.5356750488281,0,15.7294921875,0,0,0,13.7368011474609,0,0,0,10.5993728637695,0,0,0,10.637939453125,0,0,0,0,9.19119262695312,0,0,-49.5637359619141,0,0,10.7169876098633,0,0,0,0,0,11.0917205810547,0,0,0,0,8.91693878173828,0,0,0,0,0.0807723999023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-124.52466583252,0,0,0,-15.2581558227539,0,0,0,0,10.080207824707,0,0,0,12.6063385009766,0,0,9.76677703857422,0,0,0,9.08467102050781,0,0,0,6.568603515625,0,0,0,-26.1868057250977,0,0,0,0,-22.7787170410156,0,0,0,7.23272705078125,0,0,0,7.37819671630859,0,0,0,7.79915618896484,0,11.3467025756836,0,0,0,0,1.55150604248047,0,0,0,0,6.89591979980469,0,0,0,0,0,0.559219360351562,0,0,0,0,0,0,0,0,0,3.23661041259766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.95053100585938,0,0,0,0,0,5.09727478027344,0,0,0,0,12.5309829711914,0,0,0,0,4.52398681640625,0,0,0,0,0,3.47273254394531,0,0,0,0,8.46883392333984,0,0,0,0,7.32841491699219,0,0,0,0,8.00124359130859,0,0,0,0,8.00313568115234,0,0,0,0,9.52251434326172,0,0,0,0,32.120719909668,0,0,11.4248123168945,0,0,4.20896911621094,0,0,0,0,0,0,-99.830192565918,0,0,-29.8793182373047,0,0,18.8221282958984,0,0,0,0,8.55068969726562,0,0,0,15.502685546875,0,0,7.26634979248047,0,0,0,0,-30.7436218261719,0,0,0,-7.91079711914062,0,0,0,0,7.05809783935547,0,0,0,0,7.06055450439453,0,0,0,0,0,-3.56202697753906,0,0,0,0,0,-17.2263565063477,0,0,7.32512664794922,0,0,0,0,10.8951416015625,0,0,0,0,11.3373641967773,0,0,0,9.49546813964844,0,0,0,7.09860992431641,0,0,0,0.137954711914062,0,0,0,0,-45.9632110595703,0,0,0,6.67313385009766,0,0,0,5.34764099121094,0,0,0,8.69207763671875,0,10.0050659179688,0,0,0,0,1.58362579345703,0,0,0,0,0.677482604980469,0,0,0,6.84120178222656,0,0,0,0,0,0,0,0,0,3.23819732666016,0,0,0,0,0,0,0,0,0,5.71981811523438,0,0,0,0,4.60860443115234,0,0,0,0,8.99210357666016,0,0,0,0,7.72038269042969,0,0,0,0,0,1.78234100341797,0,0,0,0,4.75010681152344,0,0,0,0,9.61014556884766,0,0,0,0,6.47872924804688,0,0,0,0,12.578369140625,0,0,0,0,8.00338745117188,0,0,0,0,8.82125091552734,0,0,0,0,0.858711242675781,0,0,0,-95.0776443481445,0,0,11.3941955566406,0,0,16.6281204223633,0,11.9257736206055,0,0,14.2835311889648,0,0,0,0,9.21756744384766,0,0,0,0,8.74016571044922,0,0,0,0,11.5888977050781,0,0,0,0,5.11331939697266,0,0,0,0,0,-48.5261459350586,0,0,0,0,8.40510559082031,0,0,0,0,11.28515625,0,0,0,0,8.27525329589844,0,0,0,0,0,-11.201789855957,0,0,0,0,0,-90.0277099609375,0,0,0,0,0,4.64092254638672,0,0,0,0,6.54137420654297,0,0,0,0,0,7.95765686035156,0,0,0,10.0311660766602,0,0,0,0,10.1418685913086,0,0,0,7.47946166992188,0,0,0,0,5.77247619628906,0,0,0,0,-47.7207489013672,0,0,0,5.77777099609375,0,0,0,7.25116729736328,0,0,0,6.42380523681641,0,0,0,6.59009552001953,0,0,0,0,0,0,0,11.993408203125,0,0,0,0,1.58638763427734,0,0,0,0,7.49885559082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.22457122802734,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,5.95270538330078,0,0,0,0,0,5.12358093261719,0,0,0,0,12.6012878417969,0,0,0,0,6.50283050537109,0,0,0,0,0,6.53391265869141,0,0,0,0,5.38068389892578,0,0,0,0,8.94388580322266,0,0,0,0,9.85800170898438,0,0,0,0,9.52515411376953,0,0,0,0,11.1012268066406,0,0,0,0,-17.9713821411133,0,0,0,0,-83.5432281494141,0,0,11.4185180664062,0,0,16.6653366088867,0,11.9471588134766,0,0,16.3518295288086,0,0,0,0,8.57341003417969,0,0,0,9.41023254394531,0,0,0,0,9.14959716796875,0,0,0,0,-0.448104858398438,0,0,0,0,0,-47.3061676025391,0,0,0,0,8.45648193359375,0,0,0,8.44186401367188,0,0,0,0,6.818115234375,0,0,0,0,1.63175964355469,0,0,0,0,0,0,-49.5571746826172,0,0,0,0,6.83525848388672,0,0,0,0,0,9.97251892089844,0,0,0,0,7.01268768310547,0,0,0,11.576286315918,0,0,0,7.30733489990234,0,0,0,0,-43.6391372680664,0,0,0,0,-1.07231903076172,0,0,0,5.63829803466797,0,0,0,8.14402770996094,0,0,0,6.30078125,0,0,0,5.58612060546875,0,0,0,12.6149368286133,0,0,0,0,3.45980072021484,0,0,0,0,1.58861541748047,0,0,0,0,7.50096893310547,0,0,0,0,0,0,0,0,0,3.22103118896484,0,0,0,0,0,0,0,0,0,5.96959686279297,0,0,0,0,0,5.14114379882812,0,0,0,0,12.6322860717773,0,0,0,0,4.56092834472656,0,0,0.180160522460938,0,0,0,0,6.31694793701172,0,0,0,0,5.38949584960938,0,0,0,0,0,-88.2270660400391,0,0,0,0,11.053955078125,0,0,0,0,8.00051879882812,0,0,0,0,8.00226593017578,0,0,0,0,10.6823043823242,0,0,33.8345031738281,0,0,0,0,0,16.5512237548828,0,-29.5102996826172,0,0,13.7887573242188,0,0,0,0,8.64885711669922,0,0,0,0,9.32011413574219,0,0,0,0,0,-53.9374237060547,0,0,0,0,11.9243774414062,0,0,0,0,6.516845703125,0,0,0,7.01401519775391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-121.922691345215,0,0,0,-32.7319564819336,0,0,0,5.50059509277344,0,0,0,0,7.69731903076172,0,0,0,0,8.70383453369141,0,0,0,0,0,7.87858581542969,0,0,0,0,8.85089874267578,0,0,0,0,-30.6669921875,0,0,0,0,0,0,4.24446105957031,0,0,0,9.71768951416016,0,0,0,0,8.41908264160156,0,0,0,5.51847076416016,0,0,0,7.10584259033203,0,0,0,7.08560180664062,0,0,0,7.14901733398438,0,0,0,14.2028427124023,0,0,0,0,0,0,0,0,0,1.58574676513672,0,0,0,0,7.44414520263672,0,0,0,0,0,0,0,0,0,3.19278717041016,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,5.90599060058594,0,0,0,0,0,5.01416778564453,0,0,0,0,10.2230529785156,0,0,0,0,8.92247009277344,0,0,0.180160522460938,0,0,0,0,6.31593322753906,0,0,0,0,12.9547729492188,0,0,0,0,8.00593566894531,0,0,0,0,8.00164031982422,0,0,0,0,8.00151824951172,0,0,0,0,9.63517761230469,0,0,-23.592170715332,0,0,0,-110.258842468262,0,0,11.6756286621094,0,0,17.0000915527344,0,16.1593322753906,0,0,0,9.68611907958984,0,0,0,0,11.5205993652344,0,0,0,11.6814193725586,0,0,0,0,6.75686645507812,0,0,0,0,7.26702880859375,0,0,0,-48.6456069946289,0,0,0,0,8.9732666015625,0,0,0,0,11.4565887451172,0,0,0,0,7.34220886230469,0,0,0,0,-27.1663589477539,0,0,0,0,5.98735046386719,0,0,0,20.9824981689453,0,0,0,0,10.6523284912109,0,0,0,8.83219909667969,0,0,0,-32.4140243530273,0,0,0,0,-13.460205078125,0,0,0,7.35773468017578,0,0,0,6.46980285644531,0,0,0,12.349235534668,0,0,4.72690582275391,0,0,0,0,1.61896514892578,0,0,0,0,7.63325500488281,0,0,0,0,0,0,0,0,0,3.25699615478516,0,0,0,0,0,0,0,0,0,5.79802703857422,0,0,0,0,2.12632751464844,0,0,0,0,7.77978515625,0,0,0,0,17.0330810546875,0,0,0,0,2.12149047851562,0,0,0.177574157714844,0,0,6.36967468261719,0,0,0,0,9.69336700439453,0,0,0,0,8.00481414794922,0,0,0,0,2.00131225585938,0,0,0,0,0,-92.9702758789062,0,0,0,0,9.52173614501953,0,0,0,0,31.4922790527344,0,0,11.2747955322266,0,0,16.4804992675781,0,16.6427764892578,0,0,0,7.47059631347656,0,0,0,0,0,-33.7164916992188,0,0,0,0,9.61293792724609,0,0,0,0,12.9431533813477,0,0,0,0,8.05149078369141,0,0,0,0,0,0,-118.41854095459,0,0,0,0,0,0,-9.75618743896484,0,0,0,0,6.85485076904297,0,0,0,0,13.4770431518555,0,0,0,0,5.97068786621094,0,0,0,-28.9070510864258,0,0,0,0,13.2777328491211,0,0,0,0,10.9826202392578,0,0,0,10.5108261108398,0,0,0,5.73821258544922,0,0,0,6.86080169677734,0,0,0,1.11097717285156,0,0,0,0,-49.4507827758789,0,0,0,5.77666473388672,0,0,0,8.83518218994141,0,11.35009765625,0,0,0,0,0.67254638671875,0,0,0,0,0,0.904396057128906,0,0,0,0,7.41439819335938,0,0,0,0,0,0,0,0,0,0.546478271484375,0,0,0,0,2.64051055908203,0,0,0,0,0,0,0,0,0,4.65695953369141,0,0,0,0,2.05734252929688,0,0,0,0,8.51854705810547,0,0,0,0,16.9617385864258,0,0,0,0,4.22872924804688,0,0,0.177574157714844,0,0,6.36807250976562,0,0,0,0,9.92262268066406,0,0,0,0,11.0552520751953,0,0,0,0,8.00874328613281,0,0,0,0,7.99607849121094,0,0,0,0,9.45072937011719,0,0,-91.379035949707,0,0,0,0,6.06449127197266,0,0,0.4642333984375,0,0,26.0845642089844,0,0,17.0727844238281,0,0,0,0,10.523681640625,0,0,0,11.5906524658203,0,0,6.82546234130859,0,0,0,0,6.13978576660156,0,0,0,0,0,-54.7875137329102,0,0,0,0,8.14553070068359,0,0,0,0,8.22141265869141,0,0,0,0,10.0458831787109,0,0,0,0,0,0,0,0,0,0,0,-36.4703674316406,0,0,0,-102.03441619873,0,0,0,0,0,0,0,8.43202972412109,0,0,7.60130310058594,0,0,0,9.48413848876953,0,0,0,0,7.24579620361328,0,0,0,9.82246398925781,0,0,0,6.9681396484375,0,0,0,0,6.84877014160156,0,0,0,-52.0603103637695,0,0,0,0,3.04053497314453,0,0,0,8.65300750732422,0,0,0,7.23409271240234,0,0,0,9.92308044433594,0,0,8.17243194580078,0,0,0,0,0.694061279296875,0,0,0,0,0,0.917015075683594,0,0,0,0,7.58226776123047,0,0,0,0,0,0,0,0,0,3.23600769042969,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.03182983398438,0,0,0,0,0,4.42918395996094,0,0,0,0,8.16638946533203,0,0,0,0,16.9271392822266,0,0,0,0,1.12178039550781,0,0,1.78234100341797,0,0,0,0,10.1505889892578,0,0,0,0,7.48106384277344,0,0,0,0,7.99658966064453,0,0,0,0,7.99827575683594,0,0,0,0,8.00318145751953,0,0,0,0,17.2482070922852,0,0,0,26.0410690307617,0,0,0,0,0,-1.84542846679688,0,0,-152.940711975098,0,0,25.6363677978516,0,0,0,10.9230880737305,0,0,8.9169921875,0,0,0,10.74072265625,0,0,0,0,7.40096282958984,0,0,0,0,7.69731903076172,0,0,0,-46.8252487182617,0,0,0,0,8.12100219726562,0,0,0,0,12.6125335693359,0,0,0,0,6.82301330566406,0,0,0,0,-16.3584823608398,0,0,0,0,0,-7.05524444580078,0,0,0,0,8.38864135742188,0,0,0,0,14.5611801147461,0,0,0,10.4610061645508,0,0,0,6.07001495361328,0,0,0,5.92893981933594,0,0,0,-44.5887145996094,0,0,0,0,-3.22660827636719,0,0,0,8.18556976318359,0,0,0,8.11782836914062,0,0,0,0,13.5552139282227,0,0,0,0,1.55445098876953,0,0,0,0,6.76800537109375,0,0,0,0,0.537193298339844,0,0,0,0,7.62939453125e-05,0,0,0,0,3.15015411376953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.78946685791016,0,0,0,0,0,5.04447174072266,0,0,0,0,12.3362731933594,0,0,0,0,12.0862274169922,0,0,0,0,0,1.78234100341797,0,0,0,0,6.75745391845703,0,0,0,0,10.9373550415039,0,0,0,0,8.00311279296875,0,0,0,0,8.0010986328125,0,0,0,0,8.00824737548828,0,0,0,0,10.9956436157227,0,0,-30.6261291503906,0,0,0,0,-71.8643417358398,0,0,11.9910049438477,0,0,2.3984375,0,23.8864974975586,0,0,20.8160781860352,0,0,0,0,8.2806396484375,0,0,0,11.5371170043945,0,0,0,0,9.55368804931641,0,0,0,0,-34.9201126098633,0,0,0,-18.7543334960938,0,0,0,0,11.5594253540039,0,0,0,0,6.78137969970703,0,0,0,0,9.18878173828125,0,0,0,0,-11.3201675415039,0,0,0,0,0,-79.3148727416992,0,0,0,6.54137420654297,0,0,0,6.95411682128906,0,0,0,11.6959533691406,0,0,0,11.0299835205078,0,0,0,7.23983764648438,0,0,0,-2.68535614013672,0,0,0,0,-45.0787658691406,0,0,0,0,3.48827362060547,0,0,0,8.02976226806641,0,0,0,8.08029937744141,0,0,0,6.64860534667969,0,0,0,8.05058288574219,0,10.4320678710938,0,0,0,0,1.64141082763672,0,0,0,0,7.23108673095703,0,0,0,0,0.581748962402344,0,0,0,0,0,0,0,0,0,3.32845306396484,0,0,0,0,0,0,0,0,0,6.20673370361328,0,0,0,0,0,5.34944915771484,0,0,0,0,12.2370681762695,0,0,0,0,7.8037109375,0,0,0.180160522460938,0,0,0,0,6.38034057617188,0,0,0,0,12.6970291137695,0,0,0,0,7.99808502197266,0,0,0,0,8.00259399414062,0,0,0,0,8.00243377685547,0,0,0,0,-9.89838409423828,0,0,0,0,0,-103.462249755859,0,0,23.8474960327148,0,0,11.2083282470703,0,0,16.3916091918945,0,17.037239074707,0,0,0,9.95212554931641,0,0,0,0,9.03326416015625,0,0,0,0,8.94776916503906,0,0,0,0,7.71199798583984,0,0,0,0,5.11111450195312,0,0,-29.7716751098633,0,0,0,0,0,0,-19.0019607543945,0,0,0,0,9.41164398193359,0,0,0,0,9.72022247314453,0,0,0,0,2.81948089599609,0,0,0,0,0,0,-56.6770706176758,0,0,0,0,9.10547637939453,0,0,0,0,0,14.2019653320312,0,0,0,0,11.5050735473633,0,0,0,6.97257232666016,0,0,0,-24.1080474853516,0,0,0,0,-18.3564147949219,0,0,0,7.96755981445312,0,0,0,6.78895568847656,0,0,0,8.14829254150391,0,0,0,9.01399993896484,0,11.2669296264648,0,0,0,0,0.657066345214844,0,0,0,0,0,0.895111083984375,0,0,0,0,7.37759399414062,0,0,0,0,0,0,0,0,0,2.36984252929688,0,0,0,0,0,0.822883605957031,0,0,0,0,0,0,0,0,0,3.97389984130859,0,0,0,2.71682739257812,0,0,0,0,8.49805450439453,0,0,0,0,16.1083374023438,0,0,0,0,0.426506042480469,0,0,1.78234100341797,0,0,0,0,-20.4960784912109,0,0,0,0,0,-64.9661331176758,0,0,0,0,11.6511688232422,0,0,0,0,8.00630950927734,0,0,0,0,8.00089263916016,0,0,0,0,8.00691986083984,0,0,0,0,12.7160263061523,0,0,34.3683242797852,0,0,0.473167419433594,0,0,-54.0011520385742,0,0,-17.936897277832,0,0,25.9252853393555,0,0,15.0058517456055,0,0,8.832763671875,0,0,0,10.791130065918,0,0,7.94718170166016,0,0,0,0,4.17313385009766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-92.9028625488281,0,0,0,0,0,-78.4113616943359,0,0,0,0,9.82553100585938,0,0,0,0,8.65244293212891,0,0,0,0,7.51360321044922,0,0,0,6.35279846191406,0,0,0,-28.8053894042969,0,0,6.20235443115234,0,0,0,13.0934066772461,0,0,0,0,12.219108581543,0,0,0,7.82442474365234,0,0,0,0,6.11275482177734,0,0,0,-7.63737487792969,0,0,0,0,-41.3542785644531,0,0,0,8.69834899902344,0,0,0,7.204833984375,0,0,0,8.77433013916016,0,9.27364349365234,0,0,0,0,7.62939453125e-05,0,0,0,0,1.60554504394531,0,0,0,0,7.71279144287109,0,0,0,0,0,0,0,0,0,3.31094360351562,0,0,0,0,0,0,0,0,0,6.16357421875,0,0,0,0,0,5.31114196777344,0,0,0,0,12.5907363891602,0,0,0,0,9.92646789550781,0,0,0,0,0,0.180160522460938,0,0,0,0,6.337890625,0,0,0,0,9.63224029541016,0,0,0,0,8.00294494628906,0,0,0,0,8.01081848144531,0,0,0,0,11.0556945800781,0,0,0,0,9.22177124023438,0,0,0,0,27.0032730102539,0,0,12.0542373657227,0,0,4.4114990234375,0,-48.0685348510742,0,0,0,0,0,0,-89.8472290039062,0,0,17.2693939208984,0,0,0,0,11.9106597900391,0,0,0,11.6037902832031,0,0,0,0,7.32502746582031,0,0,0,0,7.2369384765625,0,0,0,0,-47.8994750976562,0,0,0,0,7.41084289550781,0,0,0,0,11.6182250976562,0,0,0,0,9.12508392333984,0,0,0,0,-33.0653686523438,0,0,0,0,7.41815948486328,0,0,0,0,9.60434722900391,0,0,8.16207885742188,0,0,0,0,11.7568206787109,0,0,0,7.44033050537109,0,0,0,6.47052001953125,0,0,0,-3.11423492431641,0,0,0,0,-44.4438247680664,0,0,0,7.08377838134766,0,0,0,9.33566284179688,0,0,0,7.78385925292969,0,10.4456253051758,0,0,0,0,0.421066284179688,0,0,0,0,1.20351409912109,0,0,0,0,7.82248687744141,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.34578704833984,0,0,0,0,0,0,0,0,0,6.25128173828125,0,0,0,0,0,5.40400695800781,0,0,0,0,9.7691650390625,0,0,0,0,4.23164367675781,0,0,0,0,0,6.53319549560547,0,0,0,0,5.38068389892578,0,0,0,0,8.88724517822266,0,0,0,0,8.05057525634766,0,0,0,0,9.55833435058594,0,0,0,0,12.915885925293,0,0,0,0,-10.4792633056641,0,0,0,0,-83.3588714599609,0,0,11.4102172851562,0,0,16.6542205810547,0,15.8408584594727,0,0,0,13.6384582519531,0,0,9.81529998779297,0,0,0,14.1920013427734,0,0,0,0,1.46926116943359,0,0,0,0,0,-48.3300628662109,0,0,0,0,6.98466491699219,0,0,0,0,6.99440765380859,0,0,7.02142333984375,0,0,0,0,0.6422119140625,0,0,0,0,0,-98.2805023193359,0,0,0,0,0,-1.5194091796875,0,0,0,0,6.60504913330078,0,0,0,0,6.02220153808594,0,0,0,0,11.3980178833008,0,0,0,0,6.80221557617188,0,0,0,10.2775573730469,0,0,0,6.88253784179688,0,0,6.26189422607422,0,0,0,-31.4597854614258,0,0,0,0,-16.6056518554688,0,0,0,6.43034362792969,0,0,0,7.27281951904297,0,0,0,6.33741760253906,0,0,0,14.1913681030273,0,0,0,0,1.90821838378906,0,0,0,0,1.55254364013672,0,0,0,0,7.43940734863281,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.21321868896484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.95823669433594,0,0,0,0,0,5.18258666992188,0,0,0,0,10.7880554199219,0,0,0,0,6.50406646728516,0,0,0,0,0,1.82289123535156,0,0,0,0,10.0718460083008,0,0,0,0,7.555908203125,0,0,0,0,7.99845886230469,0,0,0,0,8.00483703613281,0,0,0,0,8.00467681884766,0,0,0,0,13.3480377197266,0,0,0,0,-115.786834716797,0,0,0,0,21.4885635375977,0,0,0.467536926269531,0,0,25.2417068481445,0,0,11.0069961547852,0,0,0,10.3735656738281,0,0,0,7.81438446044922,0,0,0,9.65050506591797,0,0,6.84262847900391,0,0,6.74951934814453,0,0,-42.1596832275391,0,0,0,-4.13772583007812,0,0,0,0,7.21240997314453,0,0,0,0,6.90383148193359,0,0,0,0,9.12017059326172,0,0,0,3.63191986083984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-125.105247497559,0,0,0,0,0,-10.8629608154297,0,0,0,0,9.97591400146484,0,0,0,11.8127212524414,0,0,0,0,11.0454940795898,0,0,0,7.78556823730469,0,0,0,6.51361846923828,0,0,0,6.37416839599609,0,0,0,-5.21901702880859,0,0,0,0,-50.0399475097656,0,0,0,7.37471771240234,0,0,0,7.20579528808594,0,0,0,7.837646484375,0,10.1654968261719,0,0,0,0,0.676483154296875,0,0,0,0,0,0.906471252441406,0,0,0,0,7.03041839599609,0,0,0,0,0,0.566329956054688,0,0,0,0,7.62939453125e-05,0,0,0,0,3.26496887207031,0,0,0,0,0,0,0,0,0,6.07731628417969,0,0,0,0,0,5.16976928710938,0,0,0,0,11.1070251464844,0,0,0,0,10.6595764160156,0,0,0,0,0,1.78234100341797,0,0,0,0,4.73638916015625,0,0,0,0,13.0943374633789,0,0,0,0,8.00236511230469,0,0,0,0,8.00670623779297,0,0,0,0,7.9989013671875,0,0,0,0,10.3944091796875,0,0,24.2205047607422,0,0,11.7479476928711,0,0,-12.8322143554688,0,0,-116.258865356445,0,0,17.2128067016602,0,0,0,0,9.97789764404297,0,0,0,0,14.1315841674805,0,0,0,9.99210357666016,0,0,0,0,-18.1718215942383,0,0,0,0,0,-24.4496688842773,0,0,0,0,7.48676300048828,0,0,0,0,10.9006576538086,0,0,0,0,9.03691864013672,0,0,0,0,0,-27.0382919311523,0,0,0,0,12.3154983520508,0,0,0,0,12.4599990844727,0,0,0,0,9.53116607666016,0,0,0,0,8.29750061035156,0,0,0,6.12296295166016,0,0,0,-38.8859939575195,0,0,0,0,-12.1885604858398,0,0,0,8.68825531005859,0,0,0,6.20229339599609,0,0,0,8.22499847412109,0,11.2193222045898,0,0,0,0,1.59337615966797,0,0,0,0,0.0003204345703125,0,0,0,0,7.61243438720703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.25923919677734,0,0,0,0,0,0,0,0,0,1.41248321533203,0,0,0,5.54273223876953,0,0,0,0,8.86222839355469,0,0,0,0,15.7528457641602,0,0,0,0,3.63359832763672,0,0,0.180160522460938,0,0,0,0,6.36614990234375,0,0,0,0,12.6053848266602,0,0,0,0,8.00892639160156,0,0,0,0,8.00164031982422,0,0,0,0,8.00505065917969,0,0,0,0,3.456787109375,0,0,0,0,0,-133.221496582031,0,0,0,0,0,5.56018829345703,0,0,0,0,26.7399597167969,0,0,11.9365539550781,0,0,2.38755035400391,0,24.8013458251953,0,0,16.0585708618164,0,0,11.9487915039062,0,0,0,10.5128173828125,0,0,0,0,0,7.73654174804688,0,0,0,0,6.26708221435547,0,0,0,0,-46.1992416381836,0,0,0,-11.3499908447266,0,0,0,0,6.28177642822266,0,0,0,0,9.79859161376953,0,0,0,0,10.7218475341797,0,0,0,0,-43.4888153076172,0,0,0,0,0,-13.2773208618164,0,0,0,0,10.9306716918945,0,0,0,0,7.25894165039062,0,0,0,0,10.9197235107422,0,0,0,7.85837554931641,0,0,0,5.97482299804688,0,0,0,-5.29910278320312,0,0,0,0,-43.0263442993164,0,0,0,7.560302734375,0,0,0,7.82261657714844,0,0,0,9.34749603271484,0,13.0202560424805,0,0,0,0,0.704017639160156,0,0,0,0,0,0.922988891601562,0,0,0,0,5.00399017333984,0,0,0,2.70432281494141,0,0,0,0,7.62939453125e-05,0,0,0,0,3.27307891845703,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.15209197998047,0,0,0,0,0,4.58019256591797,0,0,0,0,5.95488739013672,0,0,0,0,14.5131683349609,0,0,1.12374114990234,0,0,0.177574157714844,0,0,6.36320495605469,0,0,0,0,5.421875,0,0,0,0,8.96632385253906,0,0,0,0,-18.1859130859375,0,0,0,0,0,-69.1535110473633,0,0,0,0,12.5772933959961,0,0,0,0,12.1874084472656,0,0,0,33.7533721923828,0,0,3.0517578125e-05,0,0,25.5721969604492,0,0,-15.5630874633789,0,0,0,0,0.199310302734375,0,0,0,10.2704620361328,0,0,0,7.96226501464844,0,0,0,0,-5.99454498291016,0,0,0,0,0,-58.9894790649414,0,0,0,0,0,5.17964935302734,0,0,0,0,7.13165283203125,0,0,0,0,6.72746276855469,0,0,6.66629028320312,0,0,0,0,6.34296417236328,0,0,1.54784393310547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-70.8383483886719,0,0,0,0,0,-71.6949615478516,0,0,0,0,7.36180114746094,0,0,0,0,0,8.530029296875,0,0,0,0,6.88935089111328,0,0,0,11.0242385864258,0,0,0,0,11.2146072387695,0,0,0,-45.0624694824219,0,0,8.92518615722656,0,0,0,6.45507049560547,0,0,0,6.48847961425781,0,0,0,8.87265777587891,0,0,0,7.62200927734375,0,0,0,9.98612213134766,0,0,8.13725280761719,0,0,0,0,1.58252716064453,0,0,0,0,7.52457427978516,0,0,0,0,0,0,0,0,0,3.22139739990234,0,0,0,0,0,0,0,0,0,6.01750946044922,0,0,0,0,0,4.47272491455078,0,0,0,0,5.33390045166016,0,0,0,0,16.6412506103516,0,0,0,0,0.42657470703125,0,0,1.78234100341797,0,0,0,0,10.0883636474609,0,0,0,0,7.30162048339844,0,0,0,0,8.00668334960938,0,0,0,0,8.00222015380859,0,0,0,0,8.00579833984375,0,0,0,0,13.0903015136719,0,0,-16.1602325439453,0,0,0,-112.796424865723,0,0,11.9623947143555,0,0,0.478523254394531,0,0,25.7415618896484,0,0,11.7255325317383,0,0,0,9.94080352783203,0,0,0,9.94115447998047,0,0,0,10.6605453491211,0,0,7.04591369628906,0,0,0,0,5.72979736328125,0,0,0,0,0,-49.338981628418,0,0,0,0,7.67523956298828,0,0,0,7.06544494628906,0,0,0,0,7.07532501220703,0,0,0,0,1.84310913085938,0,0,0,-23.0257949829102,0,0,6.77272033691406,0,0,0,11.7596969604492,0,0,0,0,12.6861572265625,0,0,0,7.62242126464844,0,0,0,6.61707305908203,0,0,0,-6.15109252929688,0,0,0,0,-40.7883911132812,0,0,0,9.25662994384766,0,0,0,6.38496398925781,0,0,0,8.75209808349609,0,11.3919830322266,0,0,0,0,1.61168670654297,0,0,0,0,7.13006591796875,0,0,0,0,0,0.569931030273438,0,0,0,0,7.62939453125e-05,0,0,0,0,3.27936553955078,0,0,0,0,0,0,0,0,0,4.37706756591797,0,0,0,0,2.33369445800781,0,0,0,9.14218139648438,0,0,0,10.6819458007812,0,0,0,0,3.16783905029297,0,0,0.180160522460938,0,0,0,0,6.38430786132812,0,0,0,0,12.9737396240234,0,0,0,0,8.00294494628906,0,0,0,0,-5.71052551269531,0,0,0,0,0,-86.153564453125,0,0,0,0,11.5383453369141,0,0,0,0,32.7383193969727,0,0,12.1404495239258,0,0,4.452880859375,0,0,0,0,0,0,22.1176223754883,0,0,-20.0165252685547,0,0,0,0,11.7409057617188,0,0,0,0,13.1565475463867,0,0,4.03117370605469,0,0,0,0,0,-127.627502441406,0,0,0,0,0,-10.3532791137695,0,0,0,0,0,7.05812072753906,0,0,0,0,9.45082092285156,0,0,0,0,6.54132080078125,0,0,0,0,7.751220703125,0,0,0,0,0,-7.38420867919922,0,0,0,-18.5020523071289,0,0,0,0,9.51444244384766,0,0,0,0,8.34877777099609,0,0,0,12.0286483764648,0,0,0,0,11.6575698852539,0,0,0,-19.3988037109375,0,0,0,-20.8517150878906,0,8.79759979248047,0,0,0,6.10494232177734,0,0,0,6.56252288818359,0,0,0,7.18697357177734,0,0,0,6.59317016601562,0,0,0,11.2956085205078,0,6.86344909667969,0,0,0,0,1.61035919189453,0,0,0,0,0,0,0,0,0,7.78531646728516,0,0,0,0,0,0,0,0,0,2.45070648193359,0,0,0,0,0,0.87139892578125,0,0,0,0,0.0005340576171875,0,0,0,0,6.01454162597656,0,0,0,0,3.36740875244141,0,0,0,0,7.15529632568359,0,0,0,0,13.5971527099609,0,0,0.180160522460938,0,0,0,0,6.3179931640625,0,0,0,0,13.1486587524414,0,0,0,0,8.00294494628906,0,0,0,0,2.73223876953125,0,0,0,0,0,-86.4250640869141,0,0,0,0,0,-21.6124801635742,0,0,0,0,35.3975677490234,0,0,11.9490432739258,0,0,3.0517578125e-05,0,0,26.2094497680664,0,0,11.205680847168,0,0,0,10.4467697143555,0,0,0,8.9163818359375,0,0,0,8.45003509521484,0,0,-56.0076370239258,0,0,0,0,0,6.87931823730469,0,0,11.6256103515625,0,0,0,0,7.97650909423828,0,0,0,0,-22.8667984008789,0,0,0,0,0,-40.2507705688477,0,0,0,0,9.64917755126953,0,0,0,0,1.95928955078125,0,0,0,0,6.70301055908203,0,0,0,0,8.18463134765625,0,0,0,-0.322059631347656,0,0,0,-24.9384536743164,0,0,0,0,0,12.0699920654297,0,0,0,6.20691680908203,0,0,0,7.23500823974609,0,0,0,7.53643035888672,0,0,0,7.90806579589844,0,0,0,6.42094421386719,0,0,0,7.42499542236328,0,0,0,9.03866577148438,0,0,9.31264495849609,0,0,0,0,1.58635711669922,0,0,0,0,7.09119415283203,0,0,0,0,0,0.569511413574219,0,0,0,0,7.62939453125e-05,0,0,0,0,3.27767181396484,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.22470092773438,0,0,0,0,0,0,-47.4568099975586,0,0,0,0,0,0,-43.4736404418945,0,0,0,0,8.66644287109375,0,0,0,0,13.4246673583984,0,0,0,0,0,2.12436676025391,0,0,0,0,9.80352020263672,0,0,0,0,7.48301696777344,0,0,0,0,8.00518798828125,0,0,0,0,8.00521087646484,0,0,0,0,7.99981689453125,0,0,0,0,21.611198425293,0,0,0,-58.1385879516602,0,0,11.7765731811523,0,0,25.4079895019531,0,0,11.0533905029297,0,0,10.4197387695312,0,0,0,3.013671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.19590759277344,0,0,0,0,-160.775375366211,0,0,0,0,-18.3755340576172,0,0,0,0,5.833740234375,0,0,0,11.5499038696289,0,0,0,0,9.77165222167969,0,0,0,0,6.54376220703125,0,0,0,0,6.46306610107422,0,0,0,0,-31.1308135986328,0,0,0,6.82054138183594,0,0,0,0,10.8786773681641,0,0,0,0,7.20751190185547,0,0,0,0,-6.00322723388672,0,0,0,-18.3935470581055,0,0,12.0464248657227,0,0,0,9.72429656982422,0,0,0,0,9.80602264404297,0,0,0,5.68329620361328,0,0,0,6.40056610107422,0,0,0,6.44507598876953,0,0,0,7.92626190185547,0,0,0,7.76925659179688,0,0,0,0,0,12.0181579589844,0,0,0,0,1.29990386962891,0,0,0,0,0,0.267288208007812,0,0,0,0,4.08559417724609,0,0,0,0,3.44805145263672,0,0,0,0,0,0,0,0,0,1.38974761962891,0,0,0,0,0,1.83482360839844,0,0,0,0,0,0,0,0,0,4.30170440673828,0,0,0,0,2.80796051025391,0,0,0,0,8.82621002197266,0,0,0,13.0888519287109,0,0,0,0,1.12955474853516,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1806030273438,0,0,0,0,7.68328094482422,0,0,0,0,8.00630950927734,0,0,0,0,8.00350952148438,0,0,0,0,8.00563049316406,0,0,0,0,-26.8598480224609,0,0,0,0,0,-46.5193786621094,0,0,0,0,0,-77.2290573120117,0,0,0,28.7650527954102,0,0,0,0,0,19.9815216064453,0,0,18.2693099975586,0,0,0,9.58092498779297,0,0,0,0,8.43000030517578,0,0,0,14.5444412231445,0,0,8.27535247802734,0,0,0,0,5.3740234375,0,0,0,0,0,-63.758430480957,0,0,0,0,7.93000030517578,0,0,0,0,7.27363586425781,0,0,0,0,9.10790252685547,0,0,0,0,5.22630310058594,0,0,0,0,-32.08740234375,0,0,0,0,0,0,5.84310150146484,0,0,13.365608215332,0,0,0,0,12.3777770996094,0,0,0,7.53741455078125,0,0,0,7.66005706787109,0,0,0,9.50613403320312,0,0,0,8.87604522705078,0,0,0,-44.4444274902344,0,0,0,0,-18.4536209106445,0,0,0,10.4541397094727,0,0,0,0,13.3625411987305,0,0,0,0,0,0,0,0,0,1.60985565185547,0,0,0,0,7.7735595703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.29990386962891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.19058990478516,0,0,0,0,1.96750640869141,0,0,0,0,8.90081024169922,0,0,0,0,11.6586456298828,0,0,0,0,0,1.78234100341797,0,0,0,0,7.10749053955078,0,0,0,0,10.9878158569336,0,0,0,0,8.00630950927734,0,0,0,0,8.00986480712891,0,0,0,0,-2.18460083007812,0,0,0,0,0,-84.2243118286133,0,0,0,0,38.1850891113281,0,0,12.6899566650391,0,0,3.0517578125e-05,0,0,27.6250305175781,0,0,11.7687530517578,0,0,0,-21.7593002319336,0,0,0,0,10.129508972168,0,0,0,8.09588623046875,0,0,0,0,6.25904083251953,0,0,0,0,0,-128.501564025879,0,0,0,0,0,-13.2948989868164,0,0,0,0,0,4.98866271972656,0,0,0,0,10.5406112670898,0,0,8.83860778808594,0,0,0,0,6.23036193847656,0,0,0,0,-6.06221771240234,0,0,0,0,0,0,-17.4993743896484,0,0,0,6.7275390625,0,0,0,0,6.94413757324219,0,0,0,0,10.2931365966797,0,0,0,0,11.8740158081055,0,0,0,10.0639801025391,0,0,0,-48.618766784668,0,0,0,7.94338226318359,0,0,0,8.83271789550781,0,0,0,6.10837554931641,0,0,0,7.09745788574219,0,0,0,6.74014282226562,0,0,0,14.2133255004883,0,0,0,0,2.02324676513672,0,0,0,0,1.62549591064453,0,0,0,0,0.42218017578125,0,0,0,7.58164215087891,0,0,0,0,0,0,0,0,0,1.50060272216797,0,0,0,0,0,1.90133666992188,0,0,0,0,0,0,0,0,0,0.900962829589844,0,0,0,0,5.510986328125,0,0,0,0,3.09474182128906,0,0,0,0,8.16499328613281,0,0,0,0,12.0122985839844,0,0,0.180160522460938,0,0,0,0,6.31920623779297,0,0,0,0,13.1930618286133,0,0,0,0,8.00331878662109,0,0,0,0,8.007080078125,0,0,0,0,-6.27451324462891,0,0,0,0,0,-110.699760437012,0,0,0,0,22.1681747436523,0,0,26.3192749023438,0,0,17.6662902832031,0,13.1401748657227,0,0,14.620475769043,0,0,10.5831832885742,0,0,0,10.7660675048828,0,0,0,0,7.05322265625,0,0,0,0,-58.7190933227539,0,0,0,0,0,0.590110778808594,0,0,10.3374404907227,0,0,0,0,7.58221435546875,0,0,0,0,9.11772155761719,0,0,0,0,2.28250122070312,0,0,0,0,0,-62.2164154052734,0,0,10.1561965942383,0,0,0,0,1.42382049560547,0,0,0,14.5238876342773,0,0,0,11.9555587768555,0,0,0,7.01040649414062,0,0,0,-28.5961151123047,0,0,0,0,-18.2119369506836,0,0,0,8.68208312988281,0,0,0,7.07312774658203,0,0,0,7.07320404052734,0,0,0,8.36616516113281,0,0,0,11.1756057739258,0,6.85125732421875,0,0,0,0,1.59050750732422,0,0,0,0,3.10759735107422,0,0,4.60777282714844,0,0,0,0,0,0,0,0,0,0.856765747070312,0,0,0,0,2.42914581298828,0,0,0,0,0,0,0,0,0,3.14252471923828,0,0,3.34044647216797,0,0,0,0,0,3.31309509277344,0,0,0,0,7.20695495605469,0,0,0,0,13.6793975830078,0,0,0,0,0,1.78234100341797,0,0,0,0,-30.111083984375,0,0,0,0,0,-60.1844635009766,0,0,0,0,13.2040176391602,0,0,0,0,8.00705718994141,0,0,0,0,8.00857543945312,0,0,0,0,8.00355529785156,0,0,0,0,10.7629470825195,0,0,26.3840179443359,0,0,12.8984527587891,0,0,-39.3044357299805,0,17.0313720703125,0,0,0,13.9757919311523,0,0,0,0,7.754150390625,0,0,0,-51.4561386108398,0,0,0,0,4.75527954101562,0,0,0,0,6.03202819824219,0,0,0,0,8.61571502685547,0,0,0,0,6.43115234375,0,0,0,0,9.35778045654297,0,0,0,0,0.896308898925781,0,0,0,0,0,0,0,0,0,-2.00907897949219,0,0,0,0,-138.800880432129,0,0,0,0,-11.2676773071289,0,0,0,0,7.1878662109375,0,0,7.81488800048828,0,0,7.05081939697266,0,0,0,0,-0.162300109863281,0,0,0,0,0,-24.9134368896484,0,0,0,0,12.9552459716797,0,0,0,7.5595703125,0,0,0,8.00650024414062,0,0,0,6.93383026123047,0,0,0,7.18874359130859,0,0,0,6.64838409423828,0,0,0,8.97169494628906,0,0,0,9.60141754150391,0,0,9.58719635009766,0,0,0,0,1.60985565185547,0,0,0,0,2.58050537109375,0,0,0,5.24588775634766,0,0,0,0,0,0,0,0,0,3.32199096679688,0,0,0,0,0.0005340576171875,0,0,0,0,6.26409912109375,0,0,0,0,2.54679870605469,0,0,0,0,8.36055755615234,0,0,0,0,12.9229125976562,0,0,0,1.13901519775391,0,0,0.180160522460938,0,0,0,0,6.33435821533203,0,0,0,0,13.1454544067383,0,0,0,0,8.00855255126953,0,0,0,0,8.00259399414062,0,0,0,0,8.00712585449219,0,0,0,0,-13.8450927734375,0,0,0,0,0,-66.0459289550781,0,0,0,0,0,-42.0271377563477,0,0,12.5224914550781,0,0,2.50473785400391,0,25.8563232421875,0,0,15.7492141723633,0,0,12.9847106933594,0,0,0,10.7919616699219,0,0,0,0,7.14385986328125,0,0,0,0,8.29978179931641,0,0,0,0,0,-62.8230743408203,0,0,0,0,0,7.03606414794922,0,0,0,0,8.32672119140625,0,0,0,0,0,8.12838745117188,0,0,0,0,-3.0255126953125,0,0,0,-19.4753723144531,0,0,0,0,7.07766723632812,0,0,0,10.5780334472656,0,0,0,0,12.1010437011719,0,0,0,8.84755706787109,0,0,0,0,8.20925903320312,0,0,0,-0.713340759277344,0,0,0,0,-47.8292770385742,0,0,0,6.43629455566406,0,0,0,9.58473968505859,0,0,0,8.45655822753906,0,0,0,13.6271209716797,0,0,0,0,3.640380859375,0,0,0,0,1.62346649169922,0,0,0,0,0.842742919921875,0,0,0,7.04509735107422,0,0,0,0,0,0,0,0,0,3.33902740478516,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.3094482421875,0,0,0,0,1.48577117919922,0,0,0,0,9.70838928222656,0,0,0,0,13.5735092163086,0,1.13520050048828,0,0,0,0,0,6.54420471191406,0,0,0,0,-3.22527313232422,0,0,0,0,0,-82.8416900634766,0,0,0,0,7.64064788818359,0,0,0,0,9.53713226318359,0,0,0,0,9.86627197265625,0,0,0,0,14.1972885131836,0,0,0,0,27.8239822387695,0,0,12.4304580688477,0,0,-33.2060775756836,0,0,14.636360168457,0,0,18.2341079711914,0,0,8.80046844482422,0,0,0,-103.661361694336,0,0,0,0,-30.172721862793,0,0,0,0,3.39076232910156,0,0,10.7679824829102,0,0,0,0,10.8100433349609,0,0,0,0,6.62953948974609,0,0,0,0,7.76096343994141,0,0,0,0,-30.2102279663086,0,0,0,0,10.0312728881836,0,0,0,0,8.62795257568359,0,0,0,0,6.24595642089844,0,0,9.23614501953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.19590759277344,0,0,0,0,0,0,-83.2385559082031,0,0,0,0,0,0,6.09564971923828,0,0,0,10.1590118408203,0,0,0,10.665771484375,0,0,0,8.51014709472656,0,0,0,5.63603973388672,0,0,0,9.87059020996094,0,0,0,6.93205261230469,0,0,0,7.80780029296875,0,0,0,0,0,12.5703887939453,0,0,0,0,7.62939453125e-05,0,0,0,0,1.61974334716797,0,0,0,0,7.84156036376953,0,0,0,0,0,0,0,0,0,3.31980895996094,0,0,0,0,0,0,0,0,0,6.13359832763672,0,0,0,0,0.895561218261719,0,0,0,0,10.1300201416016,0,0,0,0,0,12.9935760498047,0,0,0,0,1.13280487060547,0,0,1.78234100341797,0,0,0,0,5.81647491455078,0,0,0,0,12.2466506958008,0,0,0,0,8.00348663330078,0,0,0,0,8.00799560546875,0,0,0,0,8.00056457519531,0,0,0,0,9.89608001708984,0,0,0,-65.8622283935547,0,0,0,-89.4859466552734,0,0,25.8638229370117,0,0,3.0517578125e-05,0,0,26.692138671875,0,0,11.396354675293,0,0,0,10.5170135498047,0,0,0,9.01673126220703,0,0,0,9.27876281738281,0,0,0,12.7668609619141,0,0,0,0,-16.0709533691406,0,0,0,0,0,0,-43.6061706542969,0,0,0,0,7.35203552246094,0,0,0,0,10.7635116577148,0,0,0,0,9.47531890869141,0,0,0,0,-9.55534362792969,0,0,0,-12.5414505004883,0,0,0,11.1298904418945,0,0,0,0,11.2759628295898,0,0,0,9.72632598876953,0,0,0,7.48033905029297,0,0,0,8.40522003173828,0,0,0,9.73934936523438,0,0,0,-45.2906188964844,0,0,0,0,-16.4367141723633,0,0,0,8.44443511962891,0,0,0,13.1748657226562,0,0,0,4.29811096191406,0,0,0,0,1.60369110107422,0,0,0,0,7.70991516113281,0,0,0,0,0,0,0,0,0,3.26700592041016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.15167999267578,0,0,0,0,3.04031372070312,0,0,0,0,7.73126983642578,0,0,0,0,11.7847671508789,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1339721679688,0,0,0,0,7.80830383300781,0,0,0,0,8.00348663330078,0,0,0,0,8.00051879882812,0,0,0,0,-88.9171371459961,0,0,0,0,19.2300567626953,0,0,0,28.0209503173828,0,0,3.0517578125e-05,0,0,26.2029190063477,0,0,10.5859222412109,0,0,0,0,7.25390625,0,0,0,0,0,-22.8366928100586,0,0,11.0177841186523,0,0,0,0,7.05812072753906,0,0,0,0,6.82791137695312,0,0,0,0,-72.9989929199219,0,0,0,0,0,-62.6163864135742,0,0,0,0,0,6.38457489013672,0,0,7.01895904541016,0,0,0,0,0,10.6288299560547,0,0,0,0,8.41246032714844,0,0,0,0,2.86705017089844,0,0,0,0,0,0,-27.231819152832,0,0,0,0,11.9160232543945,0,0,0,0,11.8532791137695,0,0,0,7.74823760986328,0,0,0,7.04967498779297,0,0,0,6.88370513916016,0,0,0,8.55501556396484,0,0,0,6.53936767578125,0,0,0,-16.6376800537109,0,0,0,0,-48.4737701416016,0,0,0,7.84584808349609,0,0,0,14.9011077880859,0,0,0,0,0.680366516113281,0,0,0,0,0,0.909088134765625,0,0,0,0,7.56156921386719,0,0,0,0,0,0,0,0,0,0.825935363769531,0,0,0,0,2.37776184082031,0,0,0,0,0.0005340576171875,0,0,0,0,6.02173614501953,0,0,0,0,1.47180938720703,0,0,0,0,9.23489379882812,0,0,0,0,17.0866775512695,0,0,0,0,0.42657470703125,0,0,1.78234100341797,0,0,0,0,5.72721099853516,0,0,0,0,12.1109008789062,0,0,0,0,8.00311279296875,0,0,0,0,8.00089263916016,0,0,0,0,8.00525665283203,0,0,0,0,9.98970031738281,0,0,-61.1763458251953,0,0,0,0,-17.8828353881836,0,0,0,0,0,17.3451919555664,0,16.4710693359375,0,0,0,9.00938415527344,0,0,0,0,12.3843765258789,0,0,0,8.81290435791016,0,0,0,0,6.90621948242188,0,0,8.84352874755859,0,0,0,0,-51.570426940918,0,0,5.64506530761719,0,0,0,0,6.42868041992188,0,0,0,0,0,10.5602416992188,0,0,0,0,8.31690979003906,0,0,0,-57.9932861328125,0,0,14.6945571899414,0,0,0,0,10.1684646606445,0,0,0,10.0664138793945,0,0,0,0,0,6.95599365234375,0,0,0,6.29527282714844,0,0,0,8.06226348876953,0,0,0,-29.9365081787109,0,0,0,0,-27.399787902832,0,0,0,7.60002136230469,0,0,0,7.06929779052734,0,0,0,7.66782379150391,0,11.3704299926758,0,0,0,0,0.692344665527344,0,0,0,0,0,0.915985107421875,0,0,0,0,7.57986450195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.19857025146484,0,0,0,0,0,0,0,0,0,6.00151824951172,0,0,0,0,2.98497772216797,0,0,0,0,7.67606353759766,0,0,0,0,15.4555816650391,0,0,0,0,0,1.78234100341797,0,0,0,0,5.76511383056641,0,0,0,0,-80.5974197387695,0,0,0,0,11.0002059936523,0,0,0,0,8.30706024169922,0,0,0,0,12.5836486816406,0,0,0,0,9.65613555908203,0,0,0,0,28.1558990478516,0,0,12.5911560058594,0,0,0.501289367675781,0,0,0,-54.9449157714844,0,0,0,26.9340286254883,0,0,20.935661315918,0,0,0,0,8.23271179199219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-66.0952224731445,0,0,0,0,0,-109.014678955078,0,0,8.26996612548828,0,0,0,0,7.80258941650391,0,0,0,0,8.09896087646484,0,0,0,0,7.23938751220703,0,0,0,0,4.00572967529297,0,0,0,0,0,-34.1845703125,0,0,0,0,8.88024139404297,0,0,0,0,8.2874755859375,0,0,0,0,10.9227142333984,0,0,0,-2.56208801269531,0,0,0,-24.3483047485352,0,0,0,0,13.7077560424805,0,0,0,7.65032196044922,0,0,0,7.60176849365234,0,0,0,7.16175842285156,0,0,0,9.37796783447266,0,0,0,10.0135726928711,0,0,0,7.97952270507812,0,0,0,15.5681304931641,0,0,0,0,0,0,0,0,0,1.68572235107422,0,0,0,0,0.444664001464844,0,0,0,0,7.47669982910156,0,0,0,0,0,0,0,0,0,3.29324340820312,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.27845001220703,0,0,0,0,1.52291107177734,0,0,0,0,9.71514129638672,0,0,0,0,13.6430206298828,0,0,1.13515472412109,0,0,0.180160522460938,0,0,0,0,6.33144378662109,0,0,0,0,13.037956237793,0,0,0,0,8.00369262695312,0,0,0,0,8.00388336181641,0,0,0,0,8.00729370117188,0,0,0,0,-25.4317626953125,0,0,0,0,0,-54.7487182617188,0,0,0,0,0,-61.3403549194336,0,0,25.8908081054688,0,0,17.4062423706055,0,17.5537719726562,0,0,0,10.5575485229492,0,0,0,0,9.85165405273438,0,0,0,9.41008758544922,0,0,0,0,7.49404907226562,0,0,0,0,9.08991241455078,0,0,0,0,0,-60.9643630981445,0,0,9.14476013183594,0,0,0,0,7.19771575927734,0,0,0,0,7.49404907226562,0,0,0,0,-1.27732849121094,0,0,0,0,0,-21.8558197021484,0,0,0,0,7.36374664306641,0,0,0,11.8881072998047,0,0,0,0,11.9485397338867,0,0,0,8.14835357666016,0,0,0,6.67838287353516,0,0,0,6.66965484619141,0,0,0,0,-53.3715515136719,0,0,0,7.00835418701172,0,0,0,8.14575958251953,0,0,0,7.3447265625,0,0,0,7.63455963134766,0,0,13.0513305664062,0,0,0,0,7.62939453125e-05,0,0,0,0,1.62186431884766,0,0,0,0,5.77674102783203,0,0,0,0,0,1.82223510742188,0,0,0,0,7.62939453125e-05,0,0,0,0,3.19283294677734,0,0,0,0,0,0,0,0,0,0.0005340576171875,0,0,0,0,6.01377105712891,0,0,0,0,3.01119232177734,0,0,0,0,7.75401306152344,0,0,0,0,15.5232009887695,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1330871582031,0,0,0,0,-23.3722534179688,0,0,0,0,0,-65.7380905151367,0,0,0,0,8.00331878662109,0,0,0,0,8.00521087646484,0,0,0,0,8.04917144775391,0,0,0,0,37.1056518554688,0,0,12.3943176269531,0,0,0,0,0,-28.2234573364258,0,15.440788269043,0,0,13.1703262329102,0,0,0,0,9.81835174560547,0,0,0,-12.122428894043,0,0,0,0,0,-117.19181060791,0,0,0,0,0,-6.75857543945312,0,0,0,0,0,3.84987640380859,0,0,0,0,10.1707916259766,0,0,6.75205230712891,0,0,0,0,8.31202697753906,0,0,0,0,6.63688659667969,0,0,0,0,-29.5926132202148,0,0,0,0,9.84516143798828,0,0,0,0,8.31202697753906,0,0,0,0,7.23143768310547,0,0,0,10.2438430786133,0,0,0,0,0,0,-37.0502624511719,0,0,0,13.3857269287109,0,0,0,10.3976440429688,0,0,0,6.37020874023438,0,0,0,9.82101440429688,0,0,0,9.18608856201172,0,0,0,10.5967483520508,0,0,0,8.78424835205078,0,10.7053985595703,0,0,0,0,7.62939453125e-05,0,0,0,0,1.65972137451172,0,0,0,0,7.80992889404297,0,0,0,0,0,0,0,0,0,3.26102447509766,0,0,0,0,0,0,0,0,0,6.19245147705078,0,0,0,0,2.03133392333984,0,0,0,0,8.88075256347656,0,0,0,0,16.6188354492188,0,0,0,0,1.66250610351562,0,0,0.180160522460938,0,0,0,0,6.37706756591797,0,0,0,0,-48.4586334228516,0,0,0,0,0,-79.5112838745117,0,0,0,0,9.44972991943359,0,0,0,0,9.56767272949219,0,0,0,0,8.30818939208984,0,0,0,0,14.3661270141602,0,0,0,0,28.2852325439453,0,0,12.6470413208008,0,0,0.505912780761719,0,0,27.030876159668,0,0,11.7361373901367,0,0,0,7.06304931640625,0,0,0,0,0,-54.2475280761719,0,0,8.31404876708984,0,0,0,0,6.97234344482422,0,0,0,0,6.62956237792969,0,0,7.72670745849609,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-68.834716796875,0,0,0,0,-83.5710678100586,0,0,0,0,0,0,0,0,0,10.2198333740234,0,0,0,0,6.81076049804688,0,0,0,0,8.83370971679688,0,0,0,0,8.88504028320312,0,0,-22.0132141113281,0,0,0,0,0,-7.12340545654297,0,0,0,10.8109970092773,0,0,0,0,11.4759674072266,0,0,0,8.79795837402344,0,0,0,7.58748626708984,0,0,0,7.08298492431641,0,0,0,8.62870025634766,0,0,0,6.36981964111328,0,0,0,10.0573883056641,0,0,0,1.62847900390625,0,0,0,0,-65.1996459960938,0,0,0,0,-0.00252532958984375,0,0,4.97510528564453,0,0,0,0,1.67615509033203,0,0,0,0,7.96315765380859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.32670593261719,0,0,0,0,0,0,0,0,0,4.27320861816406,0,0,0,2.37884521484375,0,0,0,0,0,1.71074676513672,0,0,0,0,8.83789825439453,0,0,0,0,12.8024368286133,0,0,0,0,8.15106964111328,0,0,0,0,0,6.53799438476562,0,0,0,0,5.39189910888672,0,0,0,0,9.29527282714844,0,0,0,0,9.55944061279297,0,0,0,0,8.30493927001953,0,0,0,0,13.0936508178711,0,0,0,0,26.4915924072266,0,0,11.8526306152344,0,0,2.37076568603516,0,-45.2435455322266,0,0,0,-69.1575622558594,0,0,15.2613372802734,0,0,0,0,8.59944152832031,0,0,0,9.37255859375,0,0,0,0,6.90625762939453,0,0,9.00761413574219,0,0,0,0,-48.7897109985352,0,0,0,7.11442565917969,0,0,10.7194900512695,0,0,0,0,6.80587005615234,0,0,0,0,-10.3153762817383,0,0,0,0,0,-11.7538909912109,0,0,0,0,5.73461151123047,0,0,0,9.89923858642578,0,0,0,0,11.2041702270508,0,0,0,8.99047088623047,0,0,0,0,7.42726135253906,0,0,0,8.28488922119141,0,0,0,-32.4038009643555,0,0,0,0,-19.3195877075195,0,0,0,7.01984405517578,0,0,0,8.20745086669922,0,0,0,7.55399322509766,0,0,0,13.573616027832,0,0,0,3.025146484375,0,0,0,0,1.60211944580078,0,0,0,0,0,0,0,0,0,7.54534149169922,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.18883514404297,0,0,0,0,0,0,0,0,0,5.97340393066406,0,0,0,0,0.754310607910156,0,0,0,0,9.79096221923828,0,0,0,0,15.3779525756836,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1428527832031,0,0,0,0,7.89400482177734,0,0,0,0,7.99862670898438,0,0,0,0,8.00949096679688,0,0,0,0,8.00675201416016,0,0,0,0,-25.821403503418,0,0,0,0,0,-73.2947387695312,0,0,0,28.9044189453125,0,0,3.0517578125e-05,0,0,26.9211883544922,0,0,11.4884948730469,0,0,0,10.5509643554688,0,0,0,9.06523132324219,0,0,0,8.36508941650391,0,0,0,0,5.25566101074219,0,0,0,0,0,-50.7944488525391,0,0,0,0,7.78303527832031,0,0,0,0,6.64417266845703,0,0,0,0,8.78964996337891,0,0,0,0,2.28383636474609,0,0,0,-105.129386901855,0,0,0,1.93587493896484,0,0,0,0,6.32335662841797,0,0,0,0,8.19943237304688,0,0,0,0,9.15612030029297,0,0,0,7.26278686523438,0,0,0,0,11.3829879760742,0,0,0,-42.0873336791992,0,0,0,-0.420310974121094,0,0,8.07200622558594,0,0,0,6.51888275146484,0,0,0,10.1282958984375,0,0,0,7.37908172607422,0,0,0,6.11737060546875,0,0,0,6.77262115478516,0,0,0,10.4525375366211,0,8.01747131347656,0,0,0,0,1.64295196533203,0,0,0,0,7.20793151855469,0,0,0,0,0,0.564926147460938,0,0,0,0,7.62939453125e-05,0,0,0,0,3.25894927978516,0,0,0,0,0,0,0,0,0,4.94382476806641,0,0,0,0,2.02162170410156,0,0,0,0,2.88784027099609,0,0,0,0,7.27859497070312,0,0,0,0,16.8801879882812,0,0,0,0,3.94171142578125,0,0,0.177574157714844,0,0,6.38301849365234,0,0,0,0,7.84966278076172,0,0,0,0,-47.1613922119141,0,0,0,0,0,-75.9259033203125,0,0,0,0,8.00070190429688,0,0,0,0,8.00014495849609,0,0,0,0,8.04543304443359,0,0,0,0,33.8575134277344,0,0,11.5986633300781,0,0,16.9143600463867,0,16.0669937133789,0,0,0,11.9176712036133,0,0,0,0,8.59130859375,0,0,0,0,0,-62.1311798095703,0,0,12.0982971191406,0,0,0,0,6.94056701660156,0,0,0,0,7.28092193603516,0,0,3.97970581054688,0,0,0,0,0,-61.6312255859375,0,0,0,0,0,6.50957489013672,0,0,0,0,6.14946746826172,0,0,6.50708770751953,0,0,8.45409393310547,0,0,0,0,0,-5.90155792236328,0,0,0,0,0,-8.33264923095703,0,0,0,0,11.6539001464844,0,0,0,7.43440246582031,0,0,0,5.75577545166016,0,0,0,7.82644653320312,0,0,0,10.7617721557617,0,0,0,8.10042572021484,0,0,0,7.18311309814453,0,0,0,6.79438781738281,0,0,0,14.7708282470703,0,0,0,0,0,-53.7399368286133,0,0,0,0,0,0,-35.2635803222656,0,0,0,0,1.30508422851562,0,0,0,0,0.537063598632812,0,0,0,0,7.10841369628906,0,0,0,0,0.530960083007812,0,0,0,0,2.59355926513672,0,0,0,0,0,0,0,0,0,5.85409545898438,0,0,0,0,2.95523071289062,0,0,0,0,7.29608917236328,0,0,0,0,14.8306579589844,0,0.425933837890625,0,0,1.78234100341797,0,0,0,0,10.1444854736328,0,0,0,0,7.96183013916016,0,0,0,0,8.00685119628906,0,0,0,0,8.01343536376953,0,0,0,0,8.00637817382812,0,0,0,0,-67.6960754394531,0,0,0,0,0,26.8478317260742,0,0,12.6581954956055,0,0,18.2862014770508,0,10.8879241943359,0,0,0,0,0,0,0,0,0,0,0,-130.401336669922,0,0,0,-48.7481536865234,0,0,0,3.76280212402344,0,0,12.5245361328125,0,0,0,0,8.90048980712891,0,0,0,0,11.4599151611328,0,0,0,0,7.21485900878906,0,0,0,0,8.36829376220703,0,0,-3.75837707519531,0,0,0,0,0,-40.7035903930664,0,0,0,0,7.0924072265625,0,0,0,0,7.04832458496094,0,0,0,0,8.94632720947266,0,0,0,0,6.95771026611328,0,0,0,0,-30.8238906860352,0,0,12.3818130493164,0,0,0,0,13.9316024780273,0,0,0,9.56379699707031,0,0,0,0,8.39340972900391,0,0,0,7.605712890625,0,0,0,7.93778228759766,0,0,0,8.02151489257812,0,0,0,-34.5479202270508,0,0,0,0,-33.0116653442383,0,0,0,7.64244842529297,0,0,0,10.5686340332031,0,8.1878662109375,0,0,0,0,0.728019714355469,0,0,0,0,0,0.937393188476562,0,0,0,0,7.94992065429688,0,0,0,0,0,0,0,0,0,3.32611846923828,0,0,0,0,0,0,0,0,0,6.33782958984375,0,0,0,0,2.06594848632812,0,0,0,0,9.22718048095703,0,0,0,0,15.863655090332,0,0.425933837890625,0,0,0.180160522460938,0,0,0,0,6.42429351806641,0,0,0,0,13.3593368530273,0,0,0,0,8.00967407226562,0,0,0,0,8.00874328613281,0,0,0,0,8.00318145751953,0,0,0,0,11.4060592651367,0,0,27.3214721679688,0,0,12.8441619873047,0,0,-2.48892974853516,0,0,-134.49649810791,0,19.6432495117188,0,0,10.9644088745117,0,0,0,0,8.87712097167969,0,0,0,12.4126892089844,0,0,9.20108795166016,0,0,0,0,4.5833740234375,0,0,0,0,0,-62.1513748168945,0,0,0,0,11.5006942749023,0,0,0,0,8.16753387451172,0,0,0,0,6.92584228515625,0,0,0,0,5.98541259765625,0,0,0,-29.6530685424805,0,0,15.9457550048828,0,0,12.6199188232422,0,0,0,7.89157867431641,0,0,0,6.77373504638672,0,0,0,6.60881042480469,0,0,0,6.07929229736328,0,0,0,8.71394348144531,0,0,0,0,-64.7411880493164,0,0,0,6.53116607666016,0,0,0,9.17678070068359,0,0,0,0,14.4841766357422,0,0,0,0,7.62939453125e-05,0,0,0,0,1.68302154541016,0,0,0,0,8.04786682128906,0,0,0,0,0,0,0,0,0,3.35802459716797,0,0,0,0,0,0,0,0,0,5.15263366699219,0,0,0,0,1.94227600097656,0,0,0,0,2.53781127929688,0,0,0,0,8.22374725341797,0,0,0,0,14.3229064941406,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1686630249023,0,0,0,0,7.81787872314453,0,0,0,0,8.00444030761719,0,0,0,0,8.00164031982422,0,0,0,0,8.00804138183594,0,0,0,0,0.746604919433594,0,0,0,0,-89.2892227172852,0,0,12.2739639282227,0,0,0.490989685058594,0,0,26.3411178588867,0,0,11.4525985717773,0,0,0,10.5377349853516,0,0,0,10.090690612793,0,0,0,8.03811645507812,0,0,0,0,7.47690582275391,0,0,0,0,7.55527496337891,0,0,0,0,-53.8035736083984,0,0,0,0,-4.08502197265625,0,0,0,0,7.55527496337891,0,0,0,0,7.31282043457031,0,0,0,0,7.61160278320312,0,0,0,0,6.30133056640625,0,0,0,0,0,-5.55843353271484,0,0,0,0,0,-61.580322265625,0,0,0,0,0,6.178955078125,0,0,0,0,6.08580780029297,0,0,0,9.51165008544922,0,0,0,0,0,6.71238708496094,0,0,0,10.4675140380859,0,0,0,7.23497772216797,0,0,0,6.9229736328125,0,0,0,7.08486175537109,0,0,0,6.74800109863281,0,0,0,-50.3341903686523,0,0,0,0,-10.0422668457031,0,0,0,7.51838684082031,0,0,0,8.40970611572266,0,0,0,7.70859527587891,0,12.1703948974609,0,0,0,0,0.426948547363281,0,0,0,0,1.21238708496094,0,0,0,0,7.71814727783203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.22834014892578,0,0,0,0,0,0,0,0,0,5.9381103515625,0,0,0,0,0,0.987823486328125,0,0,0,0,5.40946197509766,0,0,0,0,9.55258178710938,0,0,0,0,9.07606506347656,0,0,0,0,0,1.78234100341797,0,0,0,0,8.11062622070312,0,0,0,0,0.394401550292969,0,0,0,0,0,-85.1568908691406,0,0,0,0,8.00984191894531,0,0,0,0,9.52920532226562,0,0,0,0,10.2777633666992,0,0,0,0,33.6590805053711,0,0,12.5043716430664,0,0,3.0517578125e-05,0,0,20.3387908935547,0,0,0,-25.5827255249023,0,0,0,11.4149169921875,0,0,0,0,8.68103790283203,0,0,0,0,5.64733123779297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-111.581893920898,0,0,0,-68.0486221313477,0,0,11.5663299560547,0,0,0,0,9.14473724365234,0,0,0,0,10.2663421630859,0,0,0,0,6.72990417480469,0,0,0,-28.8921127319336,0,0,0,0,6.92103576660156,0,0,0,0,8.94877624511719,0,0,0,0,8.17676544189453,0,0,0,-4.42659759521484,0,0,0,-23.8447647094727,0,0,12.7830810546875,0,0,0,6.95755004882812,0,0,0,7.03919219970703,0,0,0,6.23886108398438,0,0,0,8.83809661865234,0,0,0,7.00267028808594,0,0,0,6.58519744873047,0,0,0,6.52308654785156,0,0,0,6.42298126220703,0,0,0,15.0167465209961,0,0,0.938644409179688,0,0,0,0,1.66931915283203,0,0,0,0,4.86505126953125,0,0,0,2.98134613037109,0,0,0,0,0,0,0,0,0,2.41515350341797,0,0,0,0,0,0.850067138671875,0,0,0,0,0,0,0,0,0,3.64588165283203,0,0,0,0,2.90892028808594,0,0,0,0,0,1.71388244628906,0,0,0,0,9.16660308837891,0,0,0,0,17.1362457275391,0,0,0,0,1.84895324707031,0,0,0.180160522460938,0,0,0,0,6.36360168457031,0,0,0,0,8.66761779785156,0,0,0,0,9.52973937988281,0,0,0,0,11.0588455200195,0,0,0,0,-0.608840942382812,0,0,0,0,0,-59.9795455932617,0,0,0,0,0,-94.1277236938477,0,0,0,0,37.226676940918,0,0,12.4338912963867,0,0,4.55963134765625,0,0,0,0,0,0,22.5754013061523,0,0,17.5711822509766,0,0,0,0,12.1100616455078,0,0,0,11.6855850219727,0,0,0,0,8.12593078613281,0,0,0,0,3.46998596191406,0,0,0,0,0,0,-64.2714385986328,0,0,0,0,7.56258392333984,0,0,0,0,0,12.9627838134766,0,0,0,0,-1.84381866455078,0,0,0,0,-19.2611770629883,0,0,0,0,7.71883392333984,0,0,0,18.7134246826172,0,0,0,9.67533111572266,0,0,0,0,9.09977722167969,0,0,0,8.80536651611328,0,0,0,-36.6244506835938,0,0,0,0,-15.7082061767578,0,0,0,7.86821746826172,0,0,0,8.47364807128906,0,0,0,6.79145812988281,0,0,0,7.78224945068359,0,0,0,13.0134658813477,0,0,0,0,7.62939453125e-05,0,0,0,0,1.67057037353516,0,0,0,0,5.95961761474609,0,0,1.83900451660156,0,0,0,0,7.62939453125e-05,0,0,0,0,3.23726654052734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.034912109375,0,0,0,0,0.910972595214844,0,0,0,0,9.98704528808594,0,0,0,0,11.1171188354492,0,0,0,0,3.24986267089844,0,0,1.78234100341797,0,0,0,0,-16.609733581543,0,0,0,0,0,-72.0969924926758,0,0,0,0,13.1332397460938,0,0,0,0,8.0081787109375,0,0,0,0,8.00408935546875,0,0,0,0,8.01364898681641,0,0,0,0,11.8090667724609,0,0,27.5136184692383,0,0,12.9266586303711,0,0,-25.710319519043,0,0,3.13469696044922,0,0,16.2385559082031,0,0,9.81470489501953,0,0,0,0,0,-133.935882568359,0,0,0,0,0,0,0,0,0,0,0,10.604377746582,0,0,0,0,8.96353149414062,0,0,0,0,9.15204620361328,0,0,0,0,6.62217712402344,0,0,0,0,6.02218627929688,0,0,0,0,0,-29.6580810546875,0,0,9.82314300537109,0,0,0,0,9.15204620361328,0,0,0,0,5.89014434814453,0,0,0,-33.9870910644531,0,0,0,7.44825744628906,0,0,0,16.757194519043,0,0,0,6.58238220214844,0,0,0,8.02063751220703,0,0,0,9.1651611328125,0,0,0,10.2374801635742,0,0,0,6.73309326171875,0,0,0,6.35969543457031,0,0,0,11.4767150878906,0,7.25048828125,0,0,0,0,1.70093536376953,0,0,0,0,5.01921844482422,0,0,0,3.05682373046875,0,0,0,0,0,0,0,0,0,0.881355285644531,0,0,0,0,2.4697265625,0,0,0,0,0,0,0,0,0,0.881706237792969,0,0,0,0,5.53018951416016,0,0,0,0,0.786064147949219,0,0,0,0,10.5488891601562,0,0,0,0,2.74239349365234,0,0,0,0,0,-79.133544921875,0,0,0,0,0,-31.7277755737305,0,0,0,0,0,1.78234100341797,0,0,0,0,7.06257629394531,0,0,0,0,11.0198211669922,0,0,0,0,8.00498199462891,0,0,0,0,8.0050048828125,0,0,0,0,8.00376129150391,0,0,0,0,12.0171890258789,0,0,36.475227355957,0,0,0,0,0,17.7127685546875,0,-81.532096862793,0,0,11.4076614379883,0,0,0,9.99872589111328,0,0,0,0,7.98574066162109,0,0,0,11.269157409668,0,0,0,0,6.72988891601562,0,0,0,0,8.29245758056641,0,0,0,0,0,-60.5919952392578,0,0,0,0,0,4.91618347167969,0,0,0,0,6.10298919677734,0,0,0,0,7.74379730224609,0,0,0,0,9.99457550048828,0,0,0,0,5.13320159912109,0,0,0,0,0,0,-31.5291213989258,0,0,0,0,5.65915679931641,0,0,0,13.5634994506836,0,0,0,0,12.3902282714844,0,0,0,7.33045959472656,0,0,0,5.80503082275391,0,0,0,8.23032379150391,0,0,0,6.58167266845703,0,0,0,6.77962493896484,0,0,0,0,-62.2799911499023,0,0,0,0,-8.61603546142578,0,0,0,0,5.56355285644531,0,0,0,8.30247497558594,0,0,0,8.18868255615234,0,0,0,15.1311340332031,0,0,0,0,7.62939453125e-05,0,0,0,0,1.61425018310547,0,0,0,0,0.696670532226562,0,0,0,6.97829437255859,0,0,0,0,0,0,0,0,0,3.22882843017578,0,0,0,0,0,0,0,0,0,4.36357879638672,0,0,2.51439666748047,0,0,0,0,2.86013031005859,0,0,0,0,7.41843414306641,0,0,0,0,16.7655487060547,0,0,0,0,3.21295166015625,0,0,1.78234100341797,0,0,0,0,7.04217529296875,0,0,0,0,-85.9386978149414,0,0,0,0,10.9625015258789,0,0,0,0,8.309814453125,0,0,0,0,9.53466796875,0,0,0,0,12.8366546630859,0,0,0,0,28.2407760620117,0,0,12.6250076293945,0,0,0.505027770996094,0,0,-59.6030883789062,0,13.5450973510742,0,0,16.152099609375,0,0,0,0,9.49171447753906,0,0,0,10.7301177978516,0,0,0,0,7.6458740234375,0,0,0,0,6.52180480957031,0,0,0,0,0,0,0,0,0,0,0,-0.108718872070312,0,0,0,0,0,-155.834754943848,0,0,0,0,0,-23.2534790039062,0,0,0,0,0,7.74381256103516,0,0,6.83529663085938,0,0,0,0,7.93728637695312,0,0,0,0,0,7.39857482910156,0,0,0,0,1.00654602050781,0,0,0,0,0,0,-24.0667343139648,0,0,0,0,6.81927490234375,0,0,0,20.5024337768555,0,0,0,8.31620025634766,0,0,0,0,6.53989410400391,0,0,0,7.72019958496094,0,0,0,9.34615325927734,0,0,0,-36.376823425293,0,0,0,0,-23.6480865478516,0,0,0,6.90400695800781,0,0,0,10.3287887573242,0,0,0,7.95867156982422,0,12.4569320678711,0,0,0,0,7.62939453125e-05,0,0,0,0,1.66063690185547,0,0,0,0,2.13200378417969,0,0,0,0,5.75106811523438,0,0,0,0,7.62939453125e-05,0,0,0,0,3.28598785400391,0,0,0,0,0,0,0,0,0,6.26797485351562,0,0,0,0,0.781532287597656,0,0,0,0,9.46410369873047,0,0,0,0,8.21675109863281,0,0,0,0,9.21544647216797,0,0,0.180160522460938,0,0,0,0,6.32151794433594,0,0,0,0,13.2879867553711,0,0,0,0,7.99451446533203,0,0,0,0,8.00820159912109,0,0,0,0,8.00525665283203,0,0,0,0,9.64279174804688,0,0,25.1542053222656,0,0,-63.9716339111328,0,0,0,-67.1340560913086,0,0,4.73069000244141,0,0,0,0,0,26.3061676025391,0,0,12.5956268310547,0,0,0,0,11.2459716796875,0,0,0,11.8892059326172,0,0,7.42308807373047,0,0,0,0,6.65096282958984,0,0,0,0,0,-46.930061340332,0,0,0,0,8.55934143066406,0,0,0,0,8.89002990722656,0,0,0,0,-1.85216522216797,0,0,0,-18.032470703125,0,0,6.87883758544922,0,0,0,12.7019424438477,0,0,0,0,12.0597839355469,0,0,0,7.86531829833984,0,0,0,6.31122589111328,0,0,0,8.31354522705078,0,0,0,-43.0757064819336,0,0,0,0,-9.15202331542969,0,0,0,11.6434020996094,0,0,0,11.0788955688477,0,0,0,9.08699035644531,0,10.2532730102539,0,0,0,0,7.62939453125e-05,0,0,0,0,1.58200836181641,0,0,0,0,7.44551086425781,0,0,0,0,0,0,0,0,0,1.33668518066406,0,0,0,0,0,1.80258941650391,0,0,0,0,0.0002899169921875,0,0,0,0,5.90350341796875,0,0,0,0,2.97112274169922,0,0,0,0,7.43387603759766,0,0,0,0,11.6357879638672,0,0,0,0,4.86268615722656,0,0,0,0,0,0.714218139648438,0,0,0,0,5.81964874267578,0,0,0,0,13.1558151245117,0,0,0,0,-9.83114624023438,0,0,0,0,0,-88.5011596679688,0,0,0,0,8.00184631347656,0,0,0,0,8.00637817382812,0,0,0,0,19.0198822021484,0,0,0,27.8076782226562,0,0,0,0,0,17.2382278442383,0,12.3287658691406,0,0,-38.3092498779297,0,0,0,0,0,13.9781875610352,0,0,0,0,14.9861602783203,0,0,0,0,8.62062835693359,0,0,0,0,-0.528656005859375,0,0,0,0,0,0,-122.715919494629,0,0,0,0,0,0,-6.98806762695312,0,0,0,0,8.26798248291016,0,0,0,0,7.31526947021484,0,0,0,0,10.266357421875,0,0,0,0,-2.23990631103516,0,0,0,0,0,-23.9747543334961,0,0,6.55608367919922,0,0,0,12.4426422119141,0,0,0,0,11.096923828125,0,0,0,8.53042602539062,0,0,0,6.22930145263672,0,0,0,6.52214813232422,0,0,0,6.33023071289062,0,0,0,-2.53875732421875,0,0,0,0,-56.3755264282227,0,0,0,6.62157440185547,0,0,0,6.26066589355469,0,0,0,6.65769958496094,0,0,0,13.0940170288086,0,0,0,0,4.03435516357422,0,0,0,0,1.60114288330078,0,0,0,0,4.09845733642578,0,0,0,0,3.37603759765625,0,0,0,0,0,0,0,0,0,3.13842010498047,0,0,0,0,0,0,0,0,0,2.94014739990234,0,0,0,0,3.21617889404297,0,0,0,1.70118713378906,0,0,0,0,8.44806671142578,0,0,0,0,11.6268997192383,0,0,0,0,6.18768310546875,0,0,0,0,0,6.53789520263672,0,0,0,0,5.39750671386719,0,0,0,0,7.80261993408203,0,0,0,0,8.00032806396484,0,0,0,0,8.00670623779297,0,0,0,0,8.00056457519531,0,0,0,0,-0.992301940917969,0,0,0,0,-92.9959411621094,0,0,11.7661285400391,0,0,0,0,0,20.3483505249023,0,0,16.5870208740234,0,0,0,8.54566192626953,0,0,9.18755340576172,0,0,0,12.1794738769531,0,0,0,0,6.65641784667969,0,0,6.5438232421875,0,0,0,0,-53.9086151123047,0,0,0,0,0,0,-0.382156372070312,0,0,0,0,6.20095825195312,0,0,0,0,7.36669921875,0,0,0,0,6.84499359130859,0,0,6.10546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32.4505310058594,0,0,0,0,0,0,-106.468978881836,0,0,0,0,0,0,1.30781555175781,0,0,0,0,7.53073120117188,0,0,0,0,8.81856536865234,0,0,0,9.62976837158203,0,0,0,11.1491394042969,0,0,0,7.21928405761719,0,0,6.99825286865234,0,0,0,8.16036987304688,0,0,0,7.01320648193359,0,0,0,-55.2701263427734,0,0,0,0,-5.36768341064453,0,0,0,8.359130859375,0,0,0,8.26629638671875,0,0,0,8.39496612548828,0,11.7471084594727,0,0,0,0,7.62939453125e-05,0,0,0,0,1.60239410400391,0,0,0,0,7.43581390380859,0,0,0,0,0,0,0,0,0,3.11896514892578,0,0,0,0,0,0,0,0,0,6.03760528564453,0,0,0,0,0,3.05400085449219,0,0,0,0,7.23287200927734,0,0,0,0,16.680305480957,0,0,0,0,2.63214874267578,0,0,0.177574157714844,0,0,6.37194061279297,0,0,0,0,13.0669403076172,0,0,0,0,8.00685119628906,0,0,0,0,8.00222015380859,0,0,0,0,7.99944305419922,0,0,0,0,9.84476470947266,0,0,25.2211303710938,0,0,-24.6073760986328,0,0,0,-107.976257324219,0,0,0.47430419921875,0,0,25.5634536743164,0,0,20.8358154296875,0,0,0,0,8.04837036132812,0,0,10.651008605957,0,0,0,0,11.6745147705078,0,0,-25.5164566040039,0,0,0,0,0,0,-18.2167892456055,0,0,0,0,8.54958343505859,0,0,0,0,7.0335693359375,0,0,6.88423919677734,0,0,0,0,4.94952392578125,0,0,0,0,0,0,-25.6790237426758,0,0,0,0,12.3851623535156,0,0,0,0,11.8865661621094,0,0,0,10.7297515869141,0,0,0,7.02363586425781,0,0,0,7.26542663574219,0,0,0,-14.3791885375977,0,0,0,0,-38.205924987793,0,0,0,7.60488128662109,0,0,0,8.17353820800781,0,0,0,8.11542510986328,0,0,0,8.78089904785156,0,11.8313903808594,0,0,0,0,0,0,0,0,0,1.61583709716797,0,0,0,0,7.49135589599609,0,0,0,0,7.62939453125e-05,0,0,0,0,3.13585662841797,0,0,0,0,0,0,0,0,0,4.69811248779297,0,0,0,0,1.67557525634766,0,0,0,0,5.26826477050781,0,0,0,0,8.32626342773438,0,0,0,0,11.8349761962891,0,0,0,0,0,1.78234100341797,0,0,0,0,4.73046112060547,0,0,0,0,13.3164443969727,0,0,0,0,-2.72255706787109,0,0,0,0,0,-95.815071105957,0,0,0,0,8.00836944580078,0,0,0,0,9.53406524658203,0,0,0,0,35.8247299194336,0,0,12.4744262695312,0,0,2.49490356445312,0,0,24.7158432006836,0,0,6.89257049560547,0,0,0,-28.2644653320312,0,0,0,0,11.3058700561523,0,0,0,12.2332916259766,0,0,0,0,6.35696411132812,0,0,0,0,0,-115.223152160645,0,0,0,0,0,-13.641716003418,0,0,0,0,6.63197326660156,0,0,0,0,6.81319427490234,0,0,6.59774017333984,0,0,0,0,7.60670471191406,0,0,0,0,-25.7632293701172,0,0,0,0,-4.31118774414062,0,0,0,0,10.0459823608398,0,0,0,0,6.29512023925781,0,0,0,10.5658798217773,0,0,0,0,10.6520690917969,0,0,0,7.85268402099609,0,0,0,0,-48.3541564941406,0,0,7.04259490966797,0,0,0,6.83249664306641,0,0,0,6.61485290527344,0,0,0,10.8618011474609,0,0,0,7.84250640869141,0,0,0,7.05977630615234,0,0,0,10.1152954101562,0,12.3756256103516,0,0,0,0,7.62939453125e-05,0,0,0,0,1.68161773681641,0,0,0,0,7.81238555908203,0,0,0,0,0,0,0,0,0,3.23119354248047,0,0,0,0,0,0,0,0,0,6.13127136230469,0,0,0,0,3.0439453125,0,0,0,0,8.25444793701172,0,0,0,0,17.0761795043945,0,0,0,0,5.38005065917969,0,0,0.180160522460938,0,0,0,0,6.35383605957031,0,0,0,0,-7.25475311279297,0,0,0,0,0,-70.3951034545898,0,0,0,0,0,-37.6213073730469,0,0,0,0,8.05145263671875,0,0,0,0,9.56540679931641,0,0,0,0,8.64502716064453,0,0,0,0,33.4661407470703,0,0,12.4187316894531,0,0,2.4837646484375,0,0,24.6194229125977,0,0,11.5626220703125,0,0,0,10.5782699584961,0,0,0,-59.5952758789062,0,0,0,0,12.4753265380859,0,0,0,0,11.1945037841797,0,0,0,0,6.51447296142578,0,0,0,0,3.71268463134766,0,0,0,-58.8575210571289,0,0,0,0,8.65727996826172,0,0,6.85242462158203,0,0,0,0,6.59523010253906,0,0,-8.01683044433594,0,0,0,0,0,-14.4797515869141,0,0,0,11.0975646972656,0,0,0,0,11.4983215332031,0,0,0,9.44167327880859,0,0,0,0,8.05516815185547,0,0,0,9.16117095947266,0,0,0,6.34542083740234,0,0,0,-0.43072509765625,0,0,0,0,-60.3084564208984,0,0,0,8.69850921630859,0,0,0,7.36703491210938,0,0,0,6.18000030517578,0,0,0,14.8421783447266,0,0,0,1.53415679931641,0,0,0,0,1.68231964111328,0,0,0,0,7.76689910888672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.20397186279297,0,0,0,0,0.0002899169921875,0,0,0,0,6.10050964355469,0,0,0,0,0.766044616699219,0,0,0,0,9.35343933105469,0,0,0,0,7.57180786132812,0,0,0,0,12.0115814208984,0,0,0.425521850585938,0,0,0.177574157714844,0,0,-5.47979736328125,0,0,0,0,0,-75.0209655761719,0,0,0,0,6.87897491455078,0,0,0,0,6.50906372070312,0,0,0,0,8.04835510253906,0,0,0,0,9.48961639404297,0,0,0,0,6.48009490966797,0,0,0,0,22.4596862792969,0,0,14.7239456176758,0,0,0,-58.0041351318359,0,0,0,11.8660583496094,0,0,17.9044342041016,0,14.3530426025391,0,0,16.2084045410156,0,0,0,0,6.6546630859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-42.3555221557617,0,0,0,0,0,-130.927841186523,0,0,0,0,0,-1.52019500732422,0,0,13.7612152099609,0,0,0,0,8.15769195556641,0,0,8.32923126220703,0,0,0,0,3.50939178466797,0,0,0,0,0,-31.7108917236328,0,0,0,0,8.56430816650391,0,0,0,0,10.7904510498047,0,0,0,0,7.55527496337891,0,0,0,0,-4.77436828613281,0,0,0,0,0,-23.7155990600586,0,0,0,0,13.1610336303711,0,0,0,7.97509002685547,0,0,0,6.40663146972656,0,0,0,7.5263671875,0,0,0,10.1749954223633,0,0,0,8.65418243408203,0,0,0,8.58501434326172,0,0,0,8.66145324707031,0,0,0,10.5248947143555,0,8.06893920898438,0,0,0,0,1.66815948486328,0,0,0,0,2.13166046142578,0,0,0,0,5.57652282714844,0,0,0,0,0,0,0,0,0,2.36351013183594,0,0,0,0,0,0.818687438964844,0,0,0,0,0.0002899169921875,0,0,0,0,6.08659362792969,0,0,0,0,2.044189453125,0,0,0,0,9.24832153320312,0,0,0,0,11.7369079589844,0,0,0,0,0,1.82289123535156,0,0,0,0,10.1367721557617,0,0,0,0,7.95564270019531,0,0,0,0,8.00369262695312,0,0,0,0,8.00894927978516,0,0,0,0,-46.8220977783203,0,0,0,0,0,-107.080146789551,0,0,0,0,20.3958053588867,0,0,0,29.1824264526367,0,0,3.0517578125e-05,0,0,27.1490097045898,0,0,11.5778427124023,0,0,0,10.5838775634766,0,0,0,10.169792175293,0,0,0,8.21047210693359,0,0,0,0,0,12.9235763549805,0,0,0,0,-58.8092193603516,0,0,0,0,0,-5.57585906982422,0,0,0,0,6.96018218994141,0,0,0,0,6.70059967041016,0,0,0,0,6.81566619873047,0,0,0,0,-3.94810485839844,0,0,0,0,0,0,-16.2901840209961,0,0,0,0,6.63780212402344,0,0,0,9.880126953125,0,0,0,0,11.7960433959961,0,0,0,10.9477996826172,0,0,0,6.86160278320312,0,0,0,7.05593109130859,0,0,0,-40.3861236572266,0,0,0,0,-12.9658889770508,0,0,0,6.69375610351562,0,0,0,6.99781036376953,0,0,0,6.50360870361328,0,0,0,10.0413360595703,0,0,0,8.80458068847656,0,10.7837066650391,0,0,0,0,0,0,0,0,0,1.69623565673828,0,0,0,0,7.74889373779297,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.17455291748047,0,0,0,0,0,0,0,0,0,3.51868438720703,0,0,0,0,2.91365051269531,0,0,0,0,0,2.25614166259766,0,0,0,0,8.76671600341797,0,0,0,0,8.50180816650391,0,0,0,0,0,-89.1997375488281,0,0,0,0,0,1.78234100341797,0,0,0,0,5.81527709960938,0,0,0,0,12.4318618774414,0,0,0,0,8.00406646728516,0,0,0,0,8.00670623779297,0,0,0,0,8.00787353515625,0,0,0,0,10.796516418457,0,0,27.1934585571289,0,0,12.0513610839844,0,0,-55.1345443725586,0,0,0,0,0,25.0541763305664,0,0,18.4207458496094,0,0,0,0,8.75168609619141,0,0,0,-14.2447509765625,0,0,0,0,0,-120.761680603027,0,0,0,0,0,-1.94141387939453,0,0,0,0,0,5.02538299560547,0,0,8.55937957763672,0,0,6.85974884033203,0,0,0,0,6.08589172363281,0,0,0,0,9.019775390625,0,0,0,0,-23.4955825805664,0,0,0,0,0,-4.14507293701172,0,0,0,0,8.01318359375,0,0,7.25655364990234,0,0,0,0,8.91050720214844,0,0,0,9.70657348632812,0,0,0,0,-37.494499206543,0,0,0,0,13.0990753173828,0,0,0,7.17520141601562,0,0,0,6.48286437988281,0,0,0,7.44153594970703,0,0,0,10.8080520629883,0,0,0,7.80082702636719,0,0,0,8.64804077148438,0,0,0,8.12593078613281,0,0,0,7.58206939697266,0,0,0,0,0,12.7800521850586,0,0,0,0,0,0,0,0,0,1.70568084716797,0,0,0,0,4.88564300537109,0,0,0,2.91609954833984,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.19017791748047,0,0,0,0,0,0,0,0,0,0.0002899169921875,0,0,0,0,6.14640808105469,0,0,0,0,1.54940795898438,0,0,0,0,9.46134948730469,0,0,0,0,9.58270263671875,0,0,0,0,-33.5641403198242,0,0,0,0,-92.613166809082,0,0,0,0,0.635711669921875,0,0,1.78234100341797,0,0,0,0,6.814697265625,0,0,0,0,11.3533554077148,0,0,0,0,8.00556182861328,0,0,0,0,8.00521087646484,0,0,0,0,8.00691986083984,0,0,0,0,11.0049438476562,0,0,26.8503341674805,0,0,12.6244354248047,0,0,2.52490234375,0,0,24.9768371582031,0,0,10.9643630981445,0,0,0,0,0,-89.6545791625977,0,0,11.7862777709961,0,0,0,9.7674560546875,0,0,0,0,6.49484252929688,0,0,0,0,8.66472625732422,0,0,0,0,-31.8790969848633,0,0,0,0,0,0,-2.39130401611328,0,0,0,0,7.89079284667969,0,0,0,0,6.85478973388672,0,0,7.15859222412109,0,0,0,0,-8.73283386230469,0,0,0,-11.7674560546875,0,0,0,0,12.0367202758789,0,0,0,0,11.4492874145508,0,0,0,8.79669952392578,0,0,0,0,8.42616271972656,0,0,0,7.29792785644531,0,0,0,8.06482696533203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-111.530052185059,0,0,0,0,-42.5990600585938,0,0,0,7.35338592529297,0,0,0,9.37906646728516,0,0,0,7.76193237304688,0,0,0,6.92563629150391,0,0,0,13.1267929077148,0,0,0,3.25102233886719,0,0,0,0,1.72148895263672,0,0,0,0,7.84211730957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.19556427001953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.16661834716797,0,0,0,0,1.55161285400391,0,0,0,0,9.73552703857422,0,0,0,0,14.7933883666992,0,0,0,0,3.82244110107422,0,0,1.78234100341797,0,0,0,0,5.83493041992188,0,0,0,0,12.2142028808594,0,0,0,0,8.00647735595703,0,0,0,0,8.00483703613281,0,0,0,0,8.00226593017578,0,0,0,0,11.2439346313477,0,0,25.3095703125,0,0,-140.052383422852,0,0,0,-0.876365661621094,0,0,26.8359680175781,0,0,17.5140609741211,0,0,11.9579620361328,0,0,0,12.0207977294922,0,0,0,0,10.7757949829102,0,0,0,0,5.07559967041016,0,0,0,-53.9006805419922,0,0,0,0,8.55693054199219,0,0,0,0,9.72756958007812,0,0,0,0,7.08499908447266,0,0,0,0,6.90875244140625,0,0,0,0,-27.2336730957031,0,0,11.030517578125,0,0,0,0,11.8736877441406,0,0,0,9.61373901367188,0,0,0,7.51606750488281,0,0,0,8.70868682861328,0,0,0,7.76766204833984,0,0,0,6.46096038818359,0,0,0,-0.355751037597656,0,0,0,0,-69.3605499267578,0,0,0,7.41522979736328,0,0,0,7.83872985839844,0,0,0,13.4102783203125,0,0,0,3.19131469726562,0,0,0,0,1.69837188720703,0,0,0,0,0.749198913574219,0,0,0,6.93688201904297,0,0,0,0,7.62939453125e-05,0,0,0,0,3.14574432373047,0,0,0,0,0,0,0,0,0,0.0002899169921875,0,0,0,0,6.01161956787109,0,0,0,0,2.02121734619141,0,0,0,0,8.715087890625,0,0,0,0,10.9462203979492,0,0,0,0,10.2315216064453,0,0,0,0,0,0.714218139648438,0,0,0,0,5.84455871582031,0,0,0,0,13.3085479736328,0,0,0,0,8.00946807861328,0,0,0,0,8.010986328125,0,0,0,0,-32.7604598999023,0,0,0,0,0,-66.0977783203125,0,0,0,0,24.7258682250977,0,0,28.3621139526367,0,0,0,0,0,5.16697692871094,0,0,0,0,0,0,23.2877578735352,0,0,13.7729949951172,0,0,0,-33.7200698852539,0,0,0,0,13.6603317260742,0,0,8.05196380615234,0,0,0,9.03691864013672,0,0,0,0,8.03779602050781,0,0,0,0,0,-96.4413375854492,0,0,0,0,0,-43.842041015625,0,0,0,0,0,7.26628875732422,0,0,0,0,7.26628875732422,0,0,0,0,7.6605224609375,0,0,0,0,8.43943786621094,0,0,0,0,4.12903594970703,0,0,0,0,-22.1780776977539,0,0,0,0,0,0,-3.98390960693359,0,0,0,11.2195053100586,0,0,11.8439254760742,0,0,0,8.94950103759766,0,0,0,0,8.71485900878906,0,0,0,7.27498626708984,0,0,0,11.0658493041992,0,0,0,7.40432739257812,0,0,0,-0.710159301757812,0,0,0,0,-70.4378280639648,0,0,0,0,6.61952209472656,0,0,0,9.31814575195312,0,12.9944000244141,0,0,0,0,7.62939453125e-05,0,0,0,0,1.78153228759766,0,0,0,0,8.17723083496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.32025909423828,0,0,0,0,0,0,0,0,0,6.26628875732422,0,0,0,0,0.917510986328125,0,0,0,0,9.76121520996094,0,0,0,0,8.45176696777344,0,0,0,0,15.8484268188477,0,0.426231384277344,0,0,1.78234100341797,0,0,0,0,6.76615905761719,0,0,0,0,11.147819519043,0,0,0,0,8.00892639160156,0,0,0,0,8.00762176513672,0,0,0,0,8.00505065917969,0,0,0,0,0.828994750976562,0,0,0,0,0,-106.686599731445,0,0,0,36.2681732177734,0,0,0,0,0,18.0527114868164,0,10.2309341430664,0,0,17.5525817871094,0,0,8.68225860595703,0,0,14.7414169311523,0,0,6.82058715820312,0,0,0,0,-36.4870834350586,0,0,0,0,0,-18.4092178344727,0,0,0,0,8.6597900390625,0,0,0,0,6.82791137695312,0,0,0,0,8.9927978515625,0,0,0,0,5.240966796875,0,0,0,0,0,-63.3576736450195,0,0,0,0,0,4.09345245361328,0,0,0,0,6.69566345214844,0,0,0,0,9.29817199707031,0,0,7.40848541259766,0,0,0,10.5892715454102,0,0,0,7.47576904296875,0,0,0,0,6.85111236572266,0,0,0,-46.9093322753906,0,0,0,0,-4.48707580566406,0,0,0,8.55256652832031,0,0,0,7.29005432128906,0,0,0,6.27933502197266,0,0,0,6.76070404052734,0,0,0,9.75483703613281,0,0,0,8.47661590576172,0,10.8408203125,0,0,0,0,7.62939453125e-05,0,0,0,0,1.71884918212891,0,0,0,0,7.84204864501953,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.21451568603516,0,0,0,0,0,0,0,0,0,0.0002899169921875,0,0,0,0,6.12070465087891,0,0,0,0,1.46703338623047,0,0,0,0,9.75254821777344,0,0,0,0,-40.2914733886719,0,0,0,0,-36.0477523803711,0,0,0,0,0.42657470703125,0,0,1.78234100341797,0,0,0,0,10.1848297119141,0,0,0,0,7.85862731933594,0,0,0,0,8.00705718994141,0,0,0,0,8.00687408447266,0,0,0,0,8.00675201416016,0,0,0,0,11.000244140625,0,0,-49.1823577880859,0,0,0,24.0859832763672,0,0,0.502708435058594,0,0,26.8868637084961,0,0,11.6752548217773,0,0,0,8.40330505371094,0,0,0,0,0,0,-52.9701690673828,0,0,0,0,0,0,6.02416229248047,0,0,0,0,9.75192260742188,0,0,0,0,7.24669647216797,0,0,0,0,9.01734924316406,0,0,0,0,7.93242645263672,0,0,0,0,2.95102691650391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-120.21907043457,0,0,0,-43.9327392578125,0,0,0,0,7.35441589355469,0,0,0,0,7.08016204833984,0,0,7.2564697265625,0,0,7.03118133544922,0,0,0,0,-5.38775634765625,0,0,0,0,0,-22.7879791259766,0,0,0,10.1852416992188,0,0,0,0,11.4241485595703,0,0,0,8.15696716308594,0,0,0,0,8.64972686767578,0,0,0,6.84111022949219,0,0,0,6.49000549316406,0,0,0,9.50844573974609,0,0,0,10.5856628417969,0,0,0,7.21974945068359,0,0,0,4.30632019042969,0,0,0,0,-67.00341796875,0,0,0,0,-12.1367111206055,0,0,8.77687835693359,0,0,0,0,1.73285675048828,0,0,0,0,1.69462585449219,0,0,6.17657470703125,0,0,0,0,0,0,0,0,0,0.829216003417969,0,0,0,0,2.38282775878906,0,0,0,0,0.0002899169921875,0,0,0,0,6.14543914794922,0,0,0,0,2.02617645263672,0,0,0,0,9.28334808349609,0,0,0,0,15.7787780761719,0,0.426139831542969,0,0,0.180160522460938,0,0,0,0,6.40977478027344,0,0,0,0,13.2518081665039,0,0,0,0,8.0081787109375,0,0,0,0,8.00836944580078,0,0,0,0,8.00916290283203,0,0,0,0,12.3037109375,0,0,28.2344512939453,0,0,13.2666397094727,0,0,2.66298675537109,0,0,-118.539268493652,0,0,18.1115417480469,0,0,0,0,9.76389312744141,0,0,0,0,9.15179443359375,0,0,0,0,8.48841857910156,0,0,0,0,9.36994934082031,0,0,-25.2999114990234,0,0,0,0,0,-20.6703491210938,0,0,0,0,9.87450408935547,0,0,0,0,7.50630187988281,0,0,0,0,-2.31610870361328,0,0,0,-14.9504699707031,0,0,0,0,10.1667175292969,0,0,0,0,0,7.97164916992188,0,0,0,0,12.5408554077148,0,0,0,8.14003753662109,0,0,0,6.72392272949219,0,0,0,6.33150482177734,0,0,0,-5.97027587890625,0,0,0,0,-48.4765167236328,0,0,0,6.70729827880859,0,0,0,6.9957275390625,0,0,0,8.689453125,0,0,0,8.49585723876953,0,0,0,13.5328369140625,0,0,5.24414825439453,0,0,0,0,7.62939453125e-05,0,0,0,0,1.79337310791016,0,0,0,0,7.65568542480469,0,0,0,0,0,0.584823608398438,0,0,0,0,0,0,0,0,0,2.75347137451172,0,0,0,0,0,0.58514404296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.21504974365234,0,0,3.23841094970703,0,0,0,0,1.52983856201172,0,0,0,0,9.69277191162109,0,0,0,7.46454620361328,0,0,0,0,7.93878173828125,0,0,0,0,0,6.58740234375,0,0,0,0,5.39841461181641,0,0,0,0,7.90142059326172,0,0,0,0,-1.69475555419922,0,0,0,0,0,-101.621925354004,0,0,0,0,12.1714935302734,0,0,0,0,34.5286636352539,0,0,12.8084945678711,0,0,2.56171417236328,0,0,25.2872772216797,0,0,9.78408050537109,0,0,0,12.3279113769531,0,0,0,0,-41.9909210205078,0,0,0,0,-86.2080535888672,0,0,0,0,0,0,0,0,0,11.8214645385742,0,0,0,0,7.96420288085938,0,0,10.1292343139648,0,0,0,0,0,8.38059997558594,0,0,0,0,0,-18.257942199707,0,0,0,0,0,-12.512451171875,0,0,0,0,8.8165283203125,0,0,0,0,8.15280151367188,0,0,6.55605316162109,0,0,6.17595672607422,0,0,0,-26.2197036743164,0,0,0,0,12.2407913208008,0,0,0,10.2207107543945,0,0,0,7.53838348388672,0,0,0,10.3794097900391,0,0,0,7.27128601074219,0,0,0,8.44532012939453,0,0,0,6.57736968994141,0,0,0,6.21694183349609,0,0,0,11.703742980957,0,0,0,15.3245086669922,0,0,0,0,0,0.311187744140625,0,0,0,0,1.74407196044922,0,0,0,0,7.99107360839844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.12956237792969,0,0,0,2.13033294677734,0,0,0,0,0.0002899169921875,0,0,0,0,6.25224304199219,0,0,0,0,0.775123596191406,0,0,0,0,-41.3993301391602,0,0,0,0,-75.4849090576172,0,0,0,8.30625152587891,0,0,0,0,7.89216613769531,0,0,0,0,0,0.177574157714844,0,0,6.38436126708984,0,0,0,0,10.2198715209961,0,0,0,0,8.00406646728516,0,0,0,0,8.00425720214844,0,0,0,0,11.0594329833984,0,0,0,0,8.86753082275391,0,0,0,0,27.1132507324219,0,0,12.1335830688477,0,0,3.0517578125e-05,0,0,-69.1679992675781,0,0,-4.03045654296875,0,0,15.5106201171875,0,0,0,0,12.7410736083984,0,0,0,10.0243377685547,0,0,0,0,7.10951232910156,0,0,7.85164642333984,0,0,0,0,-40.6741333007812,0,0,0,0,0,-6.58751678466797,0,0,0,0,10.2565002441406,0,0,0,0,8.57168579101562,0,0,0,0,8.22386169433594,0,0,0,0,0.945549011230469,0,0,0,-39.766975402832,0,0,0,0,6.17890930175781,0,0,0,0,8.89433288574219,0,0,0,0,9.10503387451172,0,0,0,9.75832366943359,0,0,0,7.02579498291016,0,0,0,0,6.19497680664062,0,0,0,6.2679443359375,0,0,0,10.1873626708984,0,0,0,-35.1037063598633,0,0,0,0,-29.6994247436523,0,0,0,6.62998962402344,0,0,0,10.9365310668945,0,0,0,8.52340698242188,0,0,0,12.7553024291992,0,0,4.87425994873047,0,0,0,0,1.66722869873047,0,0,0,0,7.07424926757812,0,0,0,0,0,0.534469604492188,0,0,0,0,0,0,0,0,0,3.13719940185547,0,0,0,0,0,0,0,0,0,0.0002899169921875,0,0,0,0,5.96365356445312,0,0,0,0,2.51372528076172,0,0,0,0,8.47180938720703,0,0,15.3569183349609,0,0,0,0,0.4263916015625,0,0,0.180160522460938,0,0,0,0,-16.1308975219727,0,0,0,0,0,-67.0718841552734,0,0,0,0,10.7756423950195,0,0,0,0,8.00498199462891,0,0,0,0,8.00483703613281,0,0,0,0,8.00563049316406,0,0,0,0,11.2403335571289,0,0,36.9343109130859,0,0,0.482414245605469,0,0,4.69011688232422,0,0,0,0,0,0,0,0,-121.561294555664,0,0,-66.6046295166016,0,0,0,0,0,21.2421646118164,0,0,16.390869140625,0,0,0,0,9.21776580810547,0,0,0,0,11.3682022094727,0,0,0,0,0,6.65406799316406,0,0,0,0,6.64913177490234,0,0,0,0,6.78939819335938,0,0,0,0,0,0,-49.6464920043945,0,0,0,0,0,9.50474548339844,0,0,0,0,9.84022521972656,0,0,0,0,6.93321990966797,0,0,0,0,-14.6293258666992,0,0,0,0,0,-12.2271728515625,0,0,0,0,12.1823501586914,0,0,0,0,12.196891784668,0,0,0,9.26974487304688,0,0,0,0,7.30780792236328,0,0,0,7.82823181152344,0,0,0,7.24510192871094,0,0,0,6.73113250732422,0,0,0,6.93075561523438,0,0,0,0.145339965820312,0,0,0,0,-72.5063705444336,0,0,0,6.58470916748047,0,0,0,12.4238739013672,0,12.060302734375,0,0,0,0,7.62939453125e-05,0,0,0,0,1.67436981201172,0,0,0,0,7.60075378417969,0,0,0,0,0,0,0,0,0,3.13280487060547,0,0,0,0,0,0,0,0,0,5.92734527587891,0,0,0,0,1.95706176757812,0,0,0,0,8.75725555419922,0,0,0,0,15.4213943481445,0,0,0,0,0.42657470703125,0,0,1.78234100341797,0,0,0,0,4.8182373046875,0,0,0,0,12.9731216430664,0,0,0,0,8.00572967529297,0,0,0,0,8.00201416015625,0,0,0,0,8.00355529785156,0,0,0,0,9.44927215576172,0,0,25.840934753418,0,0,-47.3990783691406,0,0,0,-72.4212951660156,0,0,17.3023529052734,0,16.4321594238281,0,0,0,11.7111358642578,0,0,0,0,9.65927886962891,0,0,0,10.312370300293,0,0,0,0,8.07698059082031,0,0,0,0,8.06706237792969,0,0,0,-50.6960220336914,0,0,0,0,6.98956298828125,0,0,0,0,6.44580078125,0,0,6.45326995849609,0,0,0,0,8.92428588867188,0,0,0,0,-29.1298065185547,0,0,0,0,7.15850830078125,0,0,13.5809860229492,0,0,0,0,12.0286712646484,0,0,0,7.87525177001953,0,0,0,6.81832122802734,0,0,0,7.99303436279297,0,0,0,-8.53874206542969,0,0,0,0,-43.7966995239258,0,0,0,8.17201995849609,0,0,0,7.00897216796875,0,0,0,6.90414428710938,0,0,0,8.63901519775391,0,0,0,13.2208480834961,0,0,0,0,3.62451934814453,0,0,0,0,1.37410736083984,0,0,0,0,0,0.292022705078125,0,0,0,0,5.71898651123047,0,0,1.78295135498047,0,0,0,0,7.62939453125e-05,0,0,0,0,3.08739471435547,0,0,0,0,0,0,0,0,0,5.83836364746094,0,0,0,0,0.751716613769531,0,0,0,0,7.3870849609375,0,0,0,0,8.86365509033203,0,0,0,0,11.3296585083008,0,0,-8.955322265625,0,0,0,-85.3123321533203,0,0,0,3.63025665283203,0,0,0,0,9.97634124755859,0,0,0,0,11.0571212768555,0,0,0,0,8.00595855712891,0,0,0,0,8.0028076171875,0,0,0,0,10.394287109375,0,0,25.8059387207031,0,0,12.1283340454102,0,0,4.82518005371094,0,0,0,0,0,0,-58.0035171508789,0,0,18.0860977172852,0,0,0,0,11.1918106079102,0,0,0,11.8400039672852,0,0,6.73001098632812,0,0,0,0,5.83379364013672,0,0,0,0,0,-116.154304504395,0,0,0,0,0,0.933647155761719,0,0,0,0,8.17977905273438,0,0,0,0,11.0231094360352,0,0,0,0,6.35768127441406,0,0,0,0,-25.4322967529297,0,0,0,-0.965858459472656,0,0,0,0,11.0823211669922,0,0,0,0,6.6221923828125,0,0,0,0,9.26230621337891,0,0,0,7.67217254638672,0,0,0,0,9.28202056884766,0,0,0,6.65367126464844,0,0,0,10.5721893310547,0,0,0,-28.4683303833008,0,0,0,0,-32.4245452880859,0,0,0,7.53214263916016,0,0,0,7.5238037109375,0,0,0,12.2000122070312,0,0,0,0,12.565788269043,0,0,0,0,7.62939453125e-05,0,0,0,0,1.69341278076172,0,0,0,0,7.08741760253906,0,0,0,0,0,0.529563903808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.11756134033203,0,0,0,0,0,0,0,0,0,5.93055725097656,0,0,0,0,3.02056121826172,0,0,0,0,7.9691162109375,0,0,0,0,15.3232955932617,0,0.426239013671875,0,0,1.78234100341797,0,0,0,0,6.79226684570312,0,0,0,0,11.075439453125,0,0,0,0,8.00593566894531,0,0,0,0,8.00388336181641,0,0,0,0,-30.3552780151367,0,0,0,0,0,-77.6670608520508,0,0,0,0,35.6437149047852,0,0,12.0083618164062,0,0,17.4400787353516,0,11.4431228637695,0,0,18.3668823242188,0,0,8.1949462890625,0,0,0,-44.8090667724609,0,0,0,0,6.47029113769531,0,0,6.25485992431641,0,0,0,0,7.70470428466797,0,0,0,0,10.8246994018555,0,0,0,0,0,-73.0267181396484,0,0,0,0,0,-2.43791198730469,0,0,0,0,0,10.0238800048828,0,0,10.9741516113281,0,0,0,0,8.458984375,0,0,0,0,9.74833679199219,0,0,0,0,-22.4286956787109,0,0,0,0,0,-10.2251129150391,0,0,0,12.0679321289062,0,0,0,6.83400726318359,0,0,0,7.21119689941406,0,0,0,6.19580841064453,0,0,0,8.84946441650391,0,0,0,7.523681640625,0,0,0,7.80870056152344,0,0,0,7.60303497314453,0,0,0,10.0641098022461,0,0,0,8.42389678955078,0,-38.5575485229492,0,0,0,-41.3406829833984,0,0,0,0.272727966308594,0,0,0,0,7.62939453125e-05,0,0,0,0,1.69412994384766,0,0,0,0,7.55455017089844,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,3.08531951904297,0,0,0,0,0.0002899169921875,0,0,0,0,5.86582183837891,0,0,0,0,0.761695861816406,0,0,0,0,9.56510162353516,0,0,0,8.85186767578125,0,0,0,0,5.98143768310547,0,0,0,0,0,1.78234100341797,0,0,0,0,4.75016021728516,0,0,0,0,13.1462097167969,0,0,0,0,8.00444030761719,0,0,0,0,8.00558471679688,0,0,0,0,4.93507385253906,0,0,0,0,0,-78.1063461303711,0,0,0,0,0,3.0517578125,0,0,0,0,34.3974838256836,0,0,11.7068099975586,0,0,17.0498428344727,0,12.2008743286133,0,0,0,0,0,0,0,-123.51008605957,0,0,0,-52.842170715332,0,0,0,12.4096603393555,0,0,0,10.8174514770508,0,0,0,10.143196105957,0,0,0,0,9.05902099609375,0,0,0,0,5.61070251464844,0,0,0,0,0,-40.4635543823242,0,0,0,0,7.38874053955078,0,0,0,0,12.9260101318359,0,0,0,0,-8.51943206787109,0,0,0,0,0,0,-17.4308853149414,0,0,0,0,11.6549453735352,0,0,0,0,12.8382110595703,0,0,0,9.67523193359375,0,0,0,0,8.70805358886719,0,0,0,7.77501678466797,0,0,0,8.61649322509766,0,0,0,8.57353210449219,0,0,0,6.95001220703125,0,0,0,-44.443733215332,0,0,0,0,-28.5841598510742,0,0,0,6.71626281738281,0,0,0,8.13669586181641,0,0,0,0,12.4763717651367,0,0,0,0,1.69585418701172,0,0,0,0,0.747627258300781,0,0,0,6.65895080566406,0,0,0,0,7.62939453125e-05,0,0,0,0,3.01114654541016,0,0,0,0,0,0,0,0,0,5.85910034179688,0,0,0,0,0,3.03134918212891,0,0,0,0,7.16325378417969,0,0,0,0,13.289176940918,0,0,0,0,0,1.82289123535156,0,0,0,0,10.1250839233398,0,0,0,0,7.45170593261719,0,0,0,0,8.00348663330078,0,0,0,0,8.00463104248047,0,0,0,0,8.00450897216797,0,0,0,0,19.8264389038086,0,0,0,28.2639312744141,0,0,3.0517578125e-05,0,0,-58.7647705078125,0,0,-65.876579284668,0,0,21.7569732666016,0,0,0,11.0094223022461,0,0,0,9.91302490234375,0,0,0,0,9.68103790283203,0,0,0,0,-32.5722274780273,0,0,0,0,0,-11.6121826171875,0,0,0,0,8.32672119140625,0,0,0,0,9.97978973388672,0,0,0,0,-1.08499145507812,0,0,0,0,0,-19.051872253418,0,0,0,0,6.95276641845703,0,0,0,9.14024353027344,0,0,0,0,12.3489303588867,0,0,0,9.13745880126953,0,0,0,0,7.21759796142578,0,0,0,7.35588073730469,0,0,0,3.412353515625,0,0,0,0,-52.8449401855469,0,0,0,6.92638397216797,0,0,0,6.98573303222656,0,0,0,6.43328094482422,0,0,0,6.65534210205078,0,0,0,8.24158477783203,0,0,0,0,0,13.1669235229492,0,0,0,0,1.43096160888672,0,0,0,0,0,0.311264038085938,0,0,0,0,7.61155700683594,0,0,0,0,7.62939453125e-05,0,0,0,0,3.07445526123047,0,0,0,0,0,0,0,0,0,5.69411468505859,0,0,0,0,1.27288818359375,0,0,0,0,9.43471527099609,0,0,0,0,15.2573699951172,0,0,0,0,0.426513671875,0,0,1.78234100341797,0,0,0,0,7.08720397949219,0,0,0,0,11.0736083984375,0,0,0,0,8.00086975097656,0,0,0,0,-8.85523223876953,0,0,0,0,0,-102.22534942627,0,0,0,0,8.04186248779297,0,0,0,0,34.0397491455078,0,0,11.6851654052734,0,0,17.0317153930664,0,13.6776504516602,0,0,16.391731262207,0,0,0,9.80806732177734,0,0,0,4.65516662597656,0,0,0,0,0,-50.5503005981445,0,0,0,0,7.38135528564453,0,0,8.13573455810547,0,0,0,0,10.0900268554688,0,0,0,0,-55.9657363891602,0,0,0,-61.8454818725586,0,0,0,7.03121948242188,0,0,0,0,0,6.12501525878906,0,0,0,0,7.28585815429688,0,0,7.28594207763672,0,0,0,0,12.5525665283203,0,0,0,0,-31.2691421508789,0,0,0,9.37966918945312,0,0,0,0,10.0013580322266,0,0,0,7.21428680419922,0,0,0,6.72160339355469,0,0,0,10.2499160766602,0,0,0,7.18050384521484,0,0,0,6.723876953125,0,0,0,6.84242248535156,0,0,0,7.162353515625,0,0,0,13.6906967163086,0,0,0,3.00730133056641,0,0,0,0,1.70867156982422,0,0,0,0,0.0002899169921875,0,0,0,0,6.89669799804688,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,2.49387359619141,0,0,0,0,0,0,0,0,0,4.48099517822266,0,0,0,0,2.335205078125,0,0,0,0,8.94357299804688,0,0,0,0,12.8329772949219,0,0,0,0,4.61940765380859,0,0,0.180160522460938,0,0,0,0,-34.1268692016602,0,0,0,0,0,-88.2496490478516,0,0,0,0,0,-6.72383117675781,0,0,0,0,7.76911926269531,0,0,0,0,9.52516937255859,0,0,0,0,8.05078887939453,0,0,0,0,9.48696136474609,0,0,0,0,32.2435531616211,0,0,11.9377899169922,0,0,21.1075820922852,0,0,14.2443389892578,0,0,0,10.5529251098633,0,0,0,0,7.27937316894531,0,0,0,0,0,-69.5006332397461,0,0,0,0,6.20090484619141,0,0,6.85485076904297,0,0,0,0,11.2778701782227,0,0,0,0,4.792724609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-58.9814529418945,0,0,0,0,-80.8887252807617,0,0,0,0,5.78221130371094,0,0,0,0,11.4149169921875,0,0,0,0,8.62303161621094,0,0,6.76184844970703,0,0,0,0,1.34920501708984,0,0,0,0,0,-18.0837478637695,0,0,11.051872253418,0,0,0,8.06996154785156,0,0,0,6.69416046142578,0,0,0,9.17098236083984,0,0,0,9.89358520507812,0,0,0,7.15618133544922,0,0,0,7.04102325439453,0,0,0,10.2866058349609,0,0,0,11.6287689208984,0,6.99095916748047,0,0,0,0,1.75164031982422,0,0,0,0,2.73826599121094,0,0,0,4.79691314697266,0,0,0,0,7.62939453125e-05,0,0,0,0,3.02201080322266,0,0,0,0,0.0002899169921875,0,0,0,0,5.92230224609375,0,0,0,0,0,3.58145141601562,0,0,0,0,6.77049255371094,0,0,0,0,15.9557876586914,0,0,0,0,1.63845825195312,0,0,1.78234100341797,0,0,0,0,10.1797027587891,0,0,0,0,7.578369140625,0,0,0,0,8.00144958496094,0,0,0,0,-45.9079284667969,0,0,0,0,0,-103.316780090332,0,0,0,0,0,-3.40568542480469,0,0,0,0,34.7099685668945,0,0,11.7511596679688,0,0,4.32661437988281,0,0,0,0,0,0,21.5103302001953,0,0,17.118278503418,0,0,0,0,10.8359069824219,0,0,0,0,12.6263122558594,0,0,8.94149017333984,0,0,0,0,3.85707092285156,0,0,0,0,0,-71.7522430419922,0,0,0,0,7.04832458496094,0,0,9.99947357177734,0,0,0,0,9.06877899169922,0,0,0,0,-21.0142440795898,0,0,0,0,0,0,-3.50224304199219,0,0,0,0,6.26036071777344,0,0,0,0,10.8389205932617,0,0,12.5282211303711,0,0,0,7.71794128417969,0,0,0,7.39002227783203,0,0,0,7.14586639404297,0,0,0,-22.1392288208008,0,0,0,0,-30.1035308837891,0,0,0,7.38636779785156,0,0,0,7.01468658447266,0,0,0,7.37309265136719,0,0,0,12.619758605957,0,0,0,11.5924987792969,0,6.89328765869141,0,0,0,0,7.62939453125e-05,0,0,0,0,1.72605133056641,0,0,0,0,2.68828582763672,0,0,0,4.76083374023438,0,0,0,0,7.62939453125e-05,0,0,0,0,3.00662994384766,0,0,0,0,0,0,0,0,0,0.752532958984375,0,0,0,0,5.08596801757812,0,0,0,0,0,3.00929260253906,0,0,0,0,7.18219757080078,0,0,0,0,15.7266540527344,0,0,0,0,-28.8617477416992,0,0,0,0,-67.9432678222656,0,0,0,0,0,1.78234100341797,0,0,0,0,6.79044342041016,0,0,0,0,11.1546173095703,0,0,0,0,8.002197265625,0,0,0,0,8.00633239746094,0,0,0,0,7.99869537353516,0,0,0,0,9.31825256347656,0,0,24.7238922119141,0,0,11.62841796875,0,0,2.71814727783203,0,-65.6518783569336,0,19.9907989501953,0,0,0,9.17163848876953,0,0,0,0,0,7.98811340332031,0,0,0,11.0779800415039,0,0,6.83525085449219,0,0,0,0,6.3812255859375,0,0,0,-114.28987121582,0,0,0,-11.7668914794922,0,0,0,8.31941223144531,0,0,0,0,8.20423126220703,0,0,10.3545837402344,0,0,0,0,8.38790893554688,0,0,0,0,0,-21.2924880981445,0,0,0,-6.32524871826172,0,0,0,0,5.47689819335938,0,0,0,13.6719970703125,0,0,0,0,11.8968811035156,0,0,0,6.74600219726562,0,0,0,6.24261474609375,0,0,0,7.23625183105469,0,0,0,10.8373870849609,0,0,0,-35.1914443969727,0,0,0,0,-24.4533538818359,0,0,0,7.90446472167969,0,0,0,6.47355651855469,0,0,0,8.87696075439453,0,0,0,12.8074798583984,0,0,0,0,4.14886474609375,0,0,0,0,1.71045684814453,0,0,0,0,0.0003204345703125,0,0,0,0,6.86441040039062,0,0,0,0,0,0,0,0,0,2.47528839111328,0,0,0,0,0,0,0,0,0,2.71546936035156,0,0,3.38163757324219,0,0,0,0,7.24401092529297,0,0,0,0,9.57687377929688,0,0,0,0,8.14681243896484,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1787719726562,0,0,0,0,7.76214599609375,0,0,0,0,7.99771118164062,0,0,0,0,7.99827575683594,0,0,0,0,7.99645233154297,0,0,0,0,-79.3008575439453,0,0,0,0,0,-14.1687774658203,0,0,10.8547973632812,0,0,15.9517211914062,0,15.1743545532227,0,0,0,12.9348907470703,0,0,0,0,9.07705688476562,0,0,0,7.61859130859375,0,0,8.50066375732422,0,0,0,0,7.70221710205078,0,0,0,0,-48.6637115478516,0,0,0,0,0,-7.95182037353516,0,0,0,0,10.2565612792969,0,0,0,0,7.39608764648438,0,0,0,0,8.16508483886719,0,0,0,0,3.08810424804688,0,0,0,-63.717170715332,0,0,0,4.63111877441406,0,0,6.77401733398438,0,0,0,0,13.0033798217773,0,0,0,10.2583160400391,0,0,0,7.85166168212891,0,0,8.48831939697266,0,0,0,6.78687286376953,0,0,0,6.87932586669922,0,0,0,0,-62.1573867797852,0,0,0,10.222770690918,0,0,0,9.42815399169922,0,0,0,8.44011688232422,0,0,0,6.67123413085938,0,0,0,8.83731842041016,0,11.1264038085938,0,0,0,0,1.35223388671875,0,0,0,0,0,0.285057067871094,0,0,0,0,6.44295501708984,0,0,0,0,0,0,0,0,0,2.33228302001953,0,0,0,0,0.0002899169921875,0,0,0,0,5.42111206054688,0,0,0,0,0,3.30583953857422,0,0,0,0,6.20011901855469,0,0,0,0,12.4636611938477,0,0,0,0,0,1.82289123535156,0,0,0,0,-31.51220703125,0,0,0,0,0,-54.2974472045898,0,0,0,0,9.84484100341797,0,0,0,0,7.99900054931641,0,0,0,0,8.00051879882812,0,0,0,0,7.99720001220703,0,0,0,0,8.48054504394531,0,0,23.7506942749023,0,0,11.1749496459961,0,0,-3.26736450195312,0,0,-19.5093994140625,0,0,13.9148330688477,0,0,0,0,8.51210784912109,0,0,0,0,9.01681518554688,0,0,0,0,-12.9846801757812,0,0,0,0,0,-37.2576599121094,0,0,0,0,6.74223327636719,0,0,0,0,6.51929473876953,0,0,0,0,7.74388885498047,0,0,0,0,5.60088348388672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-21.5445709228516,0,0,0,-113.776390075684,0,0,0,-18.3143997192383,0,0,0,0,7.39610290527344,0,0,0,0,7.285888671875,0,0,0,0,8.68669128417969,0,0,0,6.13424682617188,0,0,0,-3.1927490234375,0,0,0,-19.7591018676758,0,0,0,8.3936767578125,0,0,0,0,10.8350448608398,0,0,0,7.22023773193359,0,0,0,7.84055328369141,0,0,0,7.10958862304688,0,0,0,7.62545776367188,0,0,0,7.2216796875,0,0,0,6.90078735351562,0,0,0,9.25211334228516,0,0,0,12.966552734375,0,0,0,4.22563171386719,0,0,0,0,1.68041229248047,0,0,0,0,2.57929992675781,0,0,0,4.01653289794922,0,0,0,0,7.62939453125e-05,0,0,0,0,2.36248016357422,0,0,0,0,0,0,0,0,0,5.53024291992188,0,0,0,0,0,3.86846160888672,0,0,0,5.98224639892578,0,0,0,0,12.7821655273438,0,0,0,0,0,0.714218139648438,0,0,0,0,6.80381011962891,0,0,0,0,4.43484497070312,0,0,0,0,7.76467132568359,0,0,0,0,8.03543853759766,0,0,0,0,9.47383880615234,0,0,0,0,6.51922607421875,0,0,0,0,-46.1244735717773,0,0,0,0,0,-61.4526519775391,0,0,0,0,0,-33.1510391235352,0,0,10.6587219238281,0,0,15.6974563598633,0,11.2785568237305,0,0,14.7776565551758,0,0,0,0,9.35742950439453,0,0,0,9.52561187744141,0,0,9.98477935791016,0,0,0,0,5.89496612548828,0,0,0,-58.1599502563477,0,0,6.92835998535156,0,0,0,0,8.36339569091797,0,0,9.64436340332031,0,0,0,0,-2.73162078857422,0,0,0,0,0,-20.1954498291016,0,0,0,0,6.67062377929688,0,0,0,12.7947311401367,0,0,0,0,11.5770034790039,0,0,0,7.25601959228516,0,0,0,6.80301666259766,0,0,0,7.01312255859375,0,0,0,-7.42863464355469,0,0,0,0,-46.7685699462891,0,0,0,6.86214447021484,0,0,0,11.054443359375,0,0,0,7.90838623046875,0,0,0,7.58448028564453,0,0,0,7.5845947265625,0,0,0,14.7881927490234,0,0,0,0,1.34953308105469,0,0,0,0,0,0.283836364746094,0,0,0,0,6.31620025634766,0,0,0,0,0,0,0,0,0,2.26630401611328,0,0,0,0,0.0002899169921875,0,0,0,0,5.29438018798828,0,0,0,0,0,4.23670196533203,0,0,0,0,5.24210357666016,0,0,0,0,8.59446716308594,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1594085693359,0,0,0,0,7.438232421875,0,0,0,0,-9.11377716064453,0,0,0,0,0,-88.3275146484375,0,0,0,0,7.99922943115234,0,0,0,0,9.51276397705078,0,0,0,0,28.8878402709961,0,0,10.6455612182617,0,0,15.6700973510742,0,14.9232711791992,0,0,0,9.30397033691406,0,0,0,0,-24.0320358276367,0,0,0,0,-12.6815643310547,0,0,9.17605590820312,0,0,6.64427185058594,0,0,0,0,9.93820190429688,0,0,0,0,3.70442962646484,0,0,0,-127.285369873047,0,0,0,3.01663970947266,0,0,0,0,6.95275115966797,0,0,11.5937957763672,0,0,0,0,8.04018402099609,0,0,0,0,-30.5246200561523,0,0,0,2.52032470703125,0,0,0,12.5853271484375,0,0,0,0,11.2071762084961,0,0,0,7.4500732421875,0,0,0,7.17144775390625,0,0,0,6.92484283447266,0,0,0,7.51524353027344,0,0,0,11.2429733276367,0,0,0,7.43595123291016,0,0,0,7.63710784912109,0,0,0,-46.2714462280273,0,0,0,0,-31.6813735961914,0,0,0,6.73030090332031,0,0,0,11.1082153320312,0,5.48976898193359,0,0,0,0,1.63867950439453,0,0,0,0,0.0002899169921875,0,0,0,0,6.30717468261719,0,0,0,0,7.62939453125e-05,0,0,0,0,2.256103515625,0,0,0,0,0.0002899169921875,0,0,0,0,5.57154083251953,0,0,0,0,4.83872222900391,0,0,0,0,9.39478302001953,0,0,0,0,6.05720520019531,0,0,0,0,0,0.180160522460938,0,0,0,0,6.39017486572266,0,0,0,0,12.9987716674805,0,0,0,0,8.0001220703125,0,0,0,0,7.99549102783203,0,0,0,0,7.99254608154297,0,0,0,0,8.22930145263672,0,0,22.3072128295898,0,0,0,-106.288162231445,0,0,0.424575805664062,0,0,23.2595138549805,0,0,15.8398513793945,0,0,0,0,9.39087677001953,0,0,0,0,7.68167114257812,0,0,0,0,11.9096221923828,0,0,0,0,6.32256317138672,0,0,0,0,0,-46.4143218994141,0,0,0,0,7.80262756347656,0,0,0,0,8.36829376220703,0,0,6.18871307373047,0,0,6.03691101074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.108718872070312,0,0,0,0,0,0,-114.539131164551,0,0,0,0,0,0,-17.5675888061523,0,0,0,0,0,0,3.44336700439453,0,0,0,0,7.74628448486328,0,0,0,0,5.84205627441406,0,0,12.8811187744141,0,0,0,10.8660430908203,0,0,0,6.80400848388672,0,0,0,6.86305999755859,0,0,0,6.89364624023438,0,0,0,0,-56.6346435546875,0,0,0,8.24030303955078,0,0,0,9.66709136962891,0,0,0,6.98617553710938,0,0,0,7.96372222900391,0,0,0,8.38011169433594,0,0,0,8.18490600585938,0,10.949333190918,0,0,0,0,0.710319519042969,0,0,0,0,0,0.92706298828125,0,0,0,0,6.28812408447266,0,0,0,0,0,0,0,0,0,2.24761199951172,0,0,0,0,0.0002899169921875,0,0,0,0,5.21584320068359,0,0,0,2.86500549316406,0,0,0,0,6.65529632568359,0,0,0,0,10.3677368164062,0,0,0,0,0,1.78234100341797,0,0,0,0,5.90028381347656,0,0,0,0,11.9527130126953,0,0,0,0,8.00032806396484,0,0,0,0,7.99586486816406,0,0,0,0,7.99927520751953,0,0,0,0,16.7777557373047,0,0,0,15.2554092407227,0,0,0,-99.6634826660156,0,0,0,-41.1926193237305,0,0,16.1335144042969,0,17.227180480957,0,0,0,10.1672744750977,0,0,0,0,8.66555023193359,0,0,0,11.5742645263672,0,0,0,0,7.10465240478516,0,0,0,0,7.52584838867188,0,0,0,0,0,-48.7516937255859,0,0,0,0,0,10.2590484619141,0,0,0,0,7.02873229980469,0,0,0,0,8.66468811035156,0,0,0,0,3.7052001953125,0,0,0,0,0,0,-47.4855194091797,0,0,0,0,12.5969924926758,0,0,0,0,9.94510650634766,0,0,0,11.2473907470703,0,0,0,0,0,7.17555236816406,0,0,0,8.12836456298828,0,0,0,7.20623779296875,0,0,0,-51.9902420043945,0,0,0,0,-2.93252563476562,0,0,0,7.68894958496094,0,0,0,8.21311187744141,0,0,0,7.16431427001953,0,0,0,8.72110748291016,0,0,0,12.8117370605469,0,0,4.69197845458984,0,0,0,0,1.67835235595703,0,0,0,0,5.30983734130859,0,0,0,0,0,1.17752838134766,0,0,0,0,0.67718505859375,0,0,0,0,1.62944793701172,0,0,0,0,0.0002899169921875,0,0,0,0,5.45475769042969,0,0,0,0,0,3.37935638427734,0,0,0,0,6.38581085205078,0,0,0,0,12.5583724975586,0,0,0,0,0,1.78234100341797,0,0,0,0,8.13072967529297,0,0,0,0,9.56392669677734,0,0,0,0,8.00124359130859,0,0,0,0,7.99399566650391,0,0,0,0,8.00338745117188,0,0,0,0,-20.5049819946289,0,0,0,0,0,-99.831413269043,0,0,23.4262542724609,0,0,11.0159225463867,0,0,25.3877716064453,0,0,16.7643203735352,0,0,0,0,9.72393035888672,0,0,0,0,12.8344192504883,0,0,0,0,7.20751190185547,0,0,0,0,4.23164367675781,0,0,0,0,0,-56.9783630371094,0,0,0,0,7.06546783447266,0,0,0,0,10.3471755981445,0,0,0,0,11.0377883911133,0,0,0,0,0,-62.5720977783203,0,0,0,0,0,7.48424530029297,0,0,0,0,6.49486541748047,0,0,0,0,11.0598678588867,0,0,0,0,8.88394927978516,0,0,0,10.0766906738281,0,0,-3.61367797851562,0,0,0,0,-34.9886016845703,0,0,0,7.3963623046875,0,0,0,8.79579162597656,0,0,0,10.2614288330078,0,0,0,7.42527770996094,0,0,0,7.32180786132812,0,0,0,7.28524017333984,0,0,0,6.92705535888672,0,0,0,12.0278625488281,0,5.65275573730469,0,0,0,0,1.68860626220703,0,0,0,0,6.50971221923828,0,0,0,0,0,0,0,0,0,1.63103485107422,0,0,0,0,0,0.67919921875,0,0,0,0,0.905105590820312,0,0,0,4.55120086669922,0,0,0,0,0,2.91210174560547,0,0,0,0,6.83087921142578,0,0,0,0,-38.3773422241211,0,0,0,0,-51.4813385009766,0,0,0,0,0.426399230957031,0,0,1.78234100341797,0,0,0,0,5.75046539306641,0,0,0,0,11.8092956542969,0,0,0,0,7.99546813964844,0,0,0,0,8.0010986328125,0,0,0,0,7.99591064453125,0,0,0,0,7.80401611328125,0,0,23.0611190795898,0,0,10.2182006835938,0,0,-48.6741790771484,0,0,-6.93753051757812,0,0,12.5922470092773,0,0,0,0,9.12017822265625,0,0,0,0,11.4519424438477,0,0,0,0,7.30302429199219,0,0,0,0,4.84911346435547,0,0,0,0,-44.9816513061523,0,0,0,0,7.89816284179688,0,0,0,0,7.30302429199219,0,0,0,0,9.37729644775391,0,0,1.21227264404297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.108718872070312,0,0,0,-114.249382019043,0,0,0,-33.7319869995117,0,0,0,0.0367965698242188,0,0,0,0,7.19522857666016,0,0,0,0,0,9.93821716308594,0,0,0,0,9.89285278320312,0,0,0,0,6.41445922851562,0,0,0,11.5243835449219,0,0,0,6.07366943359375,0,0,0,-44.173713684082,0,0,0,10.1947784423828,0,0,0,7.29998779296875,0,0,0,7.54354858398438,0,0,0,7.49746704101562,0,0,0,6.44842529296875,0,0,0,7.99295806884766,0,0,0,6.95571136474609,0,0,0,11.1892013549805,0,6.43780517578125,0,0,0,0,1.66368865966797,0,0,0,0,6.31903839111328,0,0,0,0,0,0,0,0,0,2.23975372314453,0,0,0,0,0.0002899169921875,0,0,0,0,5.20484924316406,0,0,0,2.87958526611328,0,0,0,0,6.46401214599609,0,0,0,0,10.5514297485352,0,0,0,0,0,0.180160522460938,0,0,0,0,6.40191650390625,0,0,0,0,12.8296127319336,0,0,0,0,7.98928070068359,0,0,0,0,7.99117279052734,0,0,0,0,9.79521942138672,0,0,21.1193542480469,0,0,-41.9025726318359,0,0,0,-106.05241394043,0,0,0,0,0,22.4034576416016,0,0,19.5036773681641,0,0,12.2733840942383,0,0,0,0,7.06791687011719,0,0,0,0,8.06222534179688,0,0,0,0,4.99755096435547,0,0,0,0,0,-47.2864608764648,0,0,7.18307495117188,0,0,0,0,6.68830108642578,0,0,0,0,6.86463165283203,0,0,0,0,6.96260833740234,0,0,0,0,0,-23.2712707519531,0,0,0,0,0,-0.835464477539062,0,0,0,0,9.34084320068359,0,0,0,0,7.06791687011719,0,0,0,0,10.6704864501953,0,0,0,7.50034332275391,0,0,0,7.28945922851562,0,0,0,7.13442993164062,0,0,0,-4.9949951171875,0,0,0,0,-43.3404693603516,0,0,0,6.58602142333984,0,0,0,10.3484878540039,0,0,0,7.20187377929688,0,0,0,7.17496490478516,0,0,0,9.04665374755859,0,9.10626220703125,0,0,0,0,1.59166717529297,0,0,0,0,5.93846130371094,0,0,0,0,0,0,0,0,0,2.11681365966797,0,0,0,0,0,0,0,0,0,4.94183349609375,0,0,0,0,0,4.44124603271484,0,0,0,4.42232513427734,0,0,0,0,11.1206283569336,0,0,1.09817504882812,0,0,0.180160522460938,0,0,0,0,6.38023376464844,0,0,0,0,9.65442657470703,0,0,0,0,11.0488967895508,0,0,0,0,4.94314575195312,0,0,0,0,-1.58928680419922,0,0,0,0,0,-107.256935119629,0,0,0,0,10.5977249145508,0,0,22.2717895507812,0,0,10.4732513427734,0,0,23.4083938598633,0,0,10.0841369628906,0,0,0,9.33723449707031,0,0,0,0,8.12215423583984,0,0,0,10.1354598999023,0,0,0,0,8.83614349365234,0,0,0,0,0,-56.2162399291992,0,0,0,0,7.07771301269531,0,0,0,0,7.96671295166016,0,0,0,0,6.88417816162109,0,0,0,0,3.46399688720703,0,0,0,0,0,0,-111.830268859863,0,0,0,0,13.261589050293,0,0,0,0,15.5512390136719,0,0,10.4755325317383,0,0,0,-5.92411041259766,0,0,0,0,0,-32.6027755737305,0,0,0,0,10.5083923339844,0,0,0,11.5828170776367,0,0,0,7.62006378173828,0,0,0,7.88507843017578,0,0,0,7.34400177001953,0,0,0,7.13594818115234,0,0,0,7.85596466064453,0,0,0,7.849609375,0,0,0,0,0,11.1797637939453,0,0,0,0,1.36408233642578,0,0,0,0,0,0.288681030273438,0,0,0,0,6.24067687988281,0,0,0,0,0,0,0,0,0,2.21355438232422,0,0,0,0,0.0002899169921875,0,0,0,0,5.16585540771484,0,0,0,0,0,3.71275329589844,0,0,0,0,5.52725219726562,0,0,0,0,10.2614135742188,0,0,0,0,0,1.78234100341797,0,0,0,0,6.84337615966797,0,0,0,0,10.8891372680664,0,0,0,0,7.99958038330078,0,0,0,0,-28.1542739868164,0,0,0,0,0,-107.346328735352,0,0,0,0,0,12.8987121582031,0,0,0,0,10.7527008056641,0,0,22.6714172363281,0,0,10.664924621582,0,0,23.7815780639648,0,0,10.2297286987305,0,0,0,10.0872039794922,0,0,0,9.77616882324219,0,0,0,7.47606658935547,0,0,0,0,8.00589752197266,0,0,0,0,5.87764739990234,0,0,0,0,0,-70.4874420166016,0,0,6.88423919677734,0,0,0,0,6.68342590332031,0,0,12.5268707275391,0,0,0,0,-38.0467834472656,0,0,0,0,0,0,-21.6085205078125,0,0,0,0,0,0,7.84429931640625,0,0,0,0,6.95771026611328,0,0,0,0,10.6504974365234,0,0,0,0,9.91240692138672,0,0,0,11.0825958251953,0,0,0,0,-45.6425476074219,0,0,0,0,9.01107788085938,0,0,0,7.70330810546875,0,0,0,8.22885131835938,0,0,0,7.90463256835938,0,0,0,7.00926208496094,0,0,0,7.47598266601562,0,0,0,7.35520935058594,0,0,0,9.89028930664062,0,0,0,14.6656036376953,0,0,0,0,0,0.296653747558594,0,0,0,0,1.68592071533203,0,0,0,0,0,0,0,0,0,6.32640075683594,0,0,0,0,7.62939453125e-05,0,0,0,0,2.22037506103516,0,0,0,0,0,0,0,0,0,5.22602844238281,0,0,0,0,0,4.240478515625,0,0,0,0,5.24436950683594,0,0,0,0,-42.6418991088867,0,0,0,0,-51.4619522094727,0,0,0,0,0.426513671875,0,0,1.78234100341797,0,0,0,0,4.80339050292969,0,0,0,0,12.8819580078125,0,0,0,0,7.99584197998047,0,0,0,0,7.99678039550781,0,0,0,0,7.99665832519531,0,0,0,0,7.16912841796875,0,0,0,0,22.9888000488281,0,0,10.6017913818359,0,0,-35.6727828979492,0,0,-19.1496963500977,0,0,16.3996734619141,0,0,0,0,0,9.04199981689453,0,0,0,13.0811462402344,0,0,0,0,7.28337097167969,0,0,0.820449829101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-109.083892822266,0,0,0,0,0,-51.9839553833008,0,0,0,0,7.84915924072266,0,0,0,0,7.48182678222656,0,0,0,0,11.4516296386719,0,0,0,0,-1.43437194824219,0,0,0,0,0,-24.4247970581055,0,0,0,0,7.12914276123047,0,0,0,0,11.9773178100586,0,0,11.30029296875,0,0,0,9.16651153564453,0,0,0,8.25193023681641,0,0,0,7.28024291992188,0,0,0,8.43152618408203,0,0,0,0,-71.0203857421875,0,0,0,0,-2.32894897460938,0,0,0,0,3.70851898193359,0,0,0,7.58104705810547,0,0,0,6.78070831298828,0,0,0,12.0338745117188,0,0,0,7.06466674804688,0,0,0,8.78035736083984,0,0,0,0,0,0,0,11.5701522827148,0,0,0,0,0,0,0,0,0,1.69971466064453,0,0,0,0,6.30893707275391,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,2.20102691650391,0,0,0,0,0,0,0,0,0,4.90106201171875,0,0,0,0,1.19008636474609,0,0,0,0,8.433837890625,0,0,0,0,8.54234313964844,0,0,0,0,0,1.78234100341797,0,0,0,0,5.76809692382812,0,0,0,0,11.7648162841797,0,0,0,0,7.99958038330078,0,0,0,0,7.99977111816406,0,0,0,0,7.99553680419922,0,0,0,0,8.08118438720703,0,0,22.9254684448242,0,0,10.7779312133789,0,0,-12.2424850463867,0,0,-143.342140197754,0,0,24.9761734008789,0,0,0,12.5527267456055,0,0,11.5456161499023,0,0,0,0,6.85485076904297,0,0,0,0,7.53810119628906,0,0,0,0,6.40664672851562,0,0,0,0,-45.1135940551758,0,0,0,2.04194641113281,0,0,0,0,8.67448425292969,0,0,0,0,11.4271621704102,0,0,0,0,0,-5.86260986328125,0,0,0,0,0,-14.1087341308594,0,0,0,9.99550628662109,0,0,0,0,0,10.7863693237305,0,0,0,7.94691467285156,0,0,0,0,6.55503845214844,0,0,0,6.23985290527344,0,0,0,7.49538421630859,0,0,0,7.31221771240234,0,0,0,7.16274261474609,0,0,0,6.72733306884766,0,0,0,2.82192230224609,0,0,0,0,-67.0698928833008,0,0,0,0,-5.81455230712891,0,0,0,7.89399719238281,0,0,0,8.42488098144531,0,11.1872024536133,0,0,0,0,0,0,0,0,0,1.72289276123047,0,0,0,0,0,0,0,0,0,6.40206146240234,0,0,0,0,0,0,0,0,0,2.22515106201172,0,0,0,0,0,0,0,0,0,5.23995971679688,0,0,0,0,0,4.26724243164062,0,0,0,0,5.2203369140625,0,0,0,0,10.5143814086914,0,0,0,0,0,1.78234100341797,0,0,0,0,10.1904449462891,0,0,0,0,7.27243041992188,0,0,0,0,7.99509429931641,0,0,0,0,7.99362182617188,0,0,0,0,12.5368881225586,0,0,29.4961166381836,0,0,0,0,0,-36.5289535522461,0,0,-75.3156585693359,0,0,19.7751312255859,0,0,0,9.94225311279297,0,0,0,9.17584991455078,0,0,0,0,7.64588928222656,0,0,0,0,5.70644378662109,0,0,0,0,0,0,-46.734001159668,0,0,0,0,6.94056701660156,0,0,0,0,6.66384887695312,0,0,0,0,0,8.05736541748047,0,0,0,0,1.22421264648438,0,0,0,-17.3765258789062,0,0,0,0,8.66048431396484,0,0,12.9256362915039,0,0,0,10.139045715332,0,0,0,7.75076293945312,0,0,0,7.45352935791016,0,0,0,-4.58425903320312,0,0,0,0,-48.9645385742188,0,0,0,7.95790863037109,0,0,0,13.81591796875,0,0,0,7.51678466796875,0,0,0,7.33843231201172,0,0,0,8.73903656005859,0,10.6134948730469,0,0,0,0,1.64397430419922,0,0,0,0,1.57278442382812,0,0,0,0,4.47193145751953,0,0,0,0,0,0,0,0,0,2.11795806884766,0,0,0,0,0.606658935546875,0,0,0,0,4.37849426269531,0,0,0,0,0,4.08583068847656,0,0,0,0,4.95626831054688,0,0,0,0,10.2383193969727,0,0,0.425521850585938,0,0,0,0,0,6.59492492675781,0,0,0,0,5.37908172607422,0,0,0,0,7.34123992919922,0,0,0,0,-55.5216598510742,0,0,0,0,0,-42.9164810180664,0,0,0,0,9.50839233398438,0,0,0,0,29.9910583496094,0,0,10.064582824707,0,0,16.7794418334961,0,15.6324768066406,0,0,0,9.00971984863281,0,0,0,0,6.15594482421875,0,0,0,0,0,-41.7408218383789,0,0,0,0,7.00667572021484,0,0,0,0,6.85243225097656,0,0,0,0,7.34220886230469,0,0,0,0,5.17235565185547,0,0,0,0,0,-100.340034484863,0,0,0,0,0,-30.9689254760742,0,0,0,0,7.50875854492188,0,0,0,0,6.34545135498047,0,0,0,0,6.57076263427734,0,0,0,0,5.34865570068359,0,0,0,0,1.58705139160156,0,0,0,0,0,-26.1161651611328,0,0,8.97534942626953,0,0,0,10.9347305297852,0,0,7.29416656494141,0,0,0,10.605094909668,0,0,0,8.21155548095703,0,0,0,7.10134887695312,0,0,0,8.32231903076172,0,0,0,7.85374450683594,0,0,0,7.09409332275391,0,0,0,8.18294525146484,0,0,0,6.62522888183594,0,0,0,13.614501953125,0,0,0,0,7.62939453125e-05,0,0,0,0,1.61125946044922,0,0,0,0,2.39548492431641,0,0,0,3.59534454345703,0,0,0,0,0,0,0,0,0,2.12064361572266,0,0,0,0,0,0,0,0,0,4.98777770996094,0,0,0,0,0,4.06044006347656,0,0,0,0,4.92816162109375,0,0,0,0,11.6632080078125,0,0,0,0,0,1.78234100341797,0,0,0,0,4.36307525634766,0,0,0,0,0,-74.6506805419922,0,0,0,0,0,-67.9052047729492,0,0,0,0,8.84136962890625,0,0,0,0,9.54563140869141,0,0,0,0,7.9127197265625,0,0,0,0,29.6052474975586,0,0,10.7415313720703,0,0,22.7212295532227,0,0,9.97396850585938,0,0,0,9.99298095703125,0,0,0,8.26811218261719,0,0,0,8.68301391601562,0,0,0,0,9.38716125488281,0,0,0,0,5.55047607421875,0,0,0,-89.5086975097656,0,0,0,0,6.10546112060547,0,0,0,0,9.93328857421875,0,0,0,0,8.8997802734375,0,0,0,0,6.64911651611328,0,0,0,0,-33.1144790649414,0,0,0,0,5.51036071777344,0,0,0,0,5.59061431884766,0,0,0,13.578987121582,0,0,0,0,11.5797729492188,0,0,0,6.43896484375,0,0,0,0,6.77753448486328,0,0,0,7.22418975830078,0,0,0,-4.52444458007812,0,0,0,0,-47.2570877075195,0,0,0,8.17450714111328,0,0,0,6.46270751953125,0,0,0,8.97360229492188,0,0,0,6.51236724853516,0,0,0,7.84637451171875,0,0,0,11.6156539916992,0,5.43663787841797,0,0,0,0,1.36852264404297,0,0,0,0,0,0.2901611328125,0,0,0,0,3.30222320556641,0,0,2.82514953613281,0,0,0,0,0,0,0,0,0,2.14189910888672,0,0,0,0,0.00018310546875,0,0,0,0,5.07171630859375,0,0,0,0,0,3.20730590820312,0,0,0,0,5.97760009765625,0,0,0,0,-6.13246917724609,0,0,0,0,-73.5358581542969,0,0,0,0,0,1.78234100341797,0,0,0,0,6.82173919677734,0,0,0,0,10.8186264038086,0,0,0,0,7.9962158203125,0,0,0,0,7.99192047119141,0,0,0,0,9.29715728759766,0,0,0,0,22.8833694458008,0,0,10.2565612792969,0,0,4.46604919433594,0,0,-116.590858459473,0,0,19.7539596557617,0,0,19.0092010498047,0,0,0,9.56381988525391,0,0,0,10.8828430175781,0,0,0,0,7.86138916015625,0,0,0,0,5.5880126953125,0,0,0,-48.4071884155273,0,0,0,0,8.13816070556641,0,0,0,0,8.46876525878906,0,0,0,0,9.33078765869141,0,0,0,6.041748046875,0,0,0,-29.7120819091797,0,0,0,0,9.40721893310547,0,0,0,0,12.3379745483398,0,0,0,10.1874923706055,0,0,0,6.65447998046875,0,0,0,8.76824188232422,0,0,0,7.70965576171875,0,0,0,7.49775695800781,0,0,0,7.91521453857422,0,0,0,8.36508941650391,0,0,0,-55.2572326660156,0,0,0,0,-23.7245101928711,0,0,0,7.61322784423828,0,0,0,6.13723754882812,0,0,0,12.4726104736328,0,0,0,0,3.40193939208984,0,0,0,0,1.64794158935547,0,0,0,0,0,0,0,0,0,6.07364654541016,0,0,0,0,0,0,0,0,0,1.01339721679688,0,0,1.10852813720703,0,0,0,0,0,0,0,0,0,4.76627349853516,0,0,0,0,2.57176971435547,0,0,0,0,6.69960784912109,0,0,0,0,10.2646636962891,0,0,0,0,0,1.78234100341797,0,0,0,0,5.89723205566406,0,0,0,0,11.7679748535156,0,0,0,0,7.99285125732422,0,0,0,0,4.94110870361328,0,0,0,0,-85.8193893432617,0,0,0,0,31.7048263549805,0,0,10.1428833007812,0,0,17.9850158691406,0,0,14.6391067504883,0,0,0,8.97775268554688,0,0,0,0,-70.700325012207,0,0,0,0,2.05303192138672,0,0,0,0,6.69316864013672,0,0,7.90306091308594,0,0,7.29326629638672,0,0,0,0,6.36988067626953,0,0,0,0,0,0,0,0,0,0,0,-51.6611785888672,0,0,0,-92.1888656616211,0,0,0,0,0,0,0,5.20915985107422,0,0,0,0,12.4019165039062,0,0,0,0,7.96665191650391,0,0,6.70790863037109,0,0,0,0,4.93248748779297,0,0,0,-29.034553527832,0,0,0,0,10.1392211914062,0,0,0,8.02597808837891,0,0,0,0,10.0952377319336,0,0,0,5.72380065917969,0,0,0,6.01793670654297,0,0,0,6.46897125244141,0,0,0,8.67507171630859,0,0,0,7.040283203125,0,0,0,7.53572082519531,0,0,0,5.99205017089844,0,0,0,6.15200042724609,0,0,0,8.03227233886719,0,0,0,13.0707321166992,0,0,1.20618438720703,0,0,0,0,1.63007354736328,0,0,0,0,0,0,0,0,0,5.99706268310547,0,0,0,0,0,0,0,0,0,2.09732818603516,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.72685241699219,0,0,0,0,0.604194641113281,0,0,0,0,6.54245758056641,0,0,0,0,9.30440521240234,0,0,0,0,6.43036651611328,0,0,0,0,0,1.78234100341797,0,0,0,0,6.85039520263672,0,0,0,0,10.96630859375,0,0,0,0,4.93938446044922,0,0,0,0,6.1693115234375,0,0,0,0,4.91550445556641,0,0,0,0,-59.6918182373047,0,0,0,0,0,-106.962432861328,0,0,0,0,0,25.1675567626953,0,0,10.2444458007812,0,0,2.04890441894531,0,0,20.9394607543945,0,0,9.91018676757812,0,0,0,9.75361633300781,0,0,0,9.77340698242188,0,0,0,9.68052673339844,0,0,0,0,8.23851776123047,0,0,0,0,7.16098022460938,0,0,0,0,0,0,-61.1027526855469,0,0,7.75609588623047,0,0,6.84266662597656,0,0,0,0,10.0581893920898,0,0,0,0,6.15869140625,0,0,0,0,0,-26.6796188354492,0,0,0,0,8.87722778320312,0,0,0,0,0,11.5044631958008,0,0,0,7.97530364990234,0,0,0,0,8.88447570800781,0,0,0,6.30238342285156,0,0,0,6.89562225341797,0,0,0,11.3075256347656,0,0,0,9.42330169677734,0,0,0,-1.82888031005859,0,0,0,0,-69.5240859985352,0,0,0,0,-0.196243286132812,0,0,0,6.85599517822266,0,0,0,8.79940795898438,0,0,0,13.4943161010742,0,0,0,0,7.62939453125e-05,0,0,0,0,1.64011383056641,0,0,0,0,6.05150604248047,0,0,0,0,0,0,0,0,0,2.11498260498047,0,0,0,0,0,0,0,0,0,5.07102203369141,0,0,0,0,0,3.23040008544922,0,0,0,0,5.92670440673828,0,0,0,0,13.2011795043945,0,0,1.10324096679688,0,0,0,0,0,6.62326049804688,0,0,0,0,5.38682556152344,0,0,0,0,7.54752349853516,0,0,0,0,7.99546813964844,0,0,0,0,7.99436950683594,0,0,0,0,7.99645233154297,0,0,0,0,-101.60733795166,0,0,0,0,33.8836975097656,0,0,3.0517578125e-05,0,0,23.4479064941406,0,0,11.4468078613281,0,0,0,8.33925628662109,0,0,0,0,7.77639770507812,0,0,0,9.07839202880859,0,0,0,0,9.21327209472656,0,0,0,0,0,-49.443229675293,0,0,8.59862518310547,0,0,0,0,11.7700653076172,0,0,0,0,6.69805145263672,0,0,2.08660125732422,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.19590759277344,0,0,0,0,0,0,-105.108589172363,0,0,0,0,0,0,-59.1744613647461,0,0,0,0,0,0,0,0,0,0,0,0,0,8.89248657226562,0,0,0,0,7.33235168457031,0,0,0,0,8.97711181640625,0,0,0,0,6.32341003417969,0,0,0,0,10.4038848876953,0,0,0,8.07996368408203,0,0,0,-34.9148941040039,0,0,0,0,-7.87648010253906,0,0,0,6.79479217529297,0,0,0,6.33003997802734,0,0,0,9.54300689697266,0,0,0,7.93370056152344,0,0,0,8.38800811767578,0,0,0,8.14652252197266,0,0,0,6.41770172119141,0,0,0,10.2111358642578,0,0,0,0,12.0771484375,0,0,0,0,0,0,0,0,0,1.66692352294922,0,0,0,0,0.0002899169921875,0,0,0,0,6.1895751953125,0,0,0,0,7.62939453125e-05,0,0,0,0,2.16054534912109,0,0,0,0,0.00018310546875,0,0,0,0,5.18367767333984,0,0,0,0,0,3.28764343261719,0,0,0,0,5.86927032470703,0,0,0,0,14.7573318481445,0,0,0,0,2.91239929199219,0,0,0.180160522460938,0,0,0,0,6.38050842285156,0,0,0,0,6.34392547607422,0,0,0,0,8.10678100585938,0,0,0,0,7.99678802490234,0,0,0,0,6.47930145263672,0,0,0,0,20.7752838134766,0,0,-60.4179306030273,0,0,0,-90.683235168457,0,0,10.4534912109375,0,0,3.89186096191406,0,0,0,0,0,0,19.4859771728516,0,0,17.3115692138672,0,0,0,0,8.92233276367188,0,0,11.8564987182617,0,0,7.40098571777344,0,0,0,0,7.21063232421875,0,0,0,0,0,-45.2912216186523,0,0,0,0,0,6.86954498291016,0,0,0,0,8.01573181152344,0,0,0,0,12.0982360839844,0,0,0,0,-31.2641067504883,0,0,0,0,0,4.1915283203125,0,0,0,0,6.04479217529297,0,0,0,17.8985900878906,0,0,0,7.35444641113281,0,0,8.23787689208984,0,0,0,6.95927429199219,0,0,0,6.55469512939453,0,0,0,3.17489624023438,0,0,0,0,-58.0337371826172,0,0,0,7.11264801025391,0,0,0,8.75293731689453,0,0,0,7.47605895996094,0,0,0,7.08378601074219,0,0,0,6.31671905517578,0,0,0,7.94196319580078,0,0,0,0,0,11.2963333129883,0,0,0,0,1.66344451904297,0,0,0,0,0,0,0,0,0,6.17928314208984,0,0,0,0,0,0,0,0,0,2.16033172607422,0,0,0,0,0,0,0,0,0,5.17924499511719,0,0,0,0,0,2.84311676025391,0,0,0,0,6.26966857910156,0,0,0,0,14.2585906982422,0,0,0,0,1.55849456787109,0,0,0.180160522460938,0,0,0,0,6.36037445068359,0,0,0,0,7.83130645751953,0,0,5.0018310546875,0,0,0,0,0,-110.559646606445,0,0,0,0,12.5759201049805,0,0,0,0,7.996826171875,0,0,0,0,7.47737121582031,0,0,32.7264938354492,0,0,3.0517578125e-05,0,0,23.4008941650391,0,0,10.0808563232422,0,0,0,9.09844970703125,0,0,0,0,6.43345642089844,0,0,0,0,-52.0858917236328,0,0,6.91607666015625,0,0,0,0,6.54137420654297,0,0,10.2590484619141,0,0,0,0,6.04660797119141,0,0,0,-77.8095779418945,0,0,0,-40.0587615966797,0,0,0,0,0,7.88097381591797,0,0,8.86312103271484,0,0,0,0,11.4663543701172,0,0,0,0,-22.5498962402344,0,0,0,0,0,2.29570770263672,0,0,0,0,11.2452774047852,0,0,0,5.71855926513672,0,0,0,0,7.26889038085938,0,0,0,7.50108337402344,0,0,0,7.01213836669922,0,0,0,7.12993621826172,0,0,0,7.73481750488281,0,0,0,6.93206787109375,0,0,0,9.72208404541016,0,0,0,8.15819549560547,0,0,0,8.26596832275391,0,0,0,12.4203643798828,0,0,4.62395477294922,0,0,0,0,1.39667510986328,0,0,0,0,0,0.299545288085938,0,0,0,0,4.26395416259766,0,0,0,1.93457794189453,0,0,0,0,7.62939453125e-05,0,0,0,0,2.13967132568359,0,0,0,0,0,0,0,0,0,3.16493225097656,0,0,0,0,0,0,-70.0974349975586,0,0,0,0,0,0,-56.4539108276367,0,0,0,0,1.71722412109375,0,0,0,0,7.86048126220703,0,0,0,0,15.2416305541992,0,0.426231384277344,0,0,1.78234100341797,0,0,0,0,5.75700378417969,0,0,0,0,11.8411636352539,0,0,0,0,7.99434661865234,0,0,0,0,7.99229431152344,0,0,0,0,9.30367279052734,0,0,0,0,22.8510437011719,0,0,10.2399215698242,0,0,22.9720153808594,0,0,9.90676116943359,0,0,0,7.08235931396484,0,0,0,0,0,-103.011833190918,0,0,10.1117782592773,0,0,11.7260284423828,0,0,0,0,7.12663269042969,0,0,0,0,4.51359558105469,0,0,0,0,0,-31.1072998046875,0,0,7.36920928955078,0,0,0,0,7.29077911376953,0,0,0,0,7.51605224609375,0,0,0,0,-12.334831237793,0,0,0,0,0,-13.1474533081055,0,0,0,0,6.56941223144531,0,0,0,9.09041595458984,0,0,0,0,10.9431991577148,0,0,0,7.72230529785156,0,0,0,0,7.95293426513672,0,0,0,7.51486206054688,0,0,0,7.73694610595703,0,0,0,-38.0400848388672,0,0,0,0,-18.5274047851562,0,0,0,8.47233581542969,0,0,0,7.60911560058594,0,0,0,7.95578002929688,0,0,0,7.82110595703125,0,0,0,8.23520660400391,0,0,0,12.4128265380859,0,0,0,2.99614715576172,0,0,0,0,1.67485809326172,0,0,0,0,0,0,0,0,0,6.06533813476562,0,0,0,0,0,0,0,0,0,2.09087371826172,0,0,0,0,0,0,0,0,0,4.72903442382812,0,0,0,0,1.25519561767578,0,0,0,0,8.15778350830078,0,0,0,0,15.6059036254883,0,0,0,0,1.54624176025391,0,0,0,0,0,6.64226531982422,0,0,0,0,-27.1872482299805,0,0,0,0,0,-70.8655090332031,0,0,0,0,7.73032379150391,0,0,0,0,9.51081085205078,0,0,0,0,9.60152435302734,0,0,0,0,11.2114181518555,0,0,0,0,23.7263259887695,0,0,11.0677490234375,0,0,23.3228607177734,0,0,-33.4326477050781,0,0,0,-73.1596527099609,0,0,0,9.2984619140625,0,0,0,8.04834747314453,0,0,0,0,8.59846496582031,0,0,0,9.57975006103516,0,0,0,0,9.27696228027344,0,0,0,0,6.79111480712891,0,0,-46.4251327514648,0,0,0,0,7.64591217041016,0,0,0,0,7.48914337158203,0,0,0,0,0,10.1781997680664,0,0,0,0,6.95275115966797,0,0,0,-33.0923156738281,0,0,6.92348480224609,0,0,0,0,10.3036727905273,0,0,0,0,7.00966644287109,0,0,0,11.803092956543,0,0,0,6.88838958740234,0,0,6.61275482177734,0,0,0,7.82716369628906,0,0,0,0.280899047851562,0,0,0,0,-55.6568069458008,0,0,0,7.31851196289062,0,0,0,8.41205596923828,0,0,0,7.84246063232422,0,0,0,7.69142150878906,0,0,0,7.35310363769531,0,0,0,9.16638946533203,0,11.0824737548828,0,0,0,0,7.62939453125e-05,0,0,0,0,1.71826934814453,0,0,0,0,0.0005340576171875,0,0,0,0,6.27249145507812,0,0,0,0,7.62939453125e-05,0,0,0,0,2.15158843994141,0,0,0,0,0,0,0,0,0,4.89633941650391,0,0,0,0,0.615043640136719,0,0,0,0,5.33966064453125,0,0,0,0,8.82144165039062,0,0,0,0,13.4239501953125,0,0,0,0,0,-69.6816940307617,0,0,0,0,0,-26.8388137817383,0,0,0,0,0,0.180160522460938,0,0,0,0,6.40312194824219,0,0,0,0,8.24423217773438,0,0,7.96297454833984,0,0,0,0,4.91647338867188,0,0,0,0,7.94895935058594,0,0,0,0,18.7678909301758,0,0,0,24.6389083862305,0,0,0.419761657714844,0,0,16.5356674194336,0,0,0,-60.2200241088867,0,0,0,9.90060424804688,0,0,0,0,9.32042694091797,0,0,0,0,10.5059204101562,0,0,0,0,6.83033752441406,0,0,0,0,7.66170501708984,0,0,0,0,0,-57.5425262451172,0,0,0,0,6.09562683105469,0,0,0,0,9.27939605712891,0,0,2.11845397949219,0,0,0,0,0,6.08342742919922,0,0,0,0,8.95116424560547,0,0,0,0,0,0,0,0,0,0,0,-1.19590759277344,0,0,0,-127.274307250977,0,0,0,-15.5569152832031,0,0,0,7.79289245605469,0,0,0,0,7.79357147216797,0,0,0,9.45556640625,0,0,0,0,9.93346405029297,0,0,0,7.58222961425781,0,0,0,0,10.771354675293,0,0,0,7.58616638183594,0,0,0,8.6337890625,0,0,0,0,-59.7580642700195,0,0,0,7.55580139160156,0,0,0,9.05006408691406,0,0,0,8.33435821533203,0,0,0,7.31416320800781,0,0,0,8.25918579101562,0,0,0,0,12.2537231445312,0,0,0,0,0,0,0,0,0,1.70122528076172,0,0,0,0,0.0003204345703125,0,0,0,0,6.20809936523438,0,0,0,0,7.62939453125e-05,0,0,0,0,2.13901519775391,0,0,0,0,0,0,0,0,0,5.14520263671875,0,0,0,0,0,2.82988739013672,0,0,0,0,6.3043212890625,0,0,0,0,14.7615585327148,0,0,0,0,6.52665710449219,0,0,0,0,0,6.57923889160156,0,0,0,0,5.39136505126953,0,0,0,0,7.67704010009766,0,0,0,0,8.03020477294922,0,0,0,0,9.46312713623047,0,0,0,0,29.2259979248047,0,0,9.94871520996094,0,0,-15.6901397705078,0,0,0,-122.67399597168,0,0,0,8.82311248779297,0,0,14.3951721191406,0,0,0,0,11.1472702026367,0,0,0,9.11373138427734,0,0,10.6435699462891,0,0,0,0,5.78231811523438,0,0,0,-46.0350875854492,0,0,8.62310028076172,0,0,0,0,10.8908538818359,0,0,0,0,9.87203216552734,0,0,0,0,0,0,-30.3249206542969,0,0,7.07038116455078,0,0,0,0,8.08665466308594,0,0,0,0,10.7134857177734,0,0,0,7.91963195800781,0,0,0,0,12.2625045776367,0,0,0,7.92227935791016,0,0,0,8.11197662353516,0,0,0,0,-63.0126571655273,0,0,0,12.6694030761719,0,0,0,8.00598907470703,0,0,0,6.98967742919922,0,0,0,8.55274963378906,0,0,0,7.95124053955078,0,0,0,12.637939453125,0,0,0,0,2.36598205566406,0,0,0,0,1.65204620361328,0,0,0,0,0,0,0,0,0,5.91357421875,0,0,0,0,7.62939453125e-05,0,0,0,0,2.03733062744141,0,0,0,0,0,0,0,0,0,4.87964630126953,0,0,0,0,0,3.58668518066406,0,0,0,5.30702972412109,0,0,0,0,14.3371276855469,0,0,0,0,5.82791137695312,0,0,0,0,0,1.78234100341797,0,0,0,0,10.2177352905273,0,0,0,0,7.29457855224609,0,0,0,0,-15.8505630493164,0,0,0,0,0,-94.5701217651367,0,0,0,0,11.0385665893555,0,0,0,0,29.6344757080078,0,0,10.3614654541016,0,0,15.3046798706055,0,10.1255950927734,0,0,12.4576416015625,0,0,9.08763885498047,0,0,0,0,8.15961456298828,0,0,0,0,9.76920318603516,0,0,0,0,0,-59.5588684082031,0,0,0,0,10.214958190918,0,0,0,0,8.78224182128906,0,0,0,0,8.69159698486328,0,0,0,0,-11.3427124023438,0,0,0,0,0,-101.280403137207,0,0,0,0,0,4.19882202148438,0,0,0,0,9.19853973388672,0,0,0,8.50792694091797,0,0,11.9468841552734,0,0,0,0,-19.4161071777344,0,0,0,0,-7.02838134765625,0,0,0,7.22494506835938,0,0,0,7.13430786132812,0,0,0,7.33022308349609,0,0,0,8.03102874755859,0,0,0,12.3233489990234,0,0,0,7.24884796142578,0,0,0,10.0809478759766,0,0,0,7.75762176513672,0,0,0,8.23957061767578,0,0,0,10.5759582519531,0,7.72615814208984,0,0,0,0,7.62939453125e-05,0,0,0,0,1.69664764404297,0,0,0,0,6.12648010253906,0,0,0,0,7.62939453125e-05,0,0,0,0,2.09946441650391,0,0,0,0,0.0002899169921875,0,0,0,0,5.05817413330078,0,0,0,0,0,3.25331115722656,0,0,0,0,5.96035766601562,0,0,0,0,14.8932571411133,0,0,0,0,2.44416809082031,0,0,0,0,0,1.34632873535156,0,0,0,0,0,-68.7548751831055,0,0,0,0,0,-68.9813690185547,0,0,0,0,7.67826080322266,0,0,0,0,8.72963714599609,0,0,0,0,12.5716400146484,0,0,0,0,9.51829528808594,0,0,0,0,23.3145599365234,0,0,10.8716583251953,0,0,22.9640960693359,0,0,10.0690612792969,0,0,0,10.0280151367188,0,0,0,10.115592956543,0,0,0,6.80023956298828,0,0,5.29982757568359,0,0,0,0,0,-87.7853775024414,0,0,10.5896301269531,0,0,7.04592132568359,0,0,0,0,7.71692657470703,0,0,0,0,6.041748046875,0,0,0,0,0,-30.4990615844727,0,0,0,0,0,-22.246337890625,0,0,0,0,0,7.20508575439453,0,0,0,0,8.81163024902344,0,0,0,0,8.38396453857422,0,0,9.80915069580078,0,0,0,0,0,-7.55684661865234,0,0,0,0,0,-17.4467239379883,0,0,0,7.56871795654297,0,0,7.44176483154297,0,0,0,9.89187622070312,0,0,0,8.81959533691406,0,0,0,7.54381561279297,0,0,0,6.96268463134766,0,0,0,7.34696960449219,0,0,0,8.43240356445312,0,0,0,10.6819152832031,0,0,0,6.99898529052734,0,0,0,12.9264755249023,0,0,0,1.55422210693359,0,0,0,0,1.70525360107422,0,0,0,0,0.0002899169921875,0,0,0,0,-41.737907409668,0,0,0,0,-57.9175796508789,0,0,0,0,0,0.401840209960938,0,0,0,0,7.62939453125e-05,0,0,0,0,2.10640716552734,0,0,0,0,0,0,0,0,0,5.38893127441406,0,0,0,0,4.573974609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.3560791015625,0,0,14.6686401367188,0,0,0,0,1.10690307617188,0,0,0.714225769042969,0,0,0,0,5.87400054931641,0,0,0,0,13.0392913818359,0,0,0,0,7.99974822998047,0,0,0,0,7.98651885986328,0,0,0,0,9.43698120117188,0,0,0,0,23.2525405883789,0,0,-73.6620254516602,0,0,0,0,0,24.2335205078125,0,0,15.4279708862305,0,0,0,0,10.71142578125,0,0,0,10.8282165527344,0,0,0,0,10.3496246337891,0,0,0,0,1.02365875244141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-153.366561889648,0,0,0,0,0,-30.4361343383789,0,0,0,0,0,8.34390258789062,0,0,0,0,10.3839111328125,0,0,0,0,10.4377899169922,0,0,0,0,-3.41275024414062,0,0,0,0,0,-15.8463516235352,0,0,0,0,0,15.8110122680664,0,0,0,0,11.54833984375,0,0,0,7.52516937255859,0,0,0,6.960205078125,0,0,0,9.73683166503906,0,0,0,7.50030517578125,0,0,0,-65.6627044677734,0,0,0,7.79098510742188,0,0,0,7.73287963867188,0,0,0,8.27804565429688,0,0,0,7.9906005859375,0,0,0,8.23129272460938,0,0,0,10.1334838867188,0,10.9204559326172,0,0,0,0,7.62939453125e-05,0,0,0,0,1.71392059326172,0,0,0,0,0.303680419921875,0,0,0,0,5.84335327148438,0,0,0,0,0,0,0,0,0,2.08902740478516,0,0,0,0,0,0,0,0,0,4.75753784179688,0,0,0,0,1.70419311523438,0,0,0,0,7.60990905761719,0,0,0,0,10.7964553833008,0,0,0,0,4.04177093505859,0,0,0,0,0,1.78234100341797,0,0,0,0,5.88718414306641,0,0,0,0,12.0326232910156,0,0,0,0,7.99638366699219,0,0,0,0,7.98855590820312,0,0,0,0,9.01850128173828,0,0,0,0,22.7723007202148,0,0,10.2219696044922,0,0,-24.7690200805664,0,0,-144.538925170898,0,0,0,0,0,20.5759735107422,0,0,13.1340179443359,0,0,0,0,10.9269332885742,0,0,0,0,8.86013031005859,0,0,0,7.62141418457031,0,0,0,0,10.1169891357422,0,0,0,0,-48.7212982177734,0,0,0,0,0,11.3758087158203,0,0,0,0,7.06056976318359,0,0,0,0,9.02468109130859,0,0,0,0,-7.57737731933594,0,0,0,0,0,0,-14.6994323730469,0,0,12.96826171875,0,0,0,0,11.5319137573242,0,0,0,6.85950469970703,0,0,0,7.93971252441406,0,0,0,7.24723815917969,0,0,0,13.4714736938477,0,0,0,7.31475067138672,0,0,0,9.83821105957031,0,0,0,-23.8912200927734,0,0,0,0,-57.287467956543,0,0,0,7.08631896972656,0,0,0,6.85004425048828,0,0,0,8.997802734375,0,10.7434921264648,0,0,0,0,1.69593048095703,0,0,0,0,0.0002899169921875,0,0,0,0,6.02553558349609,0,0,0,0,7.62939453125e-05,0,0,0,0,2.04311370849609,0,0,0,0,0,0,0,0,0,5.24785614013672,0,0,0,0,4.60383605957031,0,0,0,0,8.26952362060547,0,0,0,0,9.62641143798828,0,0,0,0,0,1.78234100341797,0,0,0,0,5.92527770996094,0,0,0,0,11.8945083618164,0,0,0,0,7.99958038330078,0,0,0,0,7.99005126953125,0,0,0,0,9.39387512207031,0,0,0,0,23.1696929931641,0,0,10.3898849487305,0,0,-20.0637817382812,0,0,0,-85.6352081298828,0,17.934928894043,0,0,0,10.0101928710938,0,0,0,9.63314819335938,0,0,0,9.00544738769531,0,0,0,0,5.83853912353516,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.32339477539062,0,0,0,0,-50.3918304443359,0,0,0,0,7.45244598388672,0,0,0,0,7.10710144042969,0,0,0,0,9.60752868652344,0,0,0,0,10.6900405883789,0,0,0,0,0,-31.8408966064453,0,0,7.1904296875,0,0,0,0,9.16773986816406,0,0,0,0,0,12.9971466064453,0,0,0,8.30979919433594,0,0,0,0,6.66664886474609,0,0,0,6.37893676757812,0,0,0,6.78602600097656,0,0,0,6.59324645996094,0,0,0,-58.4920196533203,0,0,0,0,2.16188812255859,0,0,0,9.14735412597656,0,0,0,8.87865447998047,0,0,0,6.66117858886719,0,0,0,6.54449462890625,0,0,0,6.23661804199219,0,0,0,12.4406890869141,0,0,0,0,3.99954223632812,0,0,0,0,1.74597930908203,0,0,0,0,0.0003204345703125,0,0,0,0,6.14614868164062,0,0,0,0,7.62939453125e-05,0,0,0,0,2.06124114990234,0,0,0,0,0.00018310546875,0,0,0,0,4.98709106445312,0,0,0,0,0,3.23892974853516,0,0,0,0,6.01564788818359,0,0,0,0,-5.47564697265625,0,0,0,0,0,-77.2718048095703,0,0,0,0,6.03058624267578,0,0,0,0,0,2.13681030273438,0,0,0,0,9.90680694580078,0,0,0,0,7.79489898681641,0,0,0,0,7.99488830566406,0,0,0,0,7.99005126953125,0,0,0,0,8.00131225585938,0,0,0,0,15.6076965332031,0,0,0,24.9578475952148,0,0,3.0517578125e-05,0,0,-46.9841003417969,0,16.2698440551758,0,0,0,9.08525848388672,0,0,0,0,7.90060424804688,0,0,0,0,13.1859512329102,0,0,0,0,-49.2210311889648,0,0,0,0,0,-98.4150466918945,0,0,0,0,6.56341552734375,0,0,0,0,6.26953125,0,0,0,0,9.96267700195312,0,0,0,0,7.36180114746094,0,0,0,0,4.70213317871094,0,0,0,0,0,-31.8684616088867,0,0,0,0,6.8572998046875,0,0,0,0,9.81079864501953,0,0,0,0,9.37620544433594,0,0,0,0,0,8.05429840087891,0,0,0,0.07177734375,0,0,0,0,0,-32.422233581543,0,0,0,7.12059783935547,0,0,0,6.57540893554688,0,0,0,7.23973083496094,0,0,0,12.7362899780273,0,0,0,6.75286865234375,0,0,0,9.21454620361328,0,0,0,6.15750122070312,0,0,0,6.91933441162109,0,0,0,5.88145446777344,0,0,0,7.99425506591797,0,8.87812805175781,0,0,0,0,0,0,0,0,0,1.78192901611328,0,0,0,0,0.48077392578125,0,0,0,0,5.78562164306641,0,0,0,0,0,0,0,0,0,2.08499908447266,0,0,0,0,0,0,0,0,0,4.77451324462891,0,0,0,0,1.24025726318359,0,0,0,0,8.57447052001953,0,0,0,0,14.0611572265625,0,0,0,0,0,0.180160522460938,0,0,0,0,6.45338439941406,0,0,0,0,12.8775329589844,0,0,0,0,-11.2177810668945,0,0,0,0,0,-107.607795715332,0,0,0,0,0,-14.1153106689453,0,0,0,0,7.99416351318359,0,0,0,0,11.1637191772461,0,0,0,0,23.4328460693359,0,0,10.5005416870117,0,0,23.4723434448242,0,0,10.1047744750977,0,0,0,10.0411682128906,0,0,0,8.33695220947266,0,0,0,13.3318862915039,0,0,0,0,7.61894989013672,0,0,0,0,-30.6883544921875,0,0,0,-47.3785018920898,0,0,0,0,9.15200805664062,0,0,0,9.40186309814453,0,0,0,0,7.43527221679688,0,0,0,0,-3.28005981445312,0,0,0,-22.2745208740234,0,0,0,0,6.66380310058594,0,0,0,0,0,9.06899261474609,0,0,0,0,11.8526306152344,0,0,0,7.784423828125,0,0,0,0,9.59626770019531,0,0,0,9.92172241210938,0,0,0,-1.12796020507812,0,0,0,0,-52.5335693359375,0,0,0,8.92327117919922,0,0,0,9.44846343994141,0,0,0,8.50118255615234,0,0,0,8.19147491455078,0,0,0,6.97518920898438,0,0,0,7.62497711181641,0,0,0,0,11.0654067993164,0,0,0,0,1.78125762939453,0,0,0,0,0,0,0,0,0,6.21907806396484,0,0,0,0,0,0,0,0,0,2.06597137451172,0,0,0,0,0.00018310546875,0,0,0,0,4.99595642089844,0,0,0,0,0,3.68727111816406,0,0,0,4.81427001953125,0,0,0,0,-79.7622299194336,0,0,0,0,-47.6828460693359,0,0,0,0,0.705894470214844,0,0,0,0,12.289306640625,0,0,0,0,0,0,0,0,1.78234100341797,0,0,0,0,7.20758056640625,0,0,0,0,10.7526321411133,0,0,0,0,8.00331878662109,0,0,0,0,7.99100494384766,0,0,0,0,7.99628448486328,0,0,0,0,7.61687469482422,0,0,22.7753601074219,0,0,10.7168960571289,0,0,15.7824859619141,0,10.4099502563477,0,0,-85.5302352905273,0,0,8.18790435791016,0,0,10.5787048339844,0,0,0,10.5215148925781,0,0,0,0,5.83611297607422,0,0,0,0,5.99272918701172,0,0,0,0,4.575927734375,0,0,0,0,0,-41.8800811767578,0,0,0,0,6.31849670410156,0,0,0,0,0,6.72509002685547,0,0,0,0,8.93157958984375,0,0,9.59778594970703,0,0,0,0,0,0,-34.7833786010742,0,0,0,0,0,6.18002319335938,0,0,0,10.4190368652344,0,0,10.6948471069336,0,0,0,8.3221435546875,0,0,0,8.80236053466797,0,0,0,7.77311706542969,0,0,0,8.26760101318359,0,0,0,10.7671432495117,0,0,0,9.97583770751953,0,0,0,-17.8130874633789,0,0,0,0,-63.7225341796875,0,0,0,0,4.19144439697266,0,0,0,7.93093109130859,0,0,0,6.30033874511719,0,0,0,8.74162292480469,0,9.87632751464844,0,0,0,0,7.62939453125e-05,0,0,0,0,1.80400848388672,0,0,0,0,0.0003204345703125,0,0,0,0,6.31781005859375,0,0,0,0,7.62939453125e-05,0,0,0,0,2.08992767333984,0,0,0,0,0.596176147460938,0,0,0,0,4.98436737060547,0,0,0,0,6.68412017822266,0,0,0,0,9.89978790283203,0,0,0,0,5.51720428466797,0,0,0,0,0,0.180160522460938,0,0,0,0,6.48186492919922,0,0,0,0,-6.58544158935547,0,0,0,0,0,-65.4776382446289,0,0,0,0,7.99638366699219,0,0,0,0,9.51686096191406,0,0,0,0,7.99345397949219,0,0,0,0,29.4343795776367,0,0,10.8305740356445,0,0,4.77548980712891,0,0,-65.1865615844727,0,0,23.0404968261719,0,0,13.0796585083008,0,0,9.94387817382812,0,0,0,0,9.83629608154297,0,0,0,0,8.02061462402344,0,0,0,0,0,8.23859405517578,0,0,0,0,0.8350830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-112.519729614258,0,0,0,0,0,-67.6676254272461,0,0,0,0,8.47852325439453,0,0,0,0,0,7.20016479492188,0,0,0,0,7.35204315185547,0,0,0,0,10.2736663818359,0,0,0,-31.9971160888672,0,0,0,0,6.30570220947266,0,0,0,10.1489105224609,0,0,0,0,11.1264495849609,0,0,0,9.47810363769531,0,0,0,8.83927917480469,0,0,0,8.34749603271484,0,0,0,7.98459625244141,0,0,0,7.21044921875,0,0,0,7.21971130371094,0,0,0,2.42942047119141,0,0,0,0,0,0,0,0,0,-43.8439712524414,0,0,0,0,-45.938362121582,0,0,0,0,0,0,0,0,0,3.80101013183594,0,0,0,9.63047790527344,0,0,0,9.30150604248047,0,0,0,8.72384643554688,0,0,0,7.93885803222656,0,9.08348846435547,0,0,0,0,0,0,0,0,0,1.85271453857422,0,0,0,0,2.32423400878906,0,0,0,0,4.08423614501953,0,0,0,0,1.69505310058594,0,0,0,0,0,0.398811340332031,0,0,0,0,5.08791351318359,0,0,0,0,0,4.29180145263672,0,0,0,0,5.29026031494141,0,0,8.68759918212891,0,0,0.180160522460938,0,0,0,0,6.42457580566406,0,0,0,0,13.0569534301758,0,0,0,0,7.99675750732422,0,0,0,0,7.99378967285156,0,0,0,0,7.99740600585938,0,0,0,0,8.11330413818359,0,0,21.8418426513672,0,0,10.5939254760742,0,0,23.6517868041992,0,0,-47.8227920532227,0,0,0,-95.6529922485352,0,0,0,0,10.6192398071289,0,0,0,10.4144058227539,0,0,8.05197906494141,0,0,0,0,7.68017578125,0,0,0,0,6.59527587890625,0,0,0,0,-29.4502182006836,0,0,0,0,0,-9.79883575439453,0,0,0,0,6.76174926757812,0,0,0,0,8.66472625732422,0,0,0,0,-2.44041442871094,0,0,0,0,0,-16.1416702270508,0,0,0,11.3169631958008,0,0,0,0,10.7797088623047,0,0,0,8.39057159423828,0,0,0,8.83925628662109,0,0,0,8.26459503173828,0,0,0,8.18254089355469,0,0,0,8.05152893066406,0,0,0,7.12643432617188,0,0,0,7.90396118164062,0,0,0,-14.4700317382812,0,0,0,0,-68.7967300415039,0,0,0,9.29685211181641,0,0,0,8.57862091064453,0,0,0,10.0198059082031,0,0,8.01500701904297,0,0,0,0,7.62939453125e-05,0,0,0,0,1.82933807373047,0,0,0,0,6.27703094482422,0,0,0,0,7.62939453125e-05,0,0,0,0,2.04903411865234,0,0,0,0,0.00018310546875,0,0,0,0,5.29232788085938,0,0,0,0,4.84410858154297,0,0,0,0,7.99636077880859,0,0,0,0,4.78553771972656,0,0,0.180160522460938,0,0,0,0,6.45408630371094,0,0,0,0,12.838020324707,0,0,0,0,7.99920654296875,0,0,0,0,7.99491119384766,0,0,0,0,7.99458312988281,0,0,0,0,9.87875366210938,0,0,7.60287475585938,0,0,0,-100.564743041992,0,0,19.0685195922852,0,0,14.7021179199219,0,0,0,9.87675476074219,0,0,0,8.55126190185547,0,0,0,7.42671966552734,0,0,0,0,9.14714813232422,0,0,0,0,0,7.93491363525391,0,0,0,0,-47.5241546630859,0,0,0,0,9.77159118652344,0,0,6.31361389160156,0,0,6.37734985351562,0,0,0,0,6.73236083984375,0,0,0,0,0,-31.2191925048828,0,0,0,0,0,7.35443115234375,0,0,8.83975982666016,0,0,0,0,6.74210357666016,0,0,11.5773086547852,0,0,0,8.91063690185547,0,0,0,6.91343688964844,0,0,0,10.0088577270508,0,0,0,-17.0068435668945,0,0,0,0,-42.9327545166016,0,0,0,9.61464691162109,0,0,0,8.58152008056641,0,0,0,9.82868194580078,0,0,0,10.8059387207031,0,0,0,9.78335571289062,0,0,0,14.9087829589844,0,0,0,0,0,0.499671936035156,0,0,0,0,1.83234405517578,0,0,0,0,0.499649047851562,0,0,0,0,5.76274871826172,0,0,0,0,7.62939453125e-05,0,0,0,0,2.03780364990234,0,0,0,0,0.384498596191406,0,0,0,0,4.31235504150391,0,0,0,0,3.09844970703125,0,0,0,0,6.58405303955078,0,0,0,0,-50.7267608642578,0,0,0,0,0,-29.3630065917969,0,0,0,0,0,1.78234100341797,0,0,0,0,5.76315307617188,0,0,0,0,11.8628387451172,0,0,0,0,8.00423431396484,0,0,0,0,7.99848175048828,0,0,0,0,7.99757385253906,0,0,0,0,10.0432434082031,0,0,21.9409332275391,0,0,-79.271598815918,0,0,0,-44.3819122314453,0,0,4.08731842041016,0,0,0,0,0,0,25.13525390625,0,0,12.2400512695312,0,0,0,0,8.63179779052734,0,0,0,0,12.7806854248047,0,0,0,0,9.28925323486328,0,0,0,0,7.63761901855469,0,0,0,0,0,0,-47.5698852539062,0,0,8.36346435546875,0,0,0,0,0,6.43851470947266,0,0,0,0,7.05326080322266,0,0,0,0,-2.03813171386719,0,0,0,-18.5178604125977,0,0,0,9.64009857177734,0,0,10.8663940429688,0,0,0,8.47967529296875,0,0,0,0,8.93681335449219,0,0,0,9.12450408935547,0,0,0,11.3880615234375,0,0,0,7.19463348388672,0,0,0,8.24003601074219,0,0,0,6.66204833984375,0,0,0,-48.3158721923828,0,0,0,0,-35.288200378418,0,0,0,13.165657043457,0,0,0,7.0665283203125,0,0,0,15.1149444580078,0,0,0,0,0,0.354103088378906,0,0,0,0,7.62939453125e-05,0,0,0,0,1.91564178466797,0,0,0,0,0.53094482421875,0,0,0,0,5.98098754882812,0,0,0,0,0,0,0,0,0,2.08139801025391,0,0,0,0,0,0,0,0,0,1.77877044677734,0,0,4.30766296386719,0,0,0,0,6.36104583740234,0,0,0,0,8.67673492431641,0,0,0,0,6.43360137939453,0,0,0,0,0,1.78234100341797,0,0,0,0,5.94442749023438,0,0,0,0,12.0219802856445,0,0,0,0,-1.96318054199219,0,0,0,0,0,-81.9142303466797,0,0,0,0,7.99586486816406,0,0,0,0,7.99832153320312,0,0,0,0,30.5602798461914,0,0,10.7618179321289,0,0,4.00850677490234,0,0,0,0,0,0,19.9669570922852,0,0,-29.9620742797852,0,0,0,-68.8849792480469,0,0,0,0,0,0,0,13.997200012207,0,0,0,9.46927642822266,0,0,7.0361328125,0,0,0,0,7.53323364257812,0,0,0,0,7.03998565673828,0,0,0,-39.3136367797852,0,0,7.72431945800781,0,0,0,0,11.4027099609375,0,0,0,0,8.2017822265625,0,0,0,0,-5.56155395507812,0,0,0,0,0,0,-18.3042526245117,0,0,0,12.4180145263672,0,0,0,0,11.4389953613281,0,0,0,7.67839813232422,0,0,0,8.19973754882812,0,0,0,8.51853942871094,0,0,0,11.7844848632812,0,0,0,7.16014862060547,0,0,0,10.8245391845703,0,0,0,-2.42087554931641,0,0,0,0,-74.3001327514648,0,0,0,0,-2.55249786376953,0,0,0,7.78736877441406,0,0,0,8.19288635253906,0,0,0,12.7750701904297,0,0,0,0,3.74617004394531,0,0,0,0,1.85419464111328,0,0,0,0,0.0003204345703125,0,0,0,0,6.32451629638672,0,0,0,0,0,0,0,0,0,2.03954315185547,0,0,0,0,0,0,0,0,0,0.384857177734375,0,0,0,0,4.98904418945312,0,0,0,0,4.01637268066406,0,0,0,0,5.16666412353516,0,0,0,0,10.2286605834961,0,0,1.11088562011719,0,0,0.180160522460938,0,0,0,0,6.47200012207031,0,0,0,0,8.22570037841797,0,0,7.91937255859375,0,0,0,0,7.99526214599609,0,0,0,0,-89.3716888427734,0,0,0,0,7.99703216552734,0,0,0,0,29.8612442016602,0,0,10.5718460083008,0,0,23.6137542724609,0,0,10.1589889526367,0,0,0,6.29603576660156,0,0,0,0,0,-30.0207443237305,0,0,13.4908294677734,0,0,0,0,9.17402648925781,0,0,6.49729156494141,0,0,-56.9189834594727,0,0,0,-11.4724426269531,0,0,0,0,10.7341232299805,0,0,0,0,6.86954498291016,0,0,0,0,7.91038513183594,0,0,0,0,5.78456115722656,0,0,0,0,0,0,0,0,0,0,0,-48.6247177124023,0,0,0,-97.2407302856445,0,0,0,2.71847534179688,0,0,0,0,10.8620452880859,0,0,0,0,8.60263061523438,0,0,0,10.8535919189453,0,0,0,0,0,6.99039459228516,0,0,0,6.89035034179688,0,0,0,6.58104705810547,0,0,0,8.74760437011719,0,0,0,7.83421325683594,0,0,0,8.27333068847656,0,0,0,6.92868804931641,0,0,0,7.9957275390625,0,0,0,6.54670715332031,0,0,0,-16.0881500244141,0,0,0,0,-57.5432739257812,0,0,0,0,-19.9204177856445,0,0,0,10.4359588623047,0,7.56049346923828,0,0,0,0,7.62939453125e-05,0,0,0,0,1.83605194091797,0,0,0,0,6.22000122070312,0,0,0,0,7.62939453125e-05,0,0,0,0,2.00339508056641,0,0,0,0,0,0,0,0,0,5.17822265625,0,0,0,0,2.65785980224609,0,0,0,0,6.60117340087891,0,0,0,0,12.1460800170898,0,0,0,0,0,1.78234100341797,0,0,0,0,4.87117767333984,0,0,0,0,12.7853927612305,0,0,0,0,7.99675750732422,0,0,0,0,7.99453735351562,0,0,0,0,7.99927520751953,0,0,0,0,8.38094329833984,0,0,32.5443572998047,0,0,3.0517578125e-05,0,0,23.7110061645508,0,0,10.2008819580078,0,0,0,-28.2901992797852,0,0,0,0,0,-104.269485473633,0,0,0,0,10.3229827880859,0,0,0,0,6.93073272705078,0,0,0,0,0,9.57331848144531,0,0,0,0,6.46365356445312,0,0,0,0,0,-39.8424987792969,0,0,0,0,10.761100769043,0,0,0,0,6.83766937255859,0,0,0,0,12.7374725341797,0,0,0,0,-22.3356323242188,0,0,0,0,0,0,-3.65758514404297,0,0,0,0,14.0587005615234,0,0,11.1599349975586,0,0,0,7.64058685302734,0,0,0,6.60938262939453,0,0,0,7.03343963623047,0,0,0,6.82826232910156,0,0,0,13.1897125244141,0,0,0,7.03949737548828,0,0,0,-0.944587707519531,0,0,0,0,-70.5619812011719,0,0,0,0,2.14913177490234,0,0,0,6.51720428466797,0,0,0,7.82562255859375,0,0,0,9.29578399658203,0,0,0,0,11.4128875732422,0,0,0,0,7.62939453125e-05,0,0,0,0,1.85301971435547,0,0,0,0,0.0002899169921875,0,0,0,0,6.25273132324219,0,0,0,0,0,0,0,0,0,2.00432586669922,0,0,0,0,0.0002899169921875,0,0,0,0,4.9373779296875,0,0,0,2.91159057617188,0,0,0,0,6.51602172851562,0,0,0,0,15.4222640991211,0,0,0,0,0.609237670898438,0,0,0.180160522460938,0,0,0,0,6.49966430664062,0,0,0,0,9.90933227539062,0,0,0,0,6.4742431640625,0,0,0,0,7.99784088134766,0,0,0,9.52446746826172,0,0,0,0,10.2740325927734,0,0,0,0,-7.06594848632812,0,0,0,0,-96.9468765258789,0,0,11.0915985107422,0,0,4.11730194091797,0,0,0,0,0,0,21.4311676025391,0,0,17.8703308105469,0,0,9.08928680419922,0,0,0,9.81584930419922,0,0,0,0,7.57727813720703,0,0,6.39933013916016,0,0,0,0,0,-53.3484420776367,0,0,8.32431793212891,0,0,0,0,7.05077362060547,0,0,0,0,6.71274566650391,0,0,0,0,8.93169403076172,0,0,0,0,-13.2807693481445,0,0,0,-45.9779052734375,0,0,0,3.3944091796875,0,0,0,0,11.8582458496094,0,0,0,0,9.34705352783203,0,0,0,0,5.7581787109375,0,0,0,11.161491394043,0,0,0,6.87755584716797,0,0,0,0.407485961914062,0,0,0,0,-41.9409103393555,0,0,0,7.41126251220703,0,0,0,6.68682861328125,0,0,0,7.78285217285156,0,0,0,6.9798583984375,0,0,0,7.84316253662109,0,0,0,6.80480194091797,0,0,0,7.63336944580078,0,0,0,8.86879730224609,0,0,0,8.69682312011719,0,0,0,0,0,11.9807357788086,0,0,0,0,7.62939453125e-05,0,0,0,0,1.90404510498047,0,0,0,0,0,0,0,0,0,6.48899841308594,0,0,0,0,7.62939453125e-05,0,0,0,0,2.07057952880859,0,0,0,0,0.78521728515625,0,0,0,4.23344421386719,0,0,0,0,2.90512084960938,0,0,0,0,-52.4420623779297,0,0,0,0,0,-47.5789489746094,0,0,0,0,8.33638763427734,0,0,0,0,9.31313323974609,0,0,0,0,0,1.78234100341797,0,0,0,0,8.24705505371094,0,0,0,0,9.72502899169922,0,0,0,0,7.99638366699219,0,0,0,0,7.9930419921875,0,0,0,0,8.00168609619141,0,0,0,0,16.0749053955078,0,0,0,-43.3759078979492,0,0,0,-4.89675140380859,0,0,23.5635223388672,0,0,19.3085098266602,0,0,0,0,8.17629241943359,0,0,0,13.0883178710938,0,0,0,0,6.87934112548828,0,0,0,0,2.38780975341797,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-127.955223083496,0,0,0,0,0,-52.2103118896484,0,0,0,0,11.0181503295898,0,0,0,0,9.44105529785156,0,0,0,0,0,6.87692260742188,0,0,0,0,4.89560699462891,0,0,0,0,0,-26.0309677124023,0,0,0,0,4.89182281494141,0,0,0,19.0925674438477,0,0,0,8.38624572753906,0,0,0,0,8.11780548095703,0,0,0,9.19235229492188,0,0,0,9.34217834472656,0,0,0,-41.4965057373047,0,0,0,0,-18.1504211425781,0,0,0,6.9410400390625,0,0,0,9.95603942871094,0,0,0,7.79183959960938,0,0,0,7.24851226806641,0,0,0,7.54850006103516,0,0,0,7.90969085693359,0,0,0,0,0,11.6565246582031,0,0,0,0,7.62939453125e-05,0,0,0,0,1.83946990966797,0,0,0,0,0.0002899169921875,0,0,0,0,6.32016754150391,0,0,0,0,7.62939453125e-05,0,0,0,0,2.05001068115234,0,0,0,0,0,0,0,0,0,4.22916412353516,0,0,0,1.18882751464844,0,0,0,0,8.95996856689453,0,0,0,0,10.4504470825195,0,0.425163269042969,0,0,1.78234100341797,0,0,0,0,5.94117736816406,0,0,0,0,11.843505859375,0,0,0,0,7.99509429931641,0,0,0,0,8.00408935546875,0,0,0,0,7.99757385253906,0,0,0,0,8.90590667724609,0,0,22.3530120849609,0,0,-48.0000839233398,0,0,0,-96.5521087646484,0,0,0.43585205078125,0,0,23.7870635986328,0,0,14.5704193115234,0,0,0,0,8.3214111328125,0,0,0,11.1008148193359,0,0,0,0,11.050048828125,0,0,0,0,6.79848480224609,0,0,-43.6932678222656,0,0,0,0,0,-1.55599975585938,0,0,0,0,7.03607940673828,0,0,0,0,11.9365997314453,0,0,0,0,7.25153350830078,0,0,0,0,-26.5676727294922,0,0,0,0,0,3.89083099365234,0,0,0,0,10.5216293334961,0,0,0,0,12.3214569091797,0,0,0,10.4225158691406,0,0,0,9.10542297363281,0,0,0,7.38046264648438,0,0,0,8.42768859863281,0,0,0,-57.6667709350586,0,0,0,0,-0.582260131835938,0,0,0,8.3985595703125,0,0,0,7.65522003173828,0,0,0,7.84394836425781,0,0,0,9.181640625,0,0,0,9.70333099365234,0,0,0,12.8427658081055,0,0,0,4.24330902099609,0,0,0,0,1.86394500732422,0,0,0,0,0.511497497558594,0,0,0,0,5.88938140869141,0,0,0,0,0,0,0,0,0,1.67682647705078,0,0,0,0,0,0.392929077148438,0,0,0,0,0.0002899169921875,0,0,0,0,4.96963500976562,0,0,0,0,1.91570281982422,0,0,0,0,8.23785400390625,0,0,0,0,13.9197387695312,0,0,1.11210632324219,0,0,0.177574157714844,0,0,6.43341064453125,0,0,0,0,6.34901428222656,0,0,0,0,-42.1902770996094,0,0,0,-70.4226531982422,0,0,0,0,9.51849365234375,0,0,0,0,7.99543762207031,0,0,0,0,8.00131225585938,0,0,0,0,29.4089126586914,0,0,10.8616638183594,0,0,15.9651412963867,0,10.525764465332,0,0,14.0484771728516,0,0,0,0,8.24916839599609,0,0,0,0,0,-59.2351989746094,0,0,6.78874969482422,0,0,7.17816162109375,0,0,0,0,10.9692230224609,0,0,0,0,5.61560821533203,0,0,0,0,0,-96.4558563232422,0,0,0,0,0,-25.5381851196289,0,0,0,0,0,6.65158081054688,0,0,6.43610382080078,0,0,0,0,10.085090637207,0,0,0,7.13648986816406,0,0,0,0,0,6.26952362060547,0,0,0,-23.5134353637695,0,0,0,0,10.4100494384766,0,0,0,9.77165985107422,0,0,0,0,6.57804107666016,0,0,0,7.53106689453125,0,0,0,7.03208923339844,0,0,0,7.94470977783203,0,0,0,6.6502685546875,0,0,0,6.90243530273438,0,0,0,8.16374206542969,0,0,0,7.02649688720703,0,0,0,8.12419128417969,0,0,0,9.24835205078125,0,0,0,7.73735809326172,0,0,0,0,11.7250061035156,0,0,0,0,0,0,0,0,0,1.84050750732422,0,0,0,0,5.97235870361328,0,0,0,0,0,0.392997741699219,0,0,0,0,2.07129669189453,0,0,0,0,0,0,0,0,0,4.97677612304688,0,0,0,0,2.40109252929688,0,0,0,0,-8.15402984619141,0,0,0,0,-63.84033203125,0,0,0,0,-67.4663696289062,0,0,0,0,13.8596954345703,0,0,0,0,0,0.180160522460938,0,0,0,0,6.49140930175781,0,0,0,0,12.721923828125,0,0,0,0,8.00481414794922,0,0,0,0,7.99341583251953,0,0,0,0,7.99740600585938,0,0,0,0,6.93218994140625,0,0,0,0,24.1673583984375,0,0,10.8154144287109,0,0,15.8981781005859,0,9.09727478027344,0,0,17.2158355712891,0,0,0,0,-87.1695785522461,0,0,0,0,-11.5245666503906,0,0,8.80875396728516,0,0,0,0,7.62382507324219,0,0,0,0,0,6.76177215576172,0,0,6.68098449707031,0,0,0,0,-36.3987808227539,0,0,0,0,6.63446044921875,0,0,0,0,7.20751190185547,0,0,0,0,7.67037963867188,0,0,0,0,6.75199127197266,0,0,0,0,-6.79639434814453,0,0,0,-20.5050430297852,0,0,0,0,10.6682205200195,0,0,0,0,11.3289794921875,0,0,0,9.64649200439453,0,0,0,7.45575714111328,0,0,0,7.09465789794922,0,0,0,7.76600646972656,0,0,0,7.67867279052734,0,0,0,7.62041473388672,0,0,0,10.6588897705078,0,0,0,7.22405242919922,0,0,0,7.15510559082031,0,0,0,7.02101898193359,0,0,0,0,-73.0417251586914,0,0,0,0,-32.8010940551758,0,0,0,7.72827911376953,0,11.3712615966797,0,0,0,0,0,0,0,0,0,1.83625030517578,0,0,0,0,0,0,0,0,0,4.00704193115234,0,0,0,0,2.32659149169922,0,0,0,0,0,0,0,0,0,2.05767059326172,0,0,0,0,0,0,0,0,0,4.95527648925781,0,0,0,0,1.938232421875,0,0,0,0,8.17737579345703,0,0,0,0,14.5519714355469,0,0,0,0,3.43552398681641,0,0,0,0,0,6.62632751464844,0,0,0,0,5.38639831542969,0,0,0,0,9.07453155517578,0,0,0,0,8.04988861083984,0,0,0,0,9.55348205566406,0,0,0,0,6.48101043701172,0,0,0,0,0,-85.4389419555664,0,0,0,26.6803665161133,0,0,0,0,0,25.116325378418,0,0,10.7641906738281,0,0,0,8.21135711669922,0,0,0,0,8.87477111816406,0,0,0,0,9.95268249511719,0,0,0,0,0,-40.1492691040039,0,0,0,5.80176544189453,0,0,0,0,5.6376953125,0,0,0,0,5.81644439697266,0,0,0,0,9.83291625976562,0,0,0,0,-38.1440734863281,0,0,0,0,0,0,-27.3730697631836,0,0,0,0,0,0,4.4229736328125,0,0,0,0,6.17159271240234,0,0,0,0,9.07118988037109,0,0,0,0,7.22605133056641,0,0,0,10.7897567749023,0,0,0,0,9.04999542236328,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-33.7466506958008,0,0,0,0,0,0,-111.34578704834,0,0,0,0,0,0,-11.3604202270508,0,0,0,9.50724792480469,0,0,0,9.23403167724609,0,0,0,7.32984161376953,0,0,0,9.96347808837891,0,0,0,8.98957061767578,0,0,0,8.72956848144531,0,0,0,6.99787902832031,0,0,0,8.43515014648438,0,0,0,12.6167984008789,0,0,0,7.03440093994141,0,0,0,15.7808456420898,0,0,0,0,0,0.3486328125,0,0,0,0,7.62939453125e-05,0,0,0,0,1.89377593994141,0,0,0,0,1.91600036621094,0,0,4.71846771240234,0,0,0,0,7.62939453125e-05,0,0,0,0,2.15445709228516,0,0,0,0,0,0,0,0,0,5.20197296142578,0,0,0,0,0.784034729003906,0,0,0,0,9.18690490722656,0,0,0,8.49947357177734,0,0,0,0,8.90385437011719,0,0,0,0,0,0.180160522460938,0,0,0,0,6.49495697021484,0,0,0,0,12.8028106689453,0,0,0,0,3.41857147216797,0,0,0,0,9.52864074707031,0,0,0,0,7.99703216552734,0,0,0,0,-61.0855407714844,0,0,0,0,0,-111.452682495117,0,0,0,0,31.4392166137695,0,0,10.9184112548828,0,0,16.0341720581055,0,15.2506713867188,0,0,0,13.483757019043,0,0,0,0,9.98545837402344,0,0,0,10.3295364379883,0,0,0,0,7.74874877929688,0,0,0,0,6.69562530517578,0,0,0,0,-63.4022903442383,0,0,0,0,10.090087890625,0,0,0,0,8.73081207275391,0,0,0,0,9.27449798583984,0,0,0,0,-27.7367858886719,0,0,0,0,0,0.936164855957031,0,0,0,0,13.8342208862305,0,0,0,0,11.4853134155273,0,0,0,7.51194763183594,0,0,0,8.48146057128906,0,0,0,7.28164672851562,0,0,0,10.3740463256836,0,0,0,7.39777374267578,0,0,0,7.75840759277344,0,0,0,7.30619812011719,0,0,0,-40.4311981201172,0,0,0,0,-43.0476455688477,0,0,0,9.41797637939453,0,0,0,9.09869384765625,0,0,0,9.11518859863281,0,10.036376953125,0,0,0,0,7.62939453125e-05,0,0,0,0,1.83110809326172,0,0,0,0,1.83019256591797,0,0,0,0,4.55279541015625,0,0,0,0,1.68964385986328,0,0,0,0,0,0.397003173828125,0,0,0,0,5.34241485595703,0,0,0,0,0,3.06125640869141,0,0,0,0,6.81801605224609,0,0,0,0,14.218620300293,0,0,0,0,7.67434692382812,0,0,0,0,0,6.63236999511719,0,0,0,0,6.33880615234375,0,0,0,0,6.49141693115234,0,0,0,0,8.03975677490234,0,0,0,0,-101.129943847656,0,0,0,0,7.99794769287109,0,0,0,0,10.0659561157227,0,0,0,30.9916610717773,0,0,3.0517578125e-05,0,0,23.7701644897461,0,0,10.2249450683594,0,0,0,9.05357360839844,0,0,0,0,0,9.43206787109375,0,0,0,-47.0718612670898,0,0,0,0,10.7953033447266,0,0,10.0557861328125,0,0,0,0,8.57158660888672,0,0,0,0,0,0,-121.442420959473,0,0,0,0,0,0,-10.1365127563477,0,0,0,0,0,0,9.89659118652344,0,0,0,0,6.67848205566406,0,0,0,0,6.91856384277344,0,0,0,0,8.78224182128906,0,0,0,0,-1.12834167480469,0,0,0,0,0,-18.1280670166016,0,0,0,8.77215576171875,0,0,0,0,7.98615264892578,0,0,0,7.42906188964844,0,0,0,8.23538208007812,0,0,0,8.61941528320312,0,0,0,7.32719421386719,0,0,0,8.024658203125,0,0,0,6.94309997558594,0,0,0,7.65705871582031,0,0,0,9.04429626464844,0,0,0,6.59334564208984,0,0,0,8.37315368652344,0,0,0,0,12.0837173461914,0,0,0,0,0,0.323410034179688,0,0,0,0,0.484603881835938,0,0,0,1.30835723876953,0,0,0,0,0.484878540039062,0,0,0,0,5.76421356201172,0,0,0,0,0.389289855957031,0,0,0,0,1.66842651367188,0,0,0,0,0.00018310546875,0,0,0,0,4.91754913330078,0,0,0,0,0.756675720214844,0,0,0,0,9.23284149169922,0,0,0,0,-30.2455749511719,0,0,0,0,0,-61.6411209106445,0,0,0,0,0,-40.8386993408203,0,0,0,0,1.79832458496094,0,0,0,0,0,2.58235168457031,0,0,0,0,9.42971038818359,0,0,0,0,7.68233489990234,0,0,0,0,8.00556182861328,0,0,0,0,8.00238800048828,0,0,0,0,7.99703216552734,0,0,0,0,19.1429824829102,0,0,0,25.6254730224609,0,0,0,0,0,18.7915267944336,0,15.2629013061523,0,0,0,10.136474609375,0,0,0,0,-82.612663269043,0,0,0,0,-12.8441925048828,0,0,9.44060516357422,0,0,0,0,7.15118408203125,0,0,0,0,7.11441040039062,0,0,0,0,6.77158355712891,0,0,0,0,0,-36.005744934082,0,0,0,0,10.1807022094727,0,0,0,0,9.27939605712891,0,0,0,0,7.15118408203125,0,0,0,0,-8.49517059326172,0,0,0,0,0,0,-17.2592086791992,0,0,0,8.98668670654297,0,0,0,0,12.0391845703125,0,0,0,7.79064178466797,0,0,0,0,10.6913604736328,0,0,0,6.73152923583984,0,0,0,7.70976257324219,0,0,0,7.22024536132812,0,0,0,6.69966125488281,0,0,0,9.42294311523438,0,0,0,9.97161102294922,0,0,0,6.69577026367188,0,0,0,0.886314392089844,0,0,0,0,-93.0474319458008,0,0,0,0,4.43772888183594,0,0,0,8.39007568359375,0,11.885612487793,0,0,0,0,0,0,0,0,0,1.87682342529297,0,0,0,0,0,0,0,0,0,6.65435028076172,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,2.17758941650391,0,0,0,0,0,0,0,0,0,3.28423309326172,0,0,0,2.28493499755859,0,0,0,0,0,2.64678192138672,0,0,0,0,7.63822174072266,0,0,0,0,14.590217590332,0,0,0,0,0.426506042480469,0,0,1.78234100341797,0,0,0,0,4.91758728027344,0,0,0,0,13.2029724121094,0,0,0,0,7.99713134765625,0,0,0,0,4.94576263427734,0,0,0,0,-0.396942138671875,0,0,0,0,0,-83.6695022583008,0,0,0,0,30.942626953125,0,0,10.8886566162109,0,0,3.68103790283203,0,14.3211822509766,0,0,14.6232376098633,0,0,0,12.147834777832,0,0,0,-28.7644119262695,0,0,0,7.80436706542969,0,0,0,0,7.55039978027344,0,0,0,0,12.2990570068359,0,0,0,0,1.53960418701172,0,0,0,0,0,-106.315650939941,0,0,0,0,8.12100219726562,0,0,0,0,9.08831024169922,0,0,0,0,6.87444305419922,0,0,-4.23112487792969,0,0,0,0,0,0,-17.1985321044922,0,0,0,0,8.83116149902344,0,0,0,0,0,10.3869857788086,0,0,0,9.59465789794922,0,0,0,0,10.9726104736328,0,0,0,6.88834381103516,0,0,0,9.59684753417969,0,0,0,8.42151641845703,0,0,0,8.70272827148438,0,0,0,9.30023193359375,0,0,0,7.43354034423828,0,0,0,0,-72.8922424316406,0,0,0,0,-17.029899597168,0,0,0,10.3057556152344,0,0,0,6.16020202636719,0,0,0,14.7033386230469,0,0,0,0,0,0.489143371582031,0,0,0,0,0.814735412597656,0,0,0.989532470703125,0,0,0,0,1.30410003662109,0,0,5.03898620605469,0,0,0,0,7.62939453125e-05,0,0,0,0,2.08792877197266,0,0,0,0,0.397018432617188,0,0,0,0,4.62717437744141,0,0,0,0,1.50121307373047,0,0,0,0,8.33356475830078,0,0,0,0,7.97904205322266,0,0,0,0,3.05879974365234,0,0,0,0,0,6.69950866699219,0,0,0,0,5.39093780517578,0,0,0,0,7.70404815673828,0,0,0,0,4.94557189941406,0,0,0,0,4.56814575195312,0,0,0,0,6.51945495605469,0,0,0,0,0,-89.6321029663086,0,0,0,0,17.0229568481445,0,0,23.9722366333008,0,0,17.7274322509766,0,0,14.8682250976562,0,0,0,11.6264877319336,0,0,0,-36.9532318115234,0,0,0,0,11.6934356689453,0,0,0,0,9.58307647705078,0,0,0,0,0,6.66867828369141,0,0,6.59770202636719,0,0,0.756752014160156,0,0,0,0,0,0,0,0,0,0,0,-113.133346557617,0,0,0,-65.7532958984375,0,0,0,4.40342712402344,0,0,0,0,7.38380432128906,0,0,0,0,10.6019134521484,0,0,0,0,9.12262725830078,0,0,0,0,5.07197570800781,0,0,0,0,0,-22.5835952758789,0,0,11.0355453491211,0,0,0,7.74974822998047,0,0,0,0,7.58988189697266,0,0,0,8.60984039306641,0,0,0,6.60593414306641,0,0,0,7.67571258544922,0,0,0,7.438232421875,0,0,0,8.83952331542969,0,0,0,10.3508834838867,0,0,0,8.17874908447266,0,0,0,9.69821929931641,0,0,0,7.35744476318359,0,0,0,14.2802734375,0,0,0.976341247558594,0,0,0,0,1.76984405517578,0,0,0,0,0.476211547851562,0,0,0,0,5.77523040771484,0,0,0,0,0,0,0,0,0,2.07750701904297,0,0,0,0,0.0001678466796875,0,0,0,0,4.95975494384766,0,0,0,0,2.38927459716797,0,0,0,0,3.26770782470703,0,5.31304931640625,0,0,0,0,-19.0127563476562,0,0,0,0,-39.5360870361328,0,0,0,0,-26.9774627685547,0,0,0,0,-66.4152679443359,0,0,0,0,5.45189666748047,0,0,0,0,0,1.78234100341797,0,0,0,0,10.2862930297852,0,0,0,0,7.66529846191406,0,0,0,0,7.99883270263672,0,0,0,0,8.00334167480469,0,0,0,0,8.00189208984375,0,0,0,0,11.4751892089844,0,0,33.2470397949219,0,0,0,0,0,18.7900619506836,0,15.7462158203125,0,0,0,6.57035827636719,0,0,0,0,4.24907684326172,0,0,6.42250823974609,0,0,0,0,6.43497467041016,0,0,0,4.39354705810547,0,0,3.73728942871094,0,0,0,0,5.00821685791016,0,0,0,0,5.46630859375,0,0,0,0,-39.9165725708008,0,0,0,0,0,-93.3892593383789,0,0,0,0,5.94142150878906,0,0,0,0,7.23933410644531,0,0,0,0,6.31852722167969,0,0,0,0,6.43116760253906,0,0,0,0,6.64421081542969,0,0,0,0,0,-29.8097534179688,0,0,0,0,0,0,1.90914916992188,0,0,0,0,6.17156982421875,0,0,0,0,13.1977615356445,0,0,0,0,10.7326354980469,0,0,0,6.29737091064453,0,0,0,0,5.51506805419922,0,0,0,6.00975036621094,0,0,0,6.49539184570312,0,0,0,6.37963104248047,0,0,0,-42.6211776733398,0,0,0,0,-18.7428817749023,0,0,0,10.3663558959961,0,0,0,7.15596771240234,0,0,0,6.81009674072266,0,0,0,6.54588317871094,0,0,0,7.17192840576172,0,0,0,6.27877807617188,0,0,0,7.12420654296875,0,0,0,9.13156890869141,0,9.39669036865234,0,0,0,0,7.62939453125e-05,0,0,0,0,1.84551239013672,0,0,0,0,0.504615783691406,0,0,0,0,6.11721038818359,0,0,0,0,0,0,0,0,0,2.18578338623047,0,0,0,0,0,0,0,0,0,2.10680389404297,0,0,3.16696929931641,0,0,0,0,1.07042694091797,0,0,0,9.04172515869141,0,0,0,0,0,8.42636871337891,0,0,0,0,7.16059112548828,0,0,0.180160522460938,0,0,0,0,6.45550537109375,0,0,0,0,6.81301879882812,0,0,0,0,8.11529541015625,0,0,0,0,-30.1631469726562,0,0,0,0,0,-92.5497589111328,0,0,0,0,7.99960327148438,0,0,0,0,7.99404144287109,0,0,0,0,16.4483261108398,0,0,0,25.8170623779297,0,0,3.0517578125e-05,0,0,24.4216079711914,0,0,10.4799270629883,0,0,0,10.1793823242188,0,0,0,9.47637176513672,0,0,0,6.73319244384766,0,0,9.01251220703125,0,0,0,0,0,-69.6914672851562,0,0,0,0,8.67209625244141,0,0,0,0,7.57974243164062,0,0,0,0,6.74956512451172,0,0,0,0,4.82211303710938,0,0,0,0,0,-81.8734512329102,0,0,0,0,0,-20.3745040893555,0,0,0,0,0,3.50215911865234,0,0,0,0,5.88744354248047,0,0,0,0,0,9.49739837646484,0,0,0,0,7.8653564453125,0,0,0,9.48881530761719,0,0,10.7795028686523,0,0,0,-39.2136383056641,0,0,0,0,0,0.0605392456054688,0,0,0,6.99201965332031,0,0,0,6.43406677246094,0,0,0,5.97190856933594,0,0,0,6.90911102294922,0,0,0,7.26177978515625,0,0,0,7.31008911132812,0,0,0,6.78907775878906,0,0,0,7.21573638916016,0,0,0,6.69578552246094,0,0,0,6.71275329589844,0,0,0,6.88723754882812,0,0,0,7.66151428222656,0,0,0,0,0,11.7505340576172,0,0,0,0,0,0,0,0,0,1.78813934326172,0,0,0,0,0.0002899169921875,0,0,0,0,6.34287261962891,0,0,0,0,0,0,0,0,0,2.09191131591797,0,0,0,0,0,0,0,0,0,0.995040893554688,0,0,0,4.09799194335938,0,0,0,0,1.16095733642578,0,0,0,8.81407165527344,0,0,0,0,9.05149841308594,0,0,0,5.48699188232422,0,0,0,0,0,1.11666870117188,0,0,0,0,0,0.180160522460938,0,0,0,0,0,-63.1444320678711,0,0,0,0,0,-74.0735931396484,0,0,0,0,8.96286773681641,0,0,0,0,7.6986083984375,0,0,0,0,7.99958038330078,0,0,0,0,8.0050048828125,0,0,0,0,7.99645233154297,0,0,0,0,10.2837753295898,0,0,33.7814788818359,0,0,0,0,0,25.009407043457,0,0,10.7182388305664,0,0,0,9.34063720703125,0,0,0,0,6.88356018066406,0,0,0,0,0,-72.4638748168945,0,0,8.17739105224609,0,0,0,0,9.84757232666016,0,0,0,0,7.58221435546875,0,0,0,0,-35.6826171875,0,0,0,0,-12.8853454589844,0,0,0,0,9.40919494628906,0,0,0,0,6.78380584716797,0,0,0,0,7.91285705566406,0,0,0,0,-23.2089996337891,0,0,0,-2.97534942626953,0,0,0,14.4134979248047,0,0,0,10.6464004516602,0,0,0,6.95087432861328,0,0,5.91963195800781,0,0,0,7.98464965820312,0,0,0,7.09160614013672,0,0,0,7.35617065429688,0,0,0,6.85390472412109,0,0,0,9.65888977050781,0,0,0,8.31486511230469,0,0,0,2.9361572265625,0,0,0,0,-75.6823501586914,0,0,0,0,-7.91781616210938,0,0,0,6.68759918212891,0,0,0,6.90605926513672,0,0,0,0,14.069938659668,0,0,0,0,0.33221435546875,0,0,0,0,0.830825805664062,0,0,0,0,0,0.999076843261719,0,0,0,0,1.16361999511719,0,0,5.35256958007812,0,0,0,0,7.62939453125e-05,0,0,0,0,2.13942718505859,0,0,0,0,1.02478790283203,0,0,0,4.20372772216797,0,0,0,0,1.61625671386719,0,0,0,0,8.79090881347656,0,0,0,0,12.7296829223633,0,0,0,0,0.426513671875,0,0,0.180160522460938,0,0,0,0,6.4486083984375,0,0,0,0,13.1311187744141,0,0,0,0,3.47983551025391,0,0,0,0,0,-84.6084747314453,0,0,0,0,7.99378967285156,0,0,0,0,8.04111480712891,0,0,0,0,32.5167999267578,0,0,11.26220703125,0,0,16.4840545654297,0,8.43771362304688,0,0,-61.3764572143555,0,0,0,7.29151916503906,0,0,0,0,8.21905517578125,0,0,0,0,9.25213623046875,0,0,0,10.4073028564453,0,0,0,0,6.51200103759766,0,0,0,0,7.32992553710938,0,0,0,0.193473815917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-136.364479064941,0,0,0,0,0,0,-25.2670059204102,0,0,0,0,7.51602935791016,0,0,0,0,7.1512451171875,0,0,0,0,11.3316879272461,0,0,0,0,-1.32494354248047,0,0,0,0,0,0,-25.6344528198242,0,0,0,0,0,7.47882080078125,0,0,0,12.7286071777344,0,0,0,0,11.6903915405273,0,0,0,7.79845428466797,0,0,0,0,0,8.42549896240234,0,0,0,7.88904571533203,0,0,0,10.8798522949219,0,0,0,9.08866882324219,0,0,0,-66.6474914550781,0,0,0,0,-4.11814880371094,0,0,0,12.4080123901367,0,0,0,11.5748443603516,0,0,0,9.04337310791016,0,0,0,8.29014587402344,0,11.2107009887695,0,0,0,0,0,0,0,0,0,1.83092498779297,0,0,0,0,1.16452026367188,0,0,5.29446411132812,0,0,0,0,0,0,0,0,0,2.10216522216797,0,0,0,0,0,0,0,0,0,5.18058013916016,0,0,0,0,0.833198547363281,0,0,0,0,5.18657684326172,0,0,0,0,8.47475433349609,0,0,0,0,9.08051300048828,0,0,0,0,0,1.78234100341797,0,0,0,0,10.256103515625,0,0,0,0,7.73484039306641,0,0,0,0,7.99808502197266,0,0,0,0,7.9990234375,0,0,0,0,7.99777984619141,0,0,0,0,8.24564361572266,0,0,23.525390625,0,0,-59.8812103271484,0,0,0,-82.1586380004883,0,0,0,0,0,24.556266784668,0,0,14.6448516845703,0,0,7.51343536376953,0,0,0,10.7468185424805,0,0,0,0,7.78299713134766,0,0,10.0092468261719,0,0,0,0,-37.3530883789062,0,0,0,-7.01676940917969,0,0,0,0,11.3243026733398,0,0,0,0,6.42877960205078,0,0,0,0,8.79693603515625,0,0,0,0,-32.9677810668945,0,0,0,8.60350036621094,0,0,0,0,9.69075012207031,0,0,0,0,7.90799713134766,0,0,0,0,12.4839477539062,0,0,0,6.92836761474609,0,0,0,0,6.96712493896484,0,0,0,7.03924560546875,0,0,0,7.15773010253906,0,0,0,-29.5275421142578,0,0,0,0,-29.0073394775391,0,0,0,6.93013000488281,0,0,0,8.53929901123047,0,0,0,10.0843124389648,0,0,0,7.80152130126953,0,0,0,9.90753173828125,0,0,0,8.58466339111328,0,0,0,0,13.449592590332,0,0,0,0,0,0,0,0,0,1.80968475341797,0,0,0,0,0,0,0,0,0,6.33403015136719,0,0,0,0,0,0,0,0,0,2.05509185791016,0,0,0,0,0,0,0,0,0,0.971832275390625,0,0,4.12743377685547,0,0,0,0,0.843681335449219,0,0,0,0,7.12611389160156,0,0,0,0,6.35710144042969,0,0,0,0,10.8446273803711,0,0,0,0,0,0.180160522460938,0,0,0,0,6.53188323974609,0,0,0,0,-28.2356109619141,0,0,0,0,0,-81.4440994262695,0,0,0,0,7.52632141113281,0,0,0,0,7.99862670898438,0,0,0,0,7.99773406982422,0,0,0,0,7.99794769287109,0,0,0,0,31.7611694335938,0,0,11.0288467407227,0,0,0,0,0,16.1839752197266,0,9.24240875244141,0,0,12.3957061767578,0,0,0,0,-51.4895401000977,0,0,0,0,10.3810043334961,0,0,0,10.5118026733398,0,0,6.79611206054688,0,0,0,0,7.55278778076172,0,0,0,-76.8208923339844,0,0,0,-50.0066833496094,0,0,0,1.85394287109375,0,0,0,0,0,7.54545593261719,0,0,0,0,7.44017028808594,0,0,6.49735260009766,0,0,0,0,8.01814270019531,0,0,0,0,5.42702484130859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-77.5192947387695,0,0,0,0,6.79360198974609,0,0,0,0,11.1418838500977,0,0,0,0,6.70967864990234,0,0,0,0,11.2637405395508,0,0,0,7.27503967285156,0,0,0,0,6.48121643066406,0,0,0,6.73497009277344,0,0,0,6.52536010742188,0,0,0,7.17430114746094,0,0,0,6.54908752441406,0,0,0,6.97599792480469,0,0,0,5.80129241943359,0,0,0,0,-65.5733871459961,0,0,0,0,-16.4531707763672,0,0,0,6.99710845947266,0,0,0,6.66798400878906,0,0,0,7.01081085205078,0,0,0,6.8968505859375,0,0,0,7.19673156738281,0,11.0152740478516,0,0,0,0,0,0,0,0,0,1.80634307861328,0,0,0,0,0,0,0,0,0,6.31975555419922,0,0,0,0,0,0,0,0,0,7.62939453125e-05,0,0,0,0,2.05277252197266,0,0,0,0,0,0,0,0,0,4.32112884521484,0,0,0,0.769828796386719,0,0,0,0,0.844642639160156,0,0,0,0,8.59140777587891,0,0,0,0,8.74629211425781,0,0,0,0,3.09049224853516,0,0,0,0,0,6.69838714599609,0,0,0,0,5.39109802246094,0,0,0,0,7.74371337890625,0,0,0,0,7.99285125732422,0,0,0,0,7.9951171875,0,0,0,0,8.00355529785156,0,0,0,0,30.9595413208008,0,0,10.8774948120117,0,0,4.05303955078125,0,0,0,0,0,0,-134.691368103027,0,0,0.0764999389648438,0,0,14.1429748535156,0,0,0,0,9.28699493408203,0,0,0,10.5660247802734,0,0,0,0,7.57976531982422,0,0,0,0,6.12646484375,0,0,0,0,0,-46.4084243774414,0,0,7.01648712158203,0,0,0,0,0,6.96017456054688,0,0,0,0,0,9.48758697509766,0,0,0,0,5.61562347412109,0,0,0,0,0,-30.4746627807617,0,0,8.08769226074219,0,0,0,10.6625595092773,0,0,0,0,11.6204071044922,0,0,0,8.65245056152344,0,0,0,6.81681823730469,0,0,0,7.76033782958984,0,0,0,8.64839172363281,0,0,0,-2.20924377441406,0,0,0,0,-62.547477722168,0,0,0,9.00318908691406,0,0,0,7.58457946777344,0,0,0,6.14542388916016,0,0,0,7.19765472412109,0,0,0,8.32623291015625,0,0,0,8.03379821777344,0,0,0,6.99660491943359,0,0,0,9.27822875976562,0,9.01271057128906,0,0,0,0,0,0,0,0,0,1.78240203857422,0,0,0,0,0.0002899169921875,0,0,0,0,6.21718597412109,0,0,0,0,0,0,0,0,0,2.02001190185547,0,0,0,0,0,0,0,0,0,0.950225830078125,0,0,0,4.07982635498047,0,0,0,0,0.850639343261719,0,0,0,0,5.09986114501953,0,0,0,0,7.25752258300781,0,0,0,0,9.31900024414062,0,1.11508178710938,0,0,0,0,0,1.78234100341797,0,0,0,0,4.91172790527344,0,0,0,0,8.02400207519531,0,0,0,0,5.38668060302734,0,0,0,0,7.99509429931641,0,0,0,0,-35.4933471679688,0,0,0,0,-87.164192199707,0,0,0,0,7.99516296386719,0,0,0,0,18.7960510253906,0,0,23.2536926269531,0,0,0,0,0,16.1194763183594,0,10.6114349365234,0,0,11.9367904663086,0,0,0,0,7.75612640380859,0,0,0,8.52429962158203,0,0,0,7.92898559570312,0,0,10.6974105834961,0,0,0,0,0,-29.5335388183594,0,0,0,0,0,-37.8973541259766,0,0,9.29656982421875,0,0,0,0,6.68343353271484,0,0,0,0,7.05567932128906,0,0,0,0,5.45396423339844,0,0,0,0,0,-98.3449935913086,0,0,0,0,0,-0.7227783203125,0,0,0,0,11.5912780761719,0,0,0,0,10.0376129150391,0,0,6.25778198242188,0,0,0,13.1272506713867,0,0,0,0,6.63134002685547,0,0,0,-31.4920120239258,0,0,0,0,-7.13847351074219,0,0,0,8.3961181640625,0,0,0,6.9659423828125,0,0,0,10.6609573364258,0,0,0,7.35365295410156,0,0,0,7.93488311767578,0,0,0,7.32843017578125,0,0,0,7.18089294433594,0,0,0,6.79781341552734,0,0,0,9.56990814208984,0,0,0,0,0,11.7380676269531,0,0,0,0,7.62939453125e-05,0,0,0,0,1.79198455810547,0,0,0,0,0,0,0,0,0,6.23110961914062,0,0,0,0,0,0,0,0,0,2.00945281982422,0,0,0,0,0,0,0,0,0,2.54528045654297,0,0,0,0,2.52398681640625,0,0,0,0,0.879280090332031,0,0,0,0,8.63005065917969,0,0,0,0,8.69212341308594,0,0,0,0,4.96276092529297,0,0,0,0,0,1.78234100341797,0,0,0,0,4.01700592041016,0,0,0,0,0,-95.4370422363281,0,0,0,0,0,-25.7353134155273,0,0,0,0,4.94087982177734,0,0,0,0,6.17634582519531,0,0,0,0,4.91686248779297,0,0,0,0,7.95872497558594,0,0,0,0,16.3298873901367,0,0,0,25.5105361938477,0,0,0,0,0,15.9721374511719,0,8.19887542724609,0,0,11.7783889770508,0,0,0,7.43951416015625,0,0,0,0,8.39127349853516,0,0,0,4.90033721923828,0,0,0,0,0,-74.1097564697266,0,0,7.52832794189453,0,0,7.72425842285156,0,0,6.55606842041016,0,0,9.17655944824219,0,0,0,0,0,-48.2946624755859,0,0,0,0,0,-3.66474151611328,0,0,0,0,7.24667358398438,0,0,0,0,0,9.79373168945312,0,0,0,0,6.13724517822266,0,0,0,0,-25.063232421875,0,0,0,0,0,3.8138427734375,0,0,0,0,9.87227630615234,0,0,0,8.37886810302734,0,0,0,0,6.89617919921875,0,0,0,6.48170471191406,0,0,0,6.49142456054688,0,0,0,7.26271057128906,0,0,0,7.20864105224609,0,0,0,7.37056732177734,0,0,0,6.79190826416016,0,0,0,8.24046325683594,0,0,0,6.89718627929688,0,0,0,7.44818115234375,0,0,0,5.33464050292969,0,0,0,0,-69.061767578125,0,0,0,0,-27.2758712768555,0,0,0,6.88437652587891,0,0,0,14.3547134399414,0,0,0,0,0,0,0,0,0,1.79413604736328,0,0,0,0,0,0,0,0,0,6.20035552978516,0,0,0,0,7.62939453125e-05,0,0,0,0,1.99710845947266,0,0,0,0,0,0,0,0,0,5.00803375244141,0,0,0,0,0.859001159667969,0,0,0,0,5.56826782226562,0,0,0,0,8.21384429931641,0,0,0,0,8.29386901855469,0,0,0,0,0,1.78234100341797,0,0,0,0,6.86508178710938,0,0,0,0,10.9738235473633,0,0,0,0,7.99658966064453,0,0,0,0,7.99752807617188,0,0,0,0,-22.5814361572266,0,0,0,0,0,-60.4500122070312,0,0,0,0,30.8589706420898,0,0,10.8090209960938,0,0,15.8932037353516,0,13.7286834716797,0,0,10.2033538818359,0,0,0,0,3.62708282470703,0,0,0,0,0,-66.2289276123047,0,0,0,0,0,11.3857421875,0,0,0,7.84357452392578,0,0,0,0,8.05730438232422,0,0,0,0,7.8687744140625,0,0,0,0,3.05880737304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-114.264518737793,0,0,0,0,0,0,-41.1292572021484,0,0,0,0,8.88516235351562,0,0,0,0,8.00338745117188,0,0,7.35445404052734,0,0,0,0,6.07122039794922,0,0,0,0,5.02587127685547,0,0,0,0,0,0,-30.3227844238281,0,0,0,0,8.52345275878906,0,0,9.90022277832031,0,0,0,7.97415924072266,0,0,0,7.41835021972656,0,0,0,7.13388824462891,0,0,0,6.5626220703125,0,0,0,6.36258697509766,0,0,0,6.85907745361328,0,0,0,7.64630126953125,0,0,0,6.54075622558594,0,0,0,6.80921936035156,0,0,0,8.38492584228516,0,0,0,6.72112274169922,0,0,0,-29.2827301025391,0,0,0,0,-70.5020980834961,0,0,0,0,6.35560607910156,0,0,0,10.6348571777344,0,12.4387588500977,0,0,0,0,0.823196411132812,0,0,0,0,0,0.994499206542969,0,0,0,0,0.823776245117188,0,0,0,5.36952209472656,0,0,0,0,0,0,0,0,0,1.97490692138672,0,0,0,0,0.00018310546875,0,0,0,0,4.96363830566406,0,0,0,0,0.855537414550781,0,0,0,0,5.55120849609375,0,0,0,0,8.12672424316406,0,0,0,0,6.380615234375,0,0,0,0,0,1.78234100341797,0,0,0,0,10.2155990600586,0,0,0,0,7.48359680175781,0,0,0,0,7.99958038330078,0,0,0,0,7.99640655517578,0,0,0,0,7.99366760253906,0,0,0,0,6.48271942138672,0,0,0,0,23.6630783081055,0,0,10.6006469726562,0,0,23.6595993041992,0,0,-2.21587371826172,0,0,0,0,-123.150039672852,0,0,0,0,10.4173126220703,0,0,0,7.97527313232422,0,0,0,0,10.7316741943359,0,0,0,0,4.63382720947266,0,0,0,0,0,-40.8636322021484,0,0,7.05567169189453,0,0,0,0,7.43043518066406,0,0,0,0,9.51940155029297,0,0,0,0,7.21973419189453,0,0,0,0,0,0,-31.3856811523438,0,0,0,0,0,8.43936157226562,0,0,0,0,15.9979782104492,0,0,0,15.1451034545898,0,0,0,7.64325714111328,0,0,0,7.85011291503906,0,0,0,8.04937744140625,0,0,0,-0.440055847167969,0,0,0,0,-63.8583755493164,0,0,0,10.8994140625,0,0,0,7.31400299072266,0,0,0,10.2683410644531,0,0,0,6.85347747802734,0,0,0,7.07356262207031,0,0,0,10.8710861206055,0,0,0,7.22611236572266,0,0,0,0,0,11.4878845214844,0,0,0,0,0,0,0,0,0,1.80821990966797,0,0,0,0,0,0,0,0,0,6.10060882568359,0,0,0,0,0,0,0,0,0,1.94121551513672,0,0,0,0,0.00018310546875,0,0,0,0,4.85921478271484,0,0,0,0,0.838462829589844,0,0,0,0,8.79138946533203,0,0,0,9.30296325683594,0,0,0,0,1.61623382568359,0,0,0.180160522460938,0,0,0,0,6.50493621826172,0,0,0,0,5.43645477294922,0,0,0,0,7.71138763427734,0,0,0,0,7.99339294433594,0,0,0,0,-34.1841049194336,0,0,0,0,0,-85.7957229614258,0,0,0,0,7.99777984619141,0,0,0,0,30.4044799804688,0,0,10.7399749755859,0,0,15.8147888183594,0,15.0365676879883,0,0,0,9.26224517822266,0,0,0,0,11.2708358764648,0,0,0,10.283073425293,0,0,7.81248474121094,0,0,0,0,6.03926086425781,0,0,0,-100.609878540039,0,0,0,-42.7536697387695,0,0,0,0,0,0,0,9.07859802246094,0,0,5.73806762695312,0,0,0,0,6.90138244628906,0,0,7.02140808105469,0,0,0,0,0,8.09409332275391,0,0,0,0,0,-31.1864929199219,0,0,0,0,6.96260070800781,0,0,0,12.1361312866211,0,0,0,0,11.3527984619141,0,0,0,7.40244293212891,0,0,0,7.76134490966797,0,0,0,8.56932067871094,0,0,0,7.33812713623047,0,0,0,6.81513977050781,0,0,0,6.7093505859375,0,0,0,0,-73.3058395385742,0,0,0,0,2.88574981689453,0,0,0,11.8841094970703,0,0,0,9.20194244384766,0,0,0,7.48055267333984,0,0,0,8.50080871582031,0,0,0,8.61281585693359,0,9.90331268310547,0,0,0,0,7.62939453125e-05,0,0,0,0,1.81316375732422,0,0,0,0,0.0002899169921875,0,0,0,0,6.15216827392578,0,0,0,0,0,0,0,0,0,1.95769500732422,0,0,0,0,0.364456176757812,0,0,0,0,4.57027435302734,0,0,0,0,0.860557556152344,0,0,0,0,8.46798706054688,0,0,0,0,9.79859924316406,0,0,0,0,2.31024932861328,0,0,0,0,0,1.78234100341797,0,0,0,0,10.3291473388672,0,0,0,0,7.49301147460938,0,0,0,0,7.99546813964844,0,0,0,0,7.99192047119141,0,0,0,0,-26.4630889892578,0,0,0,0,0,-83.063346862793,0,0,0,24.3535308837891,0,0,3.0517578125e-05,0,0,23.2317276000977,0,0,9.81013488769531,0,0,0,0,8.58865356445312,0,0,0,0,8.51361846923828,0,0,9.01922607421875,0,0,0,0,7.05077362060547,0,0,0,0,9.83773803710938,0,0,0,0,0,-62.3376617431641,0,0,0,0,8.24590301513672,0,0,8.13567352294922,0,0,0,0,7.06056976318359,0,0,7.48921203613281,0,0,0,0,4.02619171142578,0,0,0,0,0,-63.3352966308594,0,0,5.66314697265625,0,0,0,11.74951171875,0,0,0,0,10.5471038818359,0,0,0,8.06983947753906,0,0,0,8.82643127441406,0,0,0,7.53266906738281,0,0,0,7.35828399658203,0,0,0,7.62548828125,0,0,0,-1.41038513183594,0,0,0,0,-70.9160995483398,0,0,0,7.29765319824219,0,0,0,10.0239410400391,0,0,0,10.2767715454102,0,0,0,7.25783538818359,0,0,0,7.23042297363281,0,0,0,6.67928314208984,0,0,0,13.9740447998047,0,0,0.975448608398438,0,0,0,0,1.76746368408203,0,0,0,0,0.0002899169921875,0,0,0,0,5.96903228759766,0,0,0,0,0,0,0,0,0,1.91350555419922,0,0,0,0,0.00018310546875,0,0,0,0,4.78688049316406,0,0,0,0,0.840446472167969,0,0,0,0,8.21121215820312,0,0,0,0,8.12955474853516,0,0,0,0,2.94345855712891,0,0,0,0,0,6.65817260742188,0,0,0,0,5.39147186279297,0,0,0,0,-47.3164367675781,0,0,0,0,0,-51.5659103393555,0,0,0,0,9.56591033935547,0,0,0,0,9.84290313720703,0,0,0,0,11.9685363769531,0,0,33.2073822021484,0,0,0.425155639648438,0,0,23.2997360229492,0,0,10.2018432617188,0,0,0,-45.9034118652344,0,0,13.2086563110352,0,0,0,9.97996520996094,0,0,0,0,9.82546997070312,0,0,5.41971588134766,0,0,0,0,0,0,0,0,0,0,0,-35.2163619995117,0,0,0,-105.52564239502,0,0,0,-34.4878158569336,0,0,0,7.62939453125e-06,0,0,8.51779937744141,0,0,0,0,6.44337463378906,0,0,0,0,0,8.88758850097656,0,0,0,0,7.52339935302734,0,0,0,0,0,5.37810516357422,0,0,0,0,0,0,-32.2104721069336,0,0,9.36200714111328,0,0,0,15.3400497436523,0,0,0,9.70530700683594,0,0,0,0,8.38524627685547,0,0,0,8.70967102050781,0,0,0,7.39436340332031,0,0,0,7.64998626708984,0,0,0,7.70487976074219,0,0,0,8.38275146484375,0,0,0,7.40882110595703,0,0,0,-10.4001235961914,0,0,0,0,-76.290885925293,0,0,0,10.8887710571289,0,0,0,6.94144439697266,0,0,0,11.4487991333008,0,6.62647247314453,0,0,0,0,0,0,0,0,0,1.80333709716797,0,0,0,0,0.0002899169921875,0,0,0,0,6.09102630615234,0,0,0,0,0,0,0,0,0,1.93613433837891,0,0,0,0,0,0,0,0,0,4.87979888916016,0,0,0,0.854408264160156,0,0,0,0,8.47629547119141,0,0,0,0,9.23839569091797,0,0,0,0,3.89476013183594,0,0,0.180160522460938,0,0,0,0,6.48006439208984,0,0,0,0,9.90957641601562,0,0,0,0,11.051139831543,0,0,0,0,7.99453735351562,0,0,0,0,7.99665832519531,0,0,0,0,7.67708587646484,0,0,22.7360534667969,0,0,10.6962051391602,0,0,15.7500534057617,0,-40.4591979980469,0,0,0,-98.5780868530273,0,0,15.0034027099609,0,0,0,0,8.71157073974609,0,0,0,10.432502746582,0,0,0,0,10.7854919433594,0,0,4.87847900390625,0,0,0,-44.2737503051758,0,0,0,0,13.2198944091797,0,0,0,0,7.20745086669922,0,0,6.78385162353516,0,0,0,0,0,-26.340690612793,0,0,8.92306518554688,0,0,0,15.372688293457,0,0,0,10.3626251220703,0,0,0,6.6859130859375,0,0,0,8.84425354003906,0,0,0,7.50868225097656,0,0,0,0.746696472167969,0,0,0,0,-58.9456558227539,0,0,0,0,1.18714904785156,0,0,0,7.91010284423828,0,0,0,8.56720733642578,0,0,0,7.28585052490234,0,0,0,7.77443695068359,0,0,0,8.46746063232422,0,0,0,7.81751251220703,0,0,0,10.3332214355469,0,0,8.04800415039062,0,0,0,0,7.62939453125e-05,0,0,0,0,1.81943511962891,0,0,0,0,0.824913024902344,0,0,0,5.31303405761719,0,0,0,0,0,0,0,0,0,1.94596099853516,0,0,0,0,0,0,0,0,0,4.91359710693359,0,0,0,0,0.861091613769531,0,0,0,0,5.05496978759766,0,0,0,0,9.34438323974609,0,0,0,0,5.38626861572266,0,0,0,0,0,3.06825256347656,0,0,0,0,8.94385528564453,0,0,0,0,7.61067199707031,0,0,0,0,8.00086975097656,0,0,0,0,-18.8467102050781,0,0,0,0,0,-102.307876586914,0,0,0,0,15.159553527832,0,0,0,0,24.6837692260742,0,0,11.0551223754883,0,0,24.5252075195312,0,0,9.72953033447266,0,0,0,0,10.9932556152344,0,0,0,9.97909545898438,0,0,0,7.76835632324219,0,0,7.06797790527344,0,0,0,0,6.5487060546875,0,0,0,0,0,-68.5008239746094,0,0,0,0,10.4132614135742,0,0,0,0,0,3.30372619628906,0,0,0,0,7.44512939453125,0,0,0,0,6.88417816162109,0,0,0,-99.4047164916992,0,0,0,0,8.00592041015625,0,0,0,0,8.20647430419922,0,0,0,9.14167022705078,0,0,0,12.0690689086914,0,0,0,7.14002990722656,0,0,7.43289184570312,0,0,0,5.19746398925781,0,0,0,0,-60.4689788818359,0,0,0,7.41553497314453,0,0,0,12.2666854858398,0,0,0,8.31404876708984,0,0,0,6.72457885742188,0,0,0,8.27745819091797,0,0,0,7.23145294189453,0,0,0,8.82712554931641,0,0,0,6.96784210205078,0,0,0,9.51123809814453,0,9.26259613037109,0,0,0,0,0,0,0,0,0,1.89606475830078,0,0,0,0,0.0002899169921875,0,0,0,0,6.34224700927734,0,0,0,0,0,0,0,0,0,1.97643280029297,0,0,0,0,0,0,0,0,0,3.75122833251953,0,0,0,0,1.25092315673828,0,0,0,0,0.853416442871094,0,0,0,0,7.64862060546875,0,0,0,0,9.64749145507812,0,0,0,0,4.95474243164062,0,0,0.0215301513671875,0,0,6.60720062255859,0,0,0,0,6.35372924804688,0,0,0,0,4.72325134277344,0,0,0,0,0,-81.909782409668,0,0,0,0,0,-44.9518508911133,0,0,0,0,8.03604125976562,0,0,0,0,9.47230529785156,0,0,0,0,29.2597961425781,0,0,10.8101043701172,0,0,24.0644378662109,0,0,10.3400421142578,0,0,0,9.16211700439453,0,0,0,0,8.03568267822266,0,0,0,9.0439453125,0,0,0,0,9.31612396240234,0,0,0,0,-69.838623046875,0,0,0,0,0,-4.67388916015625,0,0,0,0,6.16905975341797,0,0,0,0,6.01483154296875,0,0,7.69003295898438,0,0,0,0,6.75444030761719,0,0,0,0,2.62606811523438,0,0,0,0,0,0,-59.3143157958984,0,0,0,0,0,0,3.21317291259766,0,0,0,0,11.177360534668,0,0,0,0,0,9.40792083740234,0,0,0,0,6.35518646240234,0,0,10.3283462524414,0,0,0,8.32653045654297,0,0,0,0,0,-45.277099609375,0,0,0,7.55377197265625,0,0,0,7.12699127197266,0,0,0,7.241455078125,0,0,0,6.97479248046875,0,0,0,7.39884948730469,0,0,0,7.00368499755859,0,0,0,9.81047058105469,0,0,0,11.3241577148438,0,0,0,13.4858169555664,0,0,0,7.03132629394531,0,0,0,13.9005355834961,0,0,0,1.69175720214844,0,0,0,0,1.86243438720703,0,0,0,0,0.0002899169921875,0,0,0,0,-54.5845184326172,0,0,0,0,0,-40.6759719848633,0,0,0,0,7.62939453125e-05,0,0,0,0,1.94307708740234,0,0,0,0,2.44777679443359,0,0,0,0,2.46591949462891,0,0,0,0,0.850868225097656,0,0,0,0,8.50272369384766,0,0,0,0,8.91002655029297,0,0,0,0],"filename":["/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,null,null,null,"/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>",null,"/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/ImpossibleHouseholds.R","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/ImpossibleHouseholds.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/samplers.R","/R/RunModel.R","<expr>",null,"/R/samplers.R",null,"/R/samplers.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>","/R/RcppExports.R","/R/missingdata.R","/R/RunModel.R","<expr>",null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>",null,null,null,"/R/RunModel.R","<expr>"]},"interval":10,"files":[{"filename":"<expr>","content":"profvis({\n    ModelResults <- RunModel(orig,mc,hyper,para,output,synindex,\n                             ExampleData$individual_variable_index,\n                             ExampleData$household_variable_index,\n                             options$HHhead_at_group_level,options$weight_option,struc_weight,MissData)\n})\n","normpath":"<expr>"},{"filename":"/R/RcppExports.R","content":"# Generated by using Rcpp::compileAttributes() -> do not edit by hand\n# Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393\n\ncheckSZ <- function(Data_to_check, h) {\n    .Call('_NestedCategBayesImpute_checkSZ', PACKAGE = 'NestedCategBayesImpute', Data_to_check, h)\n}\n\ncheckSZ2 <- function(Data_to_check, h) {\n    .Call('_NestedCategBayesImpute_checkSZ2', PACKAGE = 'NestedCategBayesImpute', Data_to_check, h)\n}\n\ncheckconstraints <- function(data, neededpossiblehh, hh_size) {\n    .Call('_NestedCategBayesImpute_checkconstraints', PACKAGE = 'NestedCategBayesImpute', data, neededpossiblehh, hh_size)\n}\n\ncheckconstraints_HHhead_at_group_level <- function(data, neededpossiblehh, hh_size) {\n    .Call('_NestedCategBayesImpute_checkconstraints_HHhead_at_group_level', PACKAGE = 'NestedCategBayesImpute', data, neededpossiblehh, hh_size)\n}\n\nhouseholds2individuals <- function(data, hh_size) {\n    .Call('_NestedCategBayesImpute_households2individuals', PACKAGE = 'NestedCategBayesImpute', data, hh_size)\n}\n\ngroupcount <- function(g1, g2, n1, n2) {\n    .Call('_NestedCategBayesImpute_groupcount', PACKAGE = 'NestedCategBayesImpute', g1, g2, n1, n2)\n}\n\ngroupcount1D <- function(g, n) {\n    .Call('_NestedCategBayesImpute_groupcount1D', PACKAGE = 'NestedCategBayesImpute', g, n)\n}\n\nsampleG <- function(phi, data, omega, pi, ni, HHdata, lambda) {\n    .Call('_NestedCategBayesImpute_sampleG', PACKAGE = 'NestedCategBayesImpute', phi, data, omega, pi, ni, HHdata, lambda)\n}\n\nsamplehouseholds <- function(phi, omega, pi, d, lambda, currrentbatch, nHouseholds, householdsize) {\n    .Call('_NestedCategBayesImpute_samplehouseholds', PACKAGE = 'NestedCategBayesImpute', phi, omega, pi, d, lambda, currrentbatch, nHouseholds, householdsize)\n}\n\nsamplehouseholds_HHhead_at_group_level <- function(phi, omega, pi, d, lambda, currrentbatch, nHouseholds, householdsize) {\n    .Call('_NestedCategBayesImpute_samplehouseholds_HHhead_at_group_level', PACKAGE = 'NestedCategBayesImpute', phi, omega, pi, d, lambda, currrentbatch, nHouseholds, householdsize)\n}\n\nsampleM <- function(phi, data, omega, G, serial) {\n    .Call('_NestedCategBayesImpute_sampleM', PACKAGE = 'NestedCategBayesImpute', phi, data, omega, G, serial)\n}\n\nSampleMatrixByColumnC <- function(data, r, dup) {\n    .Call('_NestedCategBayesImpute_SampleMatrixByColumnC', PACKAGE = 'NestedCategBayesImpute', data, r, dup)\n}\n\nSampleMatrixByRowC <- function(data, r) {\n    .Call('_NestedCategBayesImpute_SampleMatrixByRowC', PACKAGE = 'NestedCategBayesImpute', data, r)\n}\n\nCheckSZ_batch <- function(X_house, X_indiv) {\n    .Call('_NestedCategBayesImpute_CheckSZ_batch', PACKAGE = 'NestedCategBayesImpute', X_house, X_indiv)\n}\n\nSampleMissingForOneHousehold_batch <- function(another_index, X_house_s_prop, X_indiv_s_prop, house_szv_index, NA_house_missing_status, indiv_szv_index, NA_indiv_missing_status, lambda, phi, G_household_G_s, index, orig_d, orig_maxd, batch) {\n    .Call('_NestedCategBayesImpute_SampleMissingForOneHousehold_batch', PACKAGE = 'NestedCategBayesImpute', another_index, X_house_s_prop, X_indiv_s_prop, house_szv_index, NA_house_missing_status, indiv_szv_index, NA_indiv_missing_status, lambda, phi, G_household_G_s, index, orig_d, orig_maxd, batch)\n}\n\nSampleNonStructureZerosHouseC <- function(household, NA_house_missing_status, house_non_szv_index_raw, house_non_szv_index, para_lambda, G_household_G, orig_n_i) {\n    .Call('_NestedCategBayesImpute_SampleNonStructureZerosHouseC', PACKAGE = 'NestedCategBayesImpute', household, NA_house_missing_status, house_non_szv_index_raw, house_non_szv_index, para_lambda, G_household_G, orig_n_i)\n}\n\nSampleNonStructureZerosIndivC <- function(household, NA_indiv_missing_status, indiv_non_szv_index_raw, phi_m_g_index, indiv_non_szv_index, para_phi, orig_d, orig_maxd) {\n    .Call('_NestedCategBayesImpute_SampleNonStructureZerosIndivC', PACKAGE = 'NestedCategBayesImpute', household, NA_indiv_missing_status, indiv_non_szv_index_raw, phi_m_g_index, indiv_non_szv_index, para_phi, orig_d, orig_maxd)\n}\n\nSampleMissing_impC <- function(MissData, para, orig, G_household, M, hyper) {\n    .Call('_NestedCategBayesImpute_SampleMissing_impC', PACKAGE = 'NestedCategBayesImpute', MissData, para, orig, G_household, M, hyper)\n}\n\nsampleW_multi <- function(p, d) {\n    .Call('_NestedCategBayesImpute_sampleW_multi', PACKAGE = 'NestedCategBayesImpute', p, d)\n}\n","normpath":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/R/RcppExports.R"},{"filename":"/R/RunModel.R","content":"\nRunModel <- function(orig,mc,hyper,para,output,synindex,individual_variable_index,household_variable_index,\n                     HHhead_at_group_level,weight_option,struc_weight,MissData = NULL){\n  synData <- list()\n  impData <- list()\n\n  if(weight_option){\n    struc_weight <- c(1,struc_weight) #add 1 for the weight of the observed data\n    G_all_weighted <- vector(\"list\",length(struc_weight))\n    HHdata_all_weighted <- vector(\"list\",length(struc_weight))\n    IndividualData_all_weighted <- vector(\"list\",length(struc_weight))\n    M_all_weighted <- vector(\"list\",length(struc_weight))\n  }\n\n  for (i in 1:mc$nrun) {\n    cat(paste(\"iteration \", i,\"\\n\", sep = \"\"))\n    t <- proc.time()\n\n    G_household <- sampleG(para$phi,orig$dataT,para$omega,para$pi,orig$n_i,t(para$HHdata_all[,1:orig$n]),para$lambda)\n\n    M <- sampleM(para$phi,orig$dataT,para$omega,G_household$G,orig$HHserial)\n\n    if(weight_option){\n      data.extra <- GetImpossibleHouseholds(orig$d,ceiling(orig$n_star_h*struc_weight[-1]),para$lambda,para$omega,para$phi,\n                                            para$pi,hyper$blocksize,orig$n,is.element(i,synindex),HHhead_at_group_level)\n      para$hh_size_new <- as.vector(data.extra$hh_size_new)\n      DIM <- dim(data.extra$IndividualData_extra)[1]\n      if (is.element(i,synindex)) {\n        forsynData <- GetImpossibleHouseholds(orig$d,orig$n_star_h,para$lambda,para$omega,para$phi,\n                                              para$pi,hyper$blocksize,orig$n,is.element(i,synindex),HHhead_at_group_level) #synthetic data\n        synData[[which(synindex ==i)]] <- t(forsynData$synIndividuals_all[1:DIM,])\n        colnames(synData[[which(synindex ==i)]]) <- colnames(orig$origdata)[-ncol(orig$origdata)]\n      }\n\n      #combine data and indicators -- use lists for weighting\n      n_i_extra <- as.data.frame(table(data.extra$IndividualData_extra[1,]))$Freq\n      n_i_extra_index <- rep(n_i_extra,n_i_extra)\n      G_all_weighted[[1]] <- G_household$G\n      temp_temp <- orig$HHdataorigT\n      if (!HHhead_at_group_level) {\n        temp_temp[2,] <- temp_temp[2,] -1\n      }\n      HHdata_all_weighted[[1]] <- temp_temp\n      IndividualData_all_weighted[[1]] <- t(orig$origdata[,1:DIM])\n      M_all_weighted[[1]] <- rbind(G_household$G_Individuals,M)\n      M_all_vector <- cbind(M_all_weighted[[1]],data.extra$G_Individuals_and_M_extra)\n\n      if (!HHhead_at_group_level){\n        for(w_i in 2:length(struc_weight)){\n          G_all_weighted[[w_i]] <- data.extra$G_extra[(n_i_extra == w_i)]\n          HHdata_all_weighted[[w_i]] <- data.extra$HHdata_extra[,(n_i_extra == w_i)]\n          IndividualData_all_weighted[[w_i]] <- data.extra$IndividualData_extra[,(n_i_extra_index == w_i)]\n          M_all_weighted[[w_i]] <- data.extra$G_Individuals_and_M_extra[,(n_i_extra_index == w_i)]\n        }\n      } else{\n        for(w_i in 2:length(struc_weight)){\n          G_all_weighted[[w_i]] <- data.extra$G_extra[(n_i_extra == (w_i-1))]\n          HHdata_all_weighted[[w_i]] <- data.extra$HHdata_extra[,(n_i_extra == (w_i-1))]\n          IndividualData_all_weighted[[w_i]] <- data.extra$IndividualData_extra[,(n_i_extra_index == (w_i-1))]\n          M_all_weighted[[w_i]] <- data.extra$G_Individuals_and_M_extra[,(n_i_extra_index == (w_i-1))]\n        }\n      }\n\n\n      # update phi\n      para$phi <- UpdatePhiWeighted(IndividualData_all_weighted,M_all_weighted,\n                                    hyper$FF,hyper$SS,orig$p,orig$d,orig$maxd,individual_variable_index,struc_weight)\n      #update omega\n      Omega <- UpdateOmegaWeighted(para$beta,M_all_weighted, hyper$FF, hyper$SS,struc_weight)\n      para$omega <- Omega$omega\n      para$v <- Omega$v\n\n      # update lambda\n      para$lambda <- UpdateLambdaWeighted(hyper$dHH,hyper$FF,G_all_weighted,HHdata_all_weighted,struc_weight)\n\n      # update pi\n      Pi <- UpdatePiWeighted(para$alpha,G_all_weighted,hyper$FF,struc_weight)\n      para$pi <- Pi$pi\n      para$u <- Pi$u\n\n    } else {\n      data.extra <- GetImpossibleHouseholds(orig$d,orig$n_star_h,para$lambda,para$omega,para$phi,\n                                            para$pi,hyper$blocksize,orig$n,is.element(i,synindex),HHhead_at_group_level)\n      para$hh_size_new <- as.vector(data.extra$hh_size_new)\n      DIM <- dim(data.extra$IndividualData_extra)[1]\n      if (is.element(i,synindex)) {\n        synData[[which(synindex ==i)]] <- t(data.extra$synIndividuals_all[1:DIM,])\n      }\n\n      #combine data and indicators\n      para$G_all <- c(G_household$G, data.extra$G_extra)\n      para$HHdata_all <- orig$HHdataorigT\n      if (!HHhead_at_group_level) {\n        para$HHdata_all[2,] <- para$HHdata_all[2,] -1\n      }\n      para$HHdata_all <- cbind(para$HHdata_all,data.extra$HHdata_extra)\n      para$IndividualData_all <- cbind(t(orig$origdata[,1:DIM]),data.extra$IndividualData_extra)\n\n      #row 1 for FF groups and row 2 for SS groups\n      temp <- rbind(G_household$G_Individuals,M)\n      para$M_all  <- cbind(temp,data.extra$G_Individuals_and_M_extra)\n\n      # update phi\n      para$phi <- UpdatePhi(para$IndividualData_all,para$M_all,\n                            hyper$FF,hyper$SS,orig$p,orig$d,orig$maxd,individual_variable_index)\n\n      #update Omega\n      Omega <- UpdateOmega(para$beta,para$M_all, hyper$FF, hyper$SS)\n      para$omega <- Omega$omega\n      para$v <- Omega$v\n\n      # update lambda\n      para$lambda <- UpdateLambda(hyper$dHH,hyper$FF,para$G_all,para$HHdata_all)\n\n      # update pi\n      Pi <- UpdatePi(para$alpha,para$G_all,hyper$FF)\n      para$pi <- Pi$pi\n      para$u <- Pi$u\n    }\n\n    #update alpha\n    para$alpha <- UpdateAlpha(hyper$aa,hyper$ab,para$u)\n\n    #update beta\n    para$beta <- UpdateBeta(hyper$ba,hyper$bb,para$v)\n\n    #update missing data\n    if (!is.null(MissData)) {\n      #save(MissData,para,orig,G_household,M,hyper, file = \"pre_sampleMissing.RData\")\n      MissData <- SampleMissing(MissData,para,orig,G_household,M,hyper)\n      orig$origdata <- MissData$household\n      HHrowIndex <- c(1, cumsum(orig$n_i)+1)\n      orig$HHdataorigT <- t(MissData$household[HHrowIndex[1:orig$n],household_variable_index])\n      orig$dataT <- t(MissData$household[,individual_variable_index])\n      para$HHdata_all <- orig$HHdataorigT\n      if (is.element(i,MissData$miss_index)){\n        impData[[which(MissData$miss_index ==i)]] <- MissData$household\n      }\n    }\n\n    #post save\n    if(weight_option){\n      G_all <- unlist(G_all_weighted)\n      rep_G_all <- t(M_all_vector[1,])\n      M_all <- t(M_all_vector[2,])\n    } else {\n      G_all <- para$G_all\n      rep_G_all <- t(para$M_all[1,])\n      M_all <- t(para$M_all[2,])\n    }\n    S_occup <- NULL\n    for(occ in sort(unique(G_all))){\n      S_occup <- rbind(S_occup,dim(table(rep_G_all[which(rep_G_all==occ)],M_all[which(rep_G_all==occ)]))[2])\n    }\n    cat(paste(\"number of occupied household classes is \", length(unique(G_all)), \"\\n\", sep = ''))\n    cat(paste(\"max number of occupied individual classes is \", max(S_occup), \"\\n\", sep = ''))\n\n    total_household <- sum(c(orig$n,para$hh_size_new))\n    if(weight_option){\n      cat(paste(\"total number of households (capped) sampled is \", total_household, \"\\n\", sep = ''))\n      est_total_household <- sum(c(orig$n,para$hh_size_new)/struc_weight)\n      cat(paste(\"true (estimated) total number of households is \", est_total_household, \"\\n\", sep = ''))\n    } else {\n      cat(paste(\"total number of households sampled is \", total_household, \"\\n\", sep = ''))\n    }\n    cat(paste(\"elapsed time = \", (proc.time() - t)[[\"elapsed\"]], \"\\n\\n\", sep = ' '))\n\n    output$nout[i] <- total_household\n    output$extrasize[i,] <- para$hh_size_new\n    output$elapsed_time[i] <- (proc.time() - t)[[\"elapsed\"]]\n\n\n    if (i %% mc$thin == 0 && i > mc$burn)  {\n      index <- (i-mc$burn)/mc$thin\n      output$piout[index,] <- para$pi\n      output$omegaout[index,,] <- para$omega\n      output$newphiout[index,,] <- para$phi\n      for (i in 1:length(hyper$dHH)) {\n        output$lambdaout[[i]][index,,] = para$lambda[[i]]\n      }\n      output$F_occupied[index] <- length(unique(G_all))\n      output$S_occupied_max[index] <- max(S_occup)\n      output$alphaout[index] <- para$alpha\n      output$betaout[index] <- para$beta\n    }\n  }\n\n  return(list(synData=synData,impData=impData,output=output))\n}","normpath":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/R/RunModel.R"},{"filename":"/R/ImpossibleHouseholds.R","content":".GenerateData <- function(hh_size,lambda, omega, phi,pi, d, total.batch,possiblehhcount,howmany,synindex,HHhead_at_group_level) {\n  #save(hh_size,lambda, omega, phi,pi, d, total.batch,possiblehhcount,howmany,synindex, file = \"last2.RData\")\n  #return(NULL)\n  Individuals_extra <- list()\n  G_extra <- list()\n  HHData_extra <- list()\n  batch.index <- 0\n  n_possible_household <- 0\n  p <- length(d)\n  synIndividuals <- list()\n\n  while (n_possible_household< possiblehhcount) {\n    batch.index <- batch.index + 1\n    #print(batch.index)\n    #generate a batch of 10K household\n    if (HHhead_at_group_level) {\n      data_to_check <- samplehouseholds_HHhead_at_group_level(phi,omega, pi, d, lambda,batch.index+total.batch, howmany,hh_size)\n    } else {\n      data_to_check <- samplehouseholds(phi,omega, pi, d, lambda,batch.index+total.batch, howmany,hh_size)\n    }\n\n    #impossible household\n\n    #data_to_check_old_format <- ConvertDataForward(data_to_check,hh_size,p,lambda)\n    #print(\"do_check\")\n    if (HHhead_at_group_level) {\n      checked.households <- checkconstraints_HHhead_at_group_level(data_to_check,possiblehhcount-n_possible_household, hh_size)\n    } else {\n      checked.households <- checkconstraints(data_to_check,possiblehhcount-n_possible_household, hh_size)\n    }\n    n_possible_household <- n_possible_household + checked.households$possible\n    if (length(checked.households$Households) > 0) {\n      #checked.households$Households <- t(ConvertDataBack(t(checked.households$Households),hh_size,p,lambda))\n      #print(\"do convert\")\n      Individuals_extra[[batch.index]] <- households2individuals(checked.households$Households,hh_size)\n      DIM <- p + length(lambda) + 1\n      G_extra[[batch.index]] <- checked.households$Households[hh_size * DIM +1,]\n      HHData_extra[[batch.index]] <- checked.households$Households[(p+3): DIM,]\n      #print(\"done convert\")\n    } else {\n      print(\"no batch\")\n    }\n\n\n    if (synindex > 0) {\n      if (length(checked.households$synHouseholds) > 0) {\n        #checked.households$synHouseholds <- t(ConvertDataBack(t(checked.households$synHouseholds),hh_size,p,lambda))\n        synIndividuals[[batch.index]]  <- households2individuals(checked.households$synHouseholds,hh_size)\n      }\n    }\n  }\n\n  Individuals_extra <- do.call(cbind, Individuals_extra)\n  G_extra <- unlist(G_extra)\n  if (HHhead_at_group_level) {\n    HHData_extra <- do.call(cbind, HHData_extra)\n  } else {\n    HHData_extra <- unlist(HHData_extra)\n  }\n\n  if (synindex > 0) {\n    synIndividuals <- do.call(cbind, synIndividuals)\n  }\n  batch.index <- batch.index + total.batch\n  return(list(Individuals_extra = Individuals_extra,\n              G_extra = G_extra,\n              HHData_extra = HHData_extra,\n              synIndividuals = synIndividuals,\n              batch.index = batch.index))\n}\n\nGetImpossibleHouseholds <- function(d,n_star_h,lambda,omega,phi,pi,howmany,n,synindex,HHhead_at_group_level) {\n  #save(d,n_star_h,lambda,omega,phi,pi,howmany,n,synindex, file = \"last.RData\")\n  #return(NULL)\n  cumsize <- 0\n  hh_size_new <-  matrix(0,nrow = length(n_star_h), ncol = 1)\n  hh_index <- list()\n  ImpossibleIndividuals <- list()\n  G_extra <- list()\n  HHdata_extra <- list()\n  synIndividuals_all <- list()\n\n  ##\n  total.batch <- 0\n  for (hh_size in  1:(length(n_star_h))) {\n    if (HHhead_at_group_level) {\n      hh_size_real <- hh_size\n    } else {\n      hh_size_real <- hh_size + 1\n    }\n    batch <- .GenerateData(hh_size_real,lambda, omega, phi,pi, d, total.batch,n_star_h[hh_size],howmany,synindex,HHhead_at_group_level)\n\n    hh_size_new[hh_size] <- length(batch$G_extra)\n    hh_index[[hh_size]] <- cumsize + rep(1:hh_size_new[hh_size], each = hh_size_real)\n    cumsize <- cumsize + hh_size_new[hh_size]\n    ImpossibleIndividuals[[hh_size]] <- batch$Individuals_extra\n    G_extra[[hh_size]] <-  batch$G_extra\n    HHdata_extra[[hh_size]] <- rbind(batch$HHData_extra,rep(hh_size, times = hh_size_new[hh_size])) # length(lambda) by ...\n    if (synindex > 0) {\n      synIndividuals_all[[hh_size]] <- batch$synIndividuals\n    }\n    total.batch <- batch$batch.index\n  }\n\n  ##\n  hh_index <- unlist(hh_index)\n  ImpossibleIndividuals <- do.call(cbind, ImpossibleIndividuals)\n  G_extra <- unlist(G_extra)\n  HHdata_extra <- do.call(cbind, HHdata_extra)\n  if (synindex > 0) {\n    synIndividuals_all <- do.call(cbind, synIndividuals_all)\n  }\n\n  ImpossibleIndividuals[1,] <- n + hh_index\n  DIM <- dim(ImpossibleIndividuals)[1] - 2\n  IndividualData_extra <- ImpossibleIndividuals[1:DIM,]\n  G_Individuals_and_M_extra <- ImpossibleIndividuals[(DIM+1):(DIM+2),]\n  return(list(G_Individuals_and_M_extra = G_Individuals_and_M_extra,\n              G_extra = G_extra,\n              IndividualData_extra = IndividualData_extra,\n              HHdata_extra = HHdata_extra,\n              hh_size_new = hh_size_new,\n              synIndividuals_all = synIndividuals_all))\n}","normpath":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/R/ImpossibleHouseholds.R"},{"filename":"/R/samplers.R","content":"\nUpdatePhi <- function(IndividualData_all, M_all, FF, SS, p, d, maxd,individual_variable_index) {\n  phi <- array(0,dim = c(maxd,p, FF*SS))\n  data = IndividualData_all[individual_variable_index,]\n  groupIndex <- SS*(M_all[1,]-1)+M_all[2,]\n  for (j in 1:p) {\n    phicount <- groupcount(groupIndex, data[j,], FF*SS, d[j])\n    phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))\n    phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))\n  }\n  dim(phi) <- c(maxd*p,FF * SS) #reshape to a 2D matrix\n  return(phi)\n}\n\nUpdatePhiWeighted <- function(IndividualData_all, M_all, FF, SS, p, d, maxd,individual_variable_index, struc_weight) {\n  phi <- array(0,dim = c(maxd,p, FF*SS))\n  data <- lapply(IndividualData_all,function(x) x[individual_variable_index,])\n  groupIndex <- lapply(M_all,function(x) SS*(x[1,]-1)+x[2,])\n  for (j in 1:p) {\n    phicount <- 0\n    for(w_i in 1:length(struc_weight)){\n      data_w_i <- data[[w_i]]\n      phicount <- phicount + (groupcount(groupIndex[[w_i]], data_w_i[j,], FF*SS, d[j]) / struc_weight[w_i])\n    }\n    phi_j <- apply(phicount, c(1,2), function(x) rgamma(1,x+1,1))\n    phi[1:d[j], j,] <- apply(phi_j, 1, function(x) x / sum(x))\n  }\n  dim(phi) <- c(maxd*p,FF * SS) #reshape to a 2D matrix\n  return(phi)\n}\n\nUpdateOmega <- function(beta,M_all, FF, SS) {\n  phicountcluster <- groupcount(M_all[1,],M_all[2,],FF,SS)\n\n  cum <- t(apply(phicountcluster[,seq(SS,1)],1, cumsum))[,seq(SS,1)]\n  v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])\n  dim(v) <- c(FF, SS-1)\n  v[v>1-1e-5] <- 1-1e-5\n  v = cbind(v,1)\n  omega <- v * t(apply(cbind(1, 1-v[,1:(SS-1)]), 1, cumprod))\n\n  return(list(omega = omega, v = v))\n}\n\nUpdateOmegaWeighted <- function(beta,M_all, FF, SS, struc_weight) {\n  phicountcluster <- 0\n  for(w_i in 1:length(struc_weight)){\n    M_all_w_i <- M_all[[w_i]]\n    phicountcluster <- phicountcluster + (groupcount(M_all_w_i[1,],M_all_w_i[2,],FF,SS) / struc_weight[w_i])\n  }\n\n  cum <- t(apply(phicountcluster[,seq(SS,1)],1, cumsum))[,seq(SS,1)]\n  v <- mapply(function(x,y) rbeta(1,x,y), 1 + phicountcluster[,1:(SS-1)], beta + cum[,2:SS])\n  dim(v) <- c(FF, SS-1)\n  v[v>1-1e-5] <- 1-1e-5\n  v = cbind(v,1)\n  omega <- v * t(apply(cbind(1, 1-v[,1:(SS-1)]), 1, cumprod))\n\n  return(list(omega = omega, v = v))\n}\n\nUpdateLambda <- function(dHH,FF,G_all,HHdata_all) {\n  lambda <- list()\n  for (i in 1:length(dHH)) {\n    lambdacount <- groupcount(G_all,HHdata_all[i,],FF, dHH[i])\n    lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))\n    lam <- t(apply(lam, 1, function(x) x / sum(x)))\n    lambda[[i]] = lam;\n  }\n\n  return(lambda)\n}\n\nUpdateLambdaWeighted <- function(dHH,FF,G_all,HHdata_all,struc_weight) {\n  lambda <- list()\n  for (i in 1:length(dHH)) {\n    lambdacount <- 0\n    for(w_i in 1:length(struc_weight)){\n      HHdata_all_w_i <- HHdata_all[[w_i]]\n      lambdacount <- lambdacount + (groupcount(G_all[[w_i]],HHdata_all_w_i[i,],FF, dHH[i])/ struc_weight[w_i])\n    }\n    lam <- apply(lambdacount, c(1,2), function(x) rgamma(1,x+1,1))\n    lam <- t(apply(lam, 1, function(x) x / sum(x)))\n    lambda[[i]] = lam;\n  }\n\n  return(lambda)\n}\n\nUpdatePi <- function(alpha,G_all,FF) {\n  kcount <- groupcount1D(G_all, FF)\n  s <- seq(FF,1)\n  cum <- cumsum(kcount[s])[s]\n  u <- mapply(function(x,y) rbeta(1,x,y), 1 + kcount[1:FF-1], alpha + cum[2:FF])\n  u[u > 1-1e-5] <- 1-1e-5\n  u <- c(u,1)\n  u[FF] <- 1\n\n  pi  <- u* cumprod(c(1,1-u[1:FF-1]))\n\n  return(list(pi = pi, u = u))\n}\n\nUpdatePiWeighted <- function(alpha,G_all,FF,struc_weight) {\n  kcount <- 0\n  for(w_i in 1:length(struc_weight)){\n    kcount <- kcount + (groupcount1D(G_all[[w_i]], FF)/ struc_weight[w_i])\n  }\n  s <- seq(FF,1)\n  cum <- cumsum(kcount[s])[s]\n  u <- mapply(function(x,y) rbeta(1,x,y), 1 + kcount[1:FF-1], alpha + cum[2:FF])\n  u[u > 1-1e-5] <- 1-1e-5\n  u <- c(u,1)\n  u[FF] <- 1\n\n  pi  <- u* cumprod(c(1,1-u[1:FF-1]))\n\n  return(list(pi = pi, u = u))\n}\n\nUpdateAlpha <- function(aa,ab,u) {\n  FF <- length(u)\n  alpha <- rgamma(1,aa + FF - 1,scale = 1/(ab - sum(log(1-u[1:FF-1]))))\n  return(alpha)\n}\n\nUpdateBeta <- function(ba,bb,v) {\n  FF <- dim(v)[1]\n  SS <- dim(v)[2]\n  beta <- rgamma(1,ba + FF*(SS-1), scale = 1/(bb - sum(log(1-v[,1:SS-1])) ))\n  return(beta)\n}\n\nSampleMatrixByRowR1 <- function(pmat, r) {\n  return(rowSums(r>t(apply(pmat,1,cumsum))) + 1L)\n}\n\nSampleMatrixByColumnR1 <- function(pmat, r) {\n  return(colSums(sweep(apply(pmat,2,cumsum),2, r, \"<\") ) + 1L );\n}\n\nSampleMatrixByRowR <- function(pmat) {\n  return(rowSums(runif(nrow(pmat))>t(apply(pmat,1,cumsum))) + 1L)\n}\nSampleMatrixByColumnR <- function(pmat) {\n  return(colSums(sweep(apply(pmat,2,cumsum),2, runif(ncol(pmat)), \"<\") ) + 1L );\n}\n\n\n","normpath":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/R/samplers.R"},{"filename":"/R/missingdata.R","content":"SampleMissing <- function(MissData,para,orig,G_household,M,hyper) {\n  MissData$n_batch_imp_sum <- MissData$n_batch_imp_sum +\n    ceiling(MissData$n_0_reject*MissData$prop_batch)\n  MissData$n_batch_imp <- ceiling(MissData$n_batch_imp_sum/i) + 1 #no. of batches of imputations to sample\n  MissData$n_0_reject[] <- 0\n  MissData$household <- as.matrix(MissData$household)\n  #sample non structural zeros variables for everyone at once\n  storage.mode(MissData$household) <- \"integer\" #very important if used to do in place update\n  MissData <- SampleMissing_impC(MissData,para,orig,G_household,M,hyper)\n  MissData$household <- as.data.frame(MissData$household)\n  return(MissData)\n}\n\ninitMissing <- function(data,struc_zero_variables,miss_batch){\n  md <- list()\n  #keep a copy of raw data\n  md$household_with_miss <- data$household\n  md$individual_variable_index <- data$individual_variable_index\n  md$household_variable_index <- data$household_variable_index\n\n  #find the index of structure zero varaibles\n  struc_zero_variables_index <- which(is.element(colnames(data$household),struc_zero_variables))\n  #find the index of structure zero varaibles for house level\n  struc_zero_variables_house <- intersect(struc_zero_variables_index, data$household_variable_index)\n  #find the index of structure zero varaibles for individual level\n  struc_zero_variables_indiv <- intersect(struc_zero_variables_index,data$individual_variable_index)\n\n  #indexing relative to house_variable index and invidual varible index\n  md$house_szv_index <- match(struc_zero_variables_house,md$household_variable_index)\n  md$indiv_szv_index <- match(struc_zero_variables_indiv,md$individual_variable_index)\n\n  #precompute NA (misisng status)\n  md$NA_indiv_missing_status <- is.na(as.matrix(md$household_with_miss[,md$individual_variable_index]))\n  md$NA_house_missing_status <- is.na(as.matrix(md$household_with_miss[,md$household_variable_index]))\n\n  all_variables_index <- c(md$individual_variable_index,md$household_variable_index)\n  nonstruc_zero_variables_index <-\n    all_variables_index[!is.element(all_variables_index,struc_zero_variables_index)]\n  md$house_non_szv_index_raw <- intersect(nonstruc_zero_variables_index, data$household_variable_index)\n  md$indiv_non_szv_index_raw <- intersect(nonstruc_zero_variables_index,data$individual_variable_index)\n  md$house_non_szv_index <- match(md$house_non_szv_index_raw,md$household_variable_index)\n  md$indiv_non_szv_index <- match(md$indiv_non_szv_index_raw,md$individual_variable_index)\n\n  n <- length(unique(data$household$Hhindex)) #number of households\n  md$n_batch_imp_sum <- rep(miss_batch,n)\n  md$n_0_reject <- rep(1,n)\n  md$miss_Hhindex <- sort(unique(data$household$Hhindex[!complete.cases(data$household[,struc_zero_variables_index])]))\n  md$miss_Hh_invidual_index <- list()\n  for(s in md$miss_Hhindex){\n    md$miss_Hh_invidual_index[[s]] <- which(md$household_with_miss$Hhindex==s)\n  }\n  md$n_miss <- length(md$miss_Hhindex)\n\n  if (sum(is.na(data$household)) == 0) {\n    stop(\"No missing entries in data or missing data isn't coded as 'NA'\")\n  }\n  if (sum(is.na(data$household[,c(\"Hhindex\",\"pernum\")])) > 0) {\n    stop(\"Hhindex and pernum cannot contain missing entries\")\n  }\n  for(j in md$individual_variable_index){\n    levels_j <- sort(unique(data$household[,j]),na.last = NA)\n    data$household[is.na(data$household[,j]),j] <-\n      sample(levels_j,sum(is.na(data$household[,j])),replace=T,prob=summary(as.factor(na.omit(data$household[,j]))))\n  }\n  for(jj in md$household_variable_index){\n    levels_j <- sort(unique(data$household[,jj]),na.last = NA)\n    for(i in 1:n){\n      which_indiv <- which(data$household$Hhindex==i)\n      if(is.na(data$household[which_indiv[1],jj])==TRUE){\n        data$household[which_indiv,jj] <-\n          sample(levels_j,1,replace=T,prob=summary(as.factor(na.omit(data$household[,jj]))))\n      }\n    }\n  }\n\n  md$household <- data$household\n\n  print(\"missing data must be coded as 'NA'\")\n  return(md)\n}\n\n","normpath":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/R/missingdata.R"}],"prof_output":"/Users/qw2192/Desktop/w2018/SynthHousehold/R/NestedCategBayesImpute/.Rproj.user/25D093C6/profiles-cache/file5d7bd515d5d.Rprof","highlight":{"output":["^output\\$"],"gc":["^<GC>$"],"stacktrace":["^\\.\\.stacktraceo(n|ff)\\.\\.$"]},"split":"h"}},"evals":[],"jsHooks":[]}</script>
<script type="application/htmlwidget-sizing" data-for="htmlwidget-96c97e5f119aa49c6fbf">{"viewer":{"width":450,"height":350,"padding":0,"fill":true},"browser":{"width":960,"height":500,"padding":0,"fill":true}}</script>
</body>
</html>
